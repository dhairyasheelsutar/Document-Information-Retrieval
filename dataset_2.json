{"./reports/01_Final_Report.pdf": {"title": "straggler mitigation in distributed   systems using machine learning", "filename": "./reports/01_Final_Report.pdf", "data": "straggler distributed machine learning fulfilment b120058519 b120058522 b120058525 b120058637 tejal bhingare prashant birajdar obed daruwala sonali dasgupta guidance mr. s. b. deshmukh sr. 27 pune-satara road 43 2016-2017 straggler distributed machine learning straggler distributed machine learning tejal bhingare prashant birajdar obed daruwala sonali dasgupta b120058519 b120058522 b120058525 b120058637 bonafide prof. s. b. deshmukh fulfilment earlier diploma mr. s. b. deshmukh mr. s. b. deshmukh coordinator dr. p. t. examiner 2016-17 straggler distributed machine learning acknowledgement mr. s. b. deshmukh constant support encouragement course dr. a. m. bagade charge hod-it co-operative helpful dr. p. t. support complete college providing excellent infrastructure facility grateful lab attendant help setting laboratory lastly friend family support encouragement propelled completion b120058519 tejal bhingare prashant birajdar b120058522 obed daruwala b120058525 sonali dasgupta b120058637 2016-17 ii straggler distributed machine learning title distributed hadoop yarn blacklisting blacklisting speculative execution proposed solution proposed solution class proposed solution object proposed solution proposed solution squence proposed solution deployment proposed solution er proposed solution state transition proposed solution network ganglion ganglion node logic yarn level based scheduling ganglion master node le usage ganglion master node heavier usage ganglion slave node hadoop job statistic teragen teragen improved execution time yarn hdfs write job 1.1 1.2 1.3 2.1 2.2 2.3 2.4 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9 5.10 5.11 5.12 5.13 2 4 6 8 8 9 12 19 20 21 21 23 24 25 26 27 29 29 32 33 36 37 40 40 41 41 42 42 43 2016-17 iii straggler distributed machine learning title 5.14 5.15 5.16 5.17 5.18 5.19 5.20 5.21 5.22 5.23 5.24 5.25 5.26 5.27 6.1 6.2 6.3 6.4 6.5 speculative technique job scheduling libsvm libsvm libsvm lib spark hadoop job history server spark flume configuration flume functioning flume functioning node label cluster queue configuration capacity scheduler pi estimator label-based scheduling pi estimator default scheduler default scheduler vs. node level based scheduler centralized vs. distributed approach jct file size accuracy record datasets node 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 51 52 52 53 2016-17 iv straggler distributed machine learning title 4.1 4.2 5.1 cluster configuration 15 17 30 2016-17 straggler distributed machine learning nomenclature yarn negotiator map reduce 2016-17 vi straggler distributed machine learning acknowledgement nomenclature title 1 1.1 distributed framework 1.2 1.3 hadoop 1.4 2 review 2.1 slower node straggler 2.2 existing straggler 2.3 2.4 proposed methadology 2.5 3 specification 3.1 3.2 3.3 major 3.4 3.5 3.6 context 4 4.1 4.2 class 4.3 object ii iii iv 1 2 2 4 5 6 7 7 8 10 12 13 14 14 14 15 15 17 18 19 19 20 21 2016-17 vii straggler distributed machine learning 21 23 4.4 4.5 4.6 deployment 4.7 4.8 er 4.9 description 4.10 state transition 4.11 5 5.1 5.2 cluster setup 5.3 workload 5.4 dataset 5.5 ganglion 5.6 combining ganglion hadoop 5.7 labeling 5.8 normalizing 5.9 converting svm input format 5.10 lib svm 5.11 lib svm 5.12 scheduling hadoop systme 5.13 screenshots 5.14 6 6.1 6.2 6.3 i. base paper ii plagiarism iii review sheet 24 25 26 27 27 27 28 28 29 31 31 31 33 33 34 34 35 35 36 40 50 51 51 53 55 56 2016-17 viii straggler distributed machine learning priority storage vendor faster execution time optimal utilization straggler slow running node till continue major faster job completion hadoop existing technique job completion time wastage neglect slow running node optimizes utilization providing minimum job completion time build predictive predicts node straggler node machine learning classify straggler centralized server performs scheduling prepare priority node faster node start slower priority assist scheduler efficiently assigning node avoiding reducing number straggler innovative approach effectively utilized distributed predict avoid straggler keywords hadoop yarn straggler 2016-17 1 straggler distributed machine learning organized 1.1 describes distributed framework characteristic 1.2 characteristic 1.3 describes hadoop distributed framework hdfs file presented 1.4 1.1 distributed framework distributed framework changing perception handling unstructured famous apache hadoop library surplus streamline distributed processing programming cluster scale number machine local computation storage space library detects handle breakdown service cluster version fail 1.1 distributed 2016-17 2 straggler distributed machine learning 1.1.2 distributed characteristic characteristic reliable distributed fault-tolerant component failure occur recover performing incorrect action highly operation restored component fail provide service recoverable failure repaired failed component rejoin restarting consistent presence concurrency failure coordinate action multiple component ability distributed non-distributed scalable aspect scaled larger size operate correctly example expanding network running increase frequency network outage degrade `` non-scalable '' scalable predictable performance desired responsiveness provided timely manner secure access service authenticated 1.1.3 aim aim reduce response time distributed 1 identifying slow node 2 avoiding slower node 3 reducing job completion time 4 making proper 1.1.4 distributed numerous advantage job finished earlier compared individual processing great boon job completion time reduced compared existing solution interesting area 1.2 2016-17 3 straggler distributed machine learning broad term refer collection size complexity analyzed processed typical database example social networking facebook twitter high-volume sensor 1.2 volume volume amount generated second includes twitter message video photo sensor produce second share velocity velocity speed generated fast move variety variety multiple earlier focus wa structured fit neatly relational database example financial veracity veracity messiness trustworthiness form accuracy controlled example tweet hash tag typo speech abbreviation 2016-17 4 straggler distributed machine learning 1.3 hadoop hadoop framework store process form distributed environment cluster simple programming source scale machine machine storage space local computation hadoop yarn yarn framework cluster scheduling job map reduce mapreduce framework writing process parallel cluster node simple commodity manner reliable fault-tolerant mapreduce composed performed hadoop map step input converted individual element broken tuples reduce step output map input tuples combined smaller tuples performed map input well output stored inside file scheduling re-execution failed care framework master resourcemanager slave nodemanager cluster-node master doe track availability consumption job smaller slave nodemanager executes direction master master fixed interval hdfs master-slave master single namenode manages metadata filesystem single multiple datanodes store actual 2016-17 5 straggler distributed machine learning 1.3 hadoop yarn hadoop distributed file hdfs file based java reliable scalable storage span cluster commodity hdfs production scalability 200 petabyte storage cluster 4500 server supported billion block file hdfs yarn enables multiple access process hadoop solve previous platform handle hdfs distributed storage time scalable fault- tolerant closely variety access concurrent coordination yarn hdfs easily variety physical scenario 1.4. introduced concept distributed framework characteristic performed study hadoop framework underlying hdfs file 2016-17 6 straggler distributed machine learning review organized 2.1 describes concept slow node straggler hadoop distributed 2.2 describes existing straggler distributed 2.3 relevant paper contribution straggler 2.4 describes proposed solution working 2.5 2.1 slower node straggler straggler node node longer normal finish straggler node increase execution time reduce cluster throughput straggler node degrade cluster throughput straggler hurdle faster completion modern framework straggler factor capacity worker node heterogeneous running worker node compete factor co-hosted compete input skewed unacceptably slow speed remote input/output source fault note reason solved reason 2016-17 7 straggler distributed machine learning 2.2 existing methadologies handle straggler blacklisting speculative execution learning based blacklisting jobtracker submits job tasktracker instanaces node failing jobtracker blacklist tasktracker tasktracker blacklisting 1 per-job blacklisting 2 cluster-wide blacklisting per-job blacklisting tasktracker blacklisted job fail tasktracker accept remaining job isnt blacklisted cluster-wide job blacklist 1/4th tasktrackers cluster cluster-wide blacklisting tasktracker blacklisted currently running completed assigned un-blacklisting requires tasktracker restart blacklisting time half tasktrackers blacklisted tasktracker automatically accept job removed blacklist 2.1 blacklisting 2.2 blacklisting 2016-17 8 straggler distributed machine learning speculative execution hadoop node slow node delay execution program isolation input coming trust hadoop platform provide correct input correct input processed multiple time machine capability finish hadoop copy remaining node free called speculative execution inform jobtracker completion copy finish considered definitive copy copy execution tasktracker abort thesis discard output speculative execution aim reduce job execution time affect efficiency cluster duplication 2.3 speculative execution 2016-17 9 straggler distributed machine learning speculative strategy 1 hadoop original progress slower identifies straggler heterogeneous environment misleading 2 late late ass progress rate progress time time completion progress left progress rate map/reduce left longest execution time total remaining time assuming progress stable pace practical 3 mantri mantri speculative execution strategy aim save cluster computing slot start backing remaining appear higher backup completing earlier kill original copy cluster busy 2.3 understanding dark side cluster failure identification waste performance root three unsuccessful execution trace google datacenter fail kill eviction ii hadoop mapreduce framework skew issue reason straggler occurrence skew review skews mapreduce skew occur measure overcome iii straggler detection parallel dynamic threshold calculation paper dynamically calculating threshold identify straggler considering key parameter including job qos timing 10 2016-17 straggler distributed machine learning constraint execution characteristic optimal utilization iv reducing late-timing failure scale straggler root-cause cloud datacenters cloud datacenter indicates dominant straggler root-cause resultant temporal contention assist enhancing straggler prediction tolerating late-timing failure large-scale distributed approach modeling ranking node-level straggler cloud datacenters node-based straggler identification approach dynamically rank node analyzing execution time usage statistic vi reining outlier map-reduce cluster mantri mantri resource-aware straggler handing mechanism mantri speculative fair chance reduce execution time consumption vii characterizing subsetting workload bench formulated characterizes workload account number metric viii pattern classification assignment mapreduce learning based pattern classification utilization oriented assignment hadoop ecosystem ix wrangler predictable faster job fewer concept proactive approach straggler explained overcomes earlier existing reactive approach 2016-17 11 straggler distributed machine learning 2.4 proposed proactive straggler overcome existing approach implement innovative machine learning dynamically predict node straggler approach delay execution scheduled node till favorable time predicted straggler node change incorporated scheduling 2.4 proposed solution working proposed solution usage characteristic considered node parameter relevant determining node characteristic respect organised form vector vector fed input machine learning node wa straggler training help formulating output function linear function weight assigned recorded statistic linear function classify unknown 2016-17 12 straggler distributed machine learning node straggler non-straggler making separating hyperplane margin confidence measure 2.5 comparative study existing approach straggler technique performed proposed evaluated existing proposed effective achieving reducing job execution time proactively avoiding straggler 2016-17 13 straggler distributed machine learning specification 3.1 describes presented 3.2 3.1 distributed processing node aspect job execution prediction avoiding slow running hadoop framework slow running i.e straggler increase job execution time straggler increase job execution 50 approx prediction good node running prediction node straggler existing reactive kind i.e making node replicate straggle includes wastage proactive better approach study proactive predicting node straggler study machine learning field distributed job execution faster develop dynamic approach straggler identification hadoop faster job execution hadoop job word count tera sort develop implement identifies straggler distributed machine learning predict straggler straggler node dynamic proactive approach perform effective scheduling job master node 3.2 study job distributed faster usual processing improved job execution time straggler avoidance improved usage parameter considering cpu usage ram memory utilization network bandwidth utilization input output disk utilization level number thread job running grouped cpu-intensive io intensive 2016-17 14 straggler distributed machine learning machine utilized prototype making machine straggler intentionally 3.3 major identifying slower node input usage counter node input prediction output based prediction predict node straggler avoiding slower node input node input scheduler scheduler node output assignment scheduler straggler node avoided 3.4 3.1 2016-17 15 straggler distributed machine learning 2016-17 16 straggler distributed machine learning 3.5 3.2 2016-17 17 straggler distributed machine learning 3.6 context social medium development bioinformatics government healthcare science biggest concern properly analyzed processed machine processing power execution time utilization major concern 3.7 major constraint consideration major category cpu intensive io intensive cpu intensive job consider wordcount io intensive job consider terrasort constraint include ram needed atleast 4 gb slave node 8 gb master node hadoop configured multi cluster deployment machine connect network 2016-17 18 straggler distributed machine learning 4.1 proposed solution 4.9 proposed solution 4.1 proposed solution 2016-17 19 straggler distributed machine learning 4.2 class proposed solution 4.2 class proposed solution 2016-17 20 straggler distributed machine learning 4.3 object proposed solution 4.3 object proposed solution 4.4 proposed solution 4.4 proposed solution 2016-17 21 straggler distributed machine learning depicted 1 starting acquisition job nodemanager assigned job execute 2 collection node parameter prediction 3 prediction machine classifying node 4 priority node scheduler process 5 scheduler request free node nodemanagers allocation 6 free node prioritized basic priority 7 finally resourcemanager allocates node provided scheduler priority 2016-17 22 straggler distributed machine learning 4.5 proposed solution 4.5 proposed solution 2016-17 23 straggler distributed machine learning 1 job passed resourcemanager 2 nodemanager resourcemanager smaller perform 3 nodemanager heartbeat resourcemanager real time update execution 4 execution nodemanager pass prediction 5 labeling node straggler 6 priority node prepared 7 node passed scheduler allocation job 8 prioritized free node allocated job default scheduler 4.6 deployment proposed solution 4.6 deployment proposed solution 2016-17 24 straggler distributed machine learning 4.7 description 4.7 object object major described 1. job job manager scheduling hadoop distributed framework number number job comprised ii size size involved executing job 2. manager allocates node usage characteristic job job manager ii node manager manages execution node number node manager ii slot number free slot node 3. predictive 2016-17 25 straggler distributed machine learning node node straggler confidence measure ii label node classifying node straggler non-straggler 4. classifier final weight weight building include cpu usage io usage 5. scheduler aim reduce job execution time a. job job scheduled hadoop distributed optimized scheduling policy b. priority priority assigned job classifier 4.8 er proposed solution 4.8 er proposed solution 2016-17 26 straggler distributed machine learning 4.9 description hadoop node ip address accessing port port number 8088 running finished hadoop 50070 node configuration history viewed browser port 50075 node configuration history viewed browser port ganglion http //ip_address /ganglia serf ganglion collecting hadoop metric job execution 4.10 state transition proposed solution 4.9 state transition proposed solution 4.11 behavioural formulated elaborated state transition phase 2016-17 27 straggler distributed machine learning 5.1 implemented multi-node hadoop cluster master node job divided individual slave node straggler scheduler assign job slave node wait suitable slave node assign 5.1.1 performance behaviour issue connection slave node master node broken assigned slave node slave node remain idle job wa earlier train machine learning build performance classifier 5.1.2 constraint initial prototype network machine node node master 8 gb ram three machine slave node 4 gb ram job grouped category consideration main number cpu usage io usage network bandwidth main account building i.e cpu usage io usage 5.1.3 people 4 people discussed earlier 2016-17 28 straggler distributed machine learning 5.1.4 network 5.1 network 5.2 5.2 cluster setup considered heterogeneous node hadoop cluster 1. hadoop cluster heterogeneous node evaluate proposed method finding straggler node node wa chosen master node hadoop distributed file namenode mapreduce runtime jobtracker remaining three node slave node datanodes tasktrackers node interconnected wireless networking multi-node setup ubuntu 14.04 operating jdk version 8 hadoop 2.7.1 version performance 2016-17 29 straggler distributed machine learning 5.1 cluster configuration node configuration master node hp-hp-notenook processor intel core i3 frequency 2.0ghz ram 16gb hard disk 100gb slave node 1 admin1-lenovo-30003g530 slave node 2 processor intel core i3 frequency 1.8 ghz ram 4 gb hard disk 50 gb macbookair processor intel core i5 frequency 1.4 ghz ram 4gb hard disk 128gb slave node 3 prashant-hp-pavillion15- notebook processor intel core i5 frequency 2.60ghz ram 4gb hard disk 100gb tejal-inspiron3521 processor intel core i5 frequency 1.8ghz ram 4gb hard disk 40 gb slave node 4 2016-17 30 straggler distributed machine learning 5.3 workload executed three job hadoop word count wordcount workload count frequency word textual mix cpu i/o intensive ii pi estimator pi estimator workload cpu intensive performs constant pi iii tera-gen tera-sort tera-gen i/o intensive generate tb tera-sort sort generated 5.4 dataset building prediction labeled dataset consisting label pair ganglia-based node-monitor capture usage counter node job hadoop collected single file unit metric complex .so convenience convert normalized form ranging 0 1 5.5 ganglion ganglion scalable distributed high-performance computing cluster grid based hierarchical targeted federation cluster leverage xml representation xdr compact portable transport rrdtool storage visualization carefully engineered achieve per-node overhead concurrency component ganglion ganglion component 2016-17 31 straggler distributed machine learning 5.3 ganglion gmond ganglion daemon small service collect node installed server monitored gmond multi-threaded daemon cluster node monitor gmond main responsibility monitor change host state multicast relevant change listen state ganglion node multicast channel answer request xml description cluster state gmetad ganglion meta daemon daemon master node collect gmond daemon gmetad daemon applicable rrd round robin database master node store visualization ganglion time series php web front-end web master node display graph metric rrd 2016-17 32 straggler distributed machine learning ganglion web frontend view gathered real-time dynamic web display ganglion meaningful administrator ganglion store round robin database real time efficient storing retrieved processing fetched xml format rrd rrd rrd source industry standard performance logging graphing time series rrd command purpose rrdtool dump rrdtool xport 5.4 ganglion 5.6 combining ganglion hadoop well-known source ganglion collected xml format python script written parse xml valuable finally .csv file generated specific timestamps pre-defined interval 5.7 labeling labeled supervised learning implemented labeled straggler definition straggler defined job 2016-17 33 straggler distributed machine learning threshold coefficient ~1.3 formula boolean 0 1 0 non-stragglers 1 straggler ready normal supervised learning customized 5.8 normalizing normalized input svm variable variance small weight load variance example change variable cm dominating principle component weight independent rescaling standardizing variable hand specific scale variable matter n't standardize scale matter lot normalizing wa better accurate training normalization range 0-1. logic normalization min max min zi normalized calculated 5.9 converting svm input format normalized customized stage libsvm format libsvm format needed svm generation python script converting normalized svm 2016-17 34 straggler distributed machine learning format libsvm field representing attempt label column field represented form file size efficient null removed consideration svm 5.10 lib svm centralized support vector machine master node input file node key node cpu disk utilization job node label collected previous job node training classification node straggler slow node job straggler normal node job latest job executed yarn stored text file dynamically agnostic job i.e classification needed executed job fairly accurate training node suitable numerical format job 5.11 mllib svm mllib machine learning library apache spark distributed computing framework lightning-fast in-memory computation spark installed top multi-node hadoop cluster svm mllib spark job yarn distributed svm load uniformly distributed machine cluster leading le overhead master node time additional overhead node 2016-17 35 straggler distributed machine learning 5.12 scheduling hadoop yarn label-based scheduling handle job scheduling placement multi-node hadoop cluster time scheduling node label based scheduling node file generated node scheduled 5.5 node logic queue label specifies node node job queue job queue node node label specifies node node job policy scheduling prefer_queue label queue prefer_job label job default job label queue label job label queue label 2016-17 36 straggler distributed machine learning 5.6 yarn level based scheduling capacity scheduler pluggable scheduler hadoop allows multiple-tenants securely share cluster allocated timely manner constraint allocated capacity capacity scheduler designed hadoop shared multi-tenant cluster operator-friendly manner maximizing throughput utilization cluster capacity scheduler designed allow sharing cluster capacity guarantee central hadoop cluster shared multiple collectively fund cluster based computing benefit access excess capacity elasticity cost-effective manner primary abstraction provided capacity scheduler concept queue queue typically setup administrator reflect economics shared cluster 2016-17 37 straggler distributed machine learning capacity scheduler support hierarchical queue hierarchy queue supported ensure shared sub-queues queue allowed free there-by providing control predictability capacity guarantee queue allocated fraction capacity grid sense capacity disposal queue access capacity allocated queue administrator configure soft limit optional hard limit capacity allocated queue security queue strict acls access control control submit individual queue safe- guard ensure view and/or modify per-queue administrator role supported elasticity free allocated queue capacity demand queue running capacity point time scheduled complete assigned queue running capacity ensures predictable elastic manner queue preventing artificial silo cluster help utilization multi-tenancy comprehensive limit provided prevent single queue monopolizing queue cluster ensure cluster isnt overwhelmed operability runtime configuration queue definition property capacity acls changed runtime administrator secure manner minimize disruption console provided administrator view current allocation queue administrator add additional queue runtime queue deleted runtime drain administrator queue runtime ensure existing completion queue stopped state 2016-17 38 straggler distributed machine learning child queue existing continue completion queue drained gracefully administrator start stopped queue resource-based scheduling support resource-intensive where-in optionally higher resource-requirements default there-by accommodating differing currently memory supported queue mapping based group allows map job specific queue based group 2016-17 39 straggler distributed machine learning 5.13 screenshots 5.7 ganglion master node le usage 5.8 ganglion master node heavier usage 2016-17 40 straggler distributed machine learning 5.9 ganglion slave node 5.10 hadoop job statistic teragen 2016-17 41 straggler distributed machine learning 5.11 teragen improved execution time 5 12 yarn 2016-17 42 straggler distributed machine learning 5.13 hdfs write job 5.14 speculative technique job scheduling 2016-17 43 straggler distributed machine learning 5.15 libsvm 5.16 libsvm 2016-17 44 straggler distributed machine learning 5.17 libsvm 5.18 lib spark 2016-17 45 straggler distributed machine learning 5.19 hadoop job history server 5.20 spark 2016-17 46 straggler distributed machine learning 5.21 flume configuration 5.22 flume functioning 2016-17 47 straggler distributed machine learning 5.23 flume functioning 5.24 node label cluster 2016-17 48 straggler distributed machine learning 5.25 queue configuration capacity scheduler 5 26 pi estimator label-based scheduling 2016-17 49 straggler distributed machine learning 5 27 pi estimator default scheduler 5.14 collection machine learning scheduling phase explained depicted pictorially snapshot interactive hadoop ganglion spark environment 2016-17 50 straggler distributed machine learning 6.1 1. default scheduler vs. node label based scheduler 6.1 default scheduler vs. node label based scheduler graph execution time word count tera sort pi estimator job cluster default capacitive scheduler observe job completion time reduced scheduler reduction job completion time le input size small rise significance increase size 2. centralized distributed approach 100 88 75 50 25 0 centralized machine learning distributed machine learning 27 27 27 12 4 4 4 machine 1 machine 2 machine 3 machine 4 node 6.2 centralized distributed approach 2016-17 51 straggler distributed machine learning graph load machine cluster compare load machine centralized machine learning approach lib svm distributed machine learning approach lib observe load machine 1 master node reduced distributed machine learning approach 3. jct file size 180 160 140 120 100 80 60 40 20 0 1.3 10 50 288 576 file size mb 864 1040 1150 6.3 jct file size graph word count job file size graph evident size 800 mb job completion time doesnt change drastically remains constant 150 convergence 4. accuracy record dataset 90 80 70 60 50 40 30 20 10 0 100 500 1000 2000 5000 7000 10000 record dataset 6.4 accuracy record dataset 2016-17 52 straggler distributed machine learning libsvm machine learning programmed explicitly mention accuracy iteration processed accuracy tp tn tp tn fp fn tp positive tn negative fp positive fn negative 5. number node 4 3 2 1 0 0.5 0.8 1 1.3 1.5 1.8 2.1 6.5 node heterogeneous mutli-node cluster 4 node 1 master 3 slave wa experiment number straggler node calculated python script 1 straggler node 1.3 2 node straggler 50 1.3 selected optimum threshold 25 node straggler 6.2 6.2.1 manual tested automated step step execution wa step executed bug 6.2.2 unit three main 1. collection parameter refinement 2016-17 53 straggler distributed machine learning 2. mining machine learning 3. labeling node wa tested checked identify misbehavior bug proved worked well individually 6.2.3 integration integration wa master node execution wa check integration node communicate ssh public key authentication installing hadoop ganglion spark independently node 6.2.4 avoid loss node label time node formatted label based scheduling wa executed python script performance real time assignment label node node queue wa tested function real time wa performed 2016-17 54 straggler distributed machine learning 6.2.5 automation handle real time load node accuracy prediction increased time executed considering scenario 1. variation load node 2. slave node straggler improving efficiency 3. wa optimized processing asset today improve lesser time processing good efficiency desirable avoid slow running distributed designed tackle extent 6.3 3 job multimode cluster cpu intensive io intensive mixed workload ganglion collected node characteristic node file normalized converted format specific machine learning comparative study machine approached centralized distributed load server distributed approach reduced reducing bottleneck neck providing improved performance distributed approach default designed label based scheduler compared tested jct wa reduced label based scheduler outcome achieved avoidance execution job slow node achievement faster job completion machine learning prediction slow node prioritization node leading reliable job scheduling 2016-17 55 straggler distributed machine learning 1. xue ouyang1 peter garraghan1 renyu yang2 paul townend1 jie xu1 reducing late-timing failure scale straggler root-cause cloud datacenters dsn 2016 2. understanding dark side cluster failure 2015 45th annual ieee/ifip international conference dependable network andrea ro lydia y. chen walter binder 3. failure job compute cloud google cluster study 2014 25th international symposium reliability xin chen charng-da lu karthik pattabiraman 4. hadoop mapreduce framework skew issue international journal scientific ijsret 2015 nawab wajid prof. satish prof. manjunath n. 5. dynamic allocation mapreduce partitioning skew transaction 2014 zhihong liu qi zhang reaz ahmed raouf boutaba yaping liu zhenghu gong member xue ouyang peter garraghn david mckee paul townend jie xu straggler detection parallel computing dynamic threshold calculation 2016 30th international conference advanced networking 6. neeraja j. yadwadkar ganesh ananthanarayanan randy katz wrangler predictable faster job fewer socc 14 3-5 nov. 2014 seattle washington usa 7. matei zaharia andy konwinski anthony d. joseph randy katz ion stoica improving mapreduce performance heterogeneous environment 8th usenix symposium operating 8. ganesh ananthanarayanan ali ghodsi1 scott shenker ion stoica effective straggler attack clone california berkeley kth/sweden 9. mukhtaj khan yong jin maozhen li yang xiang changjun jiang hadoop performance modeling job estimation provisioning 1045-9219 2015 12. jaideep dhok vasudeva varma search extraction lab international hyderabad india pattern classification assignment mapreduce 10th ieee/ acm conference 2010 13. lei wang rui ren jianfeng zhan zhen jia computing 2016-17 56 straggler distributed machine learning chinese academy science characterization architectural implication workload 2016 14. zhen jia1 2 jianfeng zhan 1* lei wang1 rui han1 sally a. mckee3 qiang yang1 chunjie luo1 jingwei li state key laboratory computing chinese academy science characterizing subsetting workload 2014 15.michael noll running hadoop ubuntu linux multi-node cluster blog avaliable http //www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux- multi-node-cluster/ 16. digital ocean ganglion ubuntu 14.04 blog http //www.digitaloean.com/community/tutorials/introduction-to-ganglia-on-ubuntu- 14-04 17.tutorials http //www.tutorialspoint.com/python/index.htm 18. apache hadoop http //hadoop.apache.org/index.html what+is+apache+hadoop 3f apache hadoop online tutorial online python point 2016-17 57 wrangler predictable faster job fewer neeraja j. yadwadkar ganesh ananthanarayanan randy katz california berkeley neerajay eecs.berkeley.edu microsoft ga microsoft.com california berkeley randy cs.berkeley.edu straggler continue major hurdle achiev- ing faster completion intensive running modern data-processing framework existing straggler technique inefcient reactive replicative nature rely wait-speculate-re- execute mechanism leading delayed straggler de- tection inefcient utilization existing proac- tive technique over-utilize replica- tion existing modeling-based approach hard rely production-level adoption modeling error wrangler proactively avoids situa- tions straggler wrangler automatically learns predict situation statistical learning technique based cluster utilization counter wrangler introduces notion condence measure prediction overcome modeling error condence measure exploited achieve re- liable scheduling predic- tions balance delay scheduling potential idling wrangler achieves speed job completion time production-level workload facebook clouderas customer wrangler im- 99th percentile job completion time 61 compared speculative execution strag- gler technique wrangler achieves speed-up signicantly improving con- sumption 55 1. reducing job completion time intensive applica- tions running atop distributed processing framework 1 2 attracted lot attention 36 major chal- permission digital hard copy classroom granted fee provided copy distributed prot commercial advantage copy bear notice full citation rst copyright component owned author honored abstracting credit permitted copy republish post server redistribute requires prior specic permission and/or fee request permission permission acm.org socc 14 copyright held owner/author publication licensed acm acm 978-1-4503-3252-1/14/11 15.00 http //dx.doi.org/10.1145/2670979.2671005 3-5 nov. 2014 seattle washington usa lenge achieving near-ideal job completion time slow running straggler study 6 de- spite existing technique straggler 6- 8 slower median job production clus- ter lead job completion time over-utilization increased cost mitigating eliminating straggler remains existing approach based replication modeling solve speculative execution 1 replication-based reactive straggler miti- gation technique spawn redundant copy slow- running hoping copy reach completion original prominently technique today including production cluster facebook mi- crosoft bing 5 additional informa- tion reactive technique differentiate node inherently slow node temporar- ily overloaded 7 technique lead unnecessary over-utilization necessar- ily improving job completion time proactive dolly 6 replication-based approach focus interactive job incurs extra agnostic correlation straggler node status replication-based approach wasteful proactive alternative running statistically predict straggler realistic model- ing cluster environment difcult com- plex unpredictable interaction 5 11 black box approach learn interaction au- tomatically 12 13 technique opaque prone error lead inefcient utilization longer completion time 6 avoid straggler approach meet wait straggling waste mitigating straggler introduce wrangler predicts straggler interpretable linear modeling technique based cluster usage counter pre- diction inform scheduling decision allows avoid waiting running slow wran- gler prevents wastage removing replicating wrangler introduces notion condence measure prediction overcome modeling error condence measure exploited achieve reliable scheduling prediction balance delay schedul- ing potential idling wrangler achieves speed job completion time threshold condence measure tuned suit workload avoid costly incorrect scheduling de- cisions prototype wrangler demon- strates 61 improvement job completion time reducing consumption 55 production-level workload 50 node ec2 cluster 2. existing approach straggler fall short mul- tiple reactive approach slowed replication-based approach proac- tive reactive extra white gray box ap- proaches depend keep changing dynamically difcult enumerate priori finally black box approach prone modeling error discus reactive technique rely wait-and-speculate re- execute mechanism speculative execution approach straggler mark slow running straggler reacts relaunching multiple copy inefcient allowed signicant amount time identied straggler time job considerable progress increasing possibility extending job nishing time skewtune 14 avoids replicating wait-and-speculate mechanism replication-based approach incur extra instance speculative execution launch multiple redundant copy copy n- ishes execution rest killed amount wastage late 4 improves speculative execu- tion notion progress score waste cloning mechanism 6 replication- based incur extra existing mechanism proac- tively avoid straggler replication scheduling load-balancing approach 1520 indirectly attempt reducing contention cluster delay scheduler 16 example focus reducing network bottleneck 4.2.2 despite effort straggler occur focused load balancing heterogeneous cluster 18 ignores temporary overloading occurs homogeneous cluster white gray box approach reactive 3 scheduling-based 1517 attempt identify straggler based local condition exceed xed threshold dened usage statistic usage statistic straggler time sec- tion 4.2.2 illustrate contributor straggler behavior vary node time facebook cloudera real-world production trace example observed disk-intensive scheduled node slow disk straggling co-located node executed node disk bandwidth avoided scheduling simultaneously node slow disk straggled contention pattern including network memory easily distinguish condition straggler infeasible exhaust space possi- ble usage statistic setting classify limit white gray box approach alternative black box approach automati- cally learn node behavior previous 12 high-quality prediction straggler al- attempt incorporate prediction scheduler incorporating technique sched- uler backre real-life deployment produc- tion cluster 6 black box technique transparent critical ass tech- nique learning modeling error render performance unstable crucial robust error achieving predictable per- formance off-the-shelf learning technique in- clude mechanism evaluating output sufcient tackle despite challenge evidence machine learning technique incorporated production previous 13 21 demonstrated machine learning selecting assign perform straggler address issue identied wrangler 1. interpretable predict condition lead straggler performance counter automatically adapt dy- namically changing usage pattern node time capability predicting node straggler avenue avoiding straggler 2. condence measure guard modeling er- rors telling sure pre- diction modeling error fundamentally limit real life applicability proposed approach 12 13 wrangler address providing congurable con- dence measure 7.4 condence measure crucial 3. scheduling mechanism incorporates prediction improve job nishing time 1 wrangler reduces consumption compared replication- based mechanism serf straggler avoidance approach wrangler conjunction existing approach 3. proposal wrangler utilization metric node wrangler pre- dicts newly assigned node turn straggler prediction scheduling decision proactively avoid straggler formation 3.1 wrangler 1 wrangler ex- hadoop job scheduling hadoop handled master control worker master assigns worker node response heartbeat message second assignment depend number slot well locality wrangler basic component 1. builder job log snapshot re- source usage counter collected regularly worker node ganglia-based 22 node-monitor build node predict straggle execution environment attach condence measure prediction sec- tion 4 describes builder 2. model-informed scheduler prediction built earlier model-informed scheduler selectively delay start execution node predicted create straggler delayed condence prediction exceeds minimum condence avoids overloading node reducing chance creating straggler 5 model-informed scheduler main defer assignment node nish timely manner 2 example job three mapper reducer wrangler map2 wa straggler normalized duration ratio duration size input wa larger mapper wrangler predicted straggler node 2 lifetime example job observed wrangler note job executing simultaneously cluster careful assignment map2 node nish timely manner accelerates job completion despite delay introduced launching assignment wa avoided decision introduced delay start node longer overcommitted non-overcommitted node assignment map2 nished faster wrangler reducer started earlier scheduler achieved net improvement job duration 3.2 novelty approach wrangler radically approach compared previous straggler strategy predicting strag- gler launched scheduling well avoid occurrence rst wrangler achieves collecting extensive de- riving correlation automatically observation straggler varies node time learning-based approach wrangler capa- ble adapting situation straggler gure factor causing slower usual importantly straggler predic- tion build interpretable meaning gain insight learn 4.2.2 relief explicitly di- agnose manually argued earlier infeasible note presence sophisti- cated scheduler wrangler ability adapting dynami- cally changing cluster execution environment changing pattern justies applicability additionally role condence measure crucial handling model- ing error allows probabilistic learning-based ap- proach robust learning technique compute condence measure rst introduce condence measure ensure stability straggler pre- diction wrangler model-informed sched- uler induces delay launching node pre- dicted create straggler worst prediction error approach lead bounded sub- optimal performance approach doe lead incorrect execution termination replacement maintaining liveness correctness guarantee builder model-informed scheduler utilization counter master worker node scheduling decision condent learning phase prediction phase 3 linear modeling technique predicting straggler node usage counter form learning phase learns weight ground truth i.e labeled dataset consists 1 2 wa straggler linear predicts based score linear combination fea- tures weight 4. building straggler prediction aim wrangler builder component build straggler prediction robust respect modeling error interpretable respect learn 4.1 linear modeling predicting straggler mentioned earlier nding strag- glers challenging complex task-to-node task- to-task interaction capture complex interaction collected numerous usage counter cluster ganglion 22 linear modeling technique 23 machine learning domain appropriate prob- abilistic modeling node behavior repre- sented usage counter technique adapt dynamically changing usage pattern node alleviates pain manual di- agnosis source individual straggler appearance learn behavior node individually robust heterogeneity today cluster 3 learning phase technique learn weight labeled represents ground truth context node usage counter time submission label isstraggler indicating wa straggler weight node usage counter calculates score predicting turn straggler prediction phase depicted 3 provide high-level intuitive un- derstanding linear modeling technique support vector machine svm linear kernel 24 25 .1 support vector machine predicting straggler svm statistical learns linear function separat- ing vector e.g node usage coun- 1 technique decision tree demonstrated 12 performance ters class e.g straggler class non-straggler class linear function called separating hyper- plane half space dened hyperplane represents class building phase hyper- plane computed separate vector node usage counter belonging class straggler class non-stragglers maxi- mum distance called margin observed usage vector i.e vector evaluated side separating hyperplane lie score quantify condence classi- cation based distance hyperplane node-level spanning multiple broad category 1. cpu utilization cpu idle time time speed cpu 2. network utilization number byte received statistic remote read write statistic rpcs 3. disk utilization local read write statistic datanodes amount free space 4. memory utilization amount virtual physical memory amount buffer space cache space shared memory space 5. system-level number thread state waiting running terminated blocked mem- ory statistic level condence measure simply predicting straggler non-straggler robust modeling er- rors ensure reliable prediction introduce notion condence measure prediction lin- ear condence measure help decide prediction accurate preventing straggler inuencing scheduling decision farther node- counter vector separating hyperplane higher chance belonging predicted class prediction correct convert distance separating hyperplane number range 0 1 tting logistic regression distance 26 explain compute condence measure snapshot node usage counter represents node time instant denote fea- tures vector x. svm output linear hyperplane form wt vector weight learned svm point positive score i.e wt 0 classied strag- glers point negative score classied non-stragglers svm doesnt output probabil- ities score wt distance point hyperplane serf measure classi- er condence point hyperplane i.e positive score highly negative score learning linear function/ feature-weights isstraggler feature1 feature2 feature3 featuren w1 w2 w3 wn straggler straggler classier condent train logis- tic regression classier convert score probabili- tie logistic regressor output form 1+exp score parame- ters estimated logistic regression 24 1 imbalance dataset modeling technique sensitive imbalanced datasets non-straggler out- number straggler causing imbalance dataset building underlying opti- mization formulated prediction favor class majority instance context predicted non-straggler ideally best class represented equally learning dataset statistically oversample 2730 in- stance minority class i.e straggler class common technique dealing imbalanced datasets interpretability straggler prediction inter- pretable allow gain insight learned automatically learn contribution creation straggler called weight bring straggler weight assigned svm linear kernel 24 25 predict based linear combination weight word predic- tions based score multiplying feature- respective weight adding prod- ucts analyze usage counter actual straggler node usage counter launch time observed straggler caused straggler weight learned mod- el tedious capture holistic picture 100 feasible node utilization counter involved grouped category cpu utilization network utilization disk utilization memory utilization system-level selected subset 75 score subset driven decision predict straggler deem straggler fraction straggler node 4.2.2 evaluate prediction accuracy svm production trace facebook cloudera 5 describes prediction associated condence scheduling decision avoid strag- glers 4.2 model-builder evaluation evaluate straggler prediction real production-level workload facebook cloudera replaying 50 node ec2 cluster explained trace fb2009 fb2010 cc cc cc cc total length machine 6 month 600 1.5 month 3000 1 month 100 9 day 300 2+ month 400-500 9 day 100 4600 11.5 month 2009 2010 2011 2011 2011 2011 job 1129193 1169184 5759 22974 13283 10790 2351183 1 dataset fb facebook cc cloudera customer prediction correct match actual label evaluate based 1 time predicted straggler correctly percentage positive 2 time mis-predicted non-straggler straggler percentage positive positive positive indicate good 4.2.1 experimental set-up production-level workload learn predict strag- glers based production level workload trace mul- tiple hadoop deployment including facebook clouderas customer dataset cover wide work- load allowing better evaluation 1 de- tail workload term number ma- chine length capture total number job workload chen al explain fur- ther 31 dataset consists trace 4600 machine captured year faithfully replaying real-world production trace 50 node ec2 cluster statistical workload replay swim 32 synthesizes workload representative job submission rate pattern shufe/input size output/shufe ratio 32 replay swim scale workload number node experimental cluster dataset building straggler prediction labeled dataset consists number label pair context usage coun- ters node time submission label wa straggler generate dataset replayed production-level trace 1 us- ing swim 32 amazon ec2 cluster 50 m1.xlarge instance ganglion 22 captured node re- source usage counter regular interval 15 second form dataset 4.1 label dataset marking straggler based follow- ing normalized duration ratio execution time amount byte read/written t. ti job called straggler ti median jj 1 4 accuracy svm workload 4.2.2 agnostic 4.2.2 model-evaluation 4 straggler prediction accuracy workload svm executed ini- tial 2 hour build accuracy hour linear kernel svm sequential minimal optimization 33 80 positive 30 posi- tive percentage predicted 80 total straggler straggler mis-predicted 30 non- straggler straggler completes build- ing phase deploy provide hint wrangler scheduler 7 example achieve 61 43 improvement 99th percentile completion time fb2009 cc conrms 80 positive per- centage good sensitivity straggler based chosen number straggler vary 1 intuitively indicates extent allowed slow called straggler mechanism agnostic chosen workload brevity representative sensi- tivity respect cc 5. chose range 1 1.7 1 simply median straggler greater 1.6 cc oversample build experiment 1.3. insight provided briey describe insight straggler prediction leave de- tailed explanation 7 wrangler model-informed scheduler acceler- ate job completion making careful task-to-node assign- ments avoids straggler-causing situation 6 percentage straggler created 6 fb2010 disk utilization i/o wa primary bottleneck creating tem- porary hotspot interference simultaneously 5 sensitivity svm respect cc b. error bar standard deviation percentage accuracy built 50 node cluster note valid range 1 1 simply median 1.7 lower ensure minimum number straggler oversampling training executing memory cpu usage pattern 6 straggler node cluster executing workload fb2010 disk i/o usage dominates con- tribute considerably creation straggler node node executing cc 6 memory contention contributed creating straggler straggler indicated note straggler vary node cluster instance ama- zon ec2 justies approach building strag- gler prediction node decision approach robust heterogeneity vary workload fb2010 dominating contributor wa disk usage cc contend memory 31 chen al explain fb2010 i/o intensive supporting insight network utilization prime contributor experiment workload evaluated network utilization wa bottleneck enabled locality-aware de- lay scheduling mechanism 16 indicates existing scheduler straggler-aware eliminate straggler complex task-to-task interaction underlying node tend create temporary hotspot lack informa- tion scheduling decision wrong note hard contributor strag- gling behavior apriori help justies learning-based automatically adapt straggler us- ing straggler prediction proactively in- form scheduler straggler causing situation 5 propose scheduler exploit prediction avoid creating straggler rst 0 20 40 60 80 100 120 fb2009 fb2010 cc_a cc_b cc_d cc_e predic5on accuracy posi5ve posi5ve 0 20 40 60 80 100 120 1.1 1.2 1.3 1.4 1.5 1.6 predic3on accuracy posi3ve posi3ve fb2010 node1 fb2010 node2 6 straggler cc node1 5. model-informed scheduling describe scheduling straggler prediction selectively delay as- signment node explain signicance tun- ing parameter describe learn finally conclude theoretical bound delay introduce 1 model-informed scheduling n= ni i=1 worker worker node willstragglei prediction snapshot usage counter ith worker node 0 1 minimum acceptable condence prediction worker 1 /* predict interval background */ 2 procedure predict 3 4 5 6 collect snapshot node usage counter willstragglei prediction worker ni create straggler con idencei condence prediction chosen preferred scheduling policy heartbeat received worker indicating free slot willstragglei == con idencei reject assigned ni 7 procedure 8 9 10 11 12 13 proceed congured scheduling policy 5.1 wrangler scheduling hadoop master manages job scheduling assigning worker response heartbeat second scheduler receives heartbeat indicating map reduce slot free congured scheduling policy fair-scheduling selects assigned wrangler scheduling proposes extend existing scheduler launching model-informed scheduler predicts worker nish timely manner worker predicted create straggler time assigned worker predicted create straggler assigned 1 scheduling policy predict procedure 2-6 executed background time interval predict worker create straggler prediction condence measure 6 at- tached procedure 7-13 hook embed default scheduler code modied fair-scheduler code prototype 6 heartbeat received scheduler delay assignment worker predicted create strag- gler condence higher congured threshold 1. default scheduling policy assignment decision 12-13 note wran- gler process prediction background keep ready scheduler 6 allows critical path scheduling decision note wrangler hint default/congured scheduler de- cision launch left underlying scheduler wrangler informs scheduler newly node nish timely manner inclusion task-level enable improvement job completion time left extension 5.2 learning parameter 1 tunable parameter minimum acceptable condence prediction needed in- uence scheduling decision decides frequently snapshot node usage counter collected prediction computed ex- plain tune parameter 5.2.1 learning threshold condence measure parameter minimum acceptable condence pre- diction range 0 1 delayed adversely job completion underutilizing hand long running scheduled balance good utilization increasing chance straggling observed needed maximum improvement job com- pletion time varies workload approach learn automatically building phase avoid manual tuning explained 4.2.2 generated executed initial 2 hour build accuracy hour hour unseen learning referred validation decide condence 4.1 prediction validation node extracted range condence producing accurate prediction equal median range agreed majority node forming quorum 7.5 sensitivity wrangler respect multiple p. experimental validatation 10 hour chosen achieve maximum gain job completion time workload listed 1. node desired evaluate experimentally paper 5.2.2 learning interval prediction recall critical path making schedul- ing decision wrangler keep prediction ready scheduler 6 de- tail ensure prediction reect current state node wrangler regularly collect node usage counter predicts respective node create straggler time parameter determines frequently background process invoked prediction fresh reect dynamic change node status extracting pre- diction built order sub- miliseconds 34 expensive small safe choice setting smaller minimum inter-task submission time chose experimental wa de- cided based time spent collecting node usage counter predicting based cur- rent centralized wrangler prototype usage counter node col- lected master ganglion 15 second distributed wrangler 7.8 feasible node collect usage counter predict send prediction mas- ter heartbeat independent number node cluster 5.3 bound delay introduced wrangler wrangler delay straggle im- portant bound delay wrangler drive cluster three state 7 re- spect prediction constituent node node predicted create straggler node predicted create straggler node predicted create straggler 7 simplied state-machine capture behavior cluster executing parallel intensive workload tractable simplifying cluster behavior modeled irreducible ergodic markov chain 35 36 cluster state depends currently observed state 3 3 matrix describing transition proba- bilities state 7. 3 1 vector comprising steady state distribution 3 state ensure wrangler doe delay in- denitely cluster state steady state 0. at- tains steady state transition matrix vector elementary property stationary distribution 35 equation solved eigen-analysis eigenvector transition matrix eigenvalue 1. log state transition cluster executing workload estimated wa 0 desired 7.7 de- scribe empirical delay induced wran- gler provided theoretical guarantee real workload delayed indenitely bounding delay under-provisioned workload rate job submission provide tunable parameter limit num- ber time assignment rejected leave 6. implemented wrangler 1 embedding fair scheduler code consists 200 code 10 embedded fair scheduler rest building svm capturing node usage counter extracting prediction weka 37 building svm logistic regression prototype hadoop log node usage counter collected centrally master node processing building wrangler implemented distributed manner worker node collect process statistic build independently 7.8 wrangler training usage workow work- load start executing cluster wrangler collect job log node-level statistic node pro- ce generate dataset build build straggler prediction node cluster le second node weka 37 experiment captured training 2 hours2 job wait training period default scheduling policy time training wa collected typically second build node built wrangler background process frequently capture re- source usage counter worker node predicts slower assigned node node wrangler con- dence prediction time prediction wa order sub-milliseconds prediction worker node regular interval read scheduler making assignment decision prediction process doe critical path making scheduling decision updated re-built regularly job nished execution col- lected collection building phase overlap job execution improvement achieved workload facebook clouderas customer building 10 hour leave analyzing train- ing continuously changing workload well workload 7. evaluation demonstrate wrangler effectiveness answering question experimental evaluation 1. doe wrangler improve job completion time 2. doe wrangler reduce consumption 3. wrangler reliable presence modeling error 4. sensitive wrangler respect parameter 5. doe wrangler improve job completion time 6. wrangler mis-predicts 7. doe wrangler scale well 7.1 setup real production workload evaluate workload facebook fb2009 fb2010 cloudera cc cc replay pro- duction log synthesize representative workload swim 32 faithfully reproduces job submission pattern size ratio 50-node cluster m1.xlarge instance amazon ec2 baseline wrangler serf straggler avoid- ance approach conjunction 2 divided collected 2 hour 3 2 training remaining correctness existing approach accrue reduc- tion job completion time consumed effectiveness compare wrangler spec- ulative execution straggler tech- nique hadoop production cluster metric reduction job completion time primary metric tw job execution time wrangler wrangler 100 reduction tw 2 positive indicates reduction job completion time negative indicate increase highlight facebook 2009 production hadoop trace wrangler improves job completion time 61 99th percentile 20 99.9th percentile hadoops speculative execution cloudera customer production hadoop trace cc wrangler improves job completion time 43 99th percentile 22 99.9th per- centile speculative execution proactive wrangler consumed 55 40 lesser facebook 2009 cc com- pared reactive speculative execution mechanism 7.2 doe wrangler improve job completion time evaluated gain unseen job arriving built 8 im- provement average 75th higher percentile job com- pletion time statistic job executed wrangler wrangler i.e speculative exe- cution fb2009 wrangler achieves improvement 61 99th percentile 57 average job com- pletion time ccb improvement 43 99th percentile 44 average job comple- tion time note cc wrangler slowed 75th 90th percentile cc bursty job-submission pattern time period shorter re- source usage counter node collected time interval prediction based usage counter timely representative load node avoided setting smaller minimum inter-task submission time 8 summarizes maxi- mum gain achieved workload tuning 7.5 fb2010 achieved lower gain compared achieved fb2009 number straggler hour fb2010 comparable fb2009 how- 31 note facebooks workload changed sig- nicantly 2009 2010. fb2010 higher job sub- 8 summary wrangler improvement job completion time workload tuned vale 5.2.1 7.5 plot wrangler reduces completion time carefully scheduling potential straggler workload fb-2009 fb-2010 cc cc total task-seconds w/o wrangler wrangler reduction total task-seconds 903980 296893 201444 694564 405953 223339 120559 637319 55.09 24.77 40.15 8.24 2 utilization wrangler term total execution time second job dur- ing replay proactive wrangler achieves improved completion time consuming lesser compared wait-and-speculate re-execution mechanism 9 condence measure attached pre- diction crucial plot compare reduction job completion time achieved wrangler condence measure attached prediction cc work- load mission rate higher i/o rate compute intensive doe affect prediction accuracy model- informed scheduling mechanism comparatively less- occupied node achieve faster job completion wran- glers key avoid overloading node in- stead distribute load evenly load consis- tently cluster wrangler gain limited 7.3 doe wrangler reduce consumption wrangler signicantly improves job completion time conjunction specula- tive execution reactive relaunch-based mechanism speculative execution consumes extra re- dundantly launched copy straggler con- trary proactive wrangler achieves faster job completion smarter node assignment 2 wrangler consumes lesser compared speculative execution reduced cost free- ing sooner earlier cc bursty job submission pattern de- lay based mechanism wrangler speed job lesser total 7.4 wrangler reliable presence modeling error wrangler achieves reliability presence prediction er- rors attaching condence straggler prediction observed condence measure play cru- cial role improving completion time work- load allowing condent prediction inuence scheduling decision 9 percentage reduc- tion job completion time achieved wrangler condence measure cc example absence condence measure modeling error drive scheduling decision change frequently cost incurred delaying weigh reduction achieved job completion time wrangler achieves robust modeling er- rors novel condence measure 7.5 sensitive wrangler respect described learn training 5.2.1. evaluate sensitivity wrangler respect p. calculated percentage reduction job completion time wrangler achieves range 0 1 10 subset experimental validation facebook workload fb2009 fb2010 10 0.7 attains maxi- mum gain term improved job completion time utilization turned 0.8 cc 0.7 cc 10 respec- tively note choosing improving job completion time -10 0 10 20 30 40 50 60 70 80 90 100 avg 75p 80p 85p 90p 95p 96p 97p 98p 99p 99.9p 100p reduc8on job comple8on time fb2009 p=0.7 -10 0 10 20 30 40 50 60 70 80 90 100 avg 75p 80p 85p 90p 95p 96p 97p 98p 99p 99.9p 100p reduc8on job comple8on time fb2010 p=0.7 -10 0 10 20 30 40 50 60 70 80 90 100 avg 75p 80p 85p 90p 95p 96p 97p 98p 99p 99.9p 100p reduc8on job comple8on time cc_b p=0.8 -10 0 10 20 30 40 50 60 70 80 90 100 avg 75p 80p 85p 90p 95p 96p 97p 98p 99p 99.9p 100p reduc8on job comple8on time cc_e p=0.7 -4.22 -5.53 -5.39 11.34 -5.51 43.59 58.87 62.10 43.13 22.46 -10 0 10 20 30 40 50 60 70 80 90 100 avg 95p 97p 99p 99.9p percentage reduc predic condence measure predic condence measure p=0.8 11 load/resource utilization wrangler p=0.7 fb2010 highly intensive fb2010 workload wrangler speed 99th percentile job completion 47 avoiding overloading node distributing load evenly 7.6 note workload dependent small change change improvement dras- tically workload example cc fig- ure 10 5.2.1 described auto- matic choose starting building phase waiting job execute ad- ditionally tune observe performance job small amount time veried window 30 minute wrangler archi- tecture exible allows change converges 7.6 doe wrangler improve job completion time wrangler avoids straggler implicitly better job load balancing scheduling approach statically 11 load cluster executing fb2010 wrangler wrangler p=0.7 wrangler node enter heavily loaded state tend remain loaded assigned addition wrangler observed load distributed evenly node equally utilized limiting fb2010 cluster heavily loaded wrangler improves job completion signicantly 47.06 99th percentile 10 7.7 wrangler mis-predicts main wrong prediction delay ex- perienced 5.3 statistically proved wrangler delay indenitely method delay potential straggler terminating replacing wrangler doe correctness liveness property analyze empirically observed delay facebook cloudera workload dataset prediction accuracy improved job completion 13 scalability wrangler centralized prototype pre- diction accuracy percentage reduction job completion time larger 100 node cluster signicant comparable 50 node cluster 12 percentage delay respect original execution time i.e wrangler percentage reduction completion time achieved wrangler workload note 12 speed-up task-level presented earlier job-level speed-ups fb2009 delay introduced wrangler le 2 75 le 11 90 notice delay introduced fb2010 higher fb2009 improvement com- pletion time lower load node cluster executing fb2010 de- scribed 7.2. explains wrangler decision delay seeking situation node committed 7.8 doe wrangler scale well current prototype wrangler centralized re- source usage counter node collected pro- cessed node-wise built centrally location accessible scheduler actual cluster size 100 node 3840 executed fb2009 larger cluster 100 node note experiment maintain xed amount node re-scaling real-life workload appropriately 13 comparable prediction accuracy small larger cluster 13 percentage reduction job completion time achieved wrangler centrally implemented prototype comparable cluster size 13 wrangler scale well larger cluster size central implementa- tion stress master increase size cluster wrangler extended larger cluster distributing responsibility individual node allows computa- tions locally reducing network traf- c. scenario node build locally collected usage counter regu- lar time interval 5.2.2 straggler predic- tions computed locally re- 0 20 40 60 80 100 120 posi0ve posi0ve percentage predic0on accuracy 50 node 100 node 0 10 20 30 40 50 60 70 80 avg 80p 90p 95p 97p 99p percentage reduc9on job comple9on time 50 node 100 node fb2009 fb2010 cc cc 10 reduction job completion time achieved wrangler workload label achieves highest gain completion time workload fb2009 fb2010 cc cc 12 empirical amount delay introduced wrangler speed achieved completion marginal delay wrangler achieves signicant reduction duration fb2010 intensive workload 31 wrangler induces higher delay seeking node over-committed reduced improvement cluster loaded cc lesser number straggler wrangler limited opportunity improve completion 7.7 source usage counter node prediction piggybacked heartbeat message master node finally mas- ter prediction inuence scheduling deci- sion described current workow leave avenue 8. wrangler proactively avoids straggler achieve faster job completion fewer allow- ing execute detecting straggler slow wrangler predicts straggler 57.37 72.49 84.16 86.39 83.67 80.51 61.09 20.23 -40 -20 0 20 40 60 80 100 avg 75p 85p 90p 95p 97p 99p 99.9p reduc8on job comple8on time p=0.1 p=0.3 p=0.5 p=0.7 p=0.8 p=0.9 10.60 2.21 5.60 9.62 27.51 39.66 47.06 27.78 -30 -20 -10 0 10 20 30 40 50 avg 75p 85p 90p 95p 97p 99p 99.9p reduc8on job comple8on time p=0.2 p=0.4 p=0.6 p=0.7 p=0.8 p=0.9 43.59 45.22 50.41 56.80 56.05 58.87 61.75 62.10 72.99 43.13 22.46 -80 -60 -40 -20 0 20 40 60 80 100 avg 75p 80p 85p 90p 95p 96p 97p 98p 99p 99.9p reduciton job compleaon time p=0.7 p=0.8 p=0.9 17.72 -2.49 0.84 2.17 15.79 20.65 33.42 -10 -5 0 5 10 15 20 25 30 35 40 avg 75p 85p 95p 97p 99p 99.9p reduc8on jobcomple8on time p=0.3 p=0.4 p=0.5 p=0.6 p=0.7 p=0.8 p=0.9 0.22 2.03 3.31 5.99 11.21 0 20 40 60 80 100 50p 75p 80p 85p 90p delay 1.69 3.68 4.57 8.12 21.84 0 20 40 60 80 100 50p 75p 80p 85p 90p delay 1.21 2.90 3.87 7.16 16.04 0 20 40 60 80 100 50p 75p 80p 85p 90p delay 0.98 4.42 6.72 12.84 19.97 0 20 40 60 80 100 50p 75p 80p 85p 90p delay 8.37 65.25 82.09 90.53 94.91 0 20 40 60 80 100 50p 75p 80p 85p 90p reduc4on dura4ons 1.02 15.30 19.57 24.85 31.39 0 20 40 60 80 100 50p 75p 80p 85p 90p reduc4on dura4ons 16.52 46.75 50.58 55.50 61.22 0 20 40 60 80 100 50p 75p 80p 85p 90p reduc3on dura3ons 2.13 15.25 19.40 26.66 36.62 0 20 40 60 80 100 50p 75p 80p 85p 90p reduc4on dura4ons launched wrangler notion condence measure allows overcome modeling error wrangler leverage condence measure achieve reliable schedul- ing eliminating replicating prototype hadoop ec2 cluster 50 node wrangler speed 99th percentile job execution time 61 consumes 55 lesser compared speculative execution production work- load facebook clouderas customer serf straggler avoidance approach wran- gler conjunction existing approach aim speed training process 1 reducing time spent capturing training node cluster 2 training straggler prediction workload 9. acknowledgment indebted vivek chawda tathagata da bharath hariharan john kubiatowicz anthony joseph ion sto- ica helpful discussion chiranjib bhattacharyya aurojit panda sara alspaugh yanpei chen rachit agarwal anurag khandelwal joseph gonzalez member amplab insightful comment draft paper anonymous reviewer hotcloud 2013 osdi 2014 socc 2014 help improving extremely helpful comment shepherd fred douglis help shaping nal version paper supported nsf cise ex- peditions ccf-1139158 lbnl 7076018 darpa xdata fa8750-12-2-0331 gift amazon web service google sap thomas stacey siebel foundation adobe apple inc. bosch c3energy cisco cloudera emc ericsson facebook gameontalis guavus hp huawei intel microsoft ne- tapp pivotal splunk virdata vmware yahoo 1 jeffrey dean sanjay ghemawat mapreduce simplied processing cluster proceeding 6th conference symposium opearting volume 6 osdi04 1010 berkeley usa 2004. usenix association 2 michael isard mihai budiu yuan yu andrew birrell dennis fetterly dryad distributed data-parallel program sequential building block proceeding 2nd acm sigops/eurosys european conference 2007 eurosys 07 5972 york ny usa 2007. acm 3 ganesh ananthanarayanan srikanth kandula albert green- berg ion stoica yi lu bikas saha edward harris rein- ing outlier map-reduce cluster mantri pro- ceedings 9th usenix conference operating osdi10 116 berkeley usa 2010. usenix association 4 matei zaharia andy konwinski anthony d. randy h. katz ion stoica formance heterogeneous environment osdi 2008. joseph improving mapreduce per- 5 ganesh ananthanarayanan michael chien-chun hung xi- aoqi ren ion stoica adam wierman minlan yu grass 11th trimming straggler approximation analytics usenix symposium networked im- plementation nsdi14 289302 seattle wa 2014. usenix association 6 ganesh ananthanarayanan ali ghodsi scott shenker ion stoica effective straggler attack proceeding 10th usenix conference clone networked nsdi13 185198 berkeley usa 2013. usenix asso- ciation 7 jeffrey dean luiz andre barroso tail scale commun acm 56 2 7480 2013 8 barroso l. dean jeff response http //research.google.com/people/jeff/latency.html 2012. time achieving online rapid service 9 david p. anderson jeff cobb eric korpela matt lebofsky dan werthimer seti experiment public- computing commun acm 45 11 5661 novem- ber 2002 10 gaurav d. ghare scott t. leutenegger improving speedup response time replicating parallel program proceeding 10th international con- snow ference job scheduling strategy parallel process- ing jsspp04 264287 berlin heidelberg 2005. springer-verlag 11 walfredo cirne francisco brasileiro daniel paranhos lu fabrcio w. william voorsluys efcacy efciency emergent behavior replication distributed parallel comput 33 3 2007 12 edward bortnikov ari frank eshcar hillel sriram rao predicting execution bottleneck map-reduce cluster proceeding 4th usenix conference hot topic cloud ccomputing hotcloud12 1818 berkeley usa 2012. usenix association 13 shekhar gupta christian fritz bob price roger hoover johan dekleer cees witteveen throughputscheduler learning heterogeneous hadoop cluster proceeding 10th international conference auto- nomic computing icac13 159165 san jose 2013. usenix 14 yongchul kwon magdalena balazinska bill howe jerome rolia skewtune mitigating skew mapreduce ap- plication proceeding 2012 acm sigmod inter- national conference sigmod 12 2536 york ny usa 2012. acm fair hadoop 15 matei scheduler zaharia http //developer.yahoo.net/blogs /hadoop/fairsharepres.ppt 16 matei zaharia dhruba borthakur joydeep sen sarma khaled elmeleegy scott shenker ion stoica delay scheduling simple technique achieving locality fair- 30 zhi-hua zhou xu-ying liu training cost-sensitive neu- ral network method addressing class imbalance trans knowl eng 18 1 63 77 2006 31 yanpei chen sara alspaugh randy h. katz interactive analytical processing cross-industry study mapreduce workload pvldb 5 12 18021813 2012. 2011 19th annual 32 yanpei chen archana ganapathi rean grifth evaluating mapreduce randy katz proceeding performance workload suite international sympo- sium modelling simulation com- puter telecommunication mascot 11 washington dc usa 2011. society http //github.com/swimprojectucb/swim/wiki/ 33 john c. platt fast training support vector machine bernhard scholkopf sequential minimal optimization christopher j. c. burges alexander j. smola editor advance kernel method 185208. mit press cambridge usa 1999 34 antoine bordes seyda ertekin jason weston leon bot- tou fast kernel classiers online active learning j. mach learn 6 15791619 2005 35 paul g. hoel sidney c. port charles j. stone intro- duction stochastic process houghton mifin company boston 1972 36 sheldon m. ross eighth edition academic press 8 edition 2003 37 mark hall eibe frank geoffrey holmes bernhard pfahringer peter reutemann ian h. witten weka mining update sigkdd explor newsl 11 1 2009 38 gunho lee niraj tolia parthasarathy ranganathan randy h. katz topology-aware allocation data- sigcomm comput commun rev intensive workload 41 1 120124 2011 39 timothy prickett reveal morgan hadoop size ter http //www.enterprisetech.com/2013/11/08/cluster-sizes- reveal-hadoop-maturity-curve/ maturity clus- curve 40 amazon redshift http //aws.amazon.com/redshift/faqs/ ness cluster scheduling proceeding 5th european conference eurosys 10 2010 17 hadoops capacity scheduler http //hadoop.apache .org/core/docs/current/capacity scheduler.html 18 faraz ahmad srimat t. chakradhar anand raghunathan t. n. vijaykumar tarazu optimizing mapreduce het- erogeneous cluster proceeding seventeenth inter- national conference architectural support program- ming language operating asplos xvii 6174 york ny usa 2012. acm 19 michael isard vijayan prabhakaran jon currey udi wieder kunal talwar andrew goldberg quincy fair scheduling distributed computing cluster proceeding acm sigops 22nd symposium operating principle sosp 09 261276 york ny usa 2009. acm 20 ganesh ananthanarayanan ali ghodsi andrew wang dhruba borthakur srikanth kandula scott shenker ion stoica pacman coordinated memory caching parallel job proceeding 9th usenix conference net- worked nsdi12 2020 berkeley usa 2012. usenix association 21 christina delimitrou christos kozyrakis quasar resource-efcient qos-aware cluster proceeding 19th international conference archi- tectural support programming language operating asplos 14 127144 york ny usa 2014. acm 22 matthew l. massie brent n. chun david e. culler ganglion distributed implementa- tion experience parallel computing 30 2004 2003 23 nello cristianini john shawe-taylor support vector machine kernel-based learning method cambridge press york ny usa 2000 24 christopher m. bishop pattern recognition machine springer- learning science statistic verlag york inc. secaucus nj usa 2006 25 christopher j. c. burges tutorial support vector ma- chine pattern recognition min knowl discov 2 2 121167 1998 26 john c. platt probabilistic output support vector ma- chine comparison regularized likelihood method advance margin classifier 61 74. mit press 1999 27 nitesh v. chawla kevin w. bowyer lawrence o. hall w. philip kegelmeyer smote synthetic minority over- journal articial intelligence re- sampling technique search 16 321357 2002 28 nitesh v. chawla nathalie japkowicz aleksander kotcz editorial special issue learning imbalanced sigkdd explor newsl 6 1 16 2004 29 yanmin sun mohamed s. kamel andrew k. c. wong yang wang cost-sensitive boosting im- balanced pattern recogn 40 12 33583378 decem- ber 2007 01.pdf originality 22 similarity 19 13 internet source publication paper primary source 1 2 3 4 5 6 7 8 9 hadoop.apache.org internet source '' networking internet security '' springer nature 2017 publication eprints.whiterose.ac.uk internet source developer.yahoo.com internet source www.kalyanhadooptraining.com internet source doc.mapr.com internet source ilugc.in internet source smart innovation 2016. publication docplayer.net internet source 5 1 1 1 1 1 1 1 1 10 11 12 13 14 15 16 17 18 19 support.bull.com internet source www.ijsret.org internet source p3.snf.ch internet source www.moh.gov.my internet source amplab.cs.berkeley.edu internet source sourceforge.net internet source brainmatics.com internet source wang lei rui ren jianfeng zhan zhen jia `` characterization architectural implication workload '' 2016 international symposium performance ispass 2016. publication www.research.lancs.ac.uk internet source artemis.cslab.ntua.gr internet source advance intelligent 1 1 1 1 1 1 1 1 1 1 20 21 22 23 24 25 26 27 28 29 computing 2016. publication dl.acm.org internet source www.energy.ca.gov internet source etd.ohiolink.edu internet source ojs.academypublisher.com internet source ftp.math.utah.edu internet source chen xin charng-da lu karthik pattabiraman `` failure prediction job compute cloud google cluster study '' 2014 international symposium reliability workshop 2014. publication dblp.dagstuhl.de internet source network 2015. publication ucare.cs.uchicago.edu internet source 1 1 1 1 1 1 1 1 1 1 30 31 32 33 34 35 36 37 vundavalli srinivasarao `` effective term weighting alt text prediction web image retrieval '' lecture note science 2011 publication grokbase.com internet source www.carch.ac.cn internet source '' faster job distributed processing multi-task learning '' proceeding 2015 siam international conference mining 2015. publication www.collegeslist.net internet source rosa andrea lydia y. chen walter binder `` understanding dark side cluster failure '' 2015 45th annual ieee/ifip international conference dependable network 2015. publication cd.dgb.uanl.mx internet source zhao yanrong weiping wang dan meng yongchun lv shubin zhang jun li 1 1 1 1 1 1 1 1 '' tdws job scheduling based mapreduce '' 2012 seventh international conference networking storage 2012. publication '' performance improvement mapreduce framework identifying slow tasktrackers heterogeneous hadoop cluster '' smart innovation 2016. publication www.smartercom.it internet source jinwei liu haiying shen husnu s. narman `` ccrp customized cooperative provisioning utilization cloud '' 2016 international conference 2016 publication rutcor.rutgers.edu internet source bigdataweek.com internet source docs.hp.com internet source vinod durdi sudha `` cross layer approach joint optimization multimedia protection energy efficiency wireless 38 39 40 41 42 43 44 1 1 1 1 1 1 1 multimedia sensor network '' 2016 international conference signal processing iccsp 2016 publication people.csail.mit.edu internet source www.ukessays.com internet source '' emerging artificial intelligence computational intelligence '' springer nature 2011 publication 1000projects.org internet source blogs.ubc.ca internet source aclweb.org internet source cloud 2014. publication mindmajix.com internet source www.scribd.com internet source research.ijcaonline.org internet source 45 46 47 48 49 50 51 52 53 54 1 1 1 1 1 1 1 1 1 1 55 56 57 58 59 60 brewformulas.org internet source ira.lib.polyu.edu.hk internet source handbook intensive computing 2011. publication study computational intelligence 2016. publication yingchi mao hai qi ping ping xiaofang li `` figmr fine-grained mapreduce scheduler heterogeneous cloud '' 2016 international conference automation icia 2016 publication '' '' 2015 45th annual ieee/ifip international conference dependable network 2015. publication 1 1 1 1 1 1 exclude quote exclude bibliography exclude match 1 word scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner", "keywords": ["acceptable condence", "ananthanarayanan ali", "andy konwinski", "annual ieeeifip", "annual ieeeifip international", "anthony joseph", "apache hadoop", "approach straggler", "approach wrangler", "based scheduler", "based scheduling", "bhingare prashant", "bhingare prashant birajdar", "black box", "black box approach", "bound delay", "box approach", "building phase", "california berkeley", "capacity scheduler", "cc cc", "charngda lu", "charngda lu karthik", "chen al", "christopher burges", "cloud google", "cloud google cluster", "cloud international", "cloud international conference", "clouderas customer", "cluster failure", "cluster proceeding", "cluster size", "cluster state", "cluster wrangler", "compleon time", "completion time", "compute cloud", "compute cloud google", "condence measure", "condence measure prediction", "condence prediction", "conference dependable", "conference dependable network", "core frequency", "counter node", "cpu usage", "dark cluster", "dark cluster failure", "daruwala sonali", "default scheduler", "dependable network", "disk utilization", "distributed approach", "distributed machine", "distributed machine learning", "distributed processing", "doe wrangler", "error wrangler", "execution time", "existing approach", "facebook clouderas", "faster job", "faster job completion", "fb fb", "file size", "free node", "ganesh ananthanarayanan", "ganglion master", "ganglion master node", "ghz ram", "google cluster", "hadoop cluster", "hadoop framework", "hadoop job", "hadoop yarn", "ieeeifip international", "ieeeifip international conference", "improvement job", "intel core", "intel core frequency", "intensive workload", "international conference", "international conference dependable", "international symposium", "internet source", "io intensive", "ion stoica", "jct file", "jeffrey dean", "jie xu", "job completion", "job completion time", "job compute", "job compute cloud", "job execution", "job execution time", "job job", "job scheduling", "job submission", "label based", "label based scheduler", "labelbased scheduling", "larger cluster", "learning approach", "learning phase", "level based", "linear combination", "linear function", "linear kernel", "linear modeling", "linear modeling technique", "load machine", "logistic regression", "lu karthik", "machine learning", "machine learning approach", "mantri mantri", "mapreduce cluster", "master node", "matei zaharia", "measure prediction", "memory utilization", "minimum acceptable", "minimum acceptable condence", "modelinformed scheduler", "modeling error", "modeling error wrangler", "modeling technique", "network utilization", "nish timely", "nish timely manner", "node cluster", "node configuration", "node hadoop", "node job", "node label", "node node", "node straggler", "node usage", "node usage counter", "node wrangler", "notion condence", "notion condence measure", "number node", "number straggler", "pattern classification", "percentile job", "pi estimator", "pletion time", "prashant birajdar", "pre diction", "prediction accuracy", "prediction worker", "proactive wrangler", "processor intel", "processor intel core", "production trace", "productionlevel workload", "proposed solution", "python script", "randy katz", "reduction job", "reduction job completion", "scheduling decision", "scheduling hadoop", "scheduling policy", "scott shenker", "shenker ion", "shenker ion stoica", "slave node", "slow running", "snapshot node", "snapshot node usage", "speculative execution", "speed job", "state transition", "steady state", "straggler avoidance", "straggler class", "straggler distributed", "straggler distributed machine", "straggler node", "straggler prediction", "straggler straggler", "straggler time", "support vector", "support vector machine", "tejal bhingare", "tejal bhingare prashant", "th annual", "th international", "th international conference", "th percentile", "th percentile job", "th usenix", "th usenix conference", "time interval", "timely manner", "usage counter", "usage counter node", "usage pattern", "usenix conference", "utilization counter", "vector machine", "work load", "workload facebook", "workload fb", "wran gler", "wrangler delay", "wrangler doe", "wrangler respect", "wrangler speed", "wrangler wrangler", "xml format", "yanpei chen", "zhen jia"], "libraries": ["panda"], "languages": ["php", "python", "xml", "io", "basic", "small", "java"], "frameworks": [], "dbs": []}, "./reports/02_final_report .pdf": {"title": "catch up \u2013 a nodejs based android application for streamlined   plannings of meetings and get together.", "filename": "./reports/02_final_report .pdf", "data": "catch nodejs based android streamlined planning meeting sejal abhangrao shrunoti karpe pushkaraj shinde aditya shirole b120058503 b120058560 b120058632 b120058634 guidance dr. a. m. bagade pune-411043 2016-2017 catch nodejs based android streamlined planning meeting sejal abhangrao shrunoti karpe pushkaraj shinde aditya shirole b120058503 b120058560 b120058632 b120058634 bonafide dr. a. m. bagade earlier diploma _______________________ ________________________ dr. a. m. bagade _______________________ _________________________ dr. p.t s.b.deshmukh co-ordinator _______________________ examiner sponsorship letter completion letter catch acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy express sincere gratitude charge dr. a.m. bagade invaluable support wa consistent input guidance complete undertaken express sincere gratitude coordinator prof. s. b. deshmukh acknowledge valuable criticism well timely appreciation humbling experience express sincere gratitude reviewer prof. t.a rane prof. r. v. valuable support guidance purpose gathering making extend gratitude dr. p.t providing infrastructure facility mr. gaurav suryagandh helping process hope aptly justified faith reposed sincerely making enriching experience sejal abhangrao shrunoti karpe pushkaraj shinde aditya shirole pict- technology- 2016-17 catch fig 3 13 17 25 26 26 28 29 30 31 32 32 1.1 main 4.1 level 4.2 client side storage 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9 network gantt pert class state deployment pict- technology- 2016-17 ii catch sr. 2.1 comparative study 5.1 8 25 pict- technology- 2016-17 iii catch abbreviation abbreviation illustration rsvp eta api db ram gb sm sdlc rest aws sdk respondez sil vous plait javascript estimated time arrival program database random access memory gigabyte short message service development life cycle unified representational state transfer amazon web service development kit pict- technology- 2016-17 iv topic acknowledgement abbreviation 1 2 3 1.1 background 1.2 relevance 1.3 undertaken background 2.1 2.2 comparative study specification 3.1 definition 3.2 3.3 3.4 3.5 area 3.6 client 4 4.1 purpose 4.2 level 4.3 4.4 description 4.4.1 4.4.2 product position 4.4.3 existing ii iii iv 1 3 4 4 5 7 7 8 10 10 10 10 10 11 11 13 13 13 14 14 15 15 15 4.4.4 proposed 5 4.5 constraint 5.1 5.2 execution 5.3 5.3.1 historical 5.3.2 estimation technique applied 5.4 5.4.1 5.4.2 prioritization 5.4.3 5.5 5.5.1 decomposition 5.5.2 5.5.3 5.6 tracking control mechanism 5.6.1 assurance control 5.6.2 change control 5.7 specification 5.7.1 5.7.2 class 5.7.3 5.7.4 5.7.5 state 5.7.6 deployment 5.8 16 16 20 20 20 22 22 22 22 23 23 23 24 24 25 26 26 26 26 27 27 28 29 30 31 32 33 6 evaluation 6.1 6.2 screenshots 6.3 code snippet 6.4 6.4.1 6.4.2 6.4.3 crash 7 function point ii plagarism iii review sheet 35 35 35 38 42 42 43 46 48 49 catch process planning evolved pen paper whatsapp facebook messenger evolution thing simpler effort organizer remains existing solution approach process approach involves email call unavailability offline riding/driving major concern propose simplify process eliminating disorder aim achieve creating better platform platform revolve aspect planning group chat loading recommendation choosing pre-ordering food checking eta sending reminder sharing social medium build backend nodejs expressjs mongodb front android principle approach aim develop build business deduction earn revenue advertisement mentioned featuring load suggestion keywords android development planning nodejs pict- technology- 2016-17 1 catch 1 pict- technology- 2016-17 2 catch existing whatsapp email chaotic planning meet burden planner keep track people attending decide majority people attend remind invited people arranging meet 100 people turn disaster question arises process simplified planning smoothly burdensome inviter answer question catch wa proposed catch platform built simplify process planning formal informal meeting minimum click platform functionality rsvp voting applied context planning informal meet friend colleague associate planning formal meet business partner associate co-worker making going movie trek party group planning get-togethers reunion conference catch three 1. catch 2. transportation 3. advertisement fig 1.1 main pict- technology- 2016-17 3 catch 1.1 background existing planning solution whatsapp facebook calling texting email wa observed platform effective medium wasted lot time created disorder planning event knowing exact number people attending choosing finalizing time deciding transportation medium reach lot human effort asked people responded affirmatively catch wa formed 1.2 relevance basic ease process planning existing solution approach chaotic tedious help platform meeting help click avail benefit booking transportation benefit deal offered provider meeting functionality provided concern transportation platform in-built transportation facility book cab platform uber ola embedded platform support advertisement promote business hotel lawn coffee shop avail benefit discount provider platform extension brand building main involves major roles- inviter invitee inviter option creating catch-up checking eta estimated time arrival inviter decides create catch-up he/she app installed inviter facebook account he/she driven main he/she choose option create catch-up invitee chosen contact inviter load recommendation check eta send reminder final decision making invitee accept reject invitation simple thumb thumb enabling inviter number attendee quick glance app installed invitee vote load recommendation inviter invitee share pict- technology- 2016-17 4 photo social medium book cab platform embedded pre- catch order food backend built nodejs expressjs mongodb front android principle approach wa developed considering business perspective deduction catch earn revenue advertisement featuring load suggestion 1.3 undertaken 1.3.1 aim build nodejs based streamlined planning meeting android chosen platform 1.3.2 existing planning cumbersome leading disordered experience catch eas process planning single click sends reminder invited people inbuilt functionality book cab solution transportation avail benefit discount provided vendor meet pict- technology- 2016-17 5 catch 2 pict- technology- 2016-17 6 catch background efficiency person depends factor level skill secondly readiness concerned developed education training second formed person request motivated satisfy desire streamlined time redeemable manner man desire socialize meet people increase number people meeting chaos planning increase technological solution wa felt ease chaos better mobile majority today population outsources planning sort wa curiosity undertaking appealing area chance learn region computing android development covered academic course wa interesting 2.1 process planning evolved pen paper whatsapp facebook messenger evolution thing simpler effort organizer remains existing solution approach process approach involves email call unavailability offline riding/driving major concern wa observed platform effective medium wasted lot time created disorder planning event knowing exact number people attending choosing finalizing time deciding transportation medium reach lot human effort pict- technology- 2016-17 7 catch conducted wa observed 80 people whatsapp meet 61 preferred calling 8 facebook 10 preferred asked simplify process planning 94 responded affirmative common demand observed eta estimated time arrival people attending 73 people asked 69 people believed benefit recommendation 63 people reminder handy live upto 94 people definitely recommend friend 63 people belonged age group 19-25 27 fell age group 26-50. wa fair assume youngster prefer simple ui target 80 android 2.2 comparative study 2.1 comparative study features/apps meetup muffin catchup rsvp voting transportation invite explore reminder discount pict- technology- 2016-17 8 catch 3 pict- technology- 2016-17 9 specification catch 3.1 definition build nodejs based android streamlining process planning formal informal meeting 3.2 android simplifies process planning three main modules- creating catch-up creating catchup process creating meeting event client includes specific catchup catchup created invoking adding title catchup meeting time meeting finally invited contact alternative manual entry suggestion carry voting transportation transportation facilitate transport meeting destination cab service apis uber advertisement business recommendation service based 3.3 microsoft window 10/8/7 32- 64-bit linux 3.0.31 2 gb ram minimum 4 gb ram recommended 500 mb disk space 1.5 gb android sdk emulator image cache internet connection 3.4 node.js web server real-time connection expressjs rest api framework mongodb parse database pict- technology- 2016-17 10 catch aws hosting mlab database hosting android source based operating android sdk facebook sdk digit uber apis junit espresso mockito unit mocking git version control 3.5 area category wireless mobile sub-category android development web apis 3.6 client android smartphone android version 4.3.0 jelly bean ram 1 gb internet connection pict- technology- 2016-17 11 catch 4 pict- technology- 2016-17 12 catch 4.1 purpose fundamental planning meeting minimum click platform provide functionality transportation reminder eta purpose substitute traditional meeting planning whatsapp facebook call email multi- aim create streamlined completely steadfast formal informal meeting 4.2 level fig 4.1 level pict- technology- 2016-17 13 catch 4.3 4.3.1 creating catchup creation catchup start planning meeting create catchup meeting event 4.3.2 catchup catchup includes adding title catchup adding time catchup meeting google apis finally inviting contact catchup contact phone 4.3.3 voting alternative manual input invited suggestion creating poll voting suggestion allows freedom desired time poll limited time suggestion maximum vote assigned catchup final 4.3.4 updating catchup catchup subject change administrator catchup i.e inviter fundamental update option 4.3.5 transportation transportation facilitate transport meeting destination cab service apis uber completion catchup creation completed catchup 4.3.6 advertisement business recommendation service based 4.4 description purpose substitute traditional meeting planning whatsapp facebook call email pict- technology- 2016-17 14 4.4.1 build nodejs based android streamlining process planning catch formal informal meeting 4.4.2 product position intended bring reduction clutter caused tremendous amount individual planning meeting reorganizes creates dedicated planning meetups process enhances planning process main benefit solicitation doe wander multiple meet saving time effort 4.4.3 existing messenger 1. whatsapp group whatsapp messenger cross freeware end-to-end encrypted instant messaging app smartphones internet voice call video call send text message image location audio file phone contact voice note operator standard cellular number conventional method planning includes forming whatsapp group people interested socializing planning typical message include forming group meeting group people planning existing group 2. facebook messenger facebook messenger instant messaging service cohesive facebook 's web-based chat facebook messenger allows direct message standalone app android io operating facebook propelled facebook messenger lite basic established extent low-speed internet website offered android combined support sm `` chat '' round profile photo icon appearing on-screen irrespective app exposed whatsapp messenger include conversation phone call text message phone call text message person planning call/text individual involved grant consent plot meeting lengthy time consuming process follow pict- technology- 2016-17 15 electronic mail electronic mail organize formal meeting gathering require extensive recording reply gather meeting planner catch 4.4.4 proposed catchup allows event catchup creation catchup includes specific catchup catchup created invoking adding title catchup meeting time meeting finally invited contact alternative manual entry suggestion carry voting main involves major roles- inviter invitee inviter option creating catch-up checking eta estimated time arrival inviter decides create catch-up he/she app installed inviter facebook account he/she driven main he/she choose option create catch-up invitee chosen contact inviter load recommendation check eta send reminder final decision making invitee accept reject invitation simple thumb thumb enabling inviter number attendee quick glance app installed invitee vote load recommendation inviter invitee share photo social medium book cab platform embedded preorder food 4.5 constraint major constraint distribution usage reluctance download install additional planning meeting wake existence social medium development constraint acquiring license web scraping usage apis provide service constraint 1. client-side storage usual drop 72 4 day 3 month theyve lost 95 handler pict- technology- 2016-17 16 catch fig 4.2 client side storage period time consequently deleting lot storage download 2. broken transmission transmission simple desktop mobile difficult job example doe search mobile web install app store installed screen redo search contextual conceded install progression learned lost retained consequence developer solution deep-linking rid difficulty 3. making update assembling change mobile app exceedingly difficult distribution small update week google remains client side download updated version manually pict- technology- 2016-17 17 catch 4. heavy control small screen size screen size bigger bigger complete mobile involvement ideal method interpretation accomplishing 5. poor connectivity common recurrent connectivity matter slow download speed smart phone connection ajax-enabled disposed unanticipated behaviour quiet failure slow download speed functioning slower connection indisputable footprint minor applying aggressive asset caching pict- technology- 2016-17 18 catch 5 pict- technology- 2016-17 19 catch basic provide friendly streamlined meeting help android device node server side achieve aspect meeting planning process web apis comprehended apis provide secure inhibited connection database service providing 5.1. 1. ease process planning streamlining single multiple eliminate extensive multiple dissolving space chaos issue revamping planning meeting process distress-free experience 2. build nodejs based android perform streamlined planning meeting process android web based revoke traditional planning formal informal meeting modernize suit generation advanced web mobile time keeping simple user-friendly generate interest keep coming time gathering 5.2 execution a. identification searching identifying finalizing b. conceptualization concept building studied level designing stage preliminary presentation clarification c. detailed stage low-level designing designed better visualization high-level assertion going attain draw rough strategy code doe start step expected achieve achieve pict- technology- 2016-17 20 d. coding actual start stage involves writing function class involves writing server side code driving retrieving server coding front generate user-friendly gui coding coding 10 12 week catch e. unit initially tested number gui scenario involving tested separately.in object-oriented programming smallest unit method belongs super class treat single unit unit stub driver framework mock object support unit f. integration integrated integrated component performed includes evaluation integration uncover glitch component integration extreme programming practical technique development careful building repeated review g. product wa tested context entire android device version performance monitored h. documentation detailed document prepared stage gathering initial wa a. understanding definition b. understanding current scenario enterprise c. gathering d. gathering e. preparing preliminary workflow f. deciding execution g. execution actual pict- technology- 2016-17 21 5.3 5.3.1 historical semi-detached catch reason development development consists mixture experienced inexperienced people member limited experience developed massive simple compact considered semi-detached cocomo semi-detached 5.3.2 estimation technique applied 5.3.2.1 estimation technique constructive cost cocomo 5.3.2.2 technique basic cocomo equation man-months 3.0 8 1.12 30.8 semi-detached ab 3.0 bb 1.12 cb 2.5 db 0.35 kloc estimated number delivered code 1 effort applied ab kloc bb 2 development time cb effort applied db month 3 people effort applied/development time count 30.8/8.3 3.7 3-4 people needed 2.5* 30.8 0.35 8.3 5.4 possibility loss injury definition environment exposure harm loss includes possibility well technique alleviate harm loss avoided performing attempt ensure time essential progress failure key learning involves identification prioritization pict- technology- 2016-17 22 catch 5.4.1 analyzed individually classification basis rated a. critical b. marginal c. negligible reviewed consensus wa reached major issue mobile violation 1. api stability change incompatible warn stuck move forward development 2. security issue lack domination android market led explosion malware program cover-up trusted apps 3. network connectivity exfiltration command control spyware malicious functionality classically exfiltration profit invader 5.4.2 prioritization analyzing prioritized based review consensus developer 5.4.3 series step help understand manage uncertainty plague potential happen outcome good identify access occurrence developed empirical monitor manage unexpected delay hindrance faced actively managed rapid development word tom glib n't actively attack actively attack key function identify address eliminate source threat completion effective strategy address three issue a. avoidance b. pict- technology- 2016-17 23 c. contingency planning adopts proactive approach avoidance best strategy.this achieved developing word napoleon precaution leave chance catch 5.5 5.5.1 decomposition critical determined 7 leading development breakdown major t1 setting android cloud service a. setting android specific current version b. setting database mlab c. setting parse cloud service hosting database t2 developing node server side code manipulation a. understanding node 's working developing server side code b. developing code retrieval relevant t3 development module- catchup creation a. included b. development storage retrieval database c. web scraping d. integration apis retrieval website t4 development transportation a. searching transportation providing service b. researching best service provider c. web scraping d. integrating apis incorporate service e. modification received fit t5 advertisement a. contacting vendor advertise service b. developing showcase service t6 pict- technology- 2016-17 24 catch a. b. android version device t7 beta release bug resolving a. release official google play store beta b. resolving issue generated beta fig 5.1 network 5.5.2 5.1 sr 1 2 3 4 5 6 android setup cloud service server side code deployment developing catch creation developing transportation developing advertisement java android mongodb parse nodejs java android java nodejs android java android java android period week 1 3 7 3 2 1 pict- technology- 2016-17 25 5.5.3 gantt gantt catch 5.5.4 pert fig 5.2 gantt 5.6 tracking control mechanism fig 5.3 pert 5.6.1. assurance control control involves series inspection review development process start small direct use-cases gesture pict- technology- 2016-17 26 follow incremental approach assurance consists auditing reporting function ass effectiveness completeness control catch 5.6.2. change control change inevitable built rational unified process development lifecycle rup sdlc paradigm based building block element describing produced skill step-by-step explanation describing specific development achieved main building block element role role defines skill competency responsibility product product represents including document produced working process describes unit assigned role meaningful iteration categorized discipline `` discipline '' business modelling deployment three supporting discipline configuration change environment 5.7 specification 5.7.1 expected behaviour functioning respect actor focus description 5.4 interaction pict- technology- 2016-17 27 catch fig 5.4 5.7.2 class class defines construction showing 's class method modelling comprehensive modelling rendering code pict- technology- 2016-17 28 catch fig 5.5 class 5.7.3 represents business step-by-step workflow component control 5.5 pict- technology- 2016-17 29 catch fig 5.6 5.7.4 parallel vertical process object live simultaneously horizontal arrow message exchanged order occur allows specification simple runtime scenario pict- technology- 2016-17 30 graphical manner 5.6. catch fig 5.7 5.7.5 state state state depicts change state event output 5.7 state pict- technology- 2016-17 31 catch fig 5.8 state 5.7.5 deployment deployment display deployment distribution artifact deployment target fig 5.9 deployment pict- technology- 2016-17 32 catch 5.8 basic ease process planning existing solution approach chaotic tedious help platform meeting help click avail benefit booking transportation benefit deal offered provider meeting functionality provided concern transportation platform in-built transportation facility book cab platform uber ola embedded platform support advertisement promote business hotel lawn coffee shop avail benefit discount provider platform extension brand building main involves major roles- inviter invitee inviter option creating catch-up checking eta estimated time arrival inviter decides create catch-up he/she app installed inviter facebook account he/she driven main he/she choose option create catch-up invitee chosen contact inviter load recommendation check eta send reminder final decision making invitee accept reject invitation simple thumb thumb enabling inviter number attendee quick glance installed invitee vote load recommendation inviter invitee share photo social medium book cab platform embedded pre-order food built backend nodejs expressjs mongodb front android principle approach pict- technology- 2016-17 33 catch 6 pict- technology- 2016-17 34 evaluation catch 6.1 aim provide hassle-free streamlined planning meeting enable benefit offer vendor bridging gap consumer provider log facebook drawn main screen creates catch invited people notified join catch responding rsvp inviter invited people avail benefit provided 6.2 pict- technology- 2016-17 35 catch pict- technology- 2016-17 36 catch pict- technology- 2016-17 37 catch 6.3 code snippet 6.3.1 creating catch pict- technology- 2016-17 38 catch pict- technology- 2016-17 39 6.3.2 catch catch 6.3.3 pict- technology- 2016-17 40 6.3.4 parse uber configuration catch 6.3.5 updating catch pict- technology- 2016-17 41 6.3.5 sign up/login catch 6.4 6.4.1 level complete integrated tested purpose evaluate compliance involved prepare review prepare review perform catchup tested device comply platform independency compatible android device version jellybean 4.0.0 tested nougat 7.0.0 lollipop 6.0.0 version pict- technology- 2016-17 42 6.4.2 catch pict- technology- 2016-17 43 catch pict- technology- 2016-17 44 catch pict- technology- 2016-17 45 catch 6.4.3 crash crash reporting securely catching reporting breaking event considerate grouping platform handler framework handler sensible logging crashanalytics framework conduct crash reporting function crash catching written java function crash generated fabric.io dashboard notify crash pict- technology- 2016-17 46 catch 7 pict- technology- 2016-17 47 catch integrating enhancing capability essential hope introduce planning growing market fact built android major advantage majority people android phone well aware built advertising platform door entire market prove valuable dealer well customer basic ease process planning existing solution approach chaotic tedious help platform meeting help click avail benefit booking transportation send reminder benefit deal offered provider checking exact location invitee knowing number people attending loading suggestion click deal advent multiple functionality allo best example catch add serve example aim add functionality pre-ordering booking time asset preordering booking included business meet smoothly food served exact time nutshell attempt establish novel efficient hassle-free save lot time great ease pict- technology- 2016-17 48 catch 1 snehal raskar `` meta-app pull-based approach international journal 2016 pg 11-14 volume 18 isuue 8 2 stefan tilkov `` node.js javascript build high-performance network program '' internet computing 2016 pg 55-58 volume 14 issue 6 3 scott wambler `` blog '' availiable http //www.agiledata.org/ accessed 12 2016 4 eric ries blog online availiable http //theleanstartup.com/principles accessed 12 2016 5 fundamental blog http //softwaretestingfundamentals.com/black- box-testing/ accessed 2 2016 6 document template specification accessed 2 2016 bibliography 1 tom pender bible california wiley 2004 102-110 2 tom hughes croucher mike wilson node running shroff/oreilly 2012 3 glenford meyers art john wiley son 2006 4 dawn griffith david griffith android development brain-friendly o'reilly medium inc. 2015 pict- technology- 2016-17 49 function point 02.docx originality 17 similarity 17 5 internet source publication paper primary source 1 2 3 4 5 6 7 8 9 www.win.tue.nl internet source www.ijera.com internet source en.wikipedia.org internet source www.eas.asu.edu internet source www.woodsmall.com internet source www.ukessays.com internet source geeksquiz.com internet source en.m.wikipedia.org internet source www.slideshare.net internet source 10 textarchive.ru internet source 3 3 2 1 1 1 1 1 1 1 11 12 13 14 15 16 17 18 19 20 21 22 hamidrezaadl.com internet source mydotnetcoolfaqs.blogspot.com internet source www.lytetechnologies.com internet source www.webcourses.ir internet source saweran.info internet source www.kkwwomenspoly.org internet source repository.wit.ie internet source amit.myktm.com internet source www.twodee.org internet source www.eurescom.de internet source www.essay.uk.com internet source myrajendrak.blogspot.com internet source 1 1 1 1 1 1 1 1 1 1 1 1 23 fr.slideshare.net internet source 1 exclude quote exclude bibliography exclude match 1 word", "keywords": ["android development", "android device", "android version", "avail benefit", "basic ease", "basic ease process", "book cab", "cab platform", "catch fig", "catchup catchup", "catchup creation", "catchup meeting", "cloud service", "comparative study", "ease process", "estimation technique", "formal informal", "formal informal meeting", "informal meeting", "internet source", "inviter invitee", "java android", "load recommendation", "lot time", "nodejs based", "pict technology", "planning meeting", "server code", "social medium", "streamlined planning", "streamlined planning meeting", "web scraping"], "libraries": [], "languages": ["io", "beta", "javascript", "basic", "small", "sr", "java", "nodejs"], "frameworks": [], "dbs": ["mongodb"]}, "./reports/03_final_report.pdf": {"title": "cloudbucket", "filename": "./reports/03_final_report.pdf", "data": "cloudbucket anmol rastogi b120058508 namrata bamb b120058514 ajay deshmukh b120058530 ridhim rastogi b120058610 guidance dr. emmanuel m. 2016-2017 cloudbucket anmol rastogi examination seat b120058508 namrata bamb examination seat b120058514 ajay deshmukh examination seat b120058530 ridhim rastogi examination seat b120058610 bonafide dr. emmanuel m. fulfilment earlier diploma dr. emmanuel m. prof. s. b. deshmukh coordinator dr. p.t examiner sponsorship letter completion title sponsorship industry ii completion industry iii acknowledgement iv nomenclature vi 1 1. 3 1.1 background 4 1.2 relevance 4 1.3 undertaken 4 1.3.1 4 1.3.2 5 2. background review 7 2.1 background 7 2.2 7 2.3 existing 9 3. specificationand 12 3.1 definition 12 3.2 12 3.3 12 3.4 softwareresources 13 3.5 area 13 4. 15 4.1 purpose 15 4.2 level 15 4.3 15 4.4 description 16 5. 18 5.1 18 5.2 execution 18 5.3 19 5.4 managment 21 5.4.1 21 5.4.2 prioritization 21 5.4.3 22 5.5 23 5.5.1 gantt 23 5.6 tracking control mechanism 23 5.6.1 assurance control 23 5.6.2 change control 24 5.7 specification 24 5.7.1 class 24 5.7.2 use-case 25 5.7.3 26 6. evaluation 29 6.1 29 6.2 screenshots 29 7. 40 7.1 40 7.2 40 41 base paper ii plagairism iii review sheet ii iii iv acknowledgement opportunity gratitude dr.emmanuel m. valuable knowledgeable guidance success coordinator prof. s. b. deshmukh input proper documentation contributed debt gratitude charge i.t dr. a. m.bagadefor expert advice dr. p.t lab attendant constant support betterment extend gratitude industry mentor mr. ramprasadchinthekindi mr. kedargodboleand mr. saketpatrikarof oursponsorship company dell emc2 guidance industry experience helped proper execution anmolrastogi b120058508 namrata bamb b120058514 ajay deshmukh b120058530 ridhimrastogi b120058610 fig 4.1 proposed 15 5.1 gantt 23 5.2 class 25 5.3 26 5.4 27 6.1 sign-in 29 6.2 sign-up 30 6.3 forgot password 31 6.4 drawer add file local device 32 6.5 file sync 33 6.6 authenticated 34 6.7 file uploaded amazon s3 35 6.8 pool authenticated 36 6.9 identity pool 37 6.10 navigation drawer 38 nomenclature sr. acronym 01 aws amazon web service 02 csp cloud service provider 03 byod bring device 04 file sharing syncing 05 ec2 amazon elastic cloud compute 06 uec ubuntu enterprise cloud 07 abe based encryption cloudbucket pict-information 2016-17 1 daysproviders storage service mobile cloudpresent thecustomers suitable dependable store share mobile device backup sync mobile cloud spite thegrowingrecognition theinternal synchronization protocol cloud based storage service considered storage service mobile cloud including synchronization protocol majorfunctionalities improving storage retrieval speed analyzed comprehended storage cloud storage retrieval speed free mobile storage cloud platform market.the experiment conducted time span file varying size time span deliberated based traffic network efficient share cloud group mobile aim provide unified platform protect share mobile cloud protected cloud enable migrate mobile device keywords aws amazon web service cloudbucket pict-information 2016-17 2 1 cloudbucket pict-information 2016-17 3 1 main aim study implement mobile storage cloud suitable corporation well help enhance working performance developed backup android store cloud service 2016 storage cloud continued incredibly valuable small blooming enterprise storage cloud theoretically early year enterprise unsighted current obligation physical server short knowledge storage cloud move lot misconception storage cloud service key decision maker business owner understand 's functionality purpose developed mobile android create file folder store amazon cloud server authenticated download his/her file techopudia.com storage cloud cloud computing remote server beutilized internet cloud managed operated maintained storage cloud service provider responsible smooth functioning cloud server illustrates form storage cloud 65 global enterprise cloudbucket pict-information 2016-17 4 1.1background progress expansion cloud mobile computing mobile cloud computing devised 2009 phrase.several mobile device producer globe include mobile storage cloud product storage cloud facilitate synchronization platforms.configuring storage cloud service backup device 's file process setting mobile device theios device manufactured apple pre-configured organized apple 's mobile storage cloud service icloud google drive account provided google backing device android based operating mobile storage cloud independent platform example dropbox android io based device 1.2 relevance android aim provide single platform store text image video audio file cloud server provided aws amazon web service helpful general audience aim find integrated backup kind file 1.3 undertaken 1.3.1 aim provide unified platform protect share mobile cloud protected cloud enable migrate cloudbucket pict-information 2016-17 5 mobile device aim develop cloud based backup mobile device 1.3.2 understanding performance storage cloud service service provider community storage cloud predominant storing synchronizing sharingend-user mobile network improvement performance storage cloud based service expanding field expected great modern cloudbucket pict-information 2016-17 6 2 cloudbucket pict-information 2016-17 7 2 background review 2.1 background mobile cloud computinghas devisedas phrase 2009 great deal development extension cloud mobile computing.the storage cloud facilitate synchronization end-user platforms.several mobile device producer globe include mobile storage cloud product configuring storage cloud service backup device 's file process setting mobile device google drive account provided google backing device android based operating system.theios device manufactured apple pre-configured organized apple 's mobile storage cloud service icloud mobile storage cloud independent platform example dropbox android io based device 2.2 cloud designed offerslimitless storage facility constant replication lot backup created backup deleted author 4 explains major component saas storage- as-a-service solution storage cloud analysed understood storage retrieval speed free storage cloudservices site author anoverview working free cloud service market examination website recognition tothe free storage cloudfacility performance improvement evaluation cloudbucket pict-information 2016-17 8 prospective flexibility computing unbounded storage service instantstorage openness fewer fund deployment ensnared welfare cloud computing storage cloud young upcoming industry lot capability term improvement storage capacity prospective rapid storage retrieval speed cloud planned offer limitless storage facility regular replication lot backup created backup eliminated storage cloud ideal storage networked centralized pool warehousethe storage cloud provider csp accommodate pool csps generally termed host client people entitle deposited cloud client occupy storage facility storage cloud hand hosting firm sustain storage extend manifold server locations.the security impacted bythe hosting manage cloud practice free storage capacity limited quantity offered host arrange storage cloud space bring-your-own-device byod strategy increasingly mobile phone changing end-users access commercial data.individual store file download synchronize partnership working projectsgenerally initiatethe storage cloud cloud storage file sharing syncing service service statedestablish file sharing synchronisingresolution on-line teamwork storage file sharing authorises file anytime mobile device allows end-user edit file file syncing version online backup method syncing end-user device example remote smart phone mobile device well group effort functioning 3 cloudbucket pict-information 2016-17 9 cloud computing offer aninnovative todistribute service reorganizing net client demand cloud computing service play asignificant role supporting storage processing administration internet thing cloud-based service provider csps storage volume manage consisting photo video health record internet thing 2 lot ofadvantageous service elasticity scalability pay fault tolerance provided cloud service provider cloud computing potentialfor supportingiot deployment applications.only encrypted end-user outsourcedto cloud based storage providersto ensure privacy varied save encryption method cloud thoughstorage cloud space great deal networking wasted excess power consumed duplication preserving storage importantjob cloud based storage provider 95 percent storage backup 68 percent standard file reduced bydeduplication achieve effective space money saving 2.3 existing storage cloud ideal storage networked centralized pool warehousethe storage cloud provider csp accommodate pool csps generally termed host client people entitle deposited cloud client occupy storage facility storage cloud csp hand hosting firm sustain storage extend manifold server location security impacted bythe hosting manage cloud practice.several host organize cloudbucket pict-information 2016-17 10 storage cloud space offer free storage facility constrained volume data.dropbox functioned dropbox inc. sited san francisco 2gb free space box box inc. offer 10gb free storage accounts.google drive google offer 5gb online storage space.several upcoming cloud provider latest functionality enhanced platform maturity enlargedinnovation performance considerable fall cost applauded host market time enterprise call storage cloud choose cloud-based service provider offersutilitiesappropriate operation enterprise volume stored cloud generally storage retrieval speed purposeful mixed procedure cloud-based service provider author method based attribute-based encryption abe deduplicate encrypted cloud authorise time examination method safe effective well-organized method comprising three cloud-based service provider offer storage facility performs directly storage gain business-related profit cant fully trusted curious stored owner store cloud-based service provider assume owner holder ui 1 eligible save owner cloud-based service provider cloudbucket pict-information 2016-17 11 3 cloudbucket pict-information 2016-17 12 3 specification 3.1 definition aim provide unified platform protect synchronize mobile cloud 3.2 1. backup build create supplementary exact copy file backed cloud supplementary copy restore original 2. mobile app communicate cloud server file syncing restoring authentication developed android based authenticates authentication communicates aws amazon web service server local file device file thensynchronized awsservers keeping file up-to-date device server file cloud server restore file local device cloudbucket installed 3.3 laptops- 64/32 bit unix platform 8-gb ram 1tb hard drive cloudbucket pict-information 2016-17 13 3.4 unix operating ubuntu fedora sqlite database level db javaver 8. android sdk ver 2.1. librsync ssh ssl 3.5 area category cloud computing sub-category mobile cloud computing cloudbucket pict-information 2016-17 14 4 cloudbucket pict-information 2016-17 15 4 4.1 purpose main purpose develop android based creating backup local file folder device storage cloud provided amazon web service aws 4.2high level fig 4.1 proposed 4.3 utilize facility provided amazon web service 1. backup 2. mobile app communicate cloud server file syncing restoring authentication cloudbucket pict-information 2016-17 16 4.4 description main aim develop android expedient backup local file file device cloud server.in amazon web service provide utility storage authentication purpose cloud service provider microsoft azure google cloud platform ibm cloud rackspace amazon web service amazon web service offer scalability availability amazon cognito service easily add sign-up sign-in mobile web apps amazon cognito enables save locally device implemented enhanced security email verification help time password generation mechanism registered he/she app credential username password app multiple option selecting file folder uploaded cloud selected file stored bucket amazon simple storage service s3 amazon s3 simple store retrieve amount file cloud selected downloading local device api called transferutility track progress percentage file uploaded downloaded synchronization file calculated md5 checksum file compared cloud file md5 changed deleted cloud uploaded providing syncing facility integrity maintained change file reflected cloudbucket pict-information 2016-17 17 5 cloudbucket pict-information 2016-17 18 5 5.1. provide unified platform protect share mobile cloud main backup mobile app communicate cloud server file syncing restoring authentication 5.2plan execution identification searching diverse finalize identified conceptualization detailed study constructionof detailed level calculation stage groundwork presentation provided clarity ground-level designing phase designed achieve better coding phase actual execution coded manually unit tested number cloudbucket pict-information 2016-17 19 integration integrate evaluation wa examined perspective window operating platform examination working evaluated documentation thorough document organized phase gathering initial wa understanding definition understanding current scenario enterprise gathering gathering preparing preliminary workflow deciding execution execution actual 5.3 historical semi-detached reason development considered semi-detached development consists mixture experienced inexperienced people member limited experience developed complexity cloudbucket pict-information 2016-17 20 involved semi-detached company experience dealing massive simple compact estimation technique applied estimation technique constructive cost cocomo technique basic cocomo equation semi-detached ab 3.0 bb= 1.12 cb 2.5 db 0.35 kloc estimated number delivered code 1 effort applied ab kloc bb man-months 3.0 8 1.12 30.8 2 development time cb effort applied db month 2.5* 30.8 0.35 8.3 3 people effort applied/development time count 30.8/8.3 3.7 3-4 people needed cloudbucket pict-information 2016-17 21 5.4 likelihood loss damage meaning field encompass exposure damage loss consist likelihood well method lessen damage loss .each evaded executing technique ensure time crucial evolution breakdown major wisdom involves identification prioritization 5.4.1 analyzed individually classification basis rated a. catastrophic b. critical c. marginal reviewed consensus wa reached 5.4.2 prioritization analyzing prioritized based review consensus developer cloudbucket pict-information 2016-17 22 5.4.3 torecognize administer uncertainty step afflicted potential happen good recognize access occasion responsibility managingrisks developed order develop rapidly actively manage unexpected delay minimized tommy glib rightly dont actively attack actively attack function areidentification addressing elimination ofsources thwart completion effective strategy address three major issue a. avoidance b. c. contingency planning cloudbucket pict-information 2016-17 23 5.5 5.5.1gantt gantt fig 5.1 gantt 5.6 tracking control mechanism 5.6.1. assurance control control involves series inspection review development process gesture library scalable start small direct use-cases gesture follow incremental approach assurance cloudbucket pict-information 2016-17 24 consists auditing reporting function ass effectiveness completeness control 5.6.2. change control change inevitable built 5.7 specification 5.7.1 class class cloud bucket main class 1. person person class includes three class visitor member admin class person class 2. basic function class sync cloud upload file cloud download file cloud share file cloud 3. cloud server main functionality class firstly authenticate person store file remove duplicated file person visitor view browse download sharing link file person member permission syncing sharing file admin manages upgrade person basic functionality respective class cloud server manages de-duplication file authentication person cloudbucket pict-information 2016-17 25 fig 5.2 class 5.7.2 cloud bucket three actor visitor member admin visitor create account view browse sharing link public file includes downloading sharing link file member option managing multimedia file mobiledevice cloud server includes option sharing file viewing history signing member option upgrading increase storage administrator option member additionally option managing upgrade member cloudbucket pict-information 2016-17 26 fig 5.3 5.7.3 parallel vertical process object live simultaneously horizontal arrow depict message exchanged permit specification simple runtime scenario graphical representation cloudbucket pict-information 2016-17 27 fig 5.4 cloudbucket pict-information 2016-17 28 6 cloudbucket pict-information 2016-17 29 6 evaluation 6.1 main aim study implement mobile storage cloud suitable corporation well help enhance working performance developed backup android store cloud service 6.2screenshots 6.2.1 sign-in fig.6.1 sign-in cloudbucket pict-information 2016-17 30 6.2.2 sign-up fig 6.2 sign-up cloudbucket pict-information 2016-17 31 6.2.3 forgot password fig 6.3 forgot password cloudbucket pict-information 2016-17 32 6.2.4 drawer add file local device fig.6.4 drawer add file local device cloudbucket pict-information 2016-17 33 6.2.5 file sync fig 6.5 file sync cloudbucket pict-information 2016-17 34 6.2.6 authenticated fig.6.6 authenticated cloudbucket pict-information 2016-17 35 6.2.7 file uploaded amazon s3 fig 6.7 file uploaded amazon s3 cloudbucket pict-information 2016-17 36 6.2.8 pool authenticated fig 6.8 pool authenticated cloudbucket pict-information 2016-17 37 6.2.9 identity pool fig 6.9 identity pool cloudbucket pict-information 2016-17 38 6.2.10 navigation drawer fig 6.10 navigation drawer cloudbucket pict-information 2016-17 39 7 cloudbucket pict-information 2016-17 40 7 7.1 storage cloud service provide storing sharing syncing facilities.however lack efficient unified platform providing features.this projectaimed providing mobile app communicate cloud server file sync restore authentication developed platform facility backing automatically syncing registered device 7.2 development promote area investigation wide cover facility normal mobile sync 1 sync app bestowed multiple sharing access permission 2 managing redundant copy file deduplication introduced cloudbucket pict-information 2016-17 41 1. cui yong zeqi lai ningwei dai `` mobile storage cloud service experimentation challenge '' network 30 4 2016 16-21 2. yan zheng mingjun wang yuxiang li athanasios v. vasilakos `` encrypted deduplication cloud computing '' cloud computing 3 2 2016 28-35 3. zhu yan feng pu guohuagan ruiqiguo shuqing zhang `` traitor tracing revocation secure decoder file syncing-and-sharing service '' conference compsac 2015 39th annual 2 504-509. 2015 4. abhishek v. s. n. megha `` storage cloud retrieval-a perspective '' computing wccct 2014 congress 84-87. 2014 5. i. drago al inside dropbox understanding storage cloud service proc.acm imc 2012 48194 6. b. agarwal al endre end-system redundancy elimination service enterprise proc nsdi 2010 41932 7. z. li al efficient batched synchronization dropbox-like storage cloud service middleware 2013 springer 2013 30727. cloudbucket pict-information 2016-17 42 cloud storage retrieval perspective abhishek mca r.v college bangalore india e-mail abhikinni gmail.com megha mca r.r college bangalore india e-mail mailstomegha yahoo.com young upcoming industry cloud storage lot potential term growth storage capacity potential faster retrieval cloud designed offer unlimited storage capacity eliminate backup created constant replication paper key component storage- as-a-service solution cloud storage analyzed comprehended storage retrieval speed free cloud storage site experiment piloted file varying size time span time span deliberated based network traffic paper snapshot working free cloud identification free cloud storage capacity performance betterment evaluation keywords-cloud storage provider csp google drive box amazon cloud drive mimedia upload duration download duration free storage space upload download host-market i. potential springiness computing boundless storage service on-demand accessibility fewer investment deployment fascinated welfare cloud computing 1 cloud storage ideal storage solution networked warehoused centralized pool pool accommodated cloud storage provider csp csps generally termed host people call deposited cloud termed client client employ storage capacity host hand hosting company upholds vast midpoint tangibly extend manifold server location hosting syndicate control cloud practice security host arrange cloud storage space offer free storage capacity limited volume google drive google offer 5gb online storage space box box inc. offer 10gb free storage account dropbox functioned dropbox inc. sited san francisco 2gb free space skydrive microsoft ubuntu canonical amazon cloud drive mimedia amount free storage space cisco 5 closed suitable public cloud network called inter-cloud comprises long-term market changeover describe ubiquitous portable assignment rich cloud environment cloud stake eucalyptus csp infrastructure-as-a-service iaa source 6 7 8 virtual machine running informal well-matched provider amazon ec2 opennebula csp amalgamation numerous environment 7 8 operated command web service addition applies administration virtual machine host market modern time appreciated upcoming provider up-to-date functionality enhanced platform maturity amplified novelty substantial fall expense amazon s3 service spanned trillion milestone client clear sign platform maturity triggered major csps moderate service charge 4 call cloud storage handpick csp offer service best suit operation amount stored cloud generally storage retrieval speed deliberated gauge assortment procedure csp nasuni reported microsoft wa best option writing storage speed outcome directed 23 distinct combination csps optimal write file-based display durable updated expertise microsoft stated amazon hp sprint subsequent 4 amazon elastic compute cloud ec2 ubuntu enterprise cloud uec giant public cloud service ec2 uec allow build secluded fashion cloud jonathan ward equated ec2 uec memory bandwidth storage speed performance respect benchmark definition uec offer superior performance headed computational 2 amazon web service aws 16 paid service vast tradition elastic platform stress-free pay conferring nasuni 2013 typical writing speed respect 1mb file cloud server microsoft azure nirvanix amazon rackspace 2mb/ peer1 wa 1.49mb/sec term performance writing object microsoft azure stood writing proficiency 154 files/sec trailed 2014 congress computing technologies978-1-4799-2876-7/13 31.00 2013 ieeedoi 10.1109/wccct.2014.20842014 congress computing technologies978-1-4799-2876-7/14 31.00 2014 ieeedoi 10.1109/wccct.2014.20842014 congress computing technologies978-1-4799-2877-4/14 31.00 2014 ieeedoi 10.1109/wccct.2014.20842014 congress computing technologies978-1-4799-2877-4/14 31.00 2014 ieeedoi 10.1109/wccct.2014.2084 amazon s3 135 files/sec safeguarded third writing 98 files/sec 4 paper equates loading retrieval speed free storage space delivered google drive box amazon cloud drive mimedia file diverse amount time span day ii cloud storage provider paper cloud facility delivered host google drive box amazon cloud drive mimedia diverse amenity service provided csps consideration a. google drive google drive prominent csp arcade google drive file file storage facility delivered google google drive wa released 2012. google drive offer initial 15gb cloud storage space free cost 15gb space pooled google drive gmail google+ google drive provision preview file format comprise text file image video archive http //tools.google.com/dlpage/drive administrator console google drive finer point view access view access error log analyze traffic browse store manage view status scheduled 3 b. box box box.net cloud-based package empowers interchange comprehensively box wa propelled 2005. box headquarters california box 10gb cloud storage space free cost benefit free cloud space prerequisite uphold account box paid business account leverage 500gb cloud storage space box unlimited storage space intended enterprise people service offered box file outsized send email box ease file transfer protocol server box simply share file granting access file http //www.box.com/personal/ c. amazon cloud drive amazon cloud drive foremost csp today market amazon cloud drive hard drive cloud store photo video document form file amazon secure server amazon cloud drive accessed device amazon enables 5gb cloud storage space free cost web browser advanced internet explorer 8 support amazon cloud drive amazon cloud drive function ensure adobe flash player javascript installed configured support adobe flash javascript http //www.amazon.com/gp/feature.html amazon web service broadcast furthermost state-of-the-art statistic service readiness service health dashboard amazon web service keep consecutive log service interruption 3 d. mimedia mimedia cloud space provider delivers online backup service mimedia wa rampage 2010. mimedia wa developed mimedia llc wa startup company mimedia office port chester york functionality mimedia le analogous backup service mozy dropbox mimedia offer 7gb cloud storage space free cost mimedia component called shuttle drive form backup file physical medium mimedia allows share file mimedia http //www.mimedia.com/ iii method setting experiment asus k53sm notebook window 7 ultimate operating connected internet bandwidth 512kbps rail-wire wi-fi router tp-link wr740n upload download file cloud storage provider step determine upload download speed cloud server a. creating account created sign account cloud storage provider mentioned earlier common username mailstomegha yahoo.com b. collection file file size 1mb 5mb 10mb collected internet 1mb file text format 5mb 10mb archive zip format file collected http //www.thinkbroadband.com /download.html c. time span time span deliberated basis network traffic determine upload duration time span 10pm-12am 12am-2am 2am-4am 4am-6am 6am-8am 8am-10am time interval file collected uploaded cloud server time time interval chosen network traffic higher interval d. determine duration stopwatch provided samsung gt-c332 mobile phone wa establishment upload duration start control snapped rational conceivable timer wa stopped sensibly inspecting finishing point file upload e. download uploaded file downloaded time account download duration wa 85858585 uploads downloads web browser google chrome google iv experimental evaluation finding 1mb file wa uploaded cloud server 10pm time speed observed file wa uploaded 17.37 second google drive 19.44 second box 21.01 second amazon 44.37 second mimedia file wa uploaded server 12 00am duration observed 20.25 second file upload google drive wa 20.39 second box 20.70 second amazon wa improvement speed mimedia 42.57 second file wa uploaded 2am drastic improvement wa observed mimedia 26.45 second upload google drive box amazon achieved stable upload duration 17.28 second 20.61 second 21.06 second 4 00 wa observed google drive lowest upload duration amazon box possessed highest upload duration time upload wa 17.10 second 24.48 second 21.96 second mimedia achieved 41.40 second upload duration dawn 6am duration 17.95 second 20.83 second 23.04 second 42.43 second google drive box amazon mimedia 8 morning google drive possessed second highest upload duration i.e file wa uploaded 18.76 second upload duration box amazon mimedia 20.44 second 20.32 second 42.69 second file upload duration 1mb file time span google drive box amazon mimedia graph represented 1. i. upload duration 1mb file 1 time duration 1mb file upload 5mb file wa uploaded server 10 30pm upload duration observed 1 25.09 mm 00 minute 1 27.75 minute 1 33.20 minute 3 27.85 minute google drive box amazon mimedia upload duration google drive 12 45am 5mb file wa lowest i.e 1 23.25 minute hand wa 1 28.60 minute 1 30.20 minute 03 26.59 box amazon mimedia time duration represented ii 2 graph ii upload duration 5mb file 2 time duration 5mb file upload 10mb file wa uploaded cloud server starting 11 30pm 01 15pm 03am 5 30am 6 30am 9 45am duration upload iii plotting 3. iii upload duration 10mb file 86868686 3 time duration 10mb file upload performance cloud server respect retrieval speed single copy 1mb 5mb 10mb file downloaded server order starting 12pm downloaded duration iv 4 represents graph iv performance measure google drive box amazon mimedia term retrieval speed-one factor considered selection cloud service iv download duration 4 time duration file downloads v. experimental worked free cloud benchmark picturizes storage performance capacities+ aim evaluation service better storage outcome investigation performance capability read writes speed google drive stand box amazon closest competitor mimedia lowest write speed paralleled three csps volume stored cloud write speed critical aspect google drive performance better 1 bigdata cloud white paper aspera cloud.asperasoft.com 2 jonathan ward performance comparison cloud sicsa demofest 09 2009 3 torry harris cloud computing service comparison 2010 4 state cloud storage 2013 industry benchmark comparison performance availability scalability white paper nasuni corporation 313 speen street natick 01760-1538 1.508.433.6200 2013 5 virtualized multi-tenant http //www.cisco.com/en/us/solutions/ collateral/ns340/ns517/ns224/n836/white_paper_c11-604559.pdf 6 daniel nurmi rich wolski chris grzegorczyk graziano obertelli sunil soman lamia youseff dmitrii zagorodnov eucalyptus opensource cloud-computing international symposium cluster computing grid 2009 7 thiago cordeiro douglas damalio nadilma pereira patricia endo andre palhares glauco gonalves djamel sadok judith kelner bob melander victor souza jan-erik mangs source cloud computing platform 2010 ninth international conference grid cloud computing 2010 8 peter sempolinski douglas thain comparison critique eucalyptus opennebula nimbus 2nd international conference cloud computing science 2010 87878787 pict-information 2016-17 47 ii originality 18 7 14 similarity internet source publication paper primary source abhishek v. s. n. megha `` cloud storage 1 retrieval perspective '' 2014 congress computing 2014. publication 6 zheng yan mingjun wang yuxiang li 2 athanasios v. vasilakos `` encrypted deduplication cloud computing '' cloud computing 2016 publication 2 cui yong zeqi lai ningwei dai `` 3 mobile cloud storage service experimentation challenge '' network 2016. publication 2 www.webcourses.ir 4 internet source 1 zhu yan feng pu guohua gan ruiqi guo 5 1 shuqing zhang `` traitor tracing revocation secure decoder file syncing-and-sharing service '' 2015 39th annual conference 2015. publication dblp.dagstuhl.de 6 internet source 1 mydotnetcoolfaqs.blogspot.com 7 internet source 1 www.ijarcce.com 8 internet source 1 www.idrbt.ac.in 9 internet source 1 www.biancolo.com 10 internet source 1 aws.amazon.com 11 internet source 1 zhu yan guohua gan guo ruiqi dijiang 12 huang `` phe efficient traitor tracing revocation encrypted file syncing-and- sharing cloud '' transaction cloud computing 2016. publication 1 iit.qau.edu.pk 13 internet source 1 melissa e. rycroft `` 14 implementing desktop backup solution '' proceeding 34th annual acm 1 siguccs conference service siguccs '06 2006 publication eprints.whiterose.ac.uk 15 internet source 1 amit.myktm.com 16 internet source 1 ijstm.co.in 17 internet source 1 www.aero-scratch.net 18 internet source 1 www.beyondroads.com 19 internet source 1 conferences.sigcomm.org 20 internet source 1 exclude quote exclude match 1 word exclude bibliography pict-information 2016-17 53 iii scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner", "keywords": ["amazon cloud", "amazon cognito", "amazon web", "amazon web service", "android store", "android store cloud", "aws amazon", "aws amazon web", "backup created", "box amazon", "box box", "class cloud", "cloud computing", "cloud server", "cloud service", "cloud service provider", "cloud space", "cloud storage", "cloud storage provider", "cloud storage space", "cloudbased service", "cloudbased service provider", "cloudbucket pictinformation", "cui yong", "device file", "download duration", "drive box", "drive box amazon", "drive google", "dropbox android", "duration time", "experimentation challenge", "feng pu", "file cloud", "file file", "file folder", "file local", "file local device", "file upload", "file uploaded", "file uploaded amazon", "free cloud", "free cost", "free storage", "free storage space", "gb cloud", "gb cloud storage", "google drive", "google drive box", "ideal storage", "international conference", "internet source", "jonathan ward", "lai ningwei", "lai ningwei dai", "local device", "local file", "main aim", "manifold server", "mb file", "mb file upload", "mobile app", "mobile cloud", "mobile device", "mobile storage", "mobile storage cloud", "network traffic", "ningwei dai", "retrieval speed", "second file", "second second", "service experimentation", "service experimentation challenge", "service provider", "space box", "space free", "space free cost", "storage capacity", "storage cloud", "storage cloud service", "storage facility", "storage provider", "storage retrieval", "storage service", "storage space", "storage space free", "store cloud", "store cloud service", "time duration", "time span", "unified platform", "upload download", "upload duration", "uploaded amazon", "uploaded cloud", "wa uploaded", "web service", "zeqi lai", "zeqi lai ningwei"], "libraries": [], "languages": ["basic", "small", "io", "javascript"], "frameworks": [], "dbs": ["sqlite"]}, "./reports/04_final_report.pdf": {"title": "c library api\u2019s for amazon s3", "filename": "./reports/04_final_report.pdf", "data": "library apis amazon s3 aayushi herkar shivanee ravindra somwanshi shruti shashikant rashmi arun b120058502 b120058541 b120058636 b120058638 guidance prof. t.a.rane s. 27 satara road 411043 2016 2017 library apis amazon s3 aayushi examination seat b120058502 herkar shivanee examination seat b120058541 somwanshi shruti shashikant examination seat b120058636 rashmi arun examination seat b120058638 bonafide prof. t. a. rane fulfilment earlier diploma prof. t. a. rane prof. s. b. deshmukh coordinator dr. p. t. examiner sponsorship letter completion letter ackowledgment express profound prof. t. a. rane cheerful encouragement valuable suggestion support vital helped complete acknowledge appreciation co-ordinator prof. s. b. deshmukh acknowledgeable guidance key completion express sincere regard dr. a. bagade incharge h.o.d valuable suggestion help undertaken complete kind assistance encouragement forget express immense sense thankfulness dr. p. t. college extended co-operation needed express gratitude apurwa jadhav ujjawal company offered sponsorship ryussi monetarily helping difficulty providing support needed timely betterment aayushi seat b120058502 herkar shivanee ravindra seat b120058541 somwanshi shruti shashikant seat b120058636 rashmi arun seat b120058638 title 1 2 1.1 1.2 1.3 1.4 2.1 2.2 2.3 3 3.1 3.2 3.3 4 4.1 4.2 4.3 4.4 4.5 nomenclature cloud storage amazon s3 aim background advantage amazon s3 specification specification definition purpose usage scenario class description 4.5.1 4.5.2 dictionary iii iv 1 2 3 3 3 4 6 7 8 10 12 13 13 14 15 16 18 19 20 21 21 21 4.5.3 bucket dictionary 4.5.4 file dictionary 4.6 proposed architechture restriction constraint evaluation item procedure 4.7 5 5.1 5.2 6 6.1 6.2 6.3 6.3.1 unit 6.3.2 black box 6.3.3 white box 7 1. base paper 2. plagiarism 3. review sheet 22 22 23 24 26 30 31 32 32 33 33 34 34 45 47 49 1.1 2.1 2.2 4.1 4.2 request response handler callback invocation class 4.3 4.4 4.5 4.6 5.1 5.2 entity-relation level architectural snapshot create bucket snapshot delete bucket 5.3 snapshot object 5.4 snapshot object 5.5 6.1 6.2 6.3 6.4 6.5 snapshot delete object snapshot bucket snapshot create bucket snapshot object snapshot copy object snapshot object 5 9 10 16 18 19 20 21 23 26 28 29 29 30 35 36 37 38 39 6.6 6.7 snapshot object snapshot delete object 6.8 snapshot delete bucket 6.9 6.10 snapshot bucket gantt 40 41 42 43 44 ii 2.1 3.1 4.1 4.2 4.3 4.4 http method description dictionary bucket dictionary file dictionary 9 14 17 21 22 22 iii 1 2 api sax nomenclature programming simple api xml iv library apis amazon s3 cloud computing internet general term delivery hosted service .amazon web service offer suite cloud computing service demand computing platform amazon s3 amazon web service store retrieve amount amazon simple storage service s3 object store store scalable cost effective purpose amazon s3 meant achieved graphical amazon s3 account implement library apis amazon s3 directly access s3 storage account developer rest apis achieve point view api meant stand requiring implicit knowledge s3 service accessed http protocol intended easy comprehensive suitable cpp program help apis amazon s3 create bucket store create bucket object bucket object object bucket object object bucket object bucket bucket delete unwanted/empty bucket delete bucket keywords cloud api amazon s3 storage library http protocol 2016-17 1 library apis amazon s3 1 2016-17 2 library apis amazon s3 1.1 cloud storage definition cloud storage stored administered cloud storage service provider storage server amazon s3 object storage cloud object- based storage defined term describes address manipulate discrete unit storage called object 1 1.2 amazon s3 amazon s3 simple storage service amazon s3 store retrieve desired amount web file stored flat container called bucket object stored s3 bucket object 5 tb accessed unique developer-assigned key amazon s3 generates unique version assigns object configure bucket time object addition 2 amazon s3 support rest apis rest apis api operation performed request response error code api specifies component interact described program api http request post delete rest api going develop library apis amazon s3 library easily access object store s3 library api designed simple straight forward apis order access s3 functionality 1.3 aim 1. aim learn programming 2. aim gain deep knowledge domain 2016-17 3 library apis amazon s3 3. implement library apis amazon s3.with library easily implement cpp program access object store s3 4. library designed simple straight forward apis accessing s3 functionality call post 5. point view api meant stand requiring implicit knowledge s3 service accessed http protocol intended easy comprehensive suitable cpp program 1.4 specific stage explained gathering gathered completely documented specification doc specification phase studied phase wa prepared help help defining input wa developed small program called integrated phase unit wa developed tested functionality referred unit integration unit developed phase integrated unit post integration entire tested fault failure deployment wa product wa company maintenance issue client environment issue patch released enhance product better version released maintenance deliver change customer environment 2016-17 4 library apis amazon s3 1.1 rest provide framework background explained included necessity dfds described development evaluation described description experimental setup described success achieved till 2016-17 5 library apis amazon s3 2 2016-17 6 library apis amazon s3 background cloud computing 1 process network remote server store process manage amazon s3 object storage cloud object-based storage defined term describes address manipulate discrete unit storage called object amazon s3 2 simple storage service amazon s3 store retrieve desired amount web file stored flat container called bucket object stored s3 bucket object 5 tb accessed unique developer-assigned key amazon s3 generates unique version assigns object configure bucket time object addition amazon 9 largest object storage object store object logical collection byte compared block storage object size stored container object 8 store entire metadata associated object well file extended metadata categorize object object store retrieved object knowing physical location achieved unique identifier assigned object allows server retrieve object approach automating streamlining storage cloud computing environment object 3 regarded convergence file block 2.1 advantage amazon s3 1 create bucket earlier object stored container container amazon s3 called bucket fundamental container storage 2016-17 7 library apis amazon s3 2 store bucket bucket object bucket number object object assigned unique retrieve object store 5tb.objects variable size 3 download download publically time server 4 permission grant deny access authentication mechanism play role keep secure unauthorized access 5 standard rest apis 10 soap apis designed internet development toolkit 2.2 specification curl curl 4 produce thing curl libcurl library source curl command 1. shell command shell script batch file 2. transfer file server `` internet '' 3. support amount protocol 4. provided operating libcurl library 1. development library program 2. compiles operating 3. offer apis http 1. hypertext transfer protocol http designed enable client server 2. http request-response protocol client server 2016-17 8 library apis amazon s3 2.1 http method method description post request submits processed return http document body uploads representation uri delete deletes option return http method server support connect convert request connection transparent tcp/ip tunnel 2.1 request response handler callback 1. programming callback executable code piece executable code passed argument code allows lower- level layer call subroutine function defined higher-level layer 2016-17 9 library apis amazon s3 2. call callback function doe event occurs program step callback function passing function pointer argument function callback function called 3. callback passing function pointer code handler/callback function invoked 2.2 callback invocation xml 1. xml 5 wa designed store transport 2. xml wa designed human- machine-readable 3. xml separate presentation 2.3 sender receiver heading 2016-17 10 library apis amazon s3 message body sax simple api xml 6 event-based parser xml document read xml 5 document top bottom recognizing token well-formed xml document token processed order appear document program nature token parser encountered occur program `` event '' handler registered parser token identified callback method handler invoked relevant 2016-17 11 library apis amazon s3 3 2016-17 12 library apis amazon s3 3.1 library apis amazon s3.with library easily implement cpp program access object store s3 library designed simple straight forward apis accessing s3 functionality call post implement library apis amazon s3 directly access s3 storage account developer rest apis achieve library easily implement cpp program access object store s3 point view api meant stand requiring implicit knowledge s3 service accessed http protocol intended easy comprehensive suitable cpp program help apis amazon s3 create bucket store create bucket object bucket object object bucket object object bucket object bucket bucket delete unwanted/empty bucket delete bucket 3.2 purpose main purpose create provide feasible access object store command terminal web .now operation apis web http protocol help automatically upload retrieve view remove object command 2016-17 13 library apis amazon s3 3.3 3.1 libcurl linux operating ubuntu 14.04 64 bit 500 gb hard-disk 4 gb ram core i3 processor language language 2016-17 14 library apis amazon s3 4 2016-17 15 library apis amazon s3 4.1 usage scenario profile 1. perform operation creation bucket object deletion object change permission 2. developer developer create apis library object store develop functionality 4.1 2016-17 16 library apis amazon s3 4.1 description use-cases description authenticated credential create bucket create bucket limited 100 create object uploading file create object upload file developer write code remove delete file viewing delete developer write code change change permission bucket object permission code written developer 2016-17 17 library apis amazon s3 4.2 class 4.2 class 2016-17 18 library apis amazon s3 4.3 4.3 2016-17 19 library apis amazon s3 4.4 4.4 2016-17 20 library apis amazon s3 4.5 description 4.5.1 4.5 entity-relation 4.5.2 dictionary 4.2 dictionary p/f field field size 10 30 15 30 user_id varchar password varchar varchar varchar f_id b_id 2016-17 21 library apis amazon s3 4.5.3 bucket dictionary 4.3 bucket dictionary p/f field field size region varchar f_ varchar varchar varchar user_id varchar 10 10 20 15 30 4.5.4 file dictionary 4.4 file dictionary p/f field field size size varchar varchar f_name varchar b_id varchar user_id varchar 10 10 20 15 30 2016-17 22 library apis amazon s3 4.6 proposed architechture 4.6 level architectural proposed consists command interpreter collection apis object store 2016-17 23 library apis amazon s3 command interpreter time access account command manual authenticated data-collection operate file collect file permission size file order upload perform function file e.g simply add file order upload object store apis functionality call include uploading retrieval remove delete access change permission easily access apis terminal object store object 3 stored amazon s3 storage simply object storage 7 service file access perform operation stored existing comprises web .the log subscription involves creation bucket web involves providing direct access command multithreading 4.7 restriction require high-speed internet connection operate file ubuntu installed 2016-17 24 library apis amazon s3 5 2016-17 25 library apis amazon s3 5.1 initialize library program calling s3_initialize program start time shut program exit time calling s3_deinitialize function send request s3 return callback function operation performed firstly parameter http request parameter order perform request initially request depending operation performed status returned request curl curl handler initialized performs entire request w.r.to behavior assigned curl_easy_setopt multiple request current request deinitialized request stack process continues till stack empty finally request released curl_easy_performs called response curl request performed create bucket 5.1.a snapshot create bucket 2016-17 26 library apis amazon s3 5.1.b snapshot create bucket 5.1.c snapshot create bucket 2016-17 27 library apis amazon s3 delete bucket 5.2.a snapshot delete bucket 5.2.b snapshot delete bucket 2016-17 28 library apis amazon s3 object 5.3 snapshot object object 5.4 snapshot object 2016-17 29 library apis amazon s3 delete object 5.5 snapshot delete object 5.2 constraint bucket creation bucket unique bucket length minimum three alphabet bucket underscore _and space bucket dot bucket deletion empty bucket deletion requires deletion object bucket 2016-17 30 library apis amazon s3 6 2016-17 31 library apis amazon s3 evaluation 6.1 item applies well integration input output tested validity tested final tested 6.2 unit function executed integration unit unit focus verification effort smallest unit component occur running selected unit ensure detailed unit correctly implemented integration integration systematic technique constructing time conducting uncover error associated combine major main tested involves basic procedure invocation execution item pas /fail criterion unit level unit level satisfies condition completed function return expected output input integration level unit level completed including boundary condition gesture implemented valid performance display acceptable limit 2016-17 32 library apis amazon s3 suspension criterion failure occur outlier normal runtime condition halted development occur 6.3 procedure apart function major tested described unit applied integrated 6.3.1 unit 1 aim create bucket bucket expected bucket created amazon s3 valid bucket error invalid bucket actual bucket wa created amazon s3 valid bucket error invalid bucket 2 aim object bucket object file expected file object created bucket actual file object created bucket 3 aim object bucket bucket expected object bucket listed actual object bucket listed 4 aim object bucket object file 2016-17 33 library apis amazon s3 expected object file created actual object file created 5 aim delete bucket bucket expected bucket deleted amazon s3 bucket exists error non- existing bucket actual bucket wa deleted amazon s3 bucket existed error wa non-existing bucket 6.3.2 black box black-box method examines functionality peering working typical black-box technique include decision all-pairs equivalence partitioning boundary causeeffect graph error guessing 6.3.3 white box white-box clear box glass box transparent box structural method working opposed functionality i.e black-box white- box perspective well programming skill white-box method level source code 2016-17 34 library apis amazon s3 derived technique mentioned control branch modified condition/decision coverage prime path path bucket 6.1.a snapshot bucket 2016-17 35 library apis amazon s3 6.1.b snapshot bucket create bucket 6.2.a snapshot create bucket 2016-17 36 library apis amazon s3 6.2.b snapshot create bucket object 6.3.a snapshot object 2016-17 37 library apis amazon s3 6.3.b snapshot object copy object 6.4.a snapshot copy object 2016-17 38 library apis amazon s3 6.4.b snapshot copy object object 6.5.a snapshot object 2016-17 39 library apis amazon s3 6.5.b snapshot object object 6.6.a snapshot object 2016-17 40 library apis amazon s3 6.6.b snapshot object delete object 6.7.a snapshot delete object 2016-17 41 library apis amazon s3 6.7.b snapshot delete object delete bucket 6.8.a snapshot delete bucket 2016-17 42 library apis amazon s3 6.8.b snapshot delete bucket bucket 6.9.a snapshot bucket 2016-17 43 library apis amazon s3 6.9.b snapshot bucket 6.10 gantt 2016-17 44 library apis amazon s3 7 2016-17 45 library apis amazon s3 achieved described statement- implemented creation bucket searching bucket deleting bucket listing operation context bucket implemented object object listing object deleting object copying object aim increase simplicity easiness s3 object store implementing apis s3 object store doesnt knowledge amazon web service simply command overhead continuously logging amazon web service reduced simply command 2016-17 46 library apis amazon s3 1. cloud storage cloud storage online http //en.wikipedia.org/wiki/cloud_storage accessed 03-july-2016 2. amazon s3 documentation aws online http //docs.aws.amazon.com/amazons3/latest/dev/introduction.html accessed 10-july-2016 3. object storage online http //searchstorage.techtarget.com/definition/object-storage accessed 04-august-2016 4. curl online http //en.m.wikipedia.org/wiki/curl accessed 09-august-2016 5. xml xml parsing online http //www.w3schools.com/xml/xml_whatis.asp accessed 10-september-2016 6. xml parsing online http //www.w3schools.com/xml/dom_intro.asp accessed 15-september-2016 7. evaluating storage scientic cloud ketan maheshwari justin m. wozniak hao yang daniel s. katz mateiripeanu victor zavala michael wilde 8. object-based storage online http //www.cse.psu.edu accessed 11-july-2016 2016-17 47 library apis amazon s3 9. amazon s3 online http //en.wikipedia.org/wiki/amazon_s3 notable_users accessed 12-august-2016 10. programming study online http //en.wikipedia.org/wiki/application_programming_interface accessed 15-july-2016 2016-17 48 library apis amazon s3 2016-17 49 evaluating storage scientic cloud ketan maheshwari justin m. wozniak hao yang daniel s. katz matei ripeanu victor zavala michael wilde mathematics science division computation electrical eng argonne national laboratory argonne il usa ketan wozniak zavala wilde mcs.anl.gov chicago chicago il usa dsk ci.uchicago.edu british columbia vancouver yanghao0614 matei ece.ubc.ca infrastructure-as-a-service iaa cloud appealing scientic computing bare-bones presentation raw linux virtual machine leaf developer cloud ef- fective handling critical ecient exe- cution paper investigates capability variety posix-accessible distributed storage manage access pattern workow ex- ecutions cloud leverage expressivity swift parallel scripting framework benchmark perfor- mance number storage synthetic work- load three real-world characterize representative commercial storage amazon s3 hdfs emerging research-based stor- age chirp/parrot mosastore aggregated node-local eective economical compared remotely located s3 storage experi- ments scale mosastore 30 improvement makespan time compared s3 storage-system driven deployment cloud better runtime performance compared on-demand data- staging driven approach keywords hpc parallel computing cloud global le 1. cloud poised key platform data-intensive distributed computing 19 virtualization cloud oer full ownership exible customizable infras- tructure magellan initiative cloud usability 18 examined cloud scien- tic challenge identied nal permission digital hard copy classroom granted fee provided copy distributed prot commercial advantage copy bear notice full citation rst copy republish post server redistribute requires prior specic permission and/or fee copyright 20xx acm x-xxxxx-xx-x/xx/xx ... 15.00 25 wa developing appropriate program- ming enhance capability existing mapreduce simplify cloud environment ... enhancement mapreduce bet- ter scientic workows needed scientic current of- ten require signicant porting eort pro- vide binding popular scientic programming language optimized struc- tured format large-scale sim- ulations experiment conducted xsede 12 indicated increasing cloud adoption scientic community challenge reported majority interviewed wa diculty cost associated man- aging indicated 27 costly object store service s3 hand ex- perience comparing cloud traditional high- performance computing hpc environment 15 26 light advantage cloud virtualized environment cloud eliminates queue waiting time dominating turnaround time shared cluster queue wait time replaced time virtual machine vms exper- iments generally minute popular cloud ec2 constant requested number vms 13 administrator-level access instance cloud control aiding range installation upgrade customization network poli- cies rewalls jeopardizing security cloud oer economically aordable solution cost despite advantage lack suitable technique manage eectively economically distributed cloud paper explores coupling programming suitable popular class many-task computing storage suitable cloud specically swift parallel scripting frame- virtual storage le col- lectively storage cloud computing environment ass performance over- usability better understand practicality benchmark performance cou- pled synthetic workload real-world paper contribution multiple ax 1. platform characterization light net- characteristic amazon ec2 cloud pro- visioning region generally account building computational 2. storage performance characterization bench- mark performance storage respect core access pattern 3. porting cloud demonstrates ex- ecution real-world cloud parallel scripting programming approach distinct help understanding tradeos choice storage support workow 4. guideline toolkit evolution cloud improved usability cloud computing well adapted traditional tightly coupled hpc cluster touch subject cost consider paper analyze rest paper structured network characteristic global ec2 cloud analyzed 2. virtual storage solution current study described 3. swift parallel scripting framework briey discussed 4. experiment setup cloud experiment described 5. 6 evaluates performance storage solution common workow access pattern discus three use-case 7 evaluation 8. discussed 9. concluding remark 10 2. nature cloud cloud vendor reveal nature underlying fabric virtualized cloud amazon ec2 global span limited topology network hard- ware capability consequently explore clue gauge nature cloud environment best solution eciently 1 2 bandwidth latency respec- tively instance region amazon ec2 cloud depending platform appli- cation question answered in- clude network capacity latency cloud instance zone region global level expected time completion xed number region tradeos storage network performance inform advanced solution additional region best draw allocation limit reached re- gion gures 1 2 signicant consumer cloud infrastructure deployed global network infrastructure presented single virtual platform expected performance vary wildly dependent factor control performance increase cost infrastructure performance distributed signicantly rely bandwidth latency underlying infrastruc- ture 17 storage discussed paper circumvent issue extent implement- ing ecient caching replication prediction mechanism 1 heatmap network bandwidth instance global amazon ec2 cloud environment 3. storage computing workows assemble complex processing stage existing component building block established method science domain popular approach support workows many-task ap- proach workow process communicate intermediary le stored shared le-system cloud backend storage bottleneck supporting i/o-intensive work- ows 27 increasingly popular support workow harness allocated cloud node-local storage assemble scratch storage space store intermediary communicate workow scenario workow scheduler charge staging intermediate space staging needed workow enactment de- pends precise access semantics api oered 3.2 hadoop distributed file hadoop distributed file hdfs high- throughput le designed store process amount stored cheap shared-nothing cluster commodity machine hdfs aggregate disk space distributed node installed unied storage view aggregated space block 64 mb unit load bal- ancing physical movement replication fault tol- erance movement governed streaming access mode implying suitability record-level manipulation datasets metadata le namespace hdfs clus- ter managed namenode process actual block managed datanode process running compute node cluster 3.3 mosastore mosastore low-overhead user-level distributed storage based fuse 6 mosastore deployed aggregate storage space compute node appli- cation oered shared posix-compatible storage mosastore workowa atoptimized sup- port placement optimization designed specif- ically workow key 1 posix api integration triv- ial 2 file striped multiple node node disk ram disk inherently limited space aggregated 3 support provided cross-layer optimization enable storage expose stored e.g location replication level workow 3.4 chirp/parrot chirp 20 user-level storage vir- tualized unied view multiple real le e.g le deployed independent cluster deploying chirp doe require kernel change special access privilege admittedly key issue deploy- ing cloud major adoption barrier shared cluster chirp server consist directory server directory hierarchy chirp namespace server actual le le striped multiple node parrot interceptor layer trap posix le call redirects chirp combination parrot chirp provide posix-accessible stor- age environment le distributed multiple native le 3.5 summary storage summarize operation stor- age showing common abstraction working mechanism storage three component component minimal 1. client side client component enables access complex fuse-based imple- mentation mosastore s3 access s3fs java apis hdfs ability deal le transfer e.g parrot chirp 2 heatmap network latency in- stance global amazon ec2 cloud environment intermediate space spectrum intermediate storage oer shared le-system complete posix api support e.g mosastore 1 21 chirp/parrot 20 spectrum overlapping solution 1 solution oer custom api specialized class ap- plication e.g hadoop file hdfs 2 solution oer shared storage space leave explicit movement independent stor- age node space handled work- ow scheduler apart performance additional ben- storage lower cost cloud billing invoice separately instance-local storage space/trac deploying interme- diate storage space cost opposed backend storage space trac gener- ally billed 3.1 amazon s3 amazon s3 2 storage service provided amazon full pub- lic building block dynamo 5 key-value store s3 wa designed le posix-compatible large-scale datastore backup service cloud-based s3 pre- congured albeit cost charged amazon simple two-level namespace bucket unique global namespace object stored bucket durability availability rel- atively fast access characteristic s3 ideal service requiring backup archiving e.g smart grid state estimation 14 third- party s3fs 7 provide access s3 service mountable le subset common le op- erations s3fs implement simple local node caching mechanism improve performance raw s3 ac- ce 2. storage side basic native storage block chunk level component expose rest signal component active enable discovering failure decision replication liveliness e.g mosastores benefactor component 3. component keep track func- tionalities involving striping space garbage collection placement e.g chirp leave manage functionality 4. swift swift parallel scripting framework express ow orchestrate cloud swift 22 implicitly concurrent programming language originally designed express workows consisting number scientic invocation multiple di- verse swift separate workow logic runtime conguration allowing highly exible development swift invoke binary distributed ordinary command-line invocation rendering better binding exe- cution environment extra coding swift/k parallel scripting framework dis- tributed programming support explicit movement protocol ftp scp tcp pilot- job abstraction supported coaster implementa- tion 8 swift/t engine stand turbine dis- tributed engine 23 distributes load processing swift workow logic multiple site enables extremely scalable workow logic processing 5. experiment setup prepared linux image in- stallation security tuning fuse wa installed enabled kernel chirp server wa installed cloud instance eb device read/write operation performed ran- domly chosen chirp server explicit call parrot hdfs default setup mimicking hadoop applica- tions wa instance wa chosen namenode rest instance designated datan- ode storage space formatted eb device datanodes served secondary namenode mosastore instance wa designated manager node rest instance benefactor node binary library installed image input wa loaded storage local eb storage re- quired experiment instance drawn prepared image size m1.large consisting core 8 gb memory 6. raw performance evaluation fundamental i/o pattern workows involve succes- sive read writes occurring concurrently le interdependent independent explore common i/o pattern workow applica- tions performance underlying storage order ensure uniformity movement 2 instance drawn single region experiment described performance benchmark parallel read vary- ing size underlying storage gure 3. read respective storage local le eb device amazon cloud 3 performance benchmark storage sys- tems amazon cloud concurrent read 40 le varying size 40 amazon node performance benchmark parallel writes vary- ing size underlying storage gure 4. written storage local le 4 performance benchmark virtual storage amazon cloud concurrent writes 40 le varying size 40 amazon node read-after-write raw pattern gure 5 read storage written gure 6 performance measurement plot raw pattern varying size perfor- 5 read-after-write access pattern read written global storage mount point attached geographical coordinate typical appli- cation consists running 8 760 independent execution hour year 7.2 parallel blast blast prevalent cloud protein alignment search blast performs search protein database parallel blast workow add additional step basic blast split- ter split protein database multiple fragment traditional blast second result- ing search blast merged blastmerge step ow interaction underlying storage gure 7. study reduced nr nucleotide database 1.5 entry splitter split database 300 fragment total 602 call 7 blast interaction storage 8 blast cumulative execu- tion plot swift/k staging total 602 40 cloud instance 6 performance benchmark 40 concur- rent read-after-writes 40 ec2 node mance benchmarking plot trend variability remotely located s3 consistent be- havior storage installed local space consistently better bandwidth hdfs mosa- store 1000 mb datasizes common access pattern many-task work- ow concurrent read writes mosastore better read-after-write performance 500mb 6 consequently chose mosastore node-local aggregated storage measure- ments 7. describe three real-world virtual storage cou- pled swift 7.1 power locational marginal price simula- tion lmps optimal power ow study crucial understanding ow price pattern electricity dierent demand network condition computational challenge aris- ing power grid simulation time resolution order capture eects occurring multiple time scale power ow simulation appli- cation study analyzes historical condition illi- nois grid simulate instant power price hourly basis linear programming solver invoked ampl programming language representation collect ow generation price 9 blast execution trace swift/t mosastore staging total 602 40 cloud instance light blue bar indicate worker-coordination wait green bar indi- cate execution 7.3 energyplus energyplus suite energy thermal load simulation program 4 account local historical climate material prop- erties calculate estimated energy consumption building ensemble param- eters orientation height compute distinct energy study vary ori- entation building located chicago 10 100 step size 10 combined building height 9 30 meter 210 permutation postprocessing step energyplus call convert summarized json format total number 420 gure 10 10 energyplus interac- tion storage 8. evaluation discus evaluation study 13 power grid end- to-end makespan time increasing number instance global location ec2 instance starting 20 120 dierent virtual storage local disk writes baseline exper- iments raw local writes faster local le node computation wa order gather computation additional expensive stage 11 energyplus cumulative execution plot swift/k staging total 420 40 cloud instance operation eliminated virtue storage general trend plot gure 13 sharp improvement execution performance initial incre- ments node 20 60. notice knee per- formance curve node count 60 allocation united state region point steady improvement observed point sig- nicant improvement despite adding node indicated near-plateau 80 120 node amazon s3 behavior expected number node increase amount communica- tion remote instance centrally located s3 server top general trend steady performance curve 60 node expected storage remote location region 60 node drawn eu asian center 8 11 cumulative completion plot blast energyplus gener- ated swift/k execution log execution swift/k coaster setup explicit staging mechanism 9 12 ap- plication completion swift/t mosastore storage solution alternative trace representation mpe 24 dierence swift/t swift/k execution staging swift/k performs explicit on-demand movement swift/t assumes shared access execution distributed cloud environment virtue storage clearly swift/t storage driven fig 9 12 perform better swift/k explicit staging fig 8 11 9. discus storage com- putation execution cloud environ- ments 12 energy execution trace swift/t mosastore staging platform total 420 40 cloud instance light blue bar indicate worker- coordination wait green bar indicate execu- tions cloud computing distinct technique described 11 address oriented service specic cloud environ- ments specic access security described 9 augment load balancing le block distributed storage hdfs cloud extend high-end comput- ing example federated computing cometcloud 3 cometcloud oers layered suite service managing multiple workow master/- worker mapreduce service aggregated computa- tional platform accessibility overlay communica- tion service benchmark doc- umented cloud evaluation 10 computational context study author current raised doubt s3s appropriateness live storage dis- tributed 16 citing lack support exi- ble access control concern high-performance access study cite durability high-availability ease access posix achievable top fuse apis e.g rest api s3 appealing storage solution scientic ndings performance evidence lay usage aggegated node-local storage sys- tems cloud 10. evaluate representative storage scientic commercial domain cloud availability local ephemeral storage remote object storage form s3 handling cloud pose in- triguing challenge attempt address challenge understanding network characteristic commer- cial cloud setting cloud swift orchestrated computation storage benchmark approach basic read write pattern commonly observed scientic cur- 13 makespan time written local disk virtual storage increasing number cloud instance rent state art draw main globally implemented cloud rely heavily internet backbone non-uniform variable net- characteristic deployment account storage solution mitigate re- sulting variability extent technique caching replication prediction small medium storage eectively aggregating cloud node-local space help storage solu- tions solution perform better compared dedicated object store provided cloud s3 amazon storage solution s3 large-scale handling archival purpose depending swift handle implicit explicit motion cloud motion execution study approach explicit workow engine staged move- ment implicit movement coupling virtual storage workow chose hdfs popularity mosastore ability oer shared posix-compatible time support optimiza- tions workow chirp/parrot ease deployment benchmark- ing actual study dierent cloud con- gurations local single zone global understand eectiveness storage real-world handled cloud storage experiment light utility performance storage alternative de facto s3 storage oered amazon acknowledgment wa partially supported u.s. energy contract de-ac02-06ch11357 gail pieper proofreading help ama- zon aws amazon grant dsk wa supported national science foundation working foundation opinion nding recommendation expressed material author reect view national science foundation 11. 1 s. al-kiswany a. gharaibeh m. ripeanu versatile storage sigops oper syst rev 44 1 1014 mar 2010 2 amazon simple storage service aws.amazon.com/s3 3 cometcloud autonomic framework enabling real-world nsfcac.rutgers.edu/cometcloud 4 d. b. crawley al energyplus creating new-generation building energy simulation program energy building 33 4 319 331 2001 5 g. decandia al dynamo amazon highly key-value store proceeding twenty-rst acm sigops symposium operating principle sosp 07 205220 york ny usa 2007. acm 6 filesystem userspace fuse.sourceforge.net 7 fuse-based le backed amazon s3 code.google.com/p/s3fs 8 m. hategan j. wozniak k. maheshwari coaster uniform provisioning access scientic computing cloud grid proceeding utility cloud computing 2011 9 h.-c. hsiao h.-y chung h. shen y.-c. chao load rebalancing distributed le cloud parallel distributed transaction 24 5 951962 2013 10 d. knight k. sham g. chang t. soderstrom evaluating ecacy cloud cluster computation aerospace conference 2012 110 2012 11 e. kolodner al cloud environment data-intensive storage service cloud computing science cloudcom 2011 357366 2011 12 d. lifka i. foster s. mehringer m. parashar p. redfern c. stewart s. tuecke xsede cloud nsf sept. 2013 13 k. maheshwari k. birman j. wozniak d. v. zandt evaluating cloud computing technique smart power grid parallel scripting cluster cloud grid computing ccgrid 2013 13th ieee/acm international symposium 2013 14 k. maheshwari m. lim l. wang k. birman r. van renesse reliable secure fault tolerant smart grid state estimation cloud innovative smart grid washington dc usa feb. 2013. ieee-pes 15 a. marathe al comparative study high-performance computing cloud proceeding 22nd international symposium high-performance parallel distributed computing hpdc 13 239250 york ny usa 2013. acm 16 m. r. palankar a. iamnitchi m. ripeanu s. garnkel amazon s3 science grid viable solution proceeding 2008 international workshop data-aware distributed computing dadc 08 5564 york ny usa 2008. acm 17 d. a. patterson latency lag bandwith commun acm 47 10 7175 oct. 2004 18 l. ramakrishnan al magellan experience science cloud proceeding 2nd international workshop scientic cloud computing sciencecloud 11 4958 york ny usa 2011. acm 19 j. shamsi m. khojaye m. qasmi data-intensive cloud computing expectation challenge solution journal grid computing 11 2 281310 2013 20 d. thain c. moretti j. hemmes chirp practical global lesystem cluster grid computing journal grid computing 7 1 5172 2009 21 e. vairavanathan s. al-kiswany l. costa m. ripeanu z. zhang d. katz m. wilde workow-aware storage opportunity study proc ccgrid 2012 22 m. wilde m. hategan j. m. wozniak b. cliord d. s. katz i. foster swift language distributed parallel scripting par comp 37 633652 2011 23 j. m. wozniak t. g. armstrong k. maheshwari e. l. lusk d. s. katz m. wilde i. t. foster turbine distributed-memory dataow engine performance many-task fundamenta informaticae 128 3 337366 2013 24 c. e. wu al trace generation visualization performance framework distributed parallel proc sc2000 performance networking computing 2000 25 k. yelick al magellan cloud computing science energy washington dc usa dec. 2011 26 y. zhai m. liu j. zhai x. w. chen cloud versus in-house cluster evaluating amazon cluster compute instance running mpi state practice 11 111 10 york ny usa 2011. acm 27 z. zhang d. s. katz m. ripeanu m. wilde i. foster ame anyscale many-task computing engine proceeding 6th workshop workows support large-scale science 11 137146 york ny usa 2011. acm 04.docx originality 24 similarity 24 6 internet source publication paper primary source 1 2 3 4 5 6 7 8 9 thenuzan.blogspot.com internet source awsdocs.s3.amazonaws.com internet source www.opensourceforu.com internet source developer.amazonwebservices.com internet source www.tutorialspoint.com internet source www.w3schools.com internet source www.woodsmall.com internet source geeksquiz.com internet source info.nexenta.com internet source 10 en.wikipedia.org internet source 3 3 3 2 2 2 1 1 1 1 www.lytetechnologies.com internet source academic.odysci.com internet source www.ukessays.com internet source itprojectsforyou.com internet source www.minterest.org internet source searchcloudstorage.techtarget.com internet source is.stuba.sk internet source eprints.fri.uni-lj.si internet source dennis matotek james turnbull peter lieverdink `` pro linux administration '' springer nature 2017 publication ckw.phys.ncku.edu.tw internet source d0.awsstatic.com internet source www.collegenoticeboardonline.com 11 12 13 14 15 16 17 18 19 20 21 22 1 1 1 1 1 1 1 1 1 1 1 internet source 23 24 25 n2ntechnologies.com internet source www.absoluteastronomy.com internet source www.bcs.org internet source 1 1 1 1 exclude quote exclude bibliography exclude match 1 word", "keywords": ["access object", "access object store", "access pattern", "aim object", "aim object bucket", "al magellan", "amazon amazon", "amazon cloud", "amazon simple", "amazon simple storage", "amazon storage", "amazon web", "amazon web service", "apis amazon", "appli cation", "bucket actual", "bucket bucket", "bucket dictionary", "bucket object", "bucket snapshot", "callback function", "change permission", "chirp server", "cloud computing", "cloud environment", "cloud instance", "cloud storage", "computing cloud", "cpp program", "cpp program access", "creation bucket", "daniel katz", "delete bucket", "delete object", "dictionary pf", "dictionary pf field", "distributed storage", "eb device", "ec cloud", "field field", "field field size", "field size", "grid state", "hao yang", "hategan wozniak", "herkar shivanee", "international workshop", "internet source", "justin wozniak", "justin wozniak hao", "katz wilde", "library apis", "library apis amazon", "local le", "maheshwari justin", "maheshwari justin wozniak", "national science", "national science foundation", "object bucket", "object bucket object", "object file", "object object", "object storage", "object store", "parallel scripting", "parallel scripting framework", "pf field", "pf field field", "power grid", "program access", "program access object", "rashmi arun", "rest apis", "science foundation", "scientic cloud", "scripting framework", "shivanee ravindra", "simple storage", "simple storage service", "smart grid", "smart grid state", "snapshot bucket", "snapshot copy", "snapshot delete", "stor age", "storage amazon", "storage cloud", "storage gure", "storage scientic", "storage service", "storage solution", "storage space", "swift parallel", "swift parallel scripting", "swiftt mosastore", "underlying storage", "underlying storage gure", "varchar varchar", "victor zavala", "virtual storage", "web service", "white box", "wilde foster", "workow logic", "wozniak hao", "wozniak hao yang", "xml document"], "libraries": [], "languages": ["xml", "curl", "basic", "small", "java"], "frameworks": [], "dbs": []}, "./reports/05_Final_Report.pdf": {"title": "classification of attacks for network data", "filename": "./reports/05_Final_Report.pdf", "data": "classification attack network aakash e. kadam aniket c. kale examination seat b120058553 examination seat b120058554 shraddha s. kamble examination seat b120058556 ashwini m. khandelwal examination seat b120058563 prof. tushar rane guidance sr. 27 pune-satara road bvdu 2016-2017 classification attack network aakash kadam examination seat b120058553 aniket kale examination seat b120058554 shraddha kamble examination seat b120058556 ashwini khandelwal examination seat b120058563 bonafide prof. tushar rane fulfilment earlier diploma ___________________ ___________________ prof. tushar rane prof. s. b. deshmukh coordinator ___________________ ___________________ dr. p.t examiner _______________ ___________ _________ acknowledgement great pleasure satisfaction presenting classification attack network express deep sense gratitude prof. tushar a. rane guiding assistance guidance accomplishment gratitude prof. s. b. deshmukh appreciated strategy unceasing effort accomplishment time distinct dr. a.m. bagade in-charge hod valuable time provision express thankfulness dr. p.t ethical support recognize directly indirectly helped accomplishment kadam aakash eknath b120058553 kale aniket chhabu b120058554 kamble shraddha sunil b120058556 khandelwal ashwini manoj b120058563 title 1 2 3 4 5 6 7 acronym 1.1 background 2.1 2.2 3.1 3.2 background review existing proposed specification 4.1 evaluation i. base paper ii plagiarism iii review sheet ii iii iv 2 6 8 12 13 15 21 29 37 38 40 classfication attack network title 2.1 2.2 2.3 4.1 classification 23 attack 5 category classification attack nsl-kdd description 7 10 10 17 pict-information technology-2016-17 classfication attack network title 1.1 4.1 4.2 4.3 4.4 5.1 5.2 5.3 5.4 5.5 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 illustration heterogeneous source detailed architectural class gantt comparison classifier weka gui weka explorer tab loading dataset evaluation classification weka roc curve normal record roc curve anamoly record confusion matrix confusion matrix attack detection confusion matrix attack classification decision tree attack detection decision tree attack detection reduced 3 15 16 18 19 21 26 26 27 27 30 30 31 33 33 34 34 35 pict-information technology-2016-17 ii classfication attack network acronym s.no acronym full form 1 2 3 4 5 6 7 ig igr rfa kdd nids rep cart gain gain ratio random forest knowledge discovery network intrusion detection reduced error pruning classification regression tree pict-information technology-2016-17 iii classfication attack network 21st century witnessed internet growth heap bound marked existence field ranging science commerce defence entertainment sport massive increase internet sensitive confidential network intruder unprivileged access exploit financial reputational respective person people target exploiting vulnerability network cyber attacker attack committed cyber attacker termed cyber-attacks broadly classified category i.e probe u2r r2l.the branch cyber strong resistance attack termed cyber-security popularity internet increasing network attack growing intrusion detection help detect avoid cyber-attacks reason play role security network industrial academic area intrusion detection heavily studied order secure cyber space cyber security analyst desire accuracy security event decade method machine learning applied intrusion detection technique broadly classified i.e supervised unsupervised learning intrusion detection datasets help providing standard dataset finite amount imitates real-time network dataset helpful building nsl-kdd dataset keywords attack machine learning nsl-kdd dataset pict-information technology-2016-17 iv classification attack network 1 pict-information technology-2016-17 1 classification attack network prearranged 1.1 cover background planned 1.2 cover proposed 1.1 background today experiencing thrill miracle growth aspect life including transport society day day scientist tech-enthusiastic entrepreneur coming solution daily life help internet fourth fundamental mankind living good life planet upcoming cloud computing internet thing ratio higher strengthen root internet life social network caused people share life internet latest development e-wallet cashless transaction led money transaction online internet automation driverless car making people reliable internet internet reliable answer course smart people constructive generous intelligent talented people destructive intellectual ability gain unauthorized access service provided internet intruder exploit vulnerability damage service providing benefit hack technique causing le efficient leading failure reliability internet issue wrapped term called cyber-security attack pict-information technology-2016-17 2 classification attack network called cyber-attacks threat incident network multiplying hour detect avoid cyber- attack intrusion detection vital aspect network security product designed detecting alert potential cyber-attacks basic detecting attack threat cyber space network level examining network traffic termed network intrusion detection nids product monitor process host log file directly host host based intrusion detection hids protocol based intrusion detection based pid study peculiar protocol web server http fig 1.1 illustration heterogeneous source pict-information technology-2016-17 3 classification attack network network traffic workstation server hids firewall nids typical network depicted order enhance intrusion detection security event correlated 1.2 1. intrusion detection studied globe predictor cyber-security demand achieve prepared correctness order avert fear outbreak cyberspace 2. studying numerous security event diverse source inclusive method improvement intrusion detection achieved 3. profound knowledge superior awareness attack cyber space pertinent security occurrence complete origin 4. considered source singly challenge difficult constructing 5. collective approach source worse construction hurdle handle 6. enormous overcome implementing mining technique machine learning principle pict-information technology-2016-17 4 classification attack network 2 pict-information technology-2016-17 5 classification attack network background review _________________________________________________ prepared 2.1 comprises numerous drawback 2.2 comprises proposed proficiently providing recommendation 2.1 existing existing explained 2.1.1 kdd cup 99 mit lincoln lab arranged 1998 darpa intrusion detection evaluation program main wa study evaluate intrusion detection provision wa ideal bunch wa judged possessed number interruption simulated realm wa full military network kdd cup 99 dataset standard identifying intrusion analysing tcp dump segment dataset 41 distinct 42nd connection tag normal anomaly dataset comprised 23 attack grouped 1. denial-of-service attack prime intruder restrict deny service pc service restrained genuine performed letting occupied full overflow 2. probing surveillance acquiring knowledge presence composition network prime bout intruder pict-information technology-2016-17 6 classification attack network attempt degrade acquire property intruded network 3. user-to-root u2r managerial access unidentified main aim attack access normal help intelligent intruder eventually superuser privilege 4. remote-to-local r2l attack continuously packet host machine web remote attacker doe privilege intruder privilege local intrudes host training 23 bout prearranged 5 major class collection classified r2l u2r probe attack land neptune pod smurf teardrop satan ipsweep nmap portsweep normal guess_passwd ftp_write imap phf multihop 2.1 classification 23 attack 5 category original number sample class level 2 203 21 107 201 264 280 790 979 1 589 1 247 231 1 040 97 277 53 8 12 4 7 probe probe probe probe normal r2l r2l r2l r2l r2l pict-information technology-2016-17 7 classification attack network warzemaster warzclient spy buffer_overflow loadmodule perl rootkit 20 1 020 2 30 9 3 10 r2l r2l r2l u2r u2r u2r u2r number repeated record foremost loophole kdd dataset training datasets kdd analyzed clear 78 trained 75 repeated machine learning produce inaccurate precise classification frequent record output nsl-kdd wa formed overcame previous dataset biased output classifier training duplicate record repeated record good decreased rate number record original contrarywise fraction chosen record 2.2 proposed contrast performance numerous intrusion detection number nominated selection classification attack machine learning reduction ig gain based selection framework 2 industrialized conniving gain ratio individual selection order alienated amount diverse class ci fi supreme number nonzero pict-information technology-2016-17 8 classification attack network standard chosen manager gain ratio igr premeditated equation step optimal selection listed gain ig grounded selection input 41 kdd 99 cup output reduced input 41 step 1 select characteristic difference step 2 compute info selected characteristic equation info -m j=1 freq cjd /|d| log2 freq cjd /|d| step 3 select characteristic supreme number nonzero step 4 compute info characteristic selected step 3 second equation info i=1 |fi|/|f| info fi step 5 compute igr third equation step 6 reliant igr select igr ai info info info info *100 reduction help number reduced detect attack chosen assembled 4 pict-information technology-2016-17 9 classification attack network 2.2 classification attack class level total number normal probe r2l u2r 7 24 22 19 13 3 23 29 30 32 34 35 1 3 5 6 10 12 16 19 23 24 26 28 30 31 32 33 34 35 36 37 38 40 41 1 3 4 10 12 23 24 25 27 29 30 31 32 33 34 35 36 38 40 41 1 6 10 12 19 22 23 28 30 31 32 33 34 35 36 37 38 39 40 6 11 12 14 17 24 32 33 35 36 37 40 41 three major category nsl-kdd dataset classified nominal binary numeric exact classification nominal binary numeric 2.3 nsl-kdd 2 3 4 7 12 14 15 21 22 1 5 6 8 9 10 11 13 16 17 18 19 20 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 proposed depicts concept selection reduction dataset pict-information technology-2016-17 10 classification attack network 3 pict-information technology-2016-17 11 classification attack network specification _______________________________________________ 3.1 detect classify cyber-attacks network machine learning mining principle intrusion detection main detect attack network classify 1 practice modern network 2 practice suitable machine learning 3 implement proposed detection 4 appraise proposed major constraint major constraint attack detected classified prohibited pict-information technology-2016-17 12 classification attack network 3.2 desktop intel core i5 2.3 ghz processor 4 gb ram weka 3.9.0 netbeans 8.1. languages/frameworks java 1.7 pict-information technology-2016-17 13 classification attack network 4 pict-information technology-2016-17 14 classification attack network _______________________________________________ prearranged 4.1 comprises architectural projected 4.1 selection select threshold igr nsl-kdd dataset calculate info info igr threshold decision tree formation random forest rfa hoeff- ding j48 cart rep rfa output fig 4.1 detailed pict-information technology-2016-17 15 classification attack network 4.2 usage scenario 4.2.1 selector include attack detection include attack classification include nsl-kdd dataset view classification fig 4.2 pict-information technology-2016-17 16 classification attack network 4.2.2 description 4.1 description description selector selects optimum attack detection detects attack based attack classification classifies attack category view classification output classified attack 4.3 description modelling i.e class description written 4.3.1 description input nsl-kdd output determines attack pict-information technology-2016-17 17 classification attack network 4.3.2 class fig 4.3 class 4.4 restriction performance issue restriction performance issue described 4.4.1 restriction 1. main constraint nsl-kdd detecting attack 2. attack detected classified prohibited pict-information technology-2016-17 18 classification attack network 4.4.2 1. ig-based selection contemporary network 2. select optimum machine learning attack detection 3. classify attack respective category 4.4.3 performance issue performance issue nsl-kdd dataset pre-existing display real time traffic 4.5 fig 4.4 gantt pict-information technology-2016-17 19 classification attack network 5 pict-information technology-2016-17 20 classification attack network ______________________________________________ prearranged 5.1 cover decision tree construction machine learning detect classify cyber- attack network 5.1 random forest machine learning classification purpose choose suitable efficient purpose study author accuracy decision tree random forest compared classifier svm knn naive bayes 94 92 86 88 94 92 97 86 90 92 93 90 89 82 78 sensitivity specificity accuracy svm dt nb knn rf classifier fig 5.1 comparison classifier pict-information technology-2016-17 21 classification attack network collection decision tree lead formation random forest random forest approximation variable imperative classification insignificant doe over-fit 15 numerous generates extremely precise classifier approx 93 turn proficiently database random forest 16 grip unbalanced positive rate 0.989 fig 2 depicts comparison decision tree random forest classifier reason decision tree turn random forest preferred classification attack applied random forest reward widespread machine learning random forest assembly numerous decision tree creation ensemble technique building machine learning failure overcame decision tree well decision tree 5.2 decision tree focusing accuracy efficiency detecting classifying attack highly dependent constructing machine learning chosen decision tree purpose j48 cart pict-information technology-2016-17 22 classification attack network rep hoeffding 5.2.1 j48 proficient traditional machine learning called 4.5 binary decision tree classification method creates eminent decision tree entire process construct tree tree constructed row database prompt classification row handle discrete well continuous handling continuous property j48 edge break edge edge 5.2.2 cart classification regression tree cart acronym classification regression tree development 1980. exploration prediction field tree historic construction decision tree simple cart method classification produce binary decision tree binary tree child missing record handled simple cart simply ignoring training optimal depending categorical numeric tree output classification regression tree technique worldwide order choose number tree series tree considered pruning process pict-information technology-2016-17 23 classification attack network cross validation independent sample 5.2.3 rep tree reduced error pruning tree multiple tree created regression tree logic iteration created best chosen declared representative square error estimation tree measure pruning tree rep tree gain reducing variance build decision tree process decision tree pretty fast decision regression tree built choosing gain dividing criterion pruning reduced error pruning method numeric property sorted fractional instance 4.5 method dealing missing 5.2.4 hoeffding making distribution generating example doe change time hoeffding capable learning stream incremental time decision tree trivial sample choose best splitting fact subjugated tree hoeffding bound support mathematically enumerates observation guess statistic mentioned precision incremental decision tree ensures better performance pict-information technology-2016-17 24 classification attack network 5.3 experimental implementing machine learning nsl-kdd dataset accurate suitable platform rich machine learning support mining technique 5.3.1 weka waikato environment knowledge order implement machine learning method mining termed weka waikato environment knowledge wa invented waikato zealand performing mining precisely classification visualization pre-processing regression selection clustering assumed method weka single flat file relation file point characterized determined number property jdbc excess sql database provided weka processed fetched database query pict-information technology-2016-17 25 classification attack network 5.3.1.1 weka gui fig 5.2 weka gui fig 5.3 weka explorer tab pict-information technology-2016-17 26 classification attack network fig 5.4 loading dataset evaluation fig 5.5 classification weka pict-information technology-2016-17 27 classification attack network 6 pict-information technology-2016-17 28 classification attack network evaluation weka building machine learning grounded above-stated decision tree performance determined help measure 6.1 performance measure measure considered evaluating machine learning performance wa constructed decision tree mentioned roc curve confusion matrix 6.1.1 roc curve evaluation purpose roc curve primary graph positive rate i.e sensitivity plotted function positive rate i.e specificity parameter comprises roc curve node space graph describes specific decision edge realm roc curve thought portion correctly classified input anomaly/normal accuracy examination considered higher curve biased topmost area left side graph accuracy lower pict-information technology-2016-17 29 classification attack network fig 6.1 roc curve normal record fig 6.2 roc curve anomaly record pict-information technology-2016-17 30 classification attack network 6.1.2 confusion matrix comprehensive view parameter considered examined performance machine learning explored confusion matrix matrix contingency machine learning performance measured contingency frequently supervised learning matrix constructed row representing occurrence class column represent projected class detailed illustration typical contingency fig 6.3 confusion matrix terminology sensitivity fraction positive instance precisely identified pict-information technology-2016-17 31 classification attack network fpr fraction negative instance wrongly identified positive specificity fraction negative instance precisely identified fnr fraction positive instance wrongly identified negative accuracy fraction estimation precise ac tp tn tp fp tn fn precision fraction estimated positive instance precise tp/ tp fp f-measure inverse arithmetic sensitivity 2tp/ 2tp+fp+fn mcc superiority distribution examined help coefficient pict-information technology-2016-17 32 classification attack network confusion matrix fig 6.4 confusion matrix attack detection accuracy attack fig 6.5 confusion matrix attack classification pict-information technology-2016-17 33 classification attack network 6.2 decision tree formation providing decision tree input decision tree construct tree input root node validating condition leaf node tree finally record attack check attack detection classification attack root node anomaly record detected normal record detected fig 6.6 decision tree attack detection attack classified warezclient 26.0 fig 6.7 decision tree attack classification pict-information technology-2016-17 34 classification attack network 6.3 final reduced correctness machine learning extremely reliant train vital appropriate accurate train machine learning studying experimenting contribution attack detection classification reduced 41 nsl-kdd 16 efficient accurate fig 6.8 final reduced 16 pict-information technology-2016-17 35 classification attack network 7 pict-information technology-2016-17 36 classification attack network ______________________________________________ 7.1 help numerous method machine learning accuracy achieved intrusion detection accuracy attack detection depends selection correct machine learning vulnerable misclassification network caused poison learning demerit removed combining mining faster classification produced combining approach decision tree reduced 16 41 nsl-kdd j48 accuracy achieved 86.17 simple cart accuracy achieved 86.14 rep accuracy achieved 83.10 hoeffding accuracy achieved 86.10 7.2 merging reduce higher efficiency accuracy pict-information technology-2016-17 37 classification attack network ________________________________________________ 1 richard zuech taghi khoshgoftaar randall wald intrusion detection heterogeneousdata journal springer 2015 2 h. g. kayacik a. n. zincir-heywood m. i. heywood `` selecting intrusion detection relevance kdd 99 intrusion detection datasets '' proceeding third annual conference privacy security trust 2005 3 mahbod tavallaee ebrahim bagheri wei lu ali a. ghorbani detailed kdd cup 99 proceeding symposium computational intelligence 2009 4 s. revati a. malati detailed nsl-kdd dataset machine learning technique intrusion detection international journal ijert 2 issue 12 2013 5 jungsuk song hiroki takakura yasuo okabe masashi eto daisuke inoue koji nakao statistical honeypot building kyoto 2006+ dataset nids evaluation proceeding workshop building datasets gathering experience return security 29-36 acm 2011 6 l.dhanabal1 dr. s.p shantharajah study nsl-kdd dataset intrusion detection based classification international journal advanced 4 issue 6 2015 7 p. garca-teodoro j. daz-verdejo g. macia-fernandez e. vazquez anomaly-based network intrusion detection technique challenge security 1828 elsevier 2009 8 christopher kruegel thomas toth decision tree improve signature based intrusion detection advance intrusion detection 173-191 springer 2003 9 manish kumar dr. m. hanumanthappa intrusion detection decision tree security 1828 elsevier 2011 10 jiong zhang mohammad zulkernine anwar haque random-forests-based network intrusion detection international journal advanced 4 issue 6 2015. pict-information technology-2016-17 38 classification attack network 11 sara del ro victoria lpez jos manuel bentez francisco herrera mapreduce imbalanced random forest journal springer 2016 12 senthilnayaki balakrishnan*1 venkatalakshmi k2 kannan a3 intrusion detection selection classification technique international journal ijert 6 issue 10 2015 13 nicholas a. arnosti andrea pohoreckyj danyluk selection probabilistic output 14 lei yu huan liu efficient selection relevance redundancy journal springer 2015 15 v. jaiganesh1 dr. p. sumathi2 a.vinitha3 classification intrusion detection security 1828 elsevier 2009 16 badr hssina abdelkarim merbouha hanane ezzikouri mohammed erritali comparative study decision tree id3 c4.5 national security conference 1998 17 wei-yin loh classification regression tree 7th international conference asia cita 2011 18 rahman mansouri mohamad saraee mining predicting cell phone subscriber behavior employing contact pattern proc 2004 acm symposium applied computing 2004 420424 19 shina sheen rajesh member network intrusion detection selection decision tree classifier machine learning vol.20 1995 pp.273297 20 hesham altwaijry bayesian based intrusion detection proceeding 7th wseas international conference applied applied computational science acm 47-52 2008 21 partha ghosh abhay kumar mandal rupesh kumar efficient cloud network intrusion detection international journal advanced 4 issue 6 2015 22 shi-jinn horng ming-yang su yuan-hsin chen novel intrusion detection based hierarchical clustering support vector machine 7th international conference asia cita 2011. pict-information technology-2016-17 39 selection intrusion detection nsl-kdd hee-su chae* byung-oh jo* sang-hyun choi**1 twae-kyung park*** *department security **department chungbuk national korea ***sammi co. ltd. 52 naesudong-ro heungdeok-gu cheongju chungbuk 361-763 korea enigma0724 gmail.com joecho86 gmail.com chois cbnu.ac.kr tkpark sammicomputer.co.kr day network traffic increasing increasing smart device internet amount intrusion detection study focused selection reduction irrelevant redundant lengthy detection process degrades performance intrusion detection purpose study identify selected input building computationally efficient effective evaluate performance standard selection method cf correlation-based selection ig gain gr gain ratio paper propose selection method average total class apply efficient classifier decision tree evaluating reduction method compare proposed method method key-words mining preprocessing selection reduction intrusion detection nsl-kdd 1 year growing smart device internet network traffic rapidly increasing cisco global ip traffic 2012 stand 43.6 exabyte month grow threefold 2017 reach 120.6 exabyte month 1 class decision tree classifier evaluated nsl-kdd dataset detect attack attack category probe r2l u2r reduction applied three standard selection method correlation-based selection cf gain ig gain ratio gr proposed method decision tree classifier computed comparison reduction method proposed efficient network intrusion detection remainder paper organized 2 selection method nsl-kdd experimental study discussed 3 4 finally paper concludes 5 2 2.1 selection selection improving efficiency mining process selecting subset original criterion frequently mining dimension reduction includes irrelevant technique confidentiality intrusion defined attempt action compromise availability network 2 intrusion detection automate process event occurring network analyzing sign security 3 integrity selection process removing original irrelevant respect performed execution time classifier process reduces accuracy increase irrelevant redundant include noisy classification accuracy negatively 4 paper selection method attributed average total 1 author advance scienceisbn 978-960-474-354-4184 redundant noisy selection reduces number remove irrelevant redundant noisy brings palpable speeding mining improving learning accuracy leading better comprehensibility 5 common approach reduction wrapper intended learning evaluate filter evaluates heuristic based general characteristic wrapper approach generally considered produce better subset slowly filter 6 probe r2l u2r denial service attack attack attacker 1 nominal protocol_type 2 service 3 flag 4 binary land 7 logged_in 12 root_shell 14 su_attempted 15 is_host_login 21 is_guest_login 22 explain network traffic increasing rapidly order detect intrusion traffic detection selection method efficient three selection method complex calculation reason method inefficient amount paper propose simple efficient selection method 2.2 nsl-kdd nsl-kdd suggested solve inherent kddcup'99 kddcup99 anomaly detection tavallaee al conducted statistical performance evaluated poor evaluation anomaly detection approach solve issue proposed nsl-kdd consists selected record complete kdd 7 greatly issue advantage nsl-kdd original kdd doe include redundant record train classifier biased frequent record second number selected record difficulty level group inversely proportional percentage record original kdd classification rate distinct machine learning method vary wider range efficient accurate evaluation learning technique third number record train reasonable affordable experiment complete randomly select small portion consequently evaluation consistent comparable nsl-kdd includes 41 5 class normal 4 attack numeric duration 1 src_bytes 5 dst_bytes 6 wrong_fragment 8 urgent 9 hot 10 num_failed_logins 11 num_compromised 13 num_root 16 num_file_creations 17 num_shells 18 num_access_files 19 num_outbound_cmds 20 count 23 srv_count 24 serror_rate 25 srv_serror_rate 26 rerror_rate 27 srv_rerror_rate 28 same_srv_rate 29 diff_srv_rate 30 srv_diff_host_rate 31 dst_host_count 32 dst_host_srv_count 33 dst_host_same_srv_rate 34 dst_host_diff_srv_rate 35 dst_host_same_src_port_rate 36 dst_host_srv_diff_host_rate 37 dst_host_serror_rate 38 dst_host_srv_serror_rate 39 dst_host_rerror_rate 40 dst_host_srv_rerror_rate 41 computing memory busy full handle legitimate request denies legitimate access machine probing attack attempt gather network apparent purpose circumventing security control root attack u2r class exploit attacker start access normal account gained sniffing password dictionary attack social exploit vulnerability gain root access remote local attack r2l occurs attacker ability send packet machine network doe advance scienceisbn 978-960-474-354-4185 account machine exploit vulnerability gain local access machine 41 consisted three basic traffic 1 3 experimental study explained network traffic increasing rapidly order detect intrusion traffic detection selection method efficient three selection method complex calculation reason method inefficient scale paper propose simple efficient selection method 3.1 descriptive statistic nsl-kdd nsl-kdd three numeric nominal binary 2 3 4 nominal 7 12 14 15 21 22 binary rest numeric 3 average 23 numeric total average bigger normal r2l u2r average le probe average 3 frequency 12 class total 12 binary consisting 0 1. propose selection method ratio ar ar calculated frequency 2 average 23 total class class total normal probe r2l u2r 0.16459408 0.348512787 0.044066495 0.150787218 0.002539183 0.011365423 3 frequency 12 normal probe r2l u2r total 44970 19486 11573 86 6 76121 0 1 3.2 proposed method 5 explain nsl-kdd three average frequency class calculate ar numeric binary ar calculated 7 class ratio cr ratio class i. cr calculated method cr calculated numeric cr avg avg total 8 cr calculated binary cr frequency 1 frequency 0 9 evaluate calculating ar rank ordering larger ar 4 rank calculated ar nominal calculate ar 3.3 experimental setup weka 3.7 machine learning 9 compute selection subset cf ig gr classification performance chose j48 decision tree classifier 3 full training 10-fold cross validation purpose 10-fold cross-validation randomly divided 10 disjoint subset equal size subset remaining building classifier accuracy accuracy classifier cross-validation tested extensively generally well sufficient 8 4 three standard proposed method selection selection wa performed 41 selected nominal evaluate classifier 957 47857 83 909 46 49852 accuracy advance scienceisbn 978-960-474-354-4186 2 shilpa lakhina sini joseph bhupendra verma reduction component effective anomalybased intrusion detection nsl-kdd international journal science 2 6 2003 pp.1790-1799 3 r.bace p. mell nist special publication intrusion detection 2001 4 yang jo pedersen comparative study selection classification accuracy procedia 1 2012 pp.323 327 5 liu setiono motoda zhao selection evolving frontier mining jmlr workshop conference proceeding 10 2010 4-13 6 y. kim w. n. street f. menczer g. j. russell selection mining mining opportunity challenge j. wang hershey pa group publishing 2003 80105 7 m. tavallaee e. bagheri w. lu a. ghorbani detailed kdd cup 99 2009 int conf comput intell security defense appl 2009 5358 8 saurabh mukherjeea neelam sharmaa intrusion detection naive bayes classifier reduction procedia 4 2012 pp.119-128 9 http //www.cs.waikato.ac.nz/~ml/weka/ accuracy tp+tn tp+fn+fp+tn 100 10 calculated accuracy accumulation number ar ranker accuracy ar cf ig gr accumulation number full inverse correlation accuracy ar 22 clear highest accuracy 99.794 22 accuracy full 99.763 highest cf accuracy wa 99.781 25 ig wa 99.781 23 gr wa 99.794 19 5 paper proposed selection method ar compared three selector cf ig gr experiment accuracy ar inverse correlation selection method highest accuracy 99.794 22 accuracy method higher accuracy full highly accuracy method include comparison calculation time method method calculate positive rate tpr positive rate fpr accuracy attack acknowledgement wa supported msip ministry science ict planning korea `` employment contract based master 's program security '' supervised kisa korea internet security agency h2101-13-1001 wa supported msip ministry science ict planning korea itrc center support program nipa-2013-h0301- 13-4009 supervised nipa national industry promotion agency 1 cisco cisco visual networking forecast 2012-2017 cisco 2013. advance scienceisbn 978-960-474-354-4187 scanned camscanner scanned camscanner scanned camscanner scanned camscanner", "keywords": ["accuracy attack", "advance scienceisbn", "ashwini khandelwal", "attack category", "attack classification", "attack detection", "attack network", "attack network pictinformation", "average total", "based intrusion", "based intrusion detection", "cf ig", "cf ig gr", "classfication attack", "classfication attack network", "classification attack", "classification attack network", "classification regression", "classification regression tree", "confusion matrix", "confusion matrix attack", "decision tree", "decision tree attack", "decision tree classifier", "detect attack", "detection international", "detection international journal", "detection selection", "examination seat", "ict planning", "ig gain", "ig gr", "international conference", "international journal", "intrusion detection", "intrusion detection international", "journal springer", "kdd cup", "machine learning", "matrix attack", "ministry science", "ministry science ict", "msip ministry", "msip ministry science", "network intrusion", "network intrusion detection", "network pictinformation", "network pictinformation technology", "network traffic", "normal record", "nslkdd dataset", "pictinformation technology", "pictinformation technology classification", "planning korea", "positive instance", "positive rate", "probe rl", "probe rl ur", "random forest", "regression tree", "rl ur", "roc curve", "science ict", "science ict planning", "security event", "selection method", "simple cart", "technology classification", "technology classification attack", "tree attack", "tree classifier", "tushar rane", "weka gui", "weka waikato"], "libraries": [], "languages": ["basic", "small", "java", "perl"], "frameworks": [], "dbs": []}, "./reports/08_final_report.pdf": {"title": "open source wi-fi hotspot management system   based on advertisement revenues", "filename": "./reports/08_final_report.pdf", "data": "source wi-fi hotspot based advertisement revenue shubham sule tanay mittal yash mundra examination seat b120058639 examination seat b120058641 examination seat b120058650 guidance prof. s. r. warhade sr. 27 pune-satara road bvdu 2016-2017 source wi-fi hotspot based advertisement revenue shubham sule examination seat b120058639 tanay mittal examination seat b120058641 yash mundra examination seat b120058650 bonafide prof. s. r. warhade fulfilment earlier diploma ___________________ ___________________ prof. s. r. warhade prof. s. b. deshmukh coordinator ___________________ ___________________ dr. p.t examiner _______________ ___________ _________ acknowledgement great pleasure satisfaction presenting source wi-fi hotspot based advertisement revenue express deep sense gratitude prof. s. r. warhade guiding assistance guidance accomplishment gratitude prof. s. b. deshmukh appreciated strategy unceasing effort accomplishment time distinct dr. a.m. bagade in-charge hod valuable time provision express thankfulness dr. p.t ethical support recognize directly indirectly helped accomplishment shubham sule b120058639 tanay mittal b120058641 yash mundra b120058650 title 6.1 6.2 6.3 6.4 phase description 36 38 38 39 16 17 18 19 20 21 22 32 32 33 33 34 34 35 35 38 39 title ii 4.1 4.2 4.3 4.4 4.5 4.6 4.7 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9 block class deployment registration browsing history history performance graph advertisement 6.10 acronym word wireless fidelity network access control bring device sr. 1 2 3 acronym wi-fi nac byod iii title 1 2 3 4 1.1 1.2 1.3 1.4 2.1 2.2 2.3 3.1 3.2 3.3 4.1 4.2 4.3 acknowledgement abbreviation background challenge aim background existing proposed specification definition specification 3.2.1 specification 3.2.2 major constraint 4.1.1 block level modular 4.3.1 4.3.2 class 4.3.3 4.3.4 4.3.5 deployment 5 ii iii iv 1 3 3 5 5 6 8 8 9 10 12 12 12 12 13 13 15 15 16 17 18 18 19 20 21 22 24 5.1 5.2 5.2.1 dataset collection 5.2.2 cleaning/keyword extraction 5.2.3 clustering 5.2.4 usage 5.2.5 advertisement selection 5.2.6 performance graph 6 evaluation 7 6.1 6.2 6.3 graphical 6.3.1 estimation technique applied 6.3.2 6.3.3 6.4.4 6.4.5 staff base paper ii plagiarism iii review sheet ii iii iv 24 24 24 25 26 28 29 29 32 32 36 37 37 37 37 38 40 42 43 44 source wi-fi hotspot based advertisement revenue hotspot geographical region wireless internet provided commercial purpose multiple managing administering hotspot network propose develop centrally managed offsetting lot computation device .we propose enable free distribution internet offsetting infrastructure cost providing targeted advertisement relies machine learning extract critical knowledge browsing history keywords hotspot machine learning advertisement browsing history pict-information technology-2016-17 1 source wi-fi hotspot based advertisement revenue 1 pict-information technology-2016-17 2 source wi-fi hotspot based advertisement revenue 1.1 background connected imperative ensure remote area capable connecting internet lot rely internet form feasible interconnected network wi-fi hotspot ensures range receive access well cut imposed complex expensive wiring solution hotspot distributed managed .in explore managing doesnt rely knowledge underlying infrastructure router switch accomplished app side moving exponential rise interconnectivity globe lucrative imperative development infrastructural technological framework aid development advent economy feasible rely heavy infrastructure unthinkable command price offset infrastructural cost latest machine learning technique current advancement deep learning relies modeling representation multilayer perceptron analyze mine greater knowledge unsupervised machine learning circumstance prevalence unstructured unlabeled find structural tendency accomplished grouping cluster based principle exist cluster pict-information technology-2016-17 3 source wi-fi hotspot based advertisement revenue cluster dissimilar cluster elect representative compared point find membership cluster collection storage increased current inflection collected source including limited isps search provider marketing company retailer amazon bazaar behavioral pattern analyzed company find increase appeal product consumer form targeted advertising recommender increasingly valuable great demand develop app android ecosystem developer friendly source mobile operating estimated 2 billion device android form app lot built-in function provided android enables app control internet access fetch browsing history android ecosystem guarantee compatibility ensures code version older version develop introduce source easiest secure cost effective emphasize interoperability distributed network rely interfacing choose source development enable secure long term find bug security obscurity method longer viable secure critical life pict-information technology-2016-17 4 source wi-fi hotspot based advertisement revenue 1.2 challenge hotspot current market suffer infrastructural cost associated lack insight capitalizing borne interested committing history misguided gather order provide advertising offload computation phone feasible advent smartphone hold computational power rocket couple decade ago challenge establishing widespread networking solution upfront cost infrastructure prohibitive guaranteed source income business feasible company secondary generating revenue selling advertisement spot selling lot expense hire network specialist keenly aware networking infrastructure 7 cost avoided mentioned le understand networking infrastructure rely control access internet rely client side 5 incentive download wi-fi credential hotspot credential accessible indirectly readable text format aided fact android operating doesnt allow saved wi-fi password device 8 1.3 aim create based centralized manage geographically distributed side aim development meet pict-information technology-2016-17 5 source wi-fi hotspot based advertisement revenue hotspot centrally administered managed mining utilizing browsing create prototype specifies showcase technique trend establishing ranging client side machine learning centralized control well gathering precious browsing history aiding targeted advertisement 1.4 1 2 background 3 4 5 6 7 pict-information technology-2016-17 6 source wi-fi hotspot based advertisement revenue 2 pict-information technology-2016-17 7 source wi-fi hotspot based advertisement revenue background review entirely construct source infrastructure optimal interoperability portability hallmark source .as presented 1 i.e ap based constructed openwrt wireless trend growing number source context network infrastructure reported 2 technological history arguably greatest free wi-fi network europe promoted decision secure development maintenance network 2 specifies largest wi- fi network europe 3 introduces concept local advertising sponsor free internet access hybrid determine correct business practice feasible infrastructural corporate setting standard practice bring device byod policy form hub located facility serve gadget provide 4 emphasizes source corporate infrastructure benefit transparency source pr relying security obscurity three source networking opennac packetfence freenac explored component surveying choosing source choice instructive 2.1 existing current hotpot provider reliance jio india digital campaign relies providing internet massive amount geographically distributed infrastructure installation maintenance cost hope recovering cost rely philanthropic goodwill doe gain momentum 2 pict-information technology-2016-17 8 source wi-fi hotspot based advertisement revenue placing ad apps browser company rely google adsense internet medium venture lot intelligent advertising .this google facebook dictate pricing .the company choice skewed supply-demand despite cost propose company gather establish infrastructure 6 4 .this possibility secondary market immensely valuable 2.2 proposed current suffers relies outsourcing ad placement company google suffer cost intermediary company providing hotspot ability gain voluntary access return internet access .this combined intelligent data-oriented advertising increase chance clicking ad advertisement directed specific company access browsing history business relates 3 relies gaining exchange providing free internet access flexibility built expanded include privacy-conscious pay bandwidth money achieved decentralized computation distributing machine learning 6 device compute enables assure privacy store server immune central failure increasingly commodity precious oil potential compete monopoly google 3 inspired lack efficiency current advantage gladly pay internet access cost anonymized gathering pict-information technology-2016-17 9 source wi-fi hotspot based advertisement revenue 2.3 lot paper mentioned mentioned trend network solution clear cost effective well novel deploy network cost effective method source programming utilizes effort programmer free time client side infrastructure agnosticism pict-information technology-2016-17 10 source wi-fi hotspot based advertisement revenue 3 pict-information technology-2016-17 11 source wi-fi hotspot based advertisement revenue specification 3.1 definition develop centralized hotspot par browsing history determine targeted advertisement untapped 1. create delivers manages wi-fi hotspot source 2. platform manage distributed network router endpoint centralized administrative server initial stage provide internet access limited number router provide centralized server implement load balancing performance computing hpc stage practical provide excellent advertisement opportunity corporation billion eyeball view nowadays increasing expectation hotspot customer visit corporate establishment retail shop mall people migrated desktop mobile phone primary device 3.2 specification 3.2.1 specification language database server java mysql wamp pict-information technology-2016-17 12 source wi-fi hotspot based advertisement revenue library android developer sdk 3.2.2 router router android phone 4.4.0 version 3.3 major constraint serf prototype final product suffers drawback leading support higher version operating infrastructure based business upfront cost establish network lot provide funding selling access providing targeted advertising tie-up mobile device manufacturer pict-information technology-2016-17 13 source wi-fi hotspot based advertisement revenue 4 pict-information technology-2016-17 14 source wi-fi hotspot based advertisement revenue 4.1 standard object oriented paradigm principle inheritance encapsulation abstraction adopt centralized server- client managing easiest develop programmatically standard web wamp mysql enhance interoperability platform-independence step collaborative usage scenario person hotspot user-base admin person provide support maintenance network central server ensure performance security router maintained time server relational database maintained server side store credential usage statistic demographic previous dns request generate profile harvested ensure efficient advertisement placement sponsor represent corporate responsible buying ad view designing placing managing advertisement platform android app access utilizes service provided pict-information technology-2016-17 15 source wi-fi hotspot based advertisement revenue 4.1.1 block fig 4.1 block block depicts level process involved denotes usage response pict-information technology-2016-17 16 source wi-fi hotspot based advertisement revenue 4.2 level fig 4.2 represents level subcomponents interact specifies topology underlying network pict-information technology-2016-17 17 source wi-fi hotspot based advertisement revenue 4.3 modular 4.3.1 fig 4.3 specifies actor action involved usage describes party interacting function usage pict-information technology-2016-17 18 source wi-fi hotspot based advertisement revenue 4.3.2 class fig 4.4 class represents static depicts major interacting mysql database sqlite graph renderer clustering advertisement injection depicts composition aggregation association pict-information technology-2016-17 19 source wi-fi hotspot based advertisement revenue 4.3.3 fig 4.5 depicts general programmatic program specifies decision control usage specifies decision variable action involved pict-information technology-2016-17 20 source wi-fi hotspot based advertisement revenue 4.3.4 fig 4.6 depicts temporal describes nature message transferred pict-information technology-2016-17 21 source wi-fi hotspot based advertisement 4.3.5 deployment revenue fig 4.7 deployment specifies artifact component nature represents code device artifact pertaining pict-information technology-2016-17 22 source wi-fi hotspot based advertisement revenue 5 pict-information technology-2016-17 23 source wi-fi hotspot based advertisement revenue 5.1 android developer develop android app manages record usage history server side wamp constructing php service interacts server side mysql database router-agnostic independent middleware 5.2 major sub-components include 1. dataset collection 2. cleaning/keyword extraction 3. clustering 4. usage 5. advertisement selection 6. performance graph 5.2.1 dataset collection code public void getbrowserhist cursor mcur managedquery browser.bookmarks_uri browser.history_projection null null null mcur.movetofirst mcur.movetofirst mcur.getcount 0 mcur.isafterlast == /*log.v `` titleidx '' mcur .getstring browser.history_projection_title_index log.v `` urlidx '' mcur .getstring browser.history_projection_url_index mcur.movetonext */ pict-information technology-2016-17 24 source wi-fi hotspot based advertisement revenue public void getdata global.v=1 string projection string browser.bookmarkcolumns.title browser.bookmarkcolumns.url cursor mcur managedquery android.provider.browser.bookmarks_uri projection null null null mcur.movetofirst int titleidx mcur.getcolumnindex browser.bookmarkcolumns.title int urlidx mcur.getcolumnindex browser.bookmarkcolumns.url utilizes built-in browser.bookmark function connects app browser bookmark browsing history transfer accessible curser program 5.2.2 cleaning/keyword extraction code public void addd int i=1 global.bmark.length i++ string str=global.bmark int a=str.indexof `` // '' pict-information technology-2016-17 25 source wi-fi hotspot based advertisement revenue int str.indexof `` '' int second str.indexof `` '' 2 str=str.substring a+3 second //global.blist.add str testadapter.insertd str code select domain browsed entire url rest url thrown domain entered sqlite database maintained machine.the program interacts database testadapter class 5.2.3 clustering code public string findpopular string array int bmcount=new int array.length int i=1 array.length i++ string sel=array int j=i+1 array.length j++ double sim=similarity sel array sim 0.2 //log.w `` sim '' sel+ '' /and/ `` +array '' '' +sim return `` '' public static double similarity string s1 string s2 string longer s1 shorter s2 s1.length s2.length // longer greater length longer s2 shorter s1 pict-information technology-2016-17 26 source wi-fi hotspot based advertisement revenue int longerlength longer.length longerlength == 0 return 1.0 /* string length */ /* // stringutils calculate edit distance return longerlength stringutils.getlevenshteindistance longer shorter double longerlength */ return longerlength editdistance longer shorter double longerlength public static int editdistance string s1 string s2 s1 s1.tolowercase s2 s2.tolowercase int cost int s2.length 1 int 0 s1.length i++ int lastvalue int 0 s2.length j++ == 0 cost 0 int newvalue cost 1 s1.charat 1 s2.charat 1 newvalue math.min math.min newvalue lastvalue cost 1 cost 1 lastvalue lastvalue newvalue 0 cost s2.length lastvalue return cost s2.length pict-information technology-2016-17 27 source wi-fi hotspot based advertisement revenue utilize levenshtein matching string history fiding distance string cluster .these distance classify string cluster process repeated string grouped cluster 5.2.4 usage code public void checklimit long totmb totmb datal totmb=0 rmb=0 tmb=0 txbytes=0 rxbytes=0 mytimer.cancel toast.maketext getapplicationcontext `` limit reach '' toast.length_long .show wifimanager wifi wifimanager getsystemservice context.wifi_service wifi.setwifienabled intent intent=new intent datauactivity.this adveractivity.class startactivity intent /*alertdialog.builder alertdialog alertdialog.builder mainactivity.this // setting dialog title alertdialog.settitle `` confirm delete ... '' // setting dialog message alertdialog.setmessage `` exceed max limit wifi '' pict-information technology-2016-17 28 source wi-fi hotspot based advertisement revenue wifimanager built-in class provided android platform app access wi-fi setting disable wifi .this code check usage limit fetched program usage exceeds wifimanager class called 5.2.5 adertisement selection code int i=0 pm.length i++ setflipperimage pm private void setflipperimage int log.i `` filpper called '' res+ '' '' imageview image imageview getapplicationcontext image.setbackgroundresource flipper.addview image code receives process clustering advertisement based visited site .this flipper display advertisement 5.2.6 performance graph code long starttime system.currenttimemillis getdata addd string findp=findpopular global.bmark showurl final long elapsedtime system.currenttimemillis starttime pict-information technology-2016-17 29 source wi-fi hotspot based advertisement revenue code measure interval time start final cluster formed indication performance efficiency underlying computational limit imposed it.we interval time create dynamic graph represents time time gathered inferred point amount time pict-information technology-2016-17 30 source wi-fi hotspot based advertisement revenue 6 pict-information technology-2016-17 31 source wi-fi hotspot based advertisement revenue evaluation 6.1 graphical fig 6.1 registration his/her credential server interacts php service turn interacts mysql database fig 6.2 enters his/her credential verified mysql database .a failed message issued failure pict-information technology-2016-17 32 source wi-fi hotspot based advertisement revenue fig 6.3 main tab functionality provided fig 6.4 browsing history tab browsing history keyword count alongside domain updated tab opened pict-information technology-2016-17 33 source wi-fi hotspot based advertisement revenue fig 6.5 history tab depicts current real time usage limit provided mysql fig 6.6 tab depicts current status mysql database server credential pict-information technology-2016-17 34 source wi-fi hotspot based advertisement revenue fig 6.7 performance graph dynamic performance graph generated measure millisecond generate cluster add represents performance underlying fig 6.8 advertisement advertisement injected limit reached pict-information technology-2016-17 35 source wi-fi hotspot based advertisement revenue 6.2 6.1 testcase unit step expected actual hm_1 username username enter error error password click message message password button displayed empty displayed hm _2 username username enter message correct error password correct click message button displayed received password incorrect enter user_id hm_3 servercomm json server send message credential displayed doesnt check server sign hm_4 app mobile power-off session crash mobile session lost renewed lost renewed pict-information technology-2016-17 36 source wi-fi hotspot based advertisement revenue 6.3 projet 6.3.1estimation technique applied constructive cost cocomo semi-detached reason lie middle difficulty spectrum complex people experience dealing massive simple compact equation find person month pm 3.0 8 month 1.12 30.8 person-months duration 3 pm 0.35 8.5 8 calendar month staffing pm/d=3.71 3 4 people needed 6.3.2 minimum multiple router android mobile minimum wamp mysql 6.3.3 major determined equipment failure loss connectivity resist change device deviation standard authorization failure meet expectation pict-information technology-2016-17 37 source wi-fi hotspot based advertisement revenue 6.2 category ti 80 1 bu bu 30 20 20 30 10 25 1 1 2 3 3 1 failure loss connectivity public adoption device interoperability authorization failure pi standard failure meet expectation te 6.3.4 6.3 description import dns record registered server update server database feed classification classified advertisement output send advertisement advertisement injection inject advertisement browser gather dns record latest browsing update database fig 6.9 t1 t2 t3 t4 pict-information technology-2016-17 38 source wi-fi hotspot based advertisement revenue fig 6.10 6.4 phase description phase description phase process paper phase ii collect raw elaborate phase iii assign process control phase iv phase phase vi documentation implement code entire package integrate individual code process weather process properly document prepared possibility enhancing potential pict-information technology-2016-17 39 source wi-fi hotspot based advertisement revenue 6.3.5 staff chief programmer programmer manager reporting engineer role chief programmer chief programmer partition small assigns member verifies integrates product developed member engineer role performed engineer gathering designing coding maintaining pict-information technology-2016-17 40 source wi-fi hotspot based advertisement revenue 7 pict-information technology-2016-17 41 source wi-fi hotspot based advertisement revenue managing geographically distributed network router provide hotspot internet exponential improvement utility advertisement served machine learning browsing pattern predict advertisement interested source ease development collaboration prototype advantage trend internet thing pict-information technology-2016-17 42 source wi-fi hotspot based advertisement revenue 1 palazzi claudio e. matteo brunati marco roccetti `` openwrt solution wireless '' multimedia expo icme 2010 international conference 2010 2 goretti maurizio davide guerri francesco loriga `` provinciawifi 1000 hotspot free public source wi-fi network '' telecommunication network strategy planning symposium network 2012 xvth international 2012 3 jamaluddin jazilah al `` hybrid operating wireless hotspot business '' consumer networking conference 2004. ccnc 2004. 2004 4 nunoo-mensah henry emmanuel kofi akowuah kwame osei boateng `` review opensource network access control nac enterprise educational network '' international journal 106.6 2014 5 ramjee ramachandran al `` ip-based access network infrastructure next-generation wireless network '' 7.4 2000 34-41 6 kim hyojoon nick feamster `` improving network defined networking '' magazine 51.2 2013 114-119 7 bieszczad andrzej bernard pagurek tony white `` mobile agent network '' 1.1 1998 2-9 8 susilo gatot andrzej bieszczad bernard pagurek `` infrastructure advanced network based mobile code '' network operation symposium 1998. noms 98. 2. 1998. pict-information technology-2016-17 43 source wi-fi hotspot based advertisement revenue appendix-i base paper pict-information technology-2016-17 44 provinciawifi 1000 hotspot free public source wi-fi network history choice success maurizio goretti network infrastructure caspur rome italy m.goretti caspur.it davide guerri network infrastructure caspur rome italy davide.guerri gmail.com sistemi informativi reti innovazione tecnologica francesco loriga province rome rome italy f.loriga provincia.roma.it abstractthe diffusion smartphones tablet established clear broadband connection public area city wi-fi proved powerful instrument public administration seeking create internet access point urban setting article history fact biggest free wi-fi network europe developed promoted public administration choice adoption source infrastructure keywords public wi-fi network smart city source network vpn network integration i. summer 2008 province rome decided start free public wi-fi network spread 5352 sq territory including rome 120 city total 4.5 inhabitant main called provinciawifi wa decisive step reduce existing digital divide fostering facilitating ict citizen time second lesser wa provide city point broadband access network internet and/or wan/lans considering kind infrastructure pillar develop smart city well factor growth company focused smart service ii start aspect account designing technological organizational network 978-1-4673-1391-9/12/ 31.00 2012 national/european legal framework ruling public network privacy access traffic logging retention broadband infrastructure deployment persisting digital divide area interaction public institution private actor main legal framework wa registration aaa traffic retention notwithstanding privacy recommendation public network manager obliged provide strong identification method log usage order re-associate request investigation public ip wa assigned time restriction obligation public administration leave service provision wireless internet service provider wisp authorized state suggested adoption centralized obligation basis identification provided usage simple fast second factor considered wa discontinuous deployment broadband infrastructure urban rural centre province rome including area city rome uncertainty provide planned hotspot broadband connection network operation center noc led investigation possibility integrating existing currently operative wa fundamental implement transport network based vpns established existing network connection access point logical winning choice wa consider vpns internet feasible solution wa preferable restriction dedicated connectivity architectural choice opened possibility federate integrate network single building unlimited scalable flexible transport network layer wan lan well single x-dsl umts connection public private institution access internet facilitate network growth coverage synergy public private institution technically considered facilitate synergy possibility implement multiple essid order offer collaborating network possibility broadcast wireless private network provinciawifi access point personalization wireless service providing publishing space access point captive page1 specification led network based cloud approach central server network point access completely reconfigurable location internet access identify network operating center noc transport network vpns internet private network point access implemented wi-fi router unique broadband exit noc internet general framework province rome decided outset commit completely philosophy reason wa mandatory operating modification update improvement entire community free approach wa knowledge experience acquired iii solution solution based low-cost personalized wa developed fulfil specification provide cost-effective solution preserving infrastructure manageability province rome called consortium caspur develop solution called openwisp openwisp suite implement simple typically wisp operator scenario solution wa oriented centralized key- automatic vpn configuration gather end-user connectivity centrally operation center 1 secure network access control evaluated captive portal-based solution wa chosen ease time writing reason captive portal preferred access control method public wi-fi service presented solution implement secure measure 978-1-4673-1391-9/12/ 31.00 2012 easy self-registration end-users wi-fi service simple free mobile phone number verification modern web multiple essid broadcasting multiple network destination security profile e.g wpa/wpa2 pre-shared key 802.1x possibility provide captive access point group access point middleware openwisp independent base openwisp includes suite owums access point access point firmware openwisp manager owm openwisp firmware owf access point openwisp geographic captive portal openwisp captive portal manager owgm owcpm modular wa preferred single monolithic kiss principle keep simple stupid allowing independent openwisp suite written ruby based ruby rail ror framework programming language framework chose ror modern approach possibility rapid web development a. openwisp perspective openwisp fast easy signing-up wi-fi service modern web developed ruby rail 1 framework localized languages2 account password recovery access/traffic statistic mobile version web gui provided self-adapts device perspective wireless isp owums powerful web role-based operator access control allowing easy reliable end-user identification registration process method 2 openwisp suite provided italian english ruby rail i18n framework simple add language 1 mobile phone account verification define identity making mobile telephone call pstn number associated owums process session initiation protocol sip signalling mobile phone identity verification form3 nowadays service provider google 2 prevent rogue account creation italian law pisanus law 3 mandatory public internet access pisanus law regulation public internet service require isps identify acquiring copy card applies mobile phone account italy rely indirectly fulfil 2 card digitalized copy acquisition owums allows desk operator acquiring copy card stated straightforward fulfil italian law public internet access 3 credit card transaction indirect method allows identification provided memorization credit card transaction performing one-time symbolic purchase provide proof identity b. openwisp manager openwisp firmware openwisp manager wisp firmware enable centralized access point easy-to-use ruby rail web role-based operator access control owm allows template- based access point modelling multiple access point instantiated single template allows reconfiguration device fine-tuning configuration single access point allowed redefine property template wi-fi channel traffic shaping limit custom cron-jobs openwisp firmware shell script web cgis sit top openwrt firmware 7 linux distribution wa chosen designed wireless router device active development community support multiple platform e.g x86 mips- based chipsets owf support device running backfire release openwrt atheros wi-fi radio i.e mac80211 madwifi-ng driver owf permit simple installation device easy web based ui native support multiple connectivity backhaul automatic fail-over olsr mesh 8 wpa wi-fi ad-hoc network i.e ibss wpa-none 9 implemented owf umts/hsdpa connectivity limited number umts usb modem boot time owf access point creates setup vpn owm server fig 1 step 1 access point request downloads configuration inside setup vpn fig 1 step 2 configuration deployed example vpn created wi-fi traffic encapsulation fig 1 step 3 setup vpn remains monitor administer access point firewall nat point component manage access 802.11a/bg/n wi-fi madwifi-ng 4 mac80211 5 driver support ethernet 802.1d bridge 802.1q vlan custom cron-jobs layer 2 vpn openvpn 6 traffic shaping 3 typically based code sm 978-1-4673-1391-9/12/ 31.00 2012 1. openwisp firmware auto-configuration periodically access point asks owm server configuration change downloads update setup key solution possibility encapsulate multiple vlans carrying end-users traffic multiple wi-fi network single vpn host public and/or private wi-fi network security level authentication low-cost non-dedicated internet connection e.g residential class xdsl ipv4/gnu-linux netfilter/iptables supported low-level captive portal function operating c. openwisp geographic effective wi-fi service access point scenario wa tricky typical setup access point geographically distributed pre-existent network firewall nat vpn theoretically require creation maintenance entry access point openwisp geographic web developed simplify issue providing geographic visual representation network status ruby rail allows operator check wi-fi network status three level access point status represented navigable map developed google map api version 3 access point detailed statistic browsable graph availability percentage period time access point service level agreement sla verification access point annotated keep track history e.g intervention referee d. openwisp captive portal manager evaluating major source captive portal solution wa decided develop deployable virtual machine openwisp capable displaying captive based location accessing network ruby rail wa develop called openwisp captive portal manager owcpm key multiple captive portal support physical virtual radius local authentication per-user traffic shaping 978-1-4673-1391-9/12/ 31.00 2012 2. simplified openwisp e. openwisp middleware stated openwisp component independent specific ruby/sinatra 10 middleware wa created fig 2 develop gather applications4 middleware implement restful web service third party integration e.g registered access point location well-defined xml notation iv building network original core network wa fall 2008. noc wa hosted managed caspur provided internet connectivity network hotspot wa installed premise province rome choosing location basis public vocation office service centre public access square park heavily frequented air location selected host access point connected administration lan vpn noc full deployment wa started month experimental service three direction formal agreement local administration small mid-size city province rome 19 municipality rome subdivided order establish exact positioning installation access point network integration cooperation public institution sector order individuate public good hotspot e.g museum school sport centre hospital trial court call 4 captive portal based location participation federated point private commercial non- profit actor restaurant bar sporting club commercial centre social civic centre v. network number approach described previous paragraph allowed network grow include 1000 active hotspot time submission article 2012 number projected grow 1200 20125. constantly increasing number number registered 184 000 registration week 1800-2000 unique logins day 4600 workday comparison experience europe considers number ict broadband connection italy 40 registration procedure mobile account verification people italian sim reason explained aspect registration credit card study order provide access foreign tourist reported interesting trend history periodical trend usage 3. registered 4. daily registration trend 5 updated map provinciawifi hotspot reached url http //85.18.173.117/mappe/index.php 978-1-4673-1391-9/12/ 31.00 2012 5. total upper graph unique lower graph daily logins vi utilization rule explained started strong public initiative philosophy account eu national rule competition telecommunication service network limited daily usage 300mb generated traffic keeping absolutely free based network neutrality principle kind conceived rejecting creating profile privileged choice wa simplify organizational aspect initiative 's policy vii cost network running cost keeping mind subdivision network explained previous paragraph noc transport network hot spot unique broadband exit internet concerned cost fixed market server hosting broadband internet connectivity service noc exclusively utilises free source 40 000 initial investment 10 000/y running cost reasonable 100 hotspot network transport network cost vary currently operating ordinary x-dsl access point choice source based openwrt allowed brand benefiting market competition device cost 60 efficiently working outdoor repair period year installation cost vary simply plugging ap sufficient euro fastening pole complicated outdoor installation needed reasonable average hotspot maintenance cost 50 hotspot viii progress a. free italiawifi 2010 province rome administration promoted developed public wi-fi network autonomous region sardinia city venice launched free italiawifi 11 spread free public wi-fi supporting development network promoting digital culture access italian public administration facilitate citizen public wi-fi network creating unique federalized authentication capable granting same-credential access domain federated network promote fundamental principle public wi-fi network discrimination free access citizen network neutrality standard non-profit nature time writing 25 public administration joined free italiawifi initiative 14 network fully integrated 1300 hotspot 230 000 ix-wifi interexchange wi-fi wa built order enable mutual recognition credential domain proxy-radius infrastructure secure dedicated virtual physical link federated central dispatch point chosen assure level robustness preserving widest compatibility b. eduroam experiment garr consortium 12 wa started 2011 evaluate deploy eduroam 13 service openwisp access point provinciawifi eduroam education roaming secure world- wide roaming access service developed international education community state-of-the-art network security wpa/wpa2 enterprise i.e 802.1x eap-ttls setup eduroam fig 6 802.1q vlan encapsulated single layer 2 vpn tunnel vlan authenticated traffic radius traffic i.e authenticator authentication server authentication server hosted garr consortium eduroam proxy server hierarchy end-user credential verification experimentation provinciawifis hotspot located rome broadcast eduroam essid deployment prepared 978-1-4673-1391-9/12/ 31.00 2012 6. eduroam setup ix provinciawifi growing province study public network initiative dozen italian administration adopted openwisp develop free public wi- fi network collaborating improve organizational aspect success citizen factor considered public policy included called digital agenda aspect internet access concerned 1 ruby rail framework http //rubyonrails.org/ 2 verifying google voice call http //support.google.com/accounts/bin/answer.py hl=en answer=114129 3 pisanus law http //www.camera.it/parlam/leggi/05155l.htm italian http //www.inventati.org/reati_associativi/traduzioni/eng_02.html 4 madwifi http //madwifi-project.org/ 5 linux mac80211 http //linuxwireless.org/en/developers/documentation/mac80211 6 openvpn source vpn solution http //openvpn.net/ 7 openwrt http //openwrt.org/ 8 optimized state http //www.ietf.org/rfc/rfc3626.txt 9 http //hostap.epitest.fi/ 10 sinatra domain specific language creating web ruby http //www.sinatrarb.com/ 11 free italiawifi website http //www.freeitaliawifi.it 12 garr consortium italian academic telecommunication network http //www.garr.it/eng 13 eduroam educational roaming http //www.eduroam.org ibss wpa-none wpa ad-hoc mode fixed group key tkip/ccmp linux distribution embedded device wireless protocol routing account olsr driver sm link source wi-fi hotspot based advertisement revenue appendix-ii plagiarism originality 15 similarity 9 9 internet source publication paper primary source danilo severina `` wilmagate '' proceeding 5 3rd acm international workshop wireless 1 mobile service wlan hotspot wmash 05 wmash 05 2005 publication stackoverflow.com internet source 2 3 3 j. jamaluddin m. doherty r. edward p. 1 coulton `` hybrid operating wireless hotspot business '' 2003 international symposium vlsi proceeding paper cat no.03th8672 2004 publication 4 ijcsit.com internet source androidcodeexamples.blogspot.com internet source techforumnetwork.com internet source nptel.iitm.ac.in 5 6 7 internet source 8 www.ijcaonline.org internet source 9 blog.andolasoft.com internet source www.ieee-ccnc.org 10 internet source 1 1 1 1 1 1 1 reprog.wordpress.com 11 internet source '' '' 2012 15th international 12 telecommunication network strategy planning symposium network 2012. publication academic.odysci.com internet source newsandroidnet.blogspot.com internet source www.introprogramming.info internet source www.informatik.uni-mainz.de internet source goretti maurizio davide guerri 1 1 1 1 1 1 1 francesco loriga `` provinciawifi 1000 hotspot free public source wi-fi network '' 2012 15th international telecommunication 13 14 15 16 17 network strategy planning symposium network 2012. publication www.addidata.com 18 exclude quote exclude match 1 word exclude bibliography internet source 1 source wi-fi hotspot based advertisement revenue appendix-iii review sheet ii iii iv", "keywords": ["access control", "access point", "advertisement revenue", "android app", "android ecosystem", "app access", "bernard pagurek", "broadband connection", "captive portal", "cleaningkeyword extraction", "credit card", "distributed network", "francesco loriga", "free public", "free public source", "garr consortium", "geographically distributed", "hotspot free", "hotspot free public", "internet access", "internet source", "machine learning", "mobile phone", "mysql database", "network access", "network access control", "network infrastructure", "network strategy", "network strategy planning", "openwisp firmware", "openwisp geographic", "performance graph", "pictinformation technology", "pictinformation technology source", "planning symposium", "planning symposium network", "point access", "province rome", "public administration", "public network", "public source", "public wifi", "public wifi network", "ruby rail", "strategy planning", "strategy planning symposium", "symposium network", "technology source", "telecommunication network", "th international", "transport network", "unique broadband", "wifi network", "yash mundra"], "libraries": [], "languages": ["php", "ruby", "xml", "small", "java"], "frameworks": [], "dbs": ["sqlite", "mysql"]}, "./reports/10_final_report.pdf": {"title": "remote intelligent assistant (reia)", "filename": "./reports/10_final_report.pdf", "data": "remote intelligent assistant reia kapil vyas mayank aseem raina maanav shah b120058558 b120058571 b120058605 b120058624 guidance dr. a. m. bagade sr. 27 satara road 411043 2016-2017 remote intelligent assistant reia mr. kapil vyas mr. mayank mr. aseem raina mr. maanav shah b120058558 b120058571 b120058605 b120058624 bonafide dr. a. m. bagade fulfilment earlier diploma _______________ dr. a. m. bagade __________________ prof. s.b deshmukh __________________ co-ordinator ________________ dr. p.t _________________ examiner sponsorship ii completion iii acknowledgement great pleasure presenting remote intelligence assistant reia dr. a. m. bagade in-charge hod help guidance grateful valuable support valuable suggestion helpful extend gratitude coordinator prof. s. b. deshmukh guiding semester timely assistance dr. p.t consistent help support express gratitude innobytes mr. sachin deshpande guidance support thankful mr. amol lachake mr. mangesh shegokar providing providing facility support meet express gratitude appreciation opportunity completing directly indirectly helped kapil vyas b120058558 mayank b120058571 aseem raina b120058605 maanav shah b120058624 iv title 3.1 3.2 3.3 3.4 4.1 4.2 4.3 4.4 4.5 4.6 4.7 5.1 5.2 5.3 5.4 5.5 5.6 6.1 6.2 reia reia modular reia transition reia level reia modular reia reia class reia reia reia deployment reia directory reia pert reia gantt reia slack response 1 slack response 2 slack response 3 log loop rnn 14 16 16 18 22 23 24 25 26 26 27 30 34 34 36 37 37 40 41 title 2.1 3.1 comparative performance issue 9 17 vi nomenclature reia remote intelligence assistant cli ia cfg nn tf idf nlp po nltk command-line intelligent assistant context free grammar neural network term frequency inverse document frequency machine learning natural language processing speech natural language toolkit vii sponsorship completion acknowledgment nomenclature ii iii iv vi vii title 1 1.1 background 1.2 1.3 aim 2 review 2.1 existing 2.2 2.3 proposed comparative 3 specification 3.1 3.1.1 3.1.2 3.1.3 3.1.4 context 3.1.5 major constraint 3.2 usage scenario 3.2.1 profile 1 3 3 4 4 7 7 8 9 11 11 12 12 13 13 13 13 13 3.2.2 3.3 description 3.3.1 description 3.3.2 complete 3.3.3 dictionary 3.4 description 3.4.1 function description 3.5 3.6 constraint description 3.6.1 machine 3.6.2 3.6.3 human 3.7 3.8 3.9 3.10 3.11 behavioural description restriction constraint validation criterion 4 4.1 level 4.1.1 description 4.1.2 definition 4.2 4.3 4.4 4.5 4.6 use-case class deployment 5 5.1 13 14 14 15 15 15 15 17 17 17 17 18 18 18 19 19 20 22 22 22 23 24 25 26 26 27 29 29 5.2 5.3 5.4 library framework directory 5.4.1 count-vectorizer 5.4.2 tf-idf 5.4.3 jaro-wrinkler distance 5.4.4 jaccard distance 5.4.5 po tagger 5.5 5.6 5.7 5.8 6.1 6.2 6.3 6.4 1 2 3 4 6 7 screenshots evaluation accuracy calculation bibliography base paper plagiarism function point review sheet ii iii iv 29 30 30 30 30 31 32 32 32 34 35 36 39 39 39 40 41 44 45 46 47 57 60 61 remote intelligent assistant fundamental interaction operating command-line cli cli help leverage full potential operating widespread command-line learn syntax command language hinders ability effectively operating aim provide natural language form intelligent assistant ia command-line solution ia understand english sentence convert logically semantically correct linux bash command ia running 's linux device provided bot slack domain restricted linux bash command describing domain restricts lot extraneous input span entire english language domain allows construct context free grammar cfg describing input sentence underlying domain propose extract input constructed cfg construction linux bash command input attempt provide solution yielded natural language conversion linux command language extended add lie current neural network handling ambiguity gathering context input keywords intelligent assistant context free grammar natural language conversion linux bash command-line 2016-17 1 remote intelligent assistant 1 2016-17 2 remote intelligent assistant organized 1.1 background proposed 1.2 aim 1.3 1.4 description development 1.1 background bridge gap command cli operating reia solution overcome accessing machine natural language intelligent assistant understands natural language generates command executes 1 access control machine input command english provide natural language underlying operating remote access machine running reia simplify accessing machine mobile device browser location 2 constantly evolving nave access operate prior knowledge includes natural language command-line allows access machine remote location text input speech input handle multiple simultaneously recommendation account performance logging 2016-17 3 remote intelligent assistant 1.2 aim 1.2.1 aim aim implementing based remote natural language support executing command-line machine 2 natural language remote machine slack processed generate command executed machine 1.2.2 main provide uniform operating ease command effectively allow access machine simple language execute generated command remote machine return provide remote access machine location provide recommendation command unable understand 1.3 time daily life face issue effectively device achieved provided operating command console operating provide form mentioned interaction ordeal adapt operating remove adapt provide uniform operating ease command effectively wa thought 2016-17 4 remote intelligent assistant factor wa eased mentioned abstraction provided gain remote access located geographically location enabling connect effectively artificial intelligence variety volume console command operating machine learning artificial intelligence technique imperative fact lot time effort effectively interact reduced motivates urge learn explore vast intriguing field machine learning artificial intelligence drive strive complete framework gather analyse integrate deployment support 2016-17 5 remote intelligence assistant 2 2016-17 6 remote intelligence assistant review organized 2.1 describes existing virtual assistant 2.2 illustrates proposed 2.3 describes comparative reia assistant 2.1 existing 2.1.1 betty betty translates plain english command linux terminal command development natural language input main betty consists basic command showing username ip address compress decompress files/folders change permission file folder employ pattern matching command comparatively small functionality limited inviting commits 2.1.2 sirius sirius source stand-alone intelligent assistant sirius receives query form speech image return form natural language sirius implement functionality speech recognition image processing natural language processing question answer major advance intelligent assistant 2016-17 7 remote intelligence assistant 2.2 proposed proposed remote assistant reia convert english sentence operating command reia natural language underlying operating extends service providing remote access well provide nave access prior knowledge operating command friendly provide remote access enabling communicate machine network consist nlp engine processing text keywords structured help combination pipelined classifier vectorizer term frequency inverse document frequency tf-idf onevsrest classifier train adapt language style order deliver better accuracy ambiguity input slack ensures reia flexible scalable allows addition number member allowing multiple member access remotely queuing ensures real-time message multiple handled unique slack care reply extended handle voice input well simplifying effort cost reia provide functionality modify response suit offering greater level control 2016-17 8 remote intelligence assistant 2.3 comparative 2.1 comparative 2016-17 9 remote intelligence assistant 3 2016-17 10 remote intelligence assistant specifiation deal organized 3.1 form describes context 3.2 explains scenario description explained 3.3 help object 3.4 description major function class hierarchy constraint discussed 3.5. 3.6 describes 3.7 describes state transition restriction constraint associated explained 3.8. validation process described 3.9. 3.10 describes 3.11 introduces 3.1 3.1.1 desktop remote intelligent assistant operating based linux generates command-line command natural english language message consist nlp engine processing text message obtaining english command train based message pattern generate recommendation unknown ambiguous command order enhance experience resolve ambiguity input ensure nave interact linux command-line better alternative gui slack message transfer ensures remotely accessible scalable remote access enables communicate machine network extended handle 2016-17 11 remote intelligence assistant voice input well simplifying effort cost 3.1.2 understand natural language message execute command desired machine provide provide natural language linux operating providing natural language remote access independent location build train adapting mannerism language style enabling handle provide full access control desktop remotely providing input command simple natural language user-friendly allowing nave access operate easily natural language prior knowledge command-line command provide uniform linux operating ease command effectively gain remote access located geographically location enabling connect artificial intelligence convert english sentence operating command provide remote access ease usability portability 2016-17 12 remote intelligence assistant 3.1.3 translates english instruction command-line command providing remote access 3 machine involves three slack message adapter 4 tokenizer nlp engine execution engine modelled structured machine learning classifier nlp concept 3.1.4 context initially start basic unambiguous english language identify pattern natural language learning mannerism language style enabling handle complex command well 3.1.5 major constraint relies premise keep machine connected internet order utilize remote access command restricted constraint handling physical switching machine ambiguity input affect accuracy 3.2 usage scenario usage scenario organized collected elicitation use-cases 3.2.1 profile 2 main users- client host machine 3.2.2 use-cases use-cases platform applied context 2016-17 13 remote intelligence assistant input listen favourite song output generate playlist played song input mail xyz file person email output mail file email input append text abc file xyz output append text file input send resume named resume.docx output locate upload file resume.docx 3.3 description describes domain 3.3.1 description object major object considered input text message english translated command-line command process sending message send multiple message slack adapter 2016-17 14 remote intelligence assistant 3.3.2 complete fig 3.1 reia 3.3.3 dictionary input window send message adapter input window output window receives reply slack adapter output window 3.4 description description major function class hierarchy oo presented 3.4.1 description function function/process slack adapter processing message ml/nlp engine 3.4.1.1 processing narrative pspec function client machine send message command host machine input screen 2016-17 15 remote intelligence assistant 3.4.1.2 function fig 3.2 reia fig 3.3 modular reia 2016-17 16 remote intelligence assistant 3.4.1.3 performance issue special performance subsystem 3.1 performance issue classifier underfitting machine learning leading increased bias operating command unix window input message ambiguity message misinterpretation complexity message complex instruction inability translate command 3.5 constraint scalable reliable time delivering accurate translation 3.6 description described 3.6.1 machine link client host side 3.6.2 link slack server queue receive message 2016-17 17 remote intelligence assistant 3.6.3 human 3.7 behavioural description description behavior presented 3.7.1 description behavior detailed description major event state presented 3.7.2 event main event sending message processing instruction engine relaying output message 3.7.3 state major state sending message queuing processing receiving output message 3.7.4 state transition fig 3.4 transition reia 3.8 restriction constraint major issue machine learning handling complexity dataset computation time 1. underfitting machine learning classification training dataset insufficient learning difficulty classifying accurately instance bias 2016-17 18 remote intelligence assistant 2. ambiguity translation variation input pattern language style well ambiguous natural language hamper productivity 3. network connectivity issue network connectivity affect publishing subscribing message slack 3.9 validation criterion approach validation described 3.9.1 class three major stage conducted checking subscribing publishing message considering concurrency scalability security message second engine training third conducting performance period time 3.9.2 expected response expected expected output three 3.10 enlisted 3.10.1 slack 'team created slack device bot bot addressed code token token generated slack website bot 3.10.2 python 3 2016-17 19 remote intelligence assistant 3.10.3 pip3 package python 3 needed install python package 3.10.4 command-line interpreter command-line interpreter linux command generated intelligent assistant 3.10.5 linux operating current cover linux command-line command linux operating extended operating 3.11 3.11.1 network access time network access needed remote access slack send message intelligent assistant running 's device send receive message network access needed 2016-17 20 remote intelligence assistant 4 2016-17 21 remote intelligence assistant organized 4.1 describes high-level proposed remote access 4.2 describes use-case 4.3 describes class 4.4 describes 4.5 4.6 describes deployment 4.1 level fig 4.1 level reia 4.1.1 description client machine initiate request sending message english language host machine message adapter assigns message relevant queue grabbed host machine run-time basis nlp engine tokenizes classifies keywords based converted terminal command 2016-17 22 remote intelligence assistant host machine machine execution generated command occurs execution engine command generating 4.1.2 level definition fig 4.2 modular reia 2016-17 23 remote intelligence assistant 4.2 fig 4.3 reia 2016-17 24 remote intelligence assistant 4.3 class fig 4.4 class reia 2016-17 25 remote intelligence assistant 4.4 fig 4.5 reia 4.5 fig 4.6 reia 2016-17 26 remote intelligence assistant 4.6 deployment fig 4.7 deployment reia 2016-17 27 remote intelligence assistant 5 2016-17 28 remote intelligence assistant organized 5.1 5.2 library framework 5.3 directory 5.4 description 5.5 describes 5.6 5.7 5.1 1. vectorizer tf-idf onevsrest classifier 2. jaro-winkler jaccard distance 3. part-of-speech po tagging 4. lexical 5.2 library framework 1. natural language toolkit nltk 2. slack adapter message interchange 3. sckit-learn python machine learning library 4. miscellaneous python library 2016-17 29 remote intelligence assistant 5.3 directory fig 5.1 directory reia 5.4 5.4.1 count-vectorizer convert document count matrix count modelled sparse representation count equivalent vocabulary size calculated extraction 5.4.2. tf-idf term frequency-inverse document frequency describe word document collection generally weighting factor retrieval text mining calculating frequency word document help removing bias longer document calculating augmented frequency boolean frequency reduces misclassification extent augmented term frequency 2016-17 30 remote intelligence assistant 0.5 0.5 max eq 1 inverse document frequency inverse document frequency measure word document log eq 2 total number document corpus || number document term appears i.e 0 term corpus lead division-by-zero error common adjust denominator 1 term frequencyinverse document frequency tfidf calculated term appearing document tf-idf approach eq 3 5.4.3 jaro wrinkler distance jarowinkler distance measure distance document jaro distance calculated represents minimum number single-character transposition change word distance inversely proportional similarity similarity increase decrease jaro distance jaro distance 2016-17 31 remote intelligence assistant 0 0 1 3 |1| |2| eq 4 || length string number matching character half number transposition 5.4.4 jaccard distance jaccard coefficient measure similarity sample defined intersection size divided union size sample eq 5 empty define 1 jaccard distance measure dissimilarity calculated subtracting jaccard coefficient 1 1 eq 6 5.4.5 po tagger part-of-speech tagger po tagger read text language assigns speech word noun verb adjective stanford po tagger 5.5 5.5.1 historical semi-detached reason development considered semi-detached development consists mixture experienced inexperienced people member limited experience developed massive simple compact cocomo semi-detached 2016-17 32 remote intelligence assistant 5.5.2 estimation technique applied estimation technique constructive cost cocomo 3.0 8 1.12 30.8 basic cocomo equation semi-detached ab 3.0 bb 1.12 cb 2.5 db 0.35 kloc estimated number delivered code 1 effort applied ab kloc bb man-months 2 development time cb effort applied db month 3 people effort applied/development time count 30.8/8.3 3.7 3-4 people needed 2.5* 30.8 0.35 8.3 4 people 4 5.5.3 staff follows- member responsibility designer developer tester division member 1 slack connection member 2 tokenizer member 3 nlp engine member 4 classifier reporting mechanism progress reporting 1. meeting saturday sunday 2. meeting monday maintaining weekly log progress week 2016-17 33 remote intelligence assistant 3. meeting 15 day frequent reporting mail 5.6 5.6.1 pert fig 5.2 pert reia 5.6.2 gantt fig 5.3 gantt reia 2016-17 34 remote intelligence assistant 5.7 1. connects reia slack channel general domain illuminatepict.slack.com 2. communicates reia posting message channel starting message tagging reia reia e.g reia kernel 3. message posted channel continuously listening message read extract parameter message timestamp channel 4. message written message queue maintained locally machine queue erased terminated based config parameter enable disable config.yml file /config/config.yml 5. reia continuously read message queue message processed till erased queue pending confirmation 6. message read reia queue tokenized 7. tokenizing message input classifier classifies message appropriate class folder file network general 8. class command maintained json message compared string matching jaro-wrinkler distance based threshold best match returned 9. based match mapping linux command json mapping maintained purpose 10. message po tagger separate verb noun proper noun path classified nnp proper noun path absolute path python script 2016-17 35 remote intelligence assistant 11. equivalent linux command formed extracted 12. finally command executed shell command python process 5.6 screenshots fig 5.2 slack response 1 2016-17 36 remote intelligence assistant fig 5.3 slack response 2 fig 5.4 slack response 3 2016-17 37 remote intelligence assistant 6 2016-17 38 remote intelligence assistant evaluation 6.1 describes 6.2 describes 6.3 describes accuracy calculation 6.4 describes log 6.1 reia convert english command executes response time le 1 second decent internet connection multiple variation command handled multiple interact tagged responded individually message missed exit message processed pick message time history maintained queue 6.2 6.2.1 manual wa tested automated step execution 6.2.2 unit three unit 1. message transfer slack 2. message classification proper category 3. command generation execution wa tested checked identification bug 2016-17 39 remote intelligence assistant proved bug wa 6.2.3 integration integrated tested proper functionality feeding multiple message multiple classified sentence category correctly generated executable command 6.2.4 function properly real time wa wa sentence category convert command 80 accuracy consistently input 6.3 accuracy calculation accuracy wa calculated formulae- fig 6.1 log 2016-17 40 remote intelligence assistant 6.4 6.4.1 neural network artificial neural network ann processing paradigm inspired biological nervous brain process key element paradigm novel processing composed number highly interconnected processing element neurones working unison solve specific anns people learn example ann configured specific pattern recognition classification learning process learning biological involves adjustment synaptic connection exist neurones anns well 6.4.2 recurrent neural network human interpret understand word based previous word encounter n't scratch everytime discarding current principle recurrent neural network rnn loop allow persistence fig 6.2 loop rnn chunk neural network input output loop allows passed step network recurrent neural network thought multiple copy network passing message successor perform example consider language predict word based 2016-17 41 remote intelligence assistant previous predict word cloud sky dont context pretty obvious word going sky gap relevant needed small rnns learn context consider predict word text grew france speak fluent french suggests word language narrow language context france entirely gap relevant point needed gap grows rnns unable learn connect 6.4.3 lstm network long short term memory network special kind rnn capable learning long-term lstms explicitly designed avoid long-term remembering long period time practically default behaviour struggle learn recurrent neural network form chain repeating neural network standard rnns repeating simple single tanh layer lstm network artificial neural network lstm unit addition network unit lstm unit recurrent network unit excels remembering long short duration time key ability activation function recurrent component stored iteratively squashed time gradient blame term doe tend vanish backpropagation time applied train aim rnn lstm allow remember context command usage correctly classify subsequent attempt flexibility increase accuracy 2016-17 42 remote intelligence assistant 7 2016-17 43 remote intelligence assistant remote intelligent assistant reia natural language underlying reia easy reliable solution allows access machine natural language compromising privacy reia allow communicate remote machine control virtually handle multiple simultaneously text input extended speech input well allows natural language enable novice linux interact prior knowledge terminal command additionally easily automate linux server administrator reia accessible desktop well mobile app allows bridge gap command cli 2016-17 44 remote intelligence assistant 1. joao santos joel j.p.c rodrigues joao casal kashif saleem victor denisov intelligent assistant based internet thing approach journal 2016 volume issue 99 2. ryota ozaki soichiro hidaka kazuya kodama katsumi maruyama accessing remote device conventional mobile computing environment national informatics volume 2 issue 3 2015 3. adnan ul-hasan muhammad zeshan afzal faisal shafait marcus liwicki learning approach multiple script identification 2015 volume 3 issue 9 4. alex graf abdel-rahman mohamed geoffrey hinton speech recognition deep recurrent neural network 2015 volume 2 issue 97. 2016-17 45 remote intelligence assistant bibliography 1. practitioner approach edition roger s. pressman ph.d. mcgraw-hill higher education isbn 10 0073655783 2. learning python 5th edition o'reilly medium isbn 13 9781449355739 3. learn python hard sourav sen gupta third edition http //learnpythonthehardway.org/ 4. nltk essential nitin hardeniya packt publishing limited 27 2015 isbn-13 978-1784396909 5. machine learning tom mitchell mcgraw-hill 1997 isbn 13 9780071154673 6. python3 text processing nltk3 cookbook jacob perkins packt publishing limited 26 2014 isbn 13 978-1782167853 7. mastering natural language processing python deepti chopra packt publishing limited 31 2016 isbn 13 978-1783989041. 2016-17 46 remote intelligence assistant base paper 2016-17 47 remote intelligence assistant 2016-17 48 remote intelligence assistant 2016-17 49 remote intelligence assistant 2016-17 50 remote intelligence assistant 51 2016-17 remote intelligence assistant 2016-17 52 remote intelligence assistant 2016-17 53 remote intelligence assistant 2016-17 54 remote intelligence assistant 2016-17 55 remote intelligence assistant 56 2016-17 remote intelligence assistant plagiarism 57 2016-17 remote intelligence assistant 2016-17 58 remote intelligence assistant 2016-17 59 remote intelligence assistant function point 2016-17 60", "keywords": ["access machine", "accuracy calculation", "artificial intelligence", "aseem raina", "assistant reia", "assistant remote", "assistant remote intelligence", "base paper", "bash command", "commandline command", "context free", "context free grammar", "document frequency", "english command", "free grammar", "frequency inverse", "frequency inverse document", "function point", "host machine", "intelligence assistant", "intelligence assistant remote", "intelligent assistant", "inverse document", "jaccard coefficient", "jaccard distance", "kapil vyas", "language processing", "language style", "linux bash", "linux bash command", "linux command", "maanav shah", "machine natural", "machine natural language", "mayank aseem", "mayank aseem raina", "modular reia", "natural language", "natural language processing", "neural network", "nlp engine", "operating command", "po tagger", "recurrent neural", "recurrent neural network", "remote access", "remote intelligence", "remote intelligence assistant", "remote intelligent", "remote intelligent assistant", "remote machine", "term frequency", "terminal command", "volume issue", "word document"], "libraries": ["nltk"], "languages": ["basic", "small", "python"], "frameworks": [], "dbs": []}, "./reports/11_final_report.pdf": {"title": "food ordering application with smart   recommendations for malls", "filename": "./reports/11_final_report.pdf", "data": "food ordering smart recommendation mall agrawal nihal narayandas b120058505 barule sameer sanjay deepti godse b120058515 b120058529 nisha anilrao b120058572 guidance prof. sachin s. pande sr.no.27 satara road 411043 2016-2017 food ordering smart recommendation mall agrawal nihal narayandas b120058505 barule sameer sanjay b120058515 deepti godse b120058529 nisha anilrao b120058572 bonafide prof. sachin s. pande earlier diploma prof. s.b deshmukh coordinator prof. sachin s. pande dr. p.t examiner acknowledgement great pleasure presenting food ordering smart recommendation mall prof. sachin s. pande help guidance grateful valuable support valuable suggestion helpful prof. nisha r. sodha dr. emmanuel m. prof. s. b. deshmukh help support guidance express sincere regard dr. a. m. bagade in-charge hod valuable suggestion help undertaken complete kind assistance encouragement forget express immense sense thankfulness dr. p. t. extended co-operation needed express gratitude appreciation opportunity completing directly indirectly helped agrawal nihal narayandas b120058505 barule sameer sanjay b120058515 deepti godse b120058529 nisha anilrao b120058572 food ordering smart recommendation mall ____________________________________________ 1 2 3 1.1 1.2 1.3 1.4 1.5 1.6 2.1 2.2 2.2.1 2.2.2 2.3 3.1 3.1.1 3.1.2 3.2 title nomenclature introduction/background aim relevance development background review background review existing proposed 2.2.2.1 item-item collaborative recommendation technique programming language specification definition specification ii iii iv 1 2 2 3 3 4 5 7 8 9 9 11 12 13 14 15 15 16 17 2016-17 food ordering smart recommendation mall 3.2.1 3.2.1.1 staff 3.2.1.2 cocomo 3.2.3 staff 3.2.4 3.2.5 3.3 3.3.1 3.3.2 3.3.3 3.4 4.1 4.2 3.4.1 3.4.2 4.1.1 4.2.1 4.2.2 4.3 4.3.1 4.3.2 4.3.3 3.2.3.1 3.2.3.2 member role gantt description profile description main component 4.1.1.1 android 4.1.1.2 android eatery 4.1.1.3 recommendation 4.1.1.4 database description description class description description function description control description 4.3.3.1 4 17 17 17 18 18 18 19 19 20 20 20 21 23 23 23 24 25 26 26 26 27 27 28 28 28 29 29 29 30 30 2016-17 food ordering smart recommendation mall 5.1 6.1 6.2 6.3 6.4 6.5 7.1 7.2 7.3 7.4 7.5 5.1.1 5.1.2 5.1.3 5.1.4 5.1.5 5.1.6 5.1.7 5.1.8 4.3.3.2 eatery 4.3.3.3 4.3.3.4 eatery implemented fetching nearby mall displaying online eatery displaying menu time shopping cart recommendation order cancellation swipe refresh rating evaluation experimental setup strategy evaluation offer solution a. base paper b. plagiarism c. review sheet 31 32 33 34 35 35 35 36 36 36 38 38 38 39 40 40 41 44 50 55 56 56 56 57 57 58 60 5 6 7. 2016-17 food ordering smart recommendation mall ____________________________________________ 1.1 3.1 3.2 3.3 4.1 4.2 4.3 4.4 4.5 4.6 title waterfall gantt use-case class eatery eatery 4 18 19 21 25 28 30 31 32 33 2016-17 food ordering smart recommendation mall ____________________________________________ 3.1 3.2 3.3 title co-efficient semi-detached use-case description 17 19 21 2016-17 ii food ordering smart recommendation mall nomenclature ____________________________________________ qos gps cf service global positioning collaborative filtering cocomo constructive cost kloc ram ui kilo code random access memory 2016-17 iii food ordering smart recommendation mall ____________________________________________ today fast track life people enjoy outing visiting mall eating food counters/eateries suppose group people visit mall possibility snacks/food eatery time consuming eatery order kind situation impossible group 6- 7 people eat android help order eateries/food counter physically visiting save time going eatery placing order wait till order ready order ready collect respective eatery enjoy eating food choice subsequently rating help selecting proper food item recommendation based rating rating keywords android device gps rating prediction collaborative filtering recommendation 2016-17 iv food ordering smart recommendation mall 1 2016-17 1 food ordering smart recommendation mall __________________________________________ organized 1.1 background proposed 1.2 aim 1.3 1.4 relevance 1.5 development 1.6 1.1 introduction/background bridge gap food provider restaurant eatery customer enjoy food eatery mall time group people mall prefer food eatery food eatery eatery wait queue order placing order wait till order ready help order eatery time necessity physically visiting eatery help saving time going eatery placing order wait order ready includes thing display nearby mall display eatery mall display food menu eatery time allows order food eatery time recommendation food item prefer order allows rate food item 1.2 aim 1.2.1 aim main aim implement android based food ordering smart recommendation save time physically going placing order reduces waiting time order ready 2016-17 2 food ordering smart recommendation mall 1.2.2 main deliver food ordering allows order food eatery time deliver order food eatery mall deliver dynamic listing eatery help finding eatery deliver dynamic listing menu help selecting proper eatery proper food provide recommendation food item select best food food option 1.3 food currently ordering food display opening closing time time displayed time dynamic listing menu menu displayed photo snapshot menu card people waste lot time waiting queue food order wait order ready bridge gap food provider customer enjoy food eatery mall time help saving time going eatery placing order wait order ready sure eatery listed currently eatery closed displayed provide dynamic listing menu item presently stock ordered 1.4 relevance current scenario eateries/restaurants help collect order carry procedure hand multiple order food eatery order food eatery time 2016-17 3 food ordering smart recommendation mall help order food eatery time mall overhead keeping multiple order food eatery current scenario dynamic menu listing dynamic eatery availability listing eatery listed dynamically eatery time listed food item stock time listed help easily order food recommendation help easily choose food item help easily order food eatery time 1.5 development waterfall documented well fixed clear definition product stable well understood ambiguous 1.1 waterfall 2016-17 4 food ordering smart recommendation mall benefit waterfall allows control departmentalization time developmental stage product process waterfall development step framework gather analyze integrate deployment support 1.6 organized 1 background relevance 1.1 explains background 1.2 explains aim 1.3 explains 1.4 explains relevance 1.5 explains development 1.6 explains 2 background 2.1 explains background 2.2 explains review 2.3 explains programming language 3 specification 3.1 explains definition 3.2 explains specification 3.3 explains description 3.4 explains 4 4.1 explains proposed 4.2 explains description 4.3 explains description 5 5.1 explains implemented 6 evaluation 6.1 explains experimental setup 6.2 explains strategy 6.3 explains 6.4 7 7.1 explains 7.2 explains evaluation 7.3 explains 2016-17 5 food ordering smart recommendation mall 7.4 explains explains solution 7.5 explains 7.6 explains 2016-17 6 food ordering smart recommendation mall 2 2016-17 7 food ordering smart recommendation mall background review __________________________________________ organized 2.1 background 2.2 review explains existing proposed 2.3 programming language 2.1 background bridge gap food provider restaurant eatery customer enjoy food eatery mall time group people mall prefer food eatery food eatery eatery wait queue order placing order wait till order ready help order time eatery time necessity physically visiting mall help saving time going eatery placing order wait order ready includes thing display nearby mall display eatery mall display food menu eatery time allows order food eatery time recommendation food item prefer order allows rate food item 2016-17 8 food ordering smart recommendation mall 2.2 review 2.2.1 existing xi chen 8 proposed characteristic include availability reputation response time called service collection qos service provider impractical characteristic response time availability service mapped help client side qos gathered source observed performance qos strong relation location qos considered 1 non-functional characteristic web service 2 key factor service selection employing web service location qos location-aware web service recommender personalized qos prediction enhanced concept collaborative filtering majorly implemented commercial recommender prediction well recommendation item rating gathered basic collaborative filtering collaborative filtering dependent treating user-item matrix broad class cf memory based second based memory based difficult implement le educating cost gather rating fresh consideration computation complexity based memory dont map number learned rating model-based technique machine learning statistical datasets scaled faster memory based good yan hu 3 proposed random walk automated discovery item random walk item treated node item similarity treated edge constructing item graph find item random 2016-17 9 food ordering smart recommendation mall walk performed construct hybrid graph item considered node user-items interaction considered edge yan hu 3 built service graph well graph edge weighted service similarity well similarity random walk implemented determine amount kind neighbor rasool 9 proposed gps well android network location provider utilized implementing location-aware android location determined android 's network location provider help wi-fi signal cell tower reacts instantly usage battery power reduced gps network location provider location gps global positioning utilized locating device position correctly tracking gps receiver tracking mobile equipment haiyun lu 6 proposed study history purchase behavior discover purchase pattern well item provide recommendation gain greater accuracy recommendation author performed simulation well synthetic examining efficiency method comparing normal sequential pattern method method gained greater accuracy lina yao 7 proposed named collaborative filtering implemented high-scale web service recommendation physical location service considered qos-based service recommendation refined nearest-neighbor qos factor network invocation failure-rate latency network condition location service combining item well user-based collaborative filtering cf method method author solve issue service invocation based qos characteristic mohammad amir 4 proposed three main approach recommendation 2016-17 10 food ordering smart recommendation mall content-based filtering based filtering cognitive filtering based filtering rating active item provide recommendation rating collaborative filtering technique rating multiple item multiple located collaborative filtering rating current rating provide recommendation hybrid filtering hybrid filtering technique combined technique recommendation main cold start solved help method zhe yang al 2 proposed collaborative filtering classified main based filtering technique probabilistic approach predict rating unrated item machine learning bayesian network clustering memory based filtering technique find similarity item predict rating unrated item technique classified based collaborative filtering technique calculates similarity active provide recommendation technique count le count item item item collaborative filtering technique calculates similarity item provide recommendation technique count item le count customer 2.2.2 proposed based approach drawback item food movie feasible characteristic determination technique text file representation captured consideration factor affect customer experience 2016-17 11 food ordering smart recommendation mall issue specialization predict item maximum interest restricted recommendation item category item rated common recommender predicting rating rating monotonous thing le rating better experience based self- rating criterion performance decrease amount compromising performance user-based collaborative filtering amount usage revealed challenge 1 sparsity 2 scalability overcome novel approach proposed i.e item based collaborative filtering 2.2.2.1 item item collaborative recommendation technique basic concept technique buy item identical item bought help previous purchase rating group identical item recognized recommendation main identify item item representation matrix determine connection item predict unrated item technique interested buying item kind item determine neighborhood recommendation requested tend produce faster recommendation technique similarity item calculated cosine similarity method item similarity rating predicted unrated item weighted sum method predicted rating top-n recommendation 2016-17 12 food ordering smart recommendation mall 2.3 programming language implementing programming language hosted database amazon web server android coding android studio version 2.2. java implementing major functionality ui developed xml mysql storing database php connecting database android code implementing item-item collaborative filtering library 2016-17 13 food ordering smart recommendation mall 3 2016-17 14 food ordering smart recommendation mall specification __________________________________________ organized 3.1 definition 3.2 explains specification 3.3 description 3.4 3.1 definition aim implementing android based food ordering smart recommendation eatery mall save time physically going placing order reduces waiting time order ready food currently display opening closing time eatery time restaurants/eateries displayed time real time listing menu menu displayed photo snapshot menu card people waste lot time waiting queue food order wait order ready reduce gap food provider restaurant eatery customer enjoy food eatery mall time help save his/her time going eatery placing order wait order ready display eatery currently eatery closed displayed real time listing menu provided item presently stock recommendation help choose proper food rate food item ordered 3.1.1 main 1. better time 2. provide efficient eliminates waiting time queue placing order 2016-17 15 food ordering smart recommendation mall 3. help save waiting time collect order 4. order food counter time 5. help select best food recommending best food item 3.1.2 offline android phone order app customer order food eatery mall located range kilometre order food eatery mall time food ordered multiple eatery time food delivered physically collect order 2016-17 16 food ordering smart recommendation mall 3.2 specification 3.2.1 3.2.1.1 staff android designer android designer order decide android developer android developer order develop android database handler database handler order handle database change database documentation handler documentation handler order create document change document tester tester order developed applying appropriate strategy 3.2.1.2 cocomo cocomo stand constructive cost cost effort complete depending calculated number person complete semi- detached kilo code 8.5 semi- detached co-efficient ab co-efficient bb co-efficient cb co-efficient db semi-detached 3.0 1.12 2.5 0.35 3.1 co-efficient semi detached 2016-17 17 food ordering smart recommendation mall effort applied ab kloc 3.0 8.5 1.12 effort applied 32.966 persons/month development time cb effort applied 2.5 32.966 0.35 development time 8.497 month people effort applied/ development time 32.966/8.497 people 3.88 4. people complete 4 3.2.3 staff 3.2.3.1 consists finalized change 3.1 3.2.3.2 member role monitor keep track preparing 2016-17 18 food ordering smart recommendation mall involves coding documentation guidance 3.2.4 start discussion 15/06/2016 15/07/2016 topic finalization 16/07/2016 20/07/2016 21/07/2016 1/09/2016 coding 2/9/2016 15/03/2017 16/03/2017 26/03/2017 documentation 26/03/2017 04/04/2017 3.2.5 gantt 3.2 3.2 gantt 2016-17 19 food ordering smart recommendation mall 3.3 description 3.3.1 profile profile category described actor description described actor customer eatery admin performed actor described actor performed 1. customer customer log selects mall nearby mall eatery selected eatery depending choice customer selects food item eat check food item cart change order customer cancel order permissible time limit order status change order ready collect food enjoy eat customer rate food item 2. eatery firstly eatery log order displayed prepare food food ready eatery notifies food collected eatery update collection status eatery update quantity food item 3. administrator administrator monitor handle database keep track eatery online offline current previous order 3.3.2 2016-17 20 food ordering smart recommendation mall 3.3 use-case 3.3.3 description use-case use-case description customer order registered verification view nearby mall mall located range kilometer displayed select mall mall selected customer 2016-17 21 food ordering smart recommendation mall select eatery handle cart customer select eatery eatery customer add cart delete cart update cart order customer order selecting food item rating rating food item update quantity eatery update food quantity food item view order update status eatery view order customer eatery update order ready status order collection status monitor database admin monitor handle database 3.3 use-case description 2016-17 22 food ordering smart recommendation mall 3.4 3.4.1 intel dual core processor minimum 2gb ram hard disk space 50gb android phone minimum 512mb ram 3.4.2 window 7/ubuntu 14.04 android studio version 1.0 android version 4.0 mysql version 5.5 mysqlite version 3.3 amazon ec2 2016-17 23 food ordering smart recommendation mall 4 2016-17 24 food ordering smart recommendation mall __________________________________________ organized 4.1 complete architectural proposed 4.2 description 4.3 description 4.1 4.1 proposed 2016-17 25 food ordering smart recommendation mall 4.1.1 main component main component android android eatery recommendation database 4.1.1.1 android component requires order food food ordered order depending location nearby mall displayed selecting mall eatery time displayed selecting eatery food item displayed select food eat simultaneously select food eatery selected food item cart remove add food item cart recommendation displayed help choose good food item order food item pending order cancel order permissible time limit cancel order status displayed order ready order status automatically updated collect order collect order rating window pop- rate food item 4.1.1.2 android eatery eatery order keep track order update order status update food count eatery eatery log order displayed order ready eatery update status collect order eatery update status eatery update quantity food item food item ordered count food item automatically detected eatery log displayed 2016-17 26 food ordering smart recommendation mall 4.1.1.3 recommendation recommendation implemented order provide recommendation food item item-item collaborative filtering recommendation purpose rating food item input rating food item stored matrix form cosine similarity similarity food item calculated step rating predicted unrated item help weighted sum method predicted rating food item top item recommended 4.1.1.4 database component database stored database mysql database 3nf 3rd normalization form connecting database stored mall mall_name latitude longitude mall_id field eatery field eatery_id eatery_name menu field menu_id order field order_id order_status time multiple requested eatery database fetched request output 2016-17 27 food ordering smart recommendation mall 4.2 description 4.2.1 description kind input selected mall selected eatery selected food item rating output generated thing nearby mall eatery food item order order status recommendation 4.2.2 class 4.2 class 2016-17 28 food ordering smart recommendation mall 4.3 description 4.3.1 description function function performed basic functionality registration phase includes uploading basic username email_id mobile number selection phase includes selection mall selection eatery selection food item ordering phase phase select food choice eatery confirm order recommendation phase phase recommendation based current previous order rating phase phase rate food item 4.3.2 description described customer nearby mall eatery mall selecting eatery food menu listed selecting food item cart displayed recommended item displayed confirms order pending order displayed item collected rate food item eatery order customer eatery update order status order ready eatery update order collection status order collected eatery update count food item 2016-17 29 food ordering smart recommendation mall 4.3.3 control description 4.3.3.1 4.3 2016-17 30 food ordering smart recommendation mall 4.3.3.2 eatery 4.4 eatery 2016-17 31 food ordering smart recommendation mall 4.3.3.3 4.5 2016-17 32 food ordering smart recommendation mall 4.3.3.4 eatery 4.6 eatery 2016-17 33 food ordering smart recommendation mall 5 2016-17 34 food ordering smart recommendation mall __________________________________________ organized 5.1 explains main implemented 5.1 implemented consists android android studio database mysql sqlite php connectivity android php recommendation library functionality main implemented fetching nearby mall displaying online eatery displaying menu eatery time shopping cart recommendation order cancellation swipe refresh rating 5.1.1 fetching nearby mall display nearby mall log log latitude longitude server haversine formula calculates distance latitude longitude latitude longitude mall mall located threshold range displayed threshold range 1 kilometer mall 1 kilometer range displayed 5.1.2 displaying online eatery current scenario website display opening closing time eatery time visit restaurant eatery closed eatery time displayed purpose prepared separate 2016-17 35 food ordering smart recommendation mall eatery eatery online eatery displayed 5.1.3 displaying menu time current scenario website snapshot menu time food item eatery food item time eatery listed purpose count food item maintained food item ordered count item decrement count reach item displayed 5.1.4 shopping cart item selected stored shopping cart food item shopping cart removed shopping cart local phone memory store item cart retained minimizes local sqlite database wa shopping cart 5.1.5 recommendation recommendation select proper food item item based collaborative filtering recommendation script written executes 3 second basic concept technique buy item identical item bought help previous purchase rating group identical item recognized recommendation item-item collaborative filtering implemented method formula method implement item-item collaborative filtering explained step 1 rating item matrix form implement rated item rated item rated item rating stored matrix form matrix 2016-17 36 food ordering smart recommendation mall rating multiple item step step form item-to-item similarity matrix step 2 item similarity computation step find similarity item find identical item similarity stored similarity matrix main reason step find choice number compute similarity item cosine similarity compute similarity item cosine similarity calculated formula ||||2||||2 1 item dot product vector obtaining similarity matrix step predict rating item rated step 3 prediction computation step method predict rating item rated weighted sum method predict rating active prediction predefined range formula 2 si similarity 2016-17 37 food ordering smart recommendation mall prediction top item recommended 5.1.6 order cancellation allows cancel order permissible time limit time limit cancel order demo purpose time limit minute time limit finished cancel order 5.1.7 swipe refresh time poor internet connection item loaded time food item ordered change reflected overcome implemented swipe refresh functionality help refresh swiping thread concept java implement 5.1.8 rating food item collected rating window automatically pop screen rate item async functionality java range rating 0.5 5. minimum rating 0.5 maximum rating 5. 2016-17 38 food ordering smart recommendation mall 6 2016-17 39 food ordering smart recommendation mall evaluation __________________________________________ organized 6.1 explains experimental setup 6.2 explains strategy 6.3 6.4 6.5 6.1 experimental setup experimental setup described hosted server aws free tier mysql store database phpmyadmin store mysql database android studio front java coding php connect mysql android sqlite database local storage library implementing item-item collaborative filtering firstly layout created android retrieved database json format request database android php json format occurring client server code executed emulator change converted .apk format android studio .apk file imported android phone installed executed 6.2 strategy unit strategy unit process development small individually tested unit individually tested integrating help unit amount error removed good built unit designed tested separately find bug bug error corrected main advantage unit individually unit thing sure tested separately multiple tested simultaneously unit input individual check output output correct 2016-17 40 food ordering smart recommendation mall tested output bug error change correct bug error unit applied process continues correct error free output unit strategy amount bug error minimized built efficient unit strategy 6.3 6.3.1 check credential entered correct checked credential entered correct customer enters correct credential wrong credential entered customer allowed asked enter correct credential customer logged enters correct credential tested wrong credential correct credential customer enters wrong asked enter customer enters correct credential logged 6.3.2 check nearby mall displayed correctly checked mall located nearby 1 kilometer displayed correctly latitude longitude mall stored database mall located kilometer range displayed nearby mall located 1 kilometer range displayed 6.3.3 confirm online eatery displayed tested online eatery eatery online displayed eatery online eatery offline online eatery displayed offline eatery displayed wa 2016-17 41 food ordering smart recommendation mall 6.3.4 check food item displayed food item displayed updated count food item updated count food item executing item displayed count wa item count wa displayed 6.3.5 check item cart total displayed correct check selected item cart total amount displayed correct multiple food item selected removed multiple time item cart total amount displayed wa correct 6.3.6 check order order generated displayed eatery check order order correctly generated reverted eatery multiple food item selected order wa order wa reverted customer well eatery 6.3.7 check order cancelled permissible time order cancelled time limit customer cancel order exceeds permissible time limit order cancel cancel order minute completion minute cancel order 6.3.8 check order status updated order status updated correctly eatery update order status reflected multiple order 2016-17 42 food ordering smart recommendation mall status updated order ready eatery updated status order ready change reflected customer 6.3.9 check order collected move pending order order order collected move order pending order order collected updated status multiple item order collected status wa updated item collected order moved order pending order customer 6.3.10 check prediction rating unrated item predicted rating item rated customer rating food item item left unrated applying item-item collaborative filtering rating predicted unrated item 6.3.11 check quantity food item updated quantity food item updated eatery updated updated quantity multiple food item quantity wa updated 2016-17 43 food ordering smart recommendation mall 6.4 6.4.1 correct credential logged enters correct credential enters wrong credential logged 6.4.2 nearby mall mall kilometer range displayed 2016-17 44 food ordering smart recommendation mall 6.4.3 online eatery eatery online displayed kfc offline displayed 6.4.4 food item food item displayed item quantity displayed 2016-17 45 food ordering smart recommendation mall 6.4.5 addition item cart item cart 6.4.6 order order generated 2016-17 46 food ordering smart recommendation mall 6.4.7 order cancellation order cancelled minute minute completed order cancelled 2016-17 47 food ordering smart recommendation mall 6.4.8 order status order status change reflected customer updated eatery 6.4.9 order collection order collected order transferred pending order order 2016-17 48 food ordering smart recommendation mall 6.4.10 predicted rating rating predicted item rated 6.4.11 quantity updation 2016-17 49 food ordering smart recommendation mall food quantity updated 6.5 6.5.1 nearby mall displayed mall kilometer range displayed 6.5.2 online eatery displayed 2016-17 50 food ordering smart recommendation mall eatery online time displayed 6.5.3 food item displayed food item displayed 6.5.4 item cart item selected cart 2016-17 51 food ordering smart recommendation mall 6.5.5 order generated order generated placing order 2016-17 52 food ordering smart recommendation mall 6.5.6 rating predicted unrated food item rating predicted provide recommendation 6.5.7 order status wa updated 6.5.8 quantity food item wa updated quantity food item updated eatery 2016-17 53 food ordering smart recommendation mall 2016-17 54 food ordering smart recommendation mall 7 2016-17 55 food ordering smart recommendation mall __________________________________________ organized 7.1 7.2 explains evaluation 7.3 explains offer solution 7.4 7.5 explains 7.1 implemented food ordering smart recommendation mall customer built help customer order food eatery mall eatery built help eatery order update quantity update ready collection status dynamic listing eatery food menu wa item-item collaborative filtering wa implemented provide recommendation customer 7.2 evaluation wa completely implement met completely better time eliminates waiting time placing order eliminates waiting time order ready allows customer order food eatery time recommend best food item choose good food correctly met correctly 7.3 offer solution food ordering website currently allow order food multiple eatery time mall current opening closing time eatery time eatery closed time 2016-17 56 food ordering smart recommendation mall eatery time current snapshot food menu displayed time food item eatery food item eatery time offer solution existing 7.4 android phone doesnt android phone active internet connection order food eatery mall food ordered eatery located inside mall biggest 7.5 extended eatery mall delivery option provided eatery located extended online clothes shopping store mall 2016-17 57 food ordering smart recommendation mall __________________________________________ 1 xiaojiang lei xueming qian guoshuai zhao rating prediction based social sentiment textual review transaction multimedia 18 issue 9 2016 2 zhe yang al collaborative filtering-based recommender mobile internet access 4 26 2016 3 yan hu qimin peng xiaohul hu rong yang time aware sparsity tolerant web service tolerant web service recommendation based improved collaborative filtering transaction service computing 8 issue 5 sept- oct 1 2015 4 mohammad aamir mamta bhusry recommendation state art approach international journal 0975-8887 120 12 2015 5 zhibo wang jilong liao qing cao hairong qi senior zhi wang friendbook semantic-based friend recommendation social network transaction mobile computing 3 issue 3 2015 6 haiyun lu recommendation based purchase pattern international journal machine learning computing 4 6 2014 7 lina yao quan z. sheng anne h. ngu jian yu aviv segev unified collaborative based web service recommendation transaction service computing 8 issue 3 2014 8 xi chen zibin zheng qi yu michael r. lyu web service recommendation exploiting location qos transaction parallel distributed 25 issue 7 2014 9 rasool sabarinath.k suresh.m syed salmon.h 24 hour gps tracking android operating international journal scientific publication 8 issue 3 2014. 2016-17 58 food ordering smart recommendation mall 10 sang hyun choi young-seon jeong myong k. jeong hybrid recommendation method reduced large-scale transaction man cybernetics 40 5 2010 11 jiajun bu xin shen bin xu chun chen xiaofei deng cai improving collaborative recommendation user-item subgroup transaction knowledge 6 1 2007 12 badrul sarwar george karypis joseph konstan john riedl item-based collaborative filtering recommendation acm 1 -5 2001. 2016-17 59 food ordering smart recommendation mall 2016-17 60 article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 1 web service recommendation exploiting location qos xi chen zibin zheng member qi yu member michael r. lyu fellow abstractweb service integrated component support interoperable machine-to-machine interaction network web service employed building service-oriented industry academia year number publicly web service steadily increasing internet proliferation hard select proper web service amount service candidate inappropriate service selection e.g ill-suited performance paper propose novel collaborative ltering based web service recommender help select service optimal quality-of-service qos performance recommender employ location qos cluster service personalized service recommendation based clustering compared existing service recommendation method approach achieves considerable improvement recommendation accuracy comprehensive experiment conducted involving 1.5 qos record real web service demonstrate effectiveness approach termsweb service qos recommendation collaborative ltering cid 2 1 eb service component designed support interoperable machine-to-machine interac- tion network internet web service employ wsdl web service description language description soap simple object access protocol exchanging structured beneting cross-language cross-platform characteristic web service employed en- terprises individual developer building service- oriented adoption web service delivery business fostered paradigm shift development monolithic dynamic set-up business process developing service-oriented devel- opers rst business process re- quirements reuse existing ser- vice build process currently developer search service public site google developer developers.google.com yahoo pipe pipes.yahoo.com programmableweb programmableweb.com provide location-based qos deployment trade compliance concerned web service eu xi chen shenzhen chinese hong kong schlumberger beijing ltd. beijing china e-mail bargittachen gmail.com zibin zheng michael r. lyu shenzhen insti- tute science chinese hong kong e-mail zbzheng lyu cse.cuhk.edu.hk qi yu college computing science rochester e-mail qi.yu rit.edu manuscript received 19 2013 employing service shipped coun- knowledge thing deployment service-oriented great selecting web service number candidate non-trivial developer choose implement service publicly incurs additional overhead time inappropriate service hand add potential business process effective approach service selection recommendation urgent help service reduce deliver high-quality business process quality-of-service qos employed rep- resent non-functional characteristic web service considered key factor service selection 33 qos dened property includ- ing response time throughput availability reputation qos property property e.g response time user-observed availability measured client-side 26 impractical acquire qos service provider qos susceptible uncertain internet environment context e.g location network condition etc. observe qos web service word qos evaluated employed directly service selection impractical acquire qos evaluating service candidate conducting real web service invocation time- consuming resource-consuming qos property e.g reliability difcult evaluated long-duration observation digital object indentifier 10.1109/tpds.2013.308 1045-9219/13/ 31.00 2013 article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 2 attack challenge paper investigates personal- ized qos prediction service employing experience web service approach requires additional web service invocation based predicted qos web service personalized qos-aware web service recom- mendations produced help select optimal service functionally equivalent number real-world service qos collected location user-observed web service qos performance strong correlation location google transparency report1 observation google service enhance prediction accuracy propose location-aware web service recommender named lorec employ web service qos location making personalized qos prediction lorec share usage experience web service return personalized service recommendation lorec rst collect user- observed qos record web service group qos observation generate recommendation location considered clustering service main contribution two-fold propose novel location-aware web ser- vice recommendation approach signicantly improves recommendation accuracy time com- plexity compared existing service recommenda- tion second conduct comprehensive experiment evaluate approach employing real-world web service qos 1.5 real- web service qos record 20 country engaged experiment comprehen- sive parameter provided rest paper organized 2 review collaborative ltering web service recommendation 3 4 describes proposed web service recommendation 5 extensive experiment employing qos real-world web service 6 concludes paper 2 2.1 collaborative filtering collaborative filtering cf employed com- mercial recommender netix ama- zon.com 4 18 19 22 basic cf pre- dict recommend potential favorite item employing rating collected cf based processing user-item matrix breese al 3 divide cf broad class memory- based model-based 1http //www.google.com/transparencyreport/ analyzed example memory-based collaborative ltering include user-based approach 3 11 15 item-based approach 9 18 23 fusion 27 user-based approach predict rating based rating item-based approach predict rating based item similarity memory-based easy implement require training cost easily rating account memory-based scale well number item computation complexity model-based cf hand learn rating statistical ma- chine learning technique example include clustering 30 latent semantic 12 13 latent factor 5 gener- ate recommendation achieve good online performance rebuilt item 2.2 service selection recommendation service selection recommendation exten- sively studied facilitate web service composition year wang al 28 web service selection method qos prediction mixed integer program zhang al 34 provide ne grained reputation qos-based service selection p2p zheng al 37 provide qos-based ranking cloud service selection zhu al 38 employ clustering technique qos agent provide web service recommendation based distance agent el hadadd al 10 propose selection method considering transactional prop- erties qos characteristic web service hwang al 14 nite state machine permitted invocation web service operation pro- pose strategy select web service complete execution operation kang al 16 propose awsr recommend service based historical interest qos preference barakat al 2 service proposes web service selection method web service composition alrifai risse 1 propose method meet end- to-end qos employing integer programming mip optimal decomposition global qos constraint local constraint amount apply cf web service recommendation shao al 24 employ user-based cf predict qos 17 25 apply cf movielens experimental combination cf engaged web service recommendation zheng al 36 combine user-based item-based cf recommend web service integrate neighborhood approach matrix factorization 35 yu 32 article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 3 cid 36 cid 70 cid 87 cid 76 cid 89 cid 72 cid 3 cid 88 cid 86 cid 72 cid 85 cid 52 cid 82 cid 54 cid 3 cid 38 cid 82 cid 79 cid 79 cid 72 cid 70 cid 87 cid 82 cid 85 cid 39 cid 68 cid 87 cid 68 cid 3 cid 54 cid 72 cid 87 cid 58 cid 72 cid 69 cid 3 cid 54 cid 72 cid 85 cid 89 cid 76 cid 70 cid 72 cid 3 cid 38 cid 79 cid 88 cid 86 cid 87 cid 72 cid 85 cid 86 cid 56 cid 86 cid 72 cid 85 cid 3 cid 38 cid 79 cid 88 cid 86 cid 87 cid 72 cid 85 cid 86 cid 3 cid 52 cid 82 cid 54 cid 3 cid 51 cid 85 cid 72 cid 71 cid 76 cid 70 cid 87 cid 76 cid 82 cid 81 cid 58 cid 72 cid 69 cid 3 cid 54 cid 72 cid 85 cid 89 cid 76 cid 70 cid 72 cid 3 cid 53 cid 72 cid 70 cid 82 cid 80 cid 80 cid 72 cid 81 cid 71 cid 68 cid 87 cid 76 cid 82 cid 81 fig 1. lorec approach integrates matrix factorization decision tree learning bootstrap service recom- mender employ location web service recommendation chen al 7 region-based cf web service recommendation help web ser- vice performance propose visualization method showing recommendation map lo al 31 employ location matrix factorization predict qos existing paper interprets web service qos perspective web service perspective clustering technique location employed achieve accurate recommendation better online performance experiment 5 demonstrate proposed method 3 preliminary 3.1 web 2.0 social networking site self-publishing site encourage share knowl- edge learn lorec employ collaboration platform share observed web service qos search web service generate personalized service recommendation based shared qos qos record contribute accurate recommendation mined user-contributed qos paper assume trustworthy detect handle malicious inaccurate qos addressed 1 lorec recommender includes procedure web service log lorec share observed web service qos record paper web service qos record lorec called training training requires web service recommendation active qos training employed personalized recommendation active lorec cluster training region physical location web service usage experience introduced 4.1 lorec cluster functionally web service based qos similarity introduced 4.2 lorec map active region based historical qos location introduced 4.3 recommender predicts qos can- didate web service active recommend best introduced 4.3 active receives predicted qos web service well recommendation employed assist decision making e.g service selection service composition service ranking etc. 1 example qos property lorec row service column stand response time web service observed indicates service assume amy active pick service latency three candidate service 2 service 4 service 5. lorec personalized response time prediction three service response time training i.e bob carol david edward recommend best predicted response time amy lorec store qos property record separately qos property 1. amy service latency availability lorec search response time availability predict property separately candidate service recommend best amy 3.2 region 3.2.1 region service region recommender consisting web service web service denoted user-item matrix entry matrix ru represents vector qos e.g response time failure rate observed web service i. web service ru null service region group service qos performance lorec service region discover potential service recommend active region dened group closely located web service qos usage experience belongs exactly region building region help lorec identify qos logically derived casual observation building region service region presented 4. article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 4 1 example lorec storage amy bob carol david edward location beijing cn houston houston houston hong kong cn service 1 20000ms 600ms 650ms 620ms 1000ms service 2 3300ms 2600ms 2500ms 2500ms service 3 2000ms 200ms 2000ms 2000ms 500ms 5000ms service 4 service 5 service 6 3300ms 2000ms 2000ms 2400ms service 7 2800ms 3.2.2 region center region center employed region service region region center reects average performance web service observed belong region region center dened median vector qos vector associated region row vector 1 median numeric separating higher half sample lower half number sample median dened middle ith element median vector region center represents median qos ith service observed region example suppose region consists bob carol david 1 response time dimension region center 620 2600 1100 1900 2000 2000 null service region center dened median qos vector service column vector 1 reects average qos service experience suppose service 2 3 6 form service region response time dimension service region center 2000 3300 1400 2000 2400 amy david edward average response time service 2 3 6 2000 bob 3300 1400 carol 3.2.3 sensitive web service region center qos uctuation deserves attention scale real discover qos property e.g response time varies region service unexpected long response time region service inaccessible region inspired three-sigma rule applied outlier employ method distinguish service unstable performance regard region-sensitive service ease discussion pick qos property i.e response time example non-zero qos service r.s r1 r2 rk 1 collected region sample population service s. standard deviation population robust measure median median absolute deviation mad mad dened median absolute deviation sample median med mediani ri 1 mad mediani |ri med| 1 k. 1 2 based median mad estimator calculated cid 2 mediani ri 1 cid 2 madi ri 1 3 1 r.s r1 r2 rk 1 non-zero response time web service iff cid 2 3 cid 2 region provided service sensitive service region cid 2 cid 2 calculated eq 2 eq 3 region function identies region j. basic observed qos pay special atten- tion recommending service service 1 1 example user-observed re- sponse time 600 620 650 1000 20000 com- pared amy observed response time un- acceptable deviate greatly median 650. intuitively distinguish cid 2 650 cid 2 50. service amy eq 2 eq 3 obvious 20000 650 3 50 service 1 sensitive amys region amys region log lorec require service recommendation service 1 highly recommended 2 sensitivity region fraction number sensitive service region total number service 3 region sensitive region iff region sensitivity exceeds predened sensitivity threshold identifying region sensitive service step personalized web service recommendation lorec accurate qos prediction provide proper web service 3.3 region similarity pearson correlation coefcient pcc measure similarity recommender 21 pcc measure similarity service based qos web service invoked sim ra ra ru ru cid 3 ii ra ra 2 ii cid 3 ru ru 2 ii 4 article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 5 ia iu web service invoked ra qos web service observed service ra ru represent average qos observed service pcc similarity service sim range -1 1. positive pcc indicates web service usage experience negative pcc web service usage experience opposite sim null commonly invoked web service pcc considers qos difference service invoked overestimate simi- larity happen service qos record devalue overestimated similarity correlation signicance weight 36 adjusted pcc similarity dened cid 7 2|ia iu| sim |ia| +|iu| sim 5 sim cid 7 adjusted similarity |ia iu| number service invoked co-invoked service |ia| |iu| number web service invoked number co-invoked web service |ia iu| small signicance weight 2|iaiu| |ia|+|iu| decrease similarity estimation u. 2|iaiu| interval 0 1 sim interval |ia|+|iu| 1 1 sim cid 7 interval 1 1 clustering lorec cluster web service based qos performance under- lying pcc measure similarity web service lorec well similarity web service calculated ru ri ru sim cid 3 cid 3 uu ru ri 2 uu uu 6 ru 2 sim similarity web service ui uj invoked web service ri represents average qos web service range sim -1 1 sim null service adjusted similarity dened cid 7 2|ui uj| sim |ui| +|uj| sim 7 |ui uj| number service invoked web service j. range sim cid 7 1 1 4 qos property e.g response time web service vary differently real web service qos set2 5 1.5 service invocation record evaluated twenty country qos property highly relate physical location example response time service observed closely located uctuates mildly hand response time observed varies signicantly based nding recommendation location consideration improve recommendation accuracy recommendation designed three-phase process i.e 1 region creation 2 service region creation 3 qos prediction recommendation presented 4.1 4.3 4.1 phase 1 region creation phase clustered region location historical qos record retrieve approximate location ip addresses3 location reveals country city latitude/longitude isp domain city grouped form initial region small region aggregated bottom-up hierarchical clustering method 20 clustering method initialization aggregation initialization select non- sensitive region aggregation compute sim- ilarity region pair eq 5 aggregate region 1 select region pair regioni region merge region regioni similarity exceeds similarity threshold region aggregation process merge region compute sensitivity region center newly merged region regioni remove region aggregation process sensitive remove similarity region existing region update similarity regioni existing region 2 repeat step threshold tunable parameter adjusted trade accuracy time space prediction accuracy addressed 4.2 phase 2 service region creation limited amount web service compared number service 2http //www.wsdream.net 3http //www.iplocation.net/ article accepted publication issue journal fully edited change prior final publication transaction parallel distributed internet number service qos record small difcult predicting missing qos perspective clustering web service help lorec potential service retrieving location ip address lorec directly cluster web service based qos similarity company regard physical loca- tion center secret ip address hide real location google example center located asia europe america physical location retrieved google ip address country-specic version google search listed mountain view california reason distributed enhance interaction minimize delay service provider route request server location server process request responds retrieving service location ip address doe prove lorec web service aggregated bottom- hierarchical clustering median vector vector cluster center minimize outlier similarity cluster dened similarity center web service regarded cluster outset aggregate pair cluster pair similarity exceeds threshold w. 4.3 phase 3 personalized qos prediction rst phase aggregate web service number cluster based respective similarity qos prediction generated service region region compressed qos searching neighbor making web service qos prediction active computed faster conventional method 4.3.1 prediction perspective computing similarity active training compute similarity active region center region qos experience web service region-sensitive predict unused qos web service active step identify region active ip address active treated member region appropriate region service sensitive region prediction generated region center qos service observed region signicantly cid 4 ra rc 8 6 non-sensitive service prediction cid 5 rua generated considering qos region eq 5 employed calculate similarity active region center evaluated service s. center positive pcc c1 c2 ck employed discus choose called top active region center qos prediction computed equation cid 5 rua rc j=1 sim cid 7 rc rc j=1 sim cid 7 9 rc qos service provided center rc j. average qos center j. prediction composed qos active region center rc denotes average qos service observed region normalized weighted sum deviation neighbor service qos observed neighbor compute prediction active neighbor weight qos carry prediction cid 5 rua cid 7 rc sim j=1 cid 7 sim j=1 10 4.3.2 prediction service perspective clustering web service view utilize enhance prediction accuracy limited knowledge preference predict qos service observed service perspective web service cluster center rough prediction center record predict service perspective experiment good pre- diction accuracy achieved rough prediction achieve better prediction tune eq 11 j=1 sim cid 7 ra j=1 sim cid 7 cid 4 ria ra web service cluster center sim cid 7 measure similarity web service service center j. ra qos service center rc average qos service center j. service cluster center employed predict rc ra 11 4.3.3 prediction generation nal prediction qos service consists prediction perspective article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 7 service perspective cid 4 ra cid 5 rua 1 cid 4 ria cid 5 rua region cid 4 ria prediction web service qos prediction generated cluster parameter determines rely prediction range 0 1 12 4.4 phase 4 web service recommendation web service qos prediction lorec facilitate web service recommendation search web service lorec predicted qos candidate service best predicted highlighted search active easier active decide lorec selects best performing service service best qos service best predicted qos service repository active he/she potential valuable checking service 4.5 time complexity discus worst time complexity lorec rec- ommendation analyze clustering phase qos prediction phase 4.5.1 4.5.2 assume input full matrix web service total 4.5.1 time complexity clustering time complexity calculating median mad service mlogm service time com- plexity mnlogm mad median identify region-sensitive service service perspective record service time complexity service 1. time complexity region-sensitive service mnlogm mn mnlogm term region aggregation assume l0 region service region time complexity region similarity eq 5 matrix store similarity region complexity computing similarity matrix l2 0n aggregation region executed l01 time region non-sensitive extremely correlate nally aggregate region iteration rst compare l01 priority queue pair number region aggregated decrease iteration real search time le l0 1 iteration selected pair region calculate center update region number involved region uncertain number upper bound complexity mnlogm employ priority queue sort region insertion deletion region logl0 time complexity l2 0mnlogm 0 step linearly combined total time complexity clustering l2 logl0 mnlogm l2 0mnlogm phase service region creation service aggregation service region executed 1 time service merged cluster iteration rst compare n1 priority queue pair number cluster aggregated decrease iteration real search time le 1 iteration selected pair calculate center update cluster number service involved cluster uncertain number service upper bound complexity mnlogn insertion deletion region logn employ priority queue sort region time complexity n2 logn mnlogn mn3 logn 4.5.2 time complexity qos prediction l1 number region region creation predict qos active l1 similarity calculation active region center needed time time complexity similarity computation l1m service active evaluated qos prediction complexity l1 l1 center employed prediction eq 9 eq 10 service qos time complexity prediction active l1m time complexity online prediction region perspective including similarity computation missing prediction l1m l1 small compared online prediction service region per- spective l2n l2 number service region compared memory-based cf previous mn online time-complexity approach efcient better suited experiment conrm 5 5 experiment 5.1 experiment setup experiment crawl publicly web service three source 1 well-known company e.g google amazon ect 2 portal listing pub- licly web service e.g xmethods.net webser- vicex.net 3 web service search engine e.g seekda.com esynaps.com etc. java class generated wsdl2java axis2 package article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 8 qos web service employ 150 24 country planet-lab 8 monitor 100 real web service 22 country 1.5 web service invocation record collected day time node planet-lab 100 prole prole response time called round trip time rtt record 100 service randomly extract 20 prole node generate 3000 rtts ranging 2 31407 millisecond divide 3000 group training rest active simulate real situation randomly remove number rtt record training sparse training matrix remove record active active small number web service reality apply absolute error mae measure prediction accuracy recommendation accurately predicts better rec- ommendations mae average absolute deviation prediction ground truth smaller mae indicates better prediction accuracy mae 13 ri denotes expected qos web service observed cid 2 ri predicted qos number predicted mae reects prediction eventual outcome average prediction |ri cid 2 ri j| 5.2 performance evaluation study prediction accuracy compare ap- proach item-based prediction pcc ipcc 23 user-based prediction pcc upcc 3 wsrec 36 regionknn 6 randomly remove 90 80 rtts initial training matrix generate sparse matrix density 10 20 vary number rtt active 10 20 30 g10 g20 g30 removed record active study prediction accuracy experiment 0.3 0.1 0.8 0.1 topk 10. reliable error 10 time 10 fold cross-validation 29 evaluate prediction accuracy average mae experiment conducted laptop intel cen- trino duo processor 1.836hz 2gb memory window xp sp3 2 online time usage predicting 27000 missing qos 300 fold submits 10 qos 90 missing lorec requires le time memory-based method ipcc upcc wsrec perform online prediction scale well time usage comparison online qos prediction 2 method ipcc upcc wsrec regionknn lorec online time duration 2.437 5.218 6 0.094 0.141 3 prediction performance method employing 10 20 density training matri- ce location improves accuracy compare lorec cbrec method removing location sensitive service sensitive region concept lorec signi- cantly improves prediction accuracy outperforms consistently performance recommendation approach enhances increasing number qos provided active 10 30 g10 g20 g30 hand density training matrix performance approach better pre- diction accuracy training matrix density 20 density 10 approach employing similarity generate recommendation sensitive amount provided example performance upcc wsrec enhances signicantly qos active number ipcc stay stable ipcc employ service similarity similarity 5.3 sparseness compared amount service internet number service consumed small recommender sparse examine sparseness prediction aspect density training matrix indicates qos record collected number qos active number rst study training matrix density vary density training matrix 10 50 step 10 10. parameter lorec topk 10 0.1 0.1 0.8 0.3 density 10 20 30 0.6 density 40 50 fig 2 experimental 1 increase training matrix density performance ipcc upcc regionknn lorec enhances indicating better prediction achieved qos wsrec sensitive sparseness stay 2 lorec outperforms consistently study number pre- diction employ training matrix density 30 vary number 10 50 step 10. fig 2 experimental reects prediction performance ipcc upcc wsrec generally grows increasing number article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 9 mae comparison response time smaller better prediction accuracy 3 method ipcc upcc wsrec cbrec regionknn lorec density 10 g20 g10 g30 g10 density 20 g20 g30 1179.32 1280.95 976.01 740.25 638.21 584.32 1170.73 1145.80 805.60 720.41 624.51 561.27 1160.45 1085.85 772.34 703.25 623.90 557.95 1104.02 1167.84 968.69 664.18 573.85 542.11 1094.63 846.54 788.37 658.30 560.13 523.33 1086.08 674.32 742.15 652.38 556.75 506.86 1300 1200 1100 1000 900 800 700 600 500 400 300 0.1 wsrec ipcc upcc regionknn lorec 0.2 0.3 matrix density 0.4 0.5 1200 1100 1000 900 800 700 600 500 400 10 ipcc upcc wsrec regionknn lorec 20 30 number 40 50 fig 2. training matrix density prediction accuracy prediction lorec improves number rst doe steady improvement number exceeds 30. experiment better prediction contribute record lorec parameter accuracy refer 6 paper qos-aware web service recommenda- tion approach basic predict web service qos recommend best active based historical web service qos record combine predic- tion generated service region region achieves better existing approach combination better single method prediction generated region generated web service region method analyze aspect combination counteracts error individual method consider aspect improve proposed web service recommendation approach term clustering method con- sider probabilistic em improve scalability lorec em requires scan database limited memory recommendation accuracy contextual greatly inuence web service qos performance server workload network condition carry web service e.g computation-intensive i/o-intensive physical location factor account rene step similarity computation region aggregation term experiment mae measure recommendation accuracy currently web search consider top three recommended service improving accuracy top recommended service investigate includes investigating correlation qos property detecting malicious inaccurate qos acknowledgment described paper wa supported national basic program china 973 2014cb347701 national natural science foundation china 61100078 shenzhen basic program jcyj20120619153834216 grant council hong kong special administrative region china cuhk 415410 zibin zheng author 1 m. alrifai t. risse combining global optimization local selection efcient qos-aware service composition proceeding 18th international conference wide web www09 2009 881890 2 l. barakat s. mile m. luck efcient correlation-aware ser- vice selection proceeding 19th international conference web service icws12 2012 18. j. s. breese d. heckerman c. kadie empirical predictive collaborative ltering proceeding 14th annual conference uncertainty articial intelligence uai98 1998 4352 3 article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 10 26 n. thio s. karunasekera automatic measurement qos metric web service recommendation proceeding australian conference 2005 202211 27 j. wang a. p. de vries m. j. reinders unifying user- based item-based collaborative ltering approach similar- ity fusion proceeding 29th international acm sigir conference development retrieval sigir06 2006 501508 28 s. wang q. sun f. yang web service selection based qos estimation international journal web grid service 6 4 424443 2012 29 i. witten e. frank mining practical machine learning technique second edition elsevier 2005 30 g. xue c. lin q. yang w. xi h. zeng y. yu z. chen scalable collaborative ltering cluster-based smoothing proceeding 28th international acm sigir conference development retrieval sigir05 2005 114121 31 j. yin s. deng y. li z. wu collaborative web service qos prediction location-based regularization proceeding 19th international conference web service icws12 2012 464471 32 q. yu decision tree learning incomplete qos bootstrap service recommendation proceeding 19th international conference web service icws12 2012 194201 33 l.-j zhang j. zhang h. cai service computing springer tsinghua press 2007 34 y. zhang y. fang ne-grained reputation reliable service selection peer-to-peer network trans parallel distrib syst 18 8 11341145 2007 35 z. zheng h. m. r. lyu i. king collaborative web service qos prediction neighborhood integrated matrix factorization transaction service computing 2011 36 z. zheng h. m. r. lyu i. king qos-aware web service recommendation collaborative ltering transaction service computing 4 2 140152 2011 37 z. zheng x. wu y. zhang m. r. lyu j. wang qos ranking prediction cloud service transaction parallel distributed 99 preprints p. 1 2012 38 j. zhu y. kang z. zheng m. r. lyu clustering- based qos prediction approach web service recommendation proceeding 15th international symposium object/component/service-oriented real-time distributed comput- ing workshop 2012 9398 4 r. burke hybrid recommender experiment modeling user-adapted interaction umuai 12 4 331370 2002. j. canny collaborative ltering privacy factor proceeding 25th international acm sigir conference 2002 238245 5 6 x. chen x. liu z. huang h. sun regionknn scal- hybrid collaborative ltering personalized web service recommendation proceeding 8th international conference web service icws10 2010 916 7 x. chen z. zheng x. liu z. huang h. sun personalized qos-aware web service recommendation visualization transaction service computing preprints 2011 8 b. chun d. culler t. roscoe a. bavier l. peterson m. wawrzo- niak m. bowman planetlab overlay testbed broad- coverage service acm sigcomm review 33 3 312 2003 9 m. deshpande g. karypis item-based top-n recommendation acm transaction tois 22 1 143177 2004 10 j. e. haddad m. manouvrier m. rukoz tqos transactional qos-aware selection automatic web service com- position transaction service computing 3 1 7385 2010 11 j. herlocker j. konstan a. borchers j. riedl algorithmic framework performing collaborative ltering proceeding 22nd international acm sigir conference devel- opment retrieval sigir99 1999 230237 12 t. hofmann collaborative ltering gaussian probabilistic latent semantic proceeding 26th international acm sigir conference development retrieval sigir03 2003 259266 13 t. hofmann latent semantic collaborative ltering acm transaction 22 1 89 115 2004 14 s.-y hwang e.-p. lim c.-h. lee c.-h. chen dynamic web service slection reliable web service composition transaction service computing 1 2 104116 2008 15 r. jin j. chai l. si automatic weighting scheme collaborative ltering proceeding 27th international acm sigir conference sigir04 2004 337344 16 g. kang j. liu m. tang x. liu b. cao y. xu awsr active web service recommendation based usage history proceeding 19th international conference web service icws12 2012 186193 17 k. karta investigation personalized collaborative ltering web service selection honour programme thesis western australia brisbane 2005 18 g. linden b. smith j. york amazon recommendation item-to-item collaborative ltering internet computing 7 1 7680 2003 19 h. i. king m. r. lyu effective missing prediction collaborative ltering proceeding 30th international acm sigir conference development retrieval sigir07 2007 3946 20 c. d. manning p. raghavan h. schtze retrieval cambridge press 2009 21 m. r. mclaughlin j. l. herlocker collaborative ltering evaluation metric accurately experience proceeding 27th international acm sigir conference development retrieval sigir04 2004 329336 22 p. resnick n. iacovou m. suchak p. bergstrom j. riedl grouplens collaborative ltering net- news proceeding conference supported cooperative cscw94 1994 175186 23 b. sarwar g. karypis j. konstan j. reidl item-based collab- orative ltering recommendation proceeding 10th international wide web conference www01 2001 285295 24 l. shao j. zhang y. wei j. zhao b. xie h. mei person- alized qos prediction web service collaborative ltering proceeding 5th international conference web service icws07 2007 439446 25 r. m. sreenath m. p. singh agent-based service selection journal web semantics 1 3 261279 2003. article accepted publication issue journal fully edited change prior final publication transaction parallel distributed 11 xi chen received m.s.degree com- puter science beihang beijing china 2011 b.s de- gree computing science beijing insti- tute beijing china 2008. schlumberger beijing ltd. received google excellence scholar- ship 2010 served reviewer inter- national journal conference including tsc jwsr scc interest include service computing cloud computing mining zibin zheng associate fellow shenzhen chi- nese hong kong received ph.d. com- puter science chinese hong kong 2010. received outstanding thesis cuhk 2012 acm sigsoft distinguished paper icse2010 best paper icws2010 ibm ph.d. fellowship 2010-2011. served program committee member cloud2009 scc2011 scc2012 icsoc2012 interest include cloud computing service computing qi yu received phd science virginia polytechnic state virginia tech assistant professor college com- puting science rochester current interest lie area service com- puting mining machine learning publication appeared well-known journal e.g vldb journal tkde acm tweb conference pro- ceedings e.g icsoc icws guest editor tsc special issue service query efcient selection frequently serf program committee member service computing database conference e.g dasfaa cloud wise collaboratecom icsoc iri reviewer journal e.g vldb journal acm toit acm tweb member michael r. lyu received b.s electrical national taiwan taipei taiwan r.o.c 1981 m.s california santa barbara 1985 ph.d. science california los angeles 1988. currently profes- sor science chinese hong kong hong kong china in- terests include reliability distributed fault-tolerant computing mobile network web multi- medium processing e-commerce dr. lyu fellow aaa fellow croucher senior fellow contribution reliability fault tolerance received reliability society 2010 year 11-r1.pdf originality 6 similarity 5 5 internet source publication paper primary source 1 2 3 4 5 6 7 8 9 ijircce.com internet source cd.dgb.uanl.mx internet source www.inf.ed.ac.uk internet source dblp.dagstuhl.de internet source files.logicsystems.org.in internet source izv-tn.tti.sfedu.ru internet source www.ijcseonline.org internet source www.ijarcce.com internet source www.ijcaonline.org internet source feng xie `` rbra simple efficient 10 1 1 1 1 1 1 1 1 1 1 rating-based recommender cope sparsity recommender '' 2012 26th international conference advanced networking workshop 03/2012 publication www.ijmlc.org internet source techimind.blogspot.com internet source mengxing huang longfei sun wencai du `` collaborative filtering recommendation based item '' 15th ieee/acis international conference artificial intelligence networking parallel/distributed computing snpd 2014 publication consumerbrigade.com internet source dse13.dtemaharashtra.org internet source vinagre joo alpio mrio jorge joo gama `` exploitation time collaborative filtering exploiting time collaborative filtering '' wiley interdisciplinary review mining 11 12 13 14 15 16 1 1 1 1 1 1 knowledge discovery 2015. publication '' intelligent 2016 '' springer nature 2016 publication www.scl.ece.ucsb.edu internet source jianfeng yingchun hou hui xie `` similarity social network based collaborative filtering '' international journal hybrid 2015. publication web.science.mq.edu.au internet source etd.ohiolink.edu internet source copperloy.com internet source www.eftec.co.uk internet source ietepune.org internet source argouml.tigris.org internet source chen xi zibin zheng qi yu michael r. lyu `` web service recommendation 17 18 19 20 21 22 23 24 25 26 1 1 1 1 1 1 1 1 1 1 exploiting location qos '' transaction parallel distributed 2014. publication study computational intelligence 2009. publication yang zhe bing wu kan zheng xianbin wang lei lei `` collaborative filtering based recommender mobile internet '' access 2016. publication bu jiajun xin shen bin xu chun chen xiaofei deng cai `` improving collaborative recommendation user-item subgroup '' transaction knowledge 2016. publication banage t.g.s kumara incheon paik t.h.a.s siriweera koswatte r.c koswatte `` cluster-based web service recommendation '' 2016 international conference service computing scc 2016 publication lecture note science 2008. publication ijarcce.com internet source 27 28 29 30 31 32 1 1 1 1 1 1 33 yao lina quan z. sheng anne h.h ngu jian yu aviv segev `` unified collaborative content-based web service recommendation '' transaction service computing 2015. publication 1 exclude quote exclude bibliography exclude match 1 word", "keywords": ["absolute deviation", "accuracy recommendation", "acm sigir", "acm sigir conference", "active region", "active region center", "android android", "android eatery", "android network", "android php", "android studio", "average qos", "average qos service", "barule sameer", "barule sameer sanjay", "based historical", "beijing china", "best food", "better prediction", "bob carol", "bob carol david", "bridge gap", "bridge gap food", "business process", "cancel order", "carol david", "carol david edward", "cart total", "center qos", "center rc", "characteristic web", "characteristic web service", "check order", "chen zibin", "chen zibin zheng", "chinese hong", "chinese hong kong", "cluster center", "collaborative filtering", "collaborative filtering recommendation", "collaborative filtering technique", "collaborative ltering", "collaborative recommendation", "collect order", "collection status", "conference development", "conference development retrieval", "conference web", "conference web service", "correct credential", "cosine similarity", "count food", "count food item", "count item", "current scenario", "customer eatery", "customer order", "customer order food", "database android", "david edward", "development retrieval", "dynamic listing", "dynamic listing menu", "eatery customer", "eatery eatery", "eatery food", "eatery food item", "eatery log", "eatery mall", "eatery mall time", "eatery online", "eatery order", "eatery time", "eatery update", "eatery update order", "experience web", "experience web service", "filtering recommendation", "filtering technique", "food eatery", "food eatery mall", "food eatery time", "food food", "food item", "food item cart", "food item eatery", "food item rating", "food menu", "food provider", "food provider restaurant", "gap food", "gap food provider", "group people", "historical qos", "hong kong", "identical item", "international acm", "international acm sigir", "international conference", "international conference web", "international journal", "internet source", "ip address", "item cart", "item cart total", "item eatery", "item item", "item order", "item rating", "item similarity", "itemitem collaborative", "itemitem collaborative filtering", "jian yu", "jian yu aviv", "kilometer range", "latitude longitude", "lina yao", "listing menu", "location provider", "location qos", "locationaware web", "machine learning", "mall display", "mall eatery", "mall kilometer", "mall kilometer range", "mall mall", "mall time", "matrix density", "matrix factorization", "matrix form", "measure similarity", "median vector", "michael lyu", "ms ms", "ms ms ms", "ms ms service", "ms service", "nearby mall", "network location", "network location provider", "null service", "number service", "offer solution", "online eatery", "online prediction", "order cancellation", "order collection", "order customer", "order food", "order food eatery", "order order", "order permissible", "order permissible time", "order ready", "order status", "pending order", "permissible time", "permissible time limit", "personalized qos", "personalized qos prediction", "personalized service", "personalized service recommendation", "perspective clustering", "physical location", "placing order", "pre diction", "prediction accuracy", "prediction lorec", "prediction service", "priority queue", "proceeding th", "proceeding th international", "program committee", "programming language", "proper food", "provider restaurant", "provider restaurant eatery", "puter science", "qi yu", "qos active", "qos performance", "qos prediction", "qos property", "qos record", "qos service", "qos vector", "qos web", "qos web service", "qosaware web", "qosaware web service", "quan sheng", "quantity food", "quantity food item", "ra ra", "ra ru", "rate food", "rate food item", "ready eatery", "real web", "real web service", "recommendation accuracy", "recommendation approach", "recommendation mall", "recommendation technique", "region aggregation", "region center", "region center qos", "region creation", "region region", "region service", "region service region", "regionknn lorec", "regionsensitive service", "response time", "response time web", "restaurant eatery", "restaurant eatery customer", "ru ru", "sameer sanjay", "science chinese", "selection method", "sensitive region", "sensitive service", "ser vice", "service center", "service cluster", "service cluster center", "service composition", "service computing", "service invocation", "service perspective", "service provider", "service qos", "service qos performance", "service qos record", "service recommendation", "service recommender", "service region", "service region creation", "service region region", "service selection", "service sensitive", "service service", "service usage", "service usage experience", "shopping cart", "sigir conference", "sigir conference development", "sim cid", "sim sim", "similarity computation", "similarity item", "similarity matrix", "similarity web", "similarity web service", "smart recommendation", "smart recommendation mall", "status eatery", "status order", "swipe refresh", "th international", "th international acm", "th international conference", "time complexity", "time eatery", "time food", "time limit", "time web", "time web service", "training matrix", "training matrix density", "transaction parallel", "transaction service", "unified collaborative", "unrated item", "upcc wsrec", "upcc wsrec regionknn", "update order", "usage experience", "usecase description", "useritem matrix", "web service", "web service invocation", "web service qos", "web service recommendation", "web service recommender", "web service region", "web service selection", "web service usage", "wrong credential", "wsrec regionknn", "xi chen", "xi chen zibin", "xin shen", "yan hu", "yu aviv", "zheng lyu", "zheng qi", "zheng qi yu", "zibin zheng", "zibin zheng qi"], "libraries": [], "languages": ["php", "xml", "basic", "small", "java"], "frameworks": [], "dbs": ["sqlite", "mysql"]}, "./reports/12_final_report_major_proj_report.pdf": {"title": "e-attendance", "filename": "./reports/12_final_report_major_proj_report.pdf", "data": "e-attendance e-attendance tanisha tarunkumar da gayatri pradip datar krishna kumar upadhyaya nilay rajendra waghela b120058526 b120058527 b120058570 b120058647 guidance prof. v.r.jaiswal dhankawdi 411043 2016-2017 pict-information 2016-17 1 e-attendance pict-information 2016-17 2 e-attendance e-attendance tanisha tarunkumar da gayatri pradip datar krishna kumar upadhyaya nilay rajendra waghela summited b120058526 b120058527 b120058570 b120058647 bonafide prof. jaiswal savitribaiphule earlier diploma prof.v jaiswal prof.dharmadhikari mr. abhinavbhutada prof. pict-information 2016-17 3 e-attendance sponsorship industry completion industry acknowledgement nomenclature 2 3 4 5. title 1. 1.1 1.2 1.3 1.4 2.1 2.2 3.1 2.2.1 3.1.1 background relevance undertaken background review -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- specificationand -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 4.1 -- -- -- -- -- -- -- -- -- 4.1.1 -- -- -- -- -- -- -- -- -- 5.1 5.1.1 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 6. evaluation pict-information 2016-17 ii iii iv vi vii 4 7. e-attendance 6.1 -- -- -- -- -- -- -- -- -- 6.1.1 -- -- -- -- -- -- -- -- -- ii pict-information 2016-17 5 e-attendance issue attendance period teacher rural area grave fallacy systemit tiring procedure mark attendance increase number procedure time consuming everyday basis lack proper increase chance poor record attendance extreme lead absence school leading greater amount illiteracy country intend android smart phone help capturing image class mark attendance respective face image processing internally detect face computing face introducing intend reduce pressure teacher attendance ensure higher number attending school well attendance marked reduced larger extinct completely depends face detection entire procedure tracked government eliminate fake attendance reduce saving money redirect actual problematic area help better utilisation fund help improving literacy country keywords attendance image processing android face detection face recognition smart phone pict-information 2016-17 6 e-attendance 1 pict-information 2016-17 7 e-attendance 1 attendance criterion measuring development greater presence record indicates regularity well-being child method regard suit adopt school pen paper file based approach advanced biometric technique advanced include fingerprint recognition card reader.these method proved time consuming pupil queue attendance marked help attendance schoolchildren class-like environment child intervention attendance marked photograph camera inside smartphone image evaluated compared image individual database great time saver single photograph help marking attendance 1.1background standard key issue rising education unit excited attend category historically area attend category victimisation attending point top semester represent area final grade historically extra effort teacher properly mark attending constant time waste substantial quantity time teaching method scholar maintaining sophisticated attending extremely vital performance scholar technique regard area unit attending manually victimisation previous paper file based approach adopted strategy automatic attending victimisation traumatize giant teamsof checking told pict-information 2016-17 8 e-attendance biometric technique area unit automatic strategy accessible purpose i.e biometric attending strategy conjointly waste time build queue touch thumb scanning device size attending record staff performed involves college attending observance nice facilitate dependableness fogey academic folk area youngster victimisation associate attending observance tend projected associate automatic attending college unit ne'er ignorant category 1.2 relevance face recognition attracted attention developer great potential enormous market attendance-marking itprovides dimension real time face detection supplement teacher supplement combine machine learning method interactive adaptive manner keep track change change time period aim le time-consuming efficient conventional method le intrusive non-interfering normal teaching process promise provide better outcome in-depth treatment attendance domain pict-information 2016-17 9 e-attendance 1.3 undertaken 1.3.1projectidea main create automated field attendance marking 1.3.2need 1.3.2.1 developing user-friendly automated attendance classical attendance-marking calling individual checking identification card interfere teaching process straining examination period hand automatic process mark attendance help check marked attendance eliminate marking attendance wrong revolutionary tracking attendance making le time- consuming user-friendly pict-information 2016-17 10 e-attendance 2 pict-information 2016-17 11 e-attendance 2 background review 2.1 background key issue rising standard education attend category historically area unit excited attend category victimisation attending point top semester represent area final grade historically extra effort teacher properly mark attending constant time waste substantial quantity time teaching method sophisticated traumatize giant teamsof scholar maintaining attending extremely vital told checking performance scholar technique regard area unit attending manually victimisation previous paper file based approach adopted strategy automatic attending victimisation biometric technique area unit automatic strategy accessible purpose i.e biometric attending strategy conjointly waste time build queue touch thumb scanning device size attending record staff performed involves college attending observance nice facilitate fogey academic folk area unit ne'er ignorant dependableness youngster category victimisation associate attending observance projected associate automatic attending college tend pict-information 2016-17 12 e-attendance 2.2 mistreatment face recognition teacher enters class picture cluster click tab mark identify scholar image matching 3d face recognition technique match image processed area unit marked scholar image matched data|the shipped server control info scholar package smart phone facilitate reinforce choice face recognition based marking consists camera posse positioned class space snap shot photo unit measurement microsoft apis development kit face notice quantity unit measurement gift specific image record count study implementing automatic mistreatment face recognition technique planned enforced three basic step step face detection extraction stand prior camera image captured 's input frontal face captured mistreatment microsoft apis face detected 's keep mongolian unit measurement unit measurement 0.5 registration scholar check ready comparison photograph second step seek train face photo initialized feeding bunch coaching job photo face third step popularity identification step frontal face recognized face extracted image log updated time mark person room supported face recognition class consists camera capture photograph room sends apis pict-information 2016-17 13 e-attendance detected face unit measurement cropped image associate nursingd compared face mistreatment associate microsoft apis face face consists template face photo individual wa collected associate nursingdkeep associate registration approach face unit measurement verified marked server program connected induce subject class time teacher area unit class easily click picture start 3 pict-information 2016-17 14 e-attendance 3 specification 3.1 definition create easy efficient marking attendance automated procedure 3.2 number maximum number picture 20- 25. accurate face detection recognition condition capture mark attendance based frontal face side face create ambiguity detection procedure 3.3 laptop 4 gb ram i5 core processor 3.4 android pict-information 2016-17 15 e-attendance mongodb node.js kairos apis 3.5 area category image processing sub-category recognition deep learning pict-information 2016-17 16 e-attendance 4 pict-information 2016-17 17 e-attendance 4 4.1 purpose main purpose curb attendance wrong attendance school rural area 4.2high level fig.4.2.1 proposed workflow enrolment pict-information 2016-17 18 e-attendance fig.4.2.1 proposed workflow face matching 4.3 framework educational based rural area curb fake wrong attendance pict-information 2016-17 19 e-attendance 4.4 description group action victimisation face recognition teacher enters category image cluster scholar click group action tab mark group action identify coed image matching 3d face recognition technique employed match image processed group action group action group action marked coed image matched info shipped server control general info coed package good phone facilitate boost option face recognition based group action marking consists camera positioned category area require snap shot scholar picture area unit microsoft arthropod genus development kit face observe amount area unit gift specific image record count study implementing automatic group action victimisation face recognition technique projected enforced 3 basic step primary step face detection extraction stand ahead camera picture captured input frontal face captured victimisation offered microsoft arthropod genus face detected 's hold themongolian monetary unit decibel info half understood entrance coed info check knowledge comparison picture second step find train face picture initialized feeding group coaching picture face third step recognition identification step frontal face 's recognized face extracted image log updated time mark group pict-information 2016-17 20 e-attendance action person room group action supported face recognition school consists camera capture picture room sends arthropod genus detected face area unit cropped image associated compared face info victimisation microsoft arthropod genus face technique face info consists template face picture individual wa collected associated hold entrance method manner face scholarsarea unit verified group action marked server diary hooked topic class time academic category simply click image group action method 4.5 constraint developed easy attendance marking major technicalconstraint consider lighting aspect example clicking picture room well lit face clearly visible pict-information 2016-17 21 e-attendance 5 pict-information 2016-17 22 e-attendance 5 5.1. automate ui building phase save valuable time main implement frameworkswhich suitable banking enterprise help toenhance working performance 5.2plan execution identification searching identifying finalizing conceptualization concept building studied level designing stage preliminary presentation clarification pict-information 2016-17 23 e-attendance detailed stage low-level designing designed better visualization coding actual start stage coding coding 10 12 week unit initially tested number integration integrated integrated component performed includes evaluation product wa tested context entire scenario platform performance monitored documentation detailed document prepared stage gathering initial wa understanding definition understanding current scenario enterprise gathering gathering preparing preliminary workflow deciding execution execution actual pict-information 2016-17 24 e-attendance 5.3 historical semi-detached reason development considered semi-detached development consists mixture experienced inexperienced people member limited experience developed massive simple compact cocomo semi-detached estimation technique applied estimation technique constructive cost cocomo technique basic cocomo equation semi-detached ab 3.0 bb 1.12 cb 2.5 db 0.35 kloc estimated number delivered code 1 effort applied ab kloc bb man-months 3.0 8 1.12 30.8 2 development time cb effort applied db month pict-information 2016-17 25 e-attendance 2.5* 30.8 0.35 8.3 3 people effort applied/development time count 30.8/8.3 3.7 3-4 people needed 5.4 possibility loss injury definition environment exposure harm loss includes possibility well technique alleviate harm loss .all avoided performing attempt ensure time essential progress failure key learning involves identification prioritization 5.4.1 analyzed individually classification basis rated a. catastrophic b. critical c. marginal d. negligible reviewed consensus wa reached pict-information 2016-17 26 e-attendance 5.4.2 prioritization analyzing prioritized based review consensus developer 5.4.3 series step help tounderstand manage uncertainty plague potential happen outcome good identify access occurrence developed empirical monitor managerisks unexpected delay hindrance faced andneed actively managed rapid development word tom glib dont actively attack actively attack key function identify address eliminate source threat completion effective strategy address three issue a. avoidance b. c. contingency planning pict-information 2016-17 27 e-attendance 5.4.4 common http status received verification completed poor image accurate number face detected connection server fig.5.4.4 5.5 1.gantt pict-information 2016-17 28 e-attendance gantt fig 5.5.1. gantt 2.pert fig.5.5.2 pert pict-information 2016-17 29 e-attendance 5.6 tracking control mechanism 5.6.1. assurance control control involves series inspection review development process gesture library scalable start small direct use-cases gesture follow incremental approach assurance consists auditing reporting function ass effectiveness completeness control 5.6.2. change control change inevitable built 5.7 specificatilons 5.7.1 class class expected behavior functioning respect class focus interaction class class pict-information 2016-17 30 e-attendance fig 5.7.1 class 5.7.2 expected behavior functioning respect actor focus description interaction website pict-information 2016-17 31 e-attendance fig 5.7.2 5.7.3 represents business step-by-step workflow component control pict-information 2016-17 32 e-attendance fig 5.7.3 5.7.4 parallel vertical process object live simultaneously horizontal arrow message exchanged order occur allows specification simple runtime scenario graphical manner pict-information 2016-17 33 e-attendance fig 5.7.4 5.7.5 state state state depicts change state event output state pict-information 2016-17 34 e-attendance fig 5.7.5 state pict-information 2016-17 35 e-attendance 6 6 evaluation 6.1introduction pict-information 2016-17 36 e-attendance main aim provide web service ui configuration developer change position component header footer body ui configurable client web service monitored based parameter http request-response time exception status log viewed visualization http status kibanna 6.2screenshots 6.3 item applies well integration input output tested validity tested final tested 6.4 unit boundary function executed integration 6.5 procedure 1.testsuite_1 body_details _getdetails json format status localhost time 391 size 359 timestamp apr 05 03 14 26 ist 2017 teststep http //localhost 8080/restservice/webapi/details/ pict-information 2016-17 37 e-attendance -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 25 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=ae76d43ba70defbbe960489ed515f16e path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' pict-information 2016-17 38 e-attendance fig 6.5.1 body 2. testsuite_2 default_body_get-details json format status localhost time 312 size 359 timestamp apr 05 03 14 26 ist 2017 teststep http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate pict-information 2016-17 39 e-attendance user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 26 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=32a703756b8692e50d03ae1b98602763 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' pict-information 2016-17 40 e-attendance fig 6.5.2 default body 3.testsuite_3 header_changes_getdetails json format status localhost time 575 size 359 timestamp apr 05 03 14 24 ist 2017 teststep http //localhost 8080/restservice/webapi/details/change -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate pict-information 2016-17 41 e-attendance user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 24 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=ceddb49c445a765973951af595c211f4 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' pict-information 2016-17 42 e-attendance fig 6.5.3 header change 4.testsuite_4 header_default_get-details json format status localhost time 638 size 359 timestamp apr 05 03 14 23 ist 2017 teststep http //localhost 8080/restservice/webapi/details/ -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive pict-information 2016-17 43 e-attendance http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 24 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=095b1f829127436f3fc5ceb77fbbfd78 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' pict-information 2016-17 44 e-attendance fig 6.5.4 header default 5.testsuite_5 header_details_get-details json format status localhost time 123036 size 359 timestamp apr 05 03 12 18 ist 2017 teststep request 1 -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate pict-information 2016-17 45 e-attendance user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 23 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=af5043c90ec0a3e7a6efefcde67e87a6 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' pict-information 2016-17 46 e-attendance fig 6.5.5 header 6.testsuite_6 save_header_post-details json format status localhost time 396 size 359 timestamp apr 05 03 14 25 ist 2017 teststep http //localhost 8080/restservice/webapi/details -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 pict-information 2016-17 47 e-attendance connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 25 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=e402b0e79aef1d28cead804ecfd27f8c path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' fig 6.5.6 save header pict-information 2016-17 48 e-attendance 7.testsuite_7 update_put-details json format status localhost time 518 size 359 timestamp apr 05 03 14 25 ist 2017 teststep http //localhost 8080/restservice/webapi/details/ -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 25 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=e2bf18e8ebdacb9b670ec8f2171aa951 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` c\\ pict-information 2016-17 49 e-attendance ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' fig.6.5.7 update pict-information 2016-17 50 e-attendance 8.test-testsuite_8 json format fig 6.5.8 pict-information 2016-17 51 e-attendance 7 pict-information 2016-17 52 e-attendance 7 attendance based technique biometrics evaluation identification card process market proved time consuming tiring developed provide efficient accurate mark attendance help reducing wastage time interfere teaching process help eliminate fake wrong attendance developed help accurate attendance minimum period time pict-information 2016-17 53 e-attendance 1 .t venkat narayana rao vishal reddy rutwik jangam face detection e- attendencesystem 2015 http //www.ijcttjournal.org/2015/volume27/number-3/ijctt-v27p127.pdf 2 divyasingh monicakamnani ruhihadke shrutikhonde valhavipatil mitali.r attendance image processing 2014 http //ijarcet.org/wp-content/uploads/ijarcet-vol-3-issue-2-515-518.pdf 3 aziza ahmedi suvarnanandyal automatic attendance image processing 2015 http //www.theijes.com/papers/v4-i11/version-2/a0411020108.pdf 4 shubhushriwastavand dinesh chandra jain review face recognition attendance 2016 pict-information 2016-17 54", "keywords": ["acceptencoding gzip", "apachehttpclient java", "applicationjson server", "area unit", "arthropod genus", "contenttype applicationjson", "contenttype applicationjson server", "da gayatri", "eattendance fig", "eattendance pictinformation", "face recognition", "format status", "frontal face", "group action", "httponly contenttype", "httponly contenttype applicationjson", "image processing", "json format", "json format status", "krishna kumar", "localhost acceptencoding", "localhost acceptencoding gzip", "mark attendance", "mark group", "microsoft apis", "microsoft arthropod", "microsoft arthropod genus", "pathrestservice httponly", "pathrestservice httponly contenttype", "pictinformation eattendance", "pictinformation eattendance fig", "recognition technique", "rural area", "smart phone", "tab mark", "tanisha tarunkumar", "text pictinformation", "text pictinformation eattendance", "unit measurement", "useragent apachehttpclient", "useragent apachehttpclient java"], "libraries": [], "languages": ["basic", "small", "java"], "frameworks": [], "dbs": ["mongodb"]}, "./reports/13_final_report.pdf": {"title": "autoscaling of application servers", "filename": "./reports/13_final_report.pdf", "data": "autoscaling server abhinav shirore tejas naik sarvanan smit sheth b120058504 b120058586 b120058618 b120058629 guidance prof. s.s.pande s. 27 satara road 411043 2016-2017 autoscaling server abhinav shirore b120058504 tejas naik b120058586 sarvanan b120058618 smit sheth b120058572 bonafide prof. sachin s. pande earlier diploma prof. sachin s. pande prof. s.b deshmukh coordinator dr. p.t examiner sponsorship completion acknowledgement great pleasure satisfaction presenting auto-scaling server prof. s. s. pande dedication effort guiding process seminar success acknowledge appreciation coordinator mr. s. b. deshmukh knowledgeable guidance key completion clear instruction ensured meet exacting standard express deepest gratitude dr. a. m. bagade incharge .we directly indirectly helped completion college dr. p. t. consistent help support abhinav shirore b120058504 tejas naik sarvanan smit sheth b120058586 bi20058618 bi20058629 title 4.1 4.2 4.3 4.4 4.5 5.1 5.2 5.3 5.4 6.1 6.2 6.3 6.4 6.5 6.6 level architectural bsa bsa spawning unspawning server waterfall making making decision making nagios screenshot output screenshot output database entry gantt 11 13 15 16 17 19 21 22 22 24 25 25 26 27 28 abbreviation description bladelogic server automation round robin database bladelogic command virtual machine abbreviation bsa rdd blcli vm 1 2 3 4 topic sponsorship completion acknowledgement abbreviation background relevance undertaken background review background 2.2.1 2.2.2 existing proposed specification definition hardware/system purpose level description nagios 4.3.1 1.1 1.2 1.3 2.1 2.2 3.1 3.2 3.3 4.1 4.2 4.3 ii iii iv vi vii 2 2 3 5 5 5 6 8 9 9 11 11 11 11 4.3.2 4.4.1 4.4.2 4.4.3 4.4.4 4.4.5 4.4.6 4.4 5.1 5.2 5.3 6.1 6.2 6.3 6.4 6.5 7.1 7.2 analytics auto-scaling usage scenario profile specification evaluation experimental setup screenshots i. plagiarism ii review sheet ii iii iv 5 6 7 12 13 13 14 15 16 17 19 20 21 24 24 27 28 29 34 34 35 36 36 39 modern infrastructure service pay philosophy aws azure etc..it optimize usage enterprise class developed traditional center bsa inherently highly redundant cater operation require dedicated efficient function infrastructure moving cloud cost saving optimum typically majority operation executed peak hour weekend weekday peak hour wasted bmc decided enhance bsa product auto-scale job server demand customer allocate dedicated enable bringing cost running bsa 50 keywords virtualization cloud computing auto scaling dynamic scheduling server auto-scaling server 1 pune-43 1 auto-scaling server _____________________________________________ 1.1 background auto scaling technique cloud computing allows automatic scaling instance instantaneous situation auto scaling guarantee scale needed scaling auto scaling sure sufficient time performance company running web server infrastructure traffic campaign doe well generated traffic higher expected server unprepared spike sufficient time manually provision instance auto scaling objected common issue 1.2 relevance faced number challenge till unit demanded continually move handling device delivering entrepreneurship service complicated service included physical spread center maintained group prevailing server side mechanism shortcoming adaptively assigning computing handle volume time order respond swiftly abundant market business sector propose demand higher flexibility agility deploy swiftly great accuracy effective change satisfy regulation compliance infrastructure satisfy demand proposed solution business-service automation automates lifecycle operation center pune-43 2 auto-scaling server 1.3 undertaken 1.3.1 primary aim intelligently auto-scale server on- demand rise load spawning server manually 1.3.2 modern infrastructure service pay philosophy aws azure etc.. optimize usage enterprise class developed traditional center bsa inherently highly redundant cater operation require dedicated efficient function infrastructure moving cloud cost saving typically majority operation executed peak hour weekend weekday peak hour wasted bmc decided enhance bsa product auto-scale job server demand customer allocate dedicated enable bringing cost running bsa pune-43 3 auto-scaling server 2 pune-43 4 auto-scaling server background review _____________________________________________ 2.1 background company running web server infrastructure traffic campaign doe well generated traffic higher expected server unprepared spike adequate time manually provision instance auto scaling objected common 2.2 2.2.1 existing current solution suffer existing server side mechanism amazon web service google cloud service shortcoming adaptively assigning computing order handle volume time period order respond swiftly abundant market business sector propose demand higher flexibility agility deploy swiftly great accuracy effective change manually configuring installing adding patch server tedious job administrator deployed managed effectively company running web server infrastructure time web traffic server prepared spike failure condition manually providing instance tough adequate time respond situation manually solution provided auto scaling pune-43 5 auto-scaling server 2.2.2 proposed proposed adopting business service automation solution automates operation lifecycle center enables server administrator manage compliance holistically server storage device lot internet benefit auto- scaling property usage scaled automatically provider cloud service cloud computing advocated providing infinite capacity demand capacity center real finite illusion limitless capacity cloud provided statistical multiplexing number experience peak demand time cloud constrained demand satisfied scale number instance automatically based demand purpose applying simulation prove virtualization server decrease response time increase cpu utilization executing virtualization server reduce waiting time queue number waiting queue waiting time pune-43 6 auto-scaling server 3 pune-43 7 auto-scaling server specification 3.1 definition auto scaling technique cloud computing allows automatic scaling instance instantaneous situation bladelogic server automation policy based approach administrator manage center greater speed accuracy consistency existing server side mechanism amazon web service google cloud service shortcoming adaptively assigning computing order handle volume time period order respond swiftly abundant market business sector propose demand higher flexibility agility deploy swiftly great accuracy effective change bladelogic administrator change server reflecting change server develop patch operating vms automatic scaling job server bladelogic server automation failure pune-43 8 auto-scaling server 3.2 understand bsa job framework write micro-service scratch execute detailed bsa bsa cli method analytic automated decision job server scaled scaled based analytic decision job server deployment created bsa existing server hosting bsa creating vms integration vmware aws azure etc..for vm instance creating deployment instance 3.3 hardware/ i7 processor 2.4-3.4 ghz 4 gb ram minimum 8 gb recommended i7 processor 2.4-3.4 ghz microsoft window server 2002/2012 java se 8 bladelogic server automation bsa v8.4 hypervisor vmware workstation 12.0 flask micro-service framework v0.34.5 pune-43 9 auto-scaling server 4 pune-43 10 4.1 purpose auto-scaling server primary aim intelligently auto-scale server on- demand rise load spawning server manually 4.2 level fig 4.1.high level architectural 4.3 description 4.3.1 nagios nagios source i.e connected monitor device running linux window unix os periodic check critical parameter network server monitor memory usage disk usage processor load number running process processor load considered current pune-43 11 auto-scaling server 4.3.2 analytics auto-scaling processor load minute time interval stored mongodb database collected summarized fed analytics block processing analytics block fed compared threshold trained machine learning possibility momentary spike load caused sudden increase request handled server load minute spawning server advisable analytics designed aggregate number load record original condition existing server aggregated higher threshold stated server continuously load load greater threshold notification server health network administrator e-mail notification time server spawned replica launched existing balance load load le threshold keep pune-43 12 auto-scaling server 4.4 usage scenario 4.4.1 profile bsa admin deploy patch check compliance security threat blade logic command 4.4.2 fig 4.2 bsa pune-43 13 auto-scaling server 4.4.3. specification deciding add server description decision making decision auto-scale aimed deciding add vm server based decision making primary actor network admin precondition 1. server connected bsa 1. server rscd agent basic 1. bsa monitor health server 2. decision making 3. based vm spawned unspawned based decision making pune-43 14 auto-scaling server 4.4.4 fig 4.3 bsaflow pune-43 15 auto-scaling server 4.4.5 fig 4.4 pune-43 16 auto-scaling server 4.4.6 17 fig 4.5 spawning unspawning server pune-43 auto-scaling server 5 pune-43 18 auto-scaling server 5.1 requires waterfall waterfall linear approach development event 1. gather document 2. 3. code unit 4. perform 5. perform acceptance uat 6. issue 7. deliver finished product fig 5.1 waterfall pune-43 19 auto-scaling server 5.2 5.5.1 nave bayes classification method based bayes theorem strong naive independence simple term naive bayes classifier assumes presence class unrelated presence naive bayes outperform highly sophisticated classification method formula x=last minute average load server c=classes.ie spawn c|x posterior class target predictor prior class x|c likelihood predictor class prior predictor pune-43 20 auto-scaling server 5.3 5.3.1 monitor health bsa nagios output health statistic app-server stored database analytics fig 5.2 pune-43 21 5.3.2 auto-scaling server output input statistic checked threshold decides decision fig 5.3 5.3.3 decision making retrieves store check respective threshold decide spawn virtual machine continue fig 5.4 decision making pune-43 22 auto-scaling server 6 pune-43 23 auto-scaling server evaluation 6.1 experimental setup experimental setup described hosted amazon web service mongodb database store collected nagios .firstly nagios monitor health server store database fetch compare threshold generated decision making decides spawn virtual machine 6.2 screenshots fig 6.1nagios pune-43 24 auto-scaling server fig 6.2 screenshot output fig 6.3 screenshot output pune-43 25 auto-scaling server fig 6.4.database entry pune-43 26 auto-scaling server 6.3 6.3.1 gantt fig 6.5 gantt pune-43 27 auto-scaling server 6.4 fig 6.6 6.4.1.1 engineer 1 member install bsa execute blcli 6.4.1.2 engineer 2 member responsible installing monitor cpu memory vm storing monitored rrd 6.4.1.3 engineer 3 member responsible developing implemented making automated decision 6.4.1.4 engineer 4 member responsible writing micro-service integrate bsa pune-43 28 auto-scaling server 6.5 1 load localhost instance description load localhost instance learning spawn virtual machine instance prediction 0. snapshot 1 pune-43 29 auto-scaling server 2 increase load vm instance description increase load vminstance spawning instance subsequently sending email administrator 30 snapshot 2 pune-43 auto-scaling server 31 snapshot 2 pune-43 auto-scaling server 32 snapshot 2 pune-43 auto-scaling server 7 pune-43 33 auto-scaling server 7.1 extant server side restriction adaptively allocating requisite computing order manage diverse volume time answer market unit request greater pliability agility responsibility deploy rapidly manage change effectively manually configuring installing adding patch server tedious job administrator proposed adopting business service automation solution automates working lifecycle center allows network administrator control compliance holistically server storage device applying virtualization server lessen waiting time queue number waiting queue waiting time help monitor health server based heath server help automatically spawn/unspawn server 7.2future current limited scaling amazon ec2 instance demonstrate auto-scaling actual physical server extended downscaling server i.e destroy unused server usage condition efficient usage pune-43 34 auto-scaling server 1 zhen xiao senior member qi chen haipengluo automatic scaling internet cloud computing service 2014 2 xianmin wei school weifang weifang server virtualization enterprise 2015 3 gunjankhanna kirk beaty gautamkar andrzejkochut electrical ibm t.j. watson center purdue west lafayette usa hawthorne ny usa performance virtualized server environment 2015 4pisit chanvarasuthschool sirindhorn international thammasat pathumthani thailand virtualization approach auto-scaling 2014 5 2016 bmc online .available http //www.cse-cst.gc.ca/en/node/955/html/24723 6 2016 bmc online .available http //www.communities.bmc.com/cummunity/ bmcdn/bmc_service_automation/server_configuration/automation_bladelogic/blog 7 online .available http //docs.bmc.com/docs/display/bsa88/walkthrough 2016 bmc 8 2016 bmc online .available http //itfootprints.com/training.php dd=bladelogic- server-automation-tools 9 2016 bmc online .available http //communities.bmc.com/thread/131606 10 2016 bmc online .available http //niek.bartholomeus.be/ pune-43 35 plagiarism auto-scaling server pune-43 36 auto-scaling server pune-43 37 auto-scaling server pune-43 38 auto-scaling server review sheet ii iii iv pune-43 39 auto-scaling server pune-43 40 auto-scaling server pune-43 41 auto-scaling server pune-43 42 auto-scaling server pune-43 43 auto-scaling server pune-43 44 auto-scaling server pune-43 45 auto-scaling server pune-43 46", "keywords": ["accuracy effective", "accuracy effective change", "auto scaling", "automatic scaling", "autoscaling server", "bladelogic server", "bladelogic server automation", "cloud computing", "computing order", "effective change", "existing server", "great accuracy", "great accuracy effective", "job server", "pune autoscaling", "pune autoscaling server", "server automation", "swiftly great", "swiftly great accuracy", "virtual machine", "volume time", "waiting time", "web server"], "libraries": [], "languages": ["basic", "java"], "frameworks": ["flask"], "dbs": ["mongodb"]}, "./reports/14 _final_report.pdf": {"title": "cloudswitch \u2013 a sd-wan solution", "filename": "./reports/14 _final_report.pdf", "data": "cloudswitch sd-wan solution jitin george b120058551 supreet deshpande b120058531 yash karle b120058559 ashwin bhandare b120058517 guidance mr. s.b deshmukh dhankavdi pune-411043 2016-20 cloudswitch sd-wan solution jitin george b120058551 supreet deshpande b120058531 yash karle b120058559 ashwin bhandare b120058517 bonafide prof. s.b deshmukh earlier diploma _______________ _______________ mr. s. b. deshmukh mr. s. b. deshmukh coordinator _______________ examiner ______________ _______________ dr. p. t. _______________ sponsorship letter completion letter acknowledgement great pleasure satisfaction presenting cloudswitch sd- wan solution extend heartfelt gratitude prof. s. b. deshmukh mr. rohan pednekar continuous support expert advice express gratitude i.t exceptionally talented teacher staff i.t extend sincere p.i.c.t dr. p.t finally quiet family friend completed jitin george b120058551 supreet deshpande b120058531 yash karle b120058559 ashwin bhandare b120058517 title 1 1.1 1.2 nomenclature background 2 review 2.1 2.2 existing proposed 3 specification 3.1 3.2 3.3 3.4 4 5 5.1 5.2 definition cocomo 6 evaluation 6.1 6.2 screenshots ii iii iv 1 2 3 4 5 5 6 7 7 8 10 11 17 18 20 22 23 27 7 i. base paper ii plagiarism iii review 28 30 31 cloudswitch-a sd-wan solution traditional network switch connects machine layer 2 network machine location switch connected determines ip address vlan connect machine switch layer 2 address moving machine physical location lead change ip address disaster recovery cloud offloading center cloud premise lead total reconfiguration network change ip address reconfiguration network change active directory setup dns address costly affair vpn tunnel premise center cloud geo-location compatible router premise maintenance vpn connection period centralized pane access/control center network geo-graphical location rising server virtualization network virtualization rising moving/offloading vms/data cloud geographical premise easier network virtualization defined network company google adopted sdn convert entire global wan google center single layer 2 network keywords sd-wan defined networking security cloud computing 2016-2017 cloudswitch-a sd-wan solution title pg 3.1 prepare gantt 9 2016-2017 ii cloudswitch-a sd-wan solution title fig 3.1 3.2 3.3 4.1 4.2 4.3 cloudswitch gantt cloudswitch proposed solution mpls 4.4 cloudswitch class sd-wan 4.5 4.6 4.7 5.1 cloudswitch cloudswitch 0 cloudswitch 1 5.2 8 9 10 12 13 13 14 15 16 16 18 19 2016-2017 iii wan sd-wan sdn mpls vpn vlan dns vm dfd cloudswitch-a sd-wan solution nomenclature wide area network defined wide area network defined networking multiprotocol label switching virtual private network virtual local area network domain virtual machine cocomo constructive cost 2016-2017 iv cloudswitch-a sd-wan solution 1 2016-2017 1 cloudswitch-a sd-wan solution 1.1 background increased adoption public cloud service service saas ubiquity broadband access specialized enterprise key trend driving digital transformation fully harness disruptive trend fundamental shift delivery enterprise networkthe central nervous modern enterpriseis legacy one-size-fits-all network rigid lack flexibility programmability company require gain competitive edge today digital enterprise network cloud software-define wan sd-wan approach designing deploying wide area network meet business performance combine performance-enhancing capability centralized orchestration rapid service deployment sd-wan help centrally manage networking capability enterprise control network remote office staff individually traditional network switch connects machine layer 2 network machine location switch connected determines ip address vlan connect machine switch layer 2 address moving machine physical location lead change ip address disaster recovery cloud offloading center cloud premise lead total reconfiguration network change ip address reconfiguration network change active directory setup dns address costly affair setting vpn tunnel premise center cloud geo- location compatible router premise maintenance vpn connection period coming age iot device accessing cloud bidirectional mode layer 2 network spanning cloud mqtt protocol send signal bandwidth savvy cctv tele- video shooting mqtt 2016-2017 2 cloudswitch-a sd-wan solution global bidirectional rising compared current request-response provided http protocol security utmost concern bidirectional loophole customer private network/datacenter 1.2 year-over-year basis enterprise wide area network increasingly complex costly manage maintain time business require 24 7 network uptime enterprise network faced shrinking change window competing time window delivery support production efficiency remote business sites/ branch adversely impacted number traditional factor delay carrier access layer provisioning remote site week month provisioning t1 mpls circuit 30 90 day despite expedited fee paid customer provisioning higher speed higher cost mpls circuit ds3 longer stretching time frame month longer driven absence fibre to/at remote site ultimate eliminate private wan mpls -- plagued long provisioning time expensive contract -- making wan responsive le complex defined networkings benefit cost efficiency flexibility 2016-2017 3 cloudswitch-a sd-wan solution 2 2016-2017 4 cloudswitch-a sd-wan solution review 2.1 existing popular wide area network wan connectivity option mpls carrier ethernet 2.1.1 mpls scalable protocol-independent transport mpls network packet assigned label packet-forwarding decision solely label examine packet allows create end-to-end circuit transport medium protocol mpls secure tunnel transport confidential branch center hq mpls belongs family packet-switched network 2.1.2 carrier ethernet marketing term extension ethernet enable telecommunication network provider provide ethernet service customer utilize ethernet network 2.2 proposed device ip accessed securely seamless connectivity premise centre public cloud centre public cloud vpn eliminate physical location determining ip address machine help recovery disaster reconfigure network ip address continue fail premise machine cloud implementing google programming language golang latest tun device openssl 2016-2017 5 cloudswitch-a sd-wan solution 3 2016-2017 6 cloudswitch-a sd-wan solution specification 3.1 definition build software-defined wide area network sd-wan extending layer 2 network public private cloud connecting enterprise network including branch office centre geographical distance 3.2 server aws ec2 t2.micro instance 1gb memory minimum 32gb disk space server linux 14.04 lts openssl 1.1.0 client 1gb memory minimum 1gb disk space stable internet connectivity preferably wifi 3g client linux 14.04 lts llibgo5 library pre-installed tun/tap 3.3 2016-2017 7 cloudswitch-a sd-wan solution 3.3 t1-project definition t2-project planning t3-project execution t4-project control minimum viable product mvp t5-project delivery fig 3.1 cloudswitch 2016-2017 8 cloudswitch-a sd-wan solution fig 3.2 3.1 finalization start 01-08-16 duration 08-08-16 7d selection designing deployment 20-07-16 08-08-16 20-08-16 24-08-16 05-01-17 05-02-17 10-08-16 22-08-16 02-09-16 20-01-17 04-02-17 20-02-17 21d 14d 14d 150d 30d 14d 2016-2017 9 cloudswitch-a sd-wan solution fig 3.3 gantt 3.4 cocomo determined fit characteristic organic mode cocomo modeling i.e coefficient 2.4 1.05. 3000 code i.e 3kloc kilo code formula effort kloc 1.05 effort 2.4 3 1.05 7.6 man-months 2016-2017 10 cloudswitch-a sd-wan solution 4 2016-2017 11 cloudswitch-a sd-wan solution fig.4.1 represents network cloudswitch lowermost layer consists device connected centralized cloud advantage setup cloud security provided cloud eliminating specialized vpn mpls connect cloud existing lte broadband communicate securely network heterogeneity displayed cloud layer maintain connection account network layer control plane network 2016-2017 12 cloudswitch-a sd-wan solution fig 4.2 cloudswitch proposed solution display plethora device connected cloud running network consideration iot perspective fig 4.3 mpls 2016-2017 13 cloudswitch-a sd-wan solution existing framework company mpls muti protocol label switching .our proposed solution intends replace technique.due 's inflexible costly nature verge replaced sd-wan fig 4.4 cloudswitch class sd-wan depicts class proposed method controller intelligent system.takes network based decision vm host singular client connecting server datacenter sigular repository access connected device access physical topology registering device switch router level tunnel secure medium transfer 2016-2017 14 cloudswitch-a sd-wan solution fig 4.5 cloudswitch authenticating connecting server communicating device network secure channel 2016-2017 15 cloudswitch-a sd-wan solution fig 4.6 cloudswitch 0 fig 4.7 cloudswitch 1 2016-2017 16 cloudswitch-a sd-wan solution 5 2016-2017 17 cloudswitch-a sd-wan solution fig 5.1 5.1 1. user/admin sign log centralized portal web browser functionality handled web server hosted aws ec2 instance user/admin add device portal listing device geo-location device map installation step installation tab well os-specific package provided downloads package include shellscripts registration 2. adding device user/admin device running registration client provided shellscript provided downloaded package client communicates registration server hosted aws ec2 instance client fetch device-specific sends server server add device redis database server device fetched database portal 2016-2017 18 cloudswitch-a sd-wan solution 3. step actual device device communicate client server side aws ec2 hosted server third server called server server responsible handling actual device openssl encrypted channel centralized server server map incoming request forward correct destination fig 5.2 2016-2017 19 cloudswitch-a sd-wan solution 5.2 cloudswitch divided 3 main component 1. authentication authentication phase registering portal logging account registered device listed hitting add device script unique ip downloaded local machine script 3 1. virtual installation 2. registration client 3. client executing script virtual tun device installed local machine registration client search find tun sends registration server redis db device registered web portal client establishes server server authorized self-signed client connecting check server verifying ssl_get_peer_certificate established verification socket established 2. tunneling encryption virtual tun device installed local machine reason tun device tun software-only virtual network kernel simulate network layer device packet operating tun device delivered user-space program attache device user-space program pas packet tun device ip address virtual tun permanent virtual address client program responsible fetching packet arriving space tun device c-tun api file linux/if_tun.h purpose listener instantiated network listen concurrently persistent socket connection established server aws server packet arriving socket connection server written tun vice versa server thread spawned connection common thread virtual switching map entry 2016-2017 20 cloudswitch-a sd-wan solution 3. virtual device ip public ip latitude longitude map location status packet established encrypted openssl library negotiation encryption protocol suite client server server mapping authentication+virtual ip ssl connection maintained client format map username+virtualip ssl_file_descriptor device ready communicate packet written socket connection client listener 's forwarded server server strip ip header find destination address check entry virtual switching route ssl file descriptor device offline packet dropped cloudswitch network infrastructure built applying benefit cloud computing networking paradigm central aim firewall bandwidth allocation thing easier server ipv6 cast load-balancing docker dedicated server bandwidth better performance federated cloud computing connecting cloud solve cloud vendor heterogeneity issue iot 5.3 api 's ip tuntap tuntap facility ip utility linux create tun c-tun interaction tun hiredis c-redis connectivity redigo go-redis connectivity json parser jsmn parser libcurl latitude longitude fetching openssl authentication encryption pthread multithreading networking library golang google map api plotting co-ordinate map 2016-2017 21 cloudswitch-a sd-wan solution chapter-6 2016-2017 22 cloudswitch-a sd-wan solution evaluation 6.1 screenshots 6.1.1 web portal 2016-2017 23 cloudswitch-a sd-wan solution 2016-2017 24 cloudswitch-a sd-wan solution 6.1.2 aws console 6.1.3 virtual creation 2016-2017 25 cloudswitch-a sd-wan solution 6.1.4 security encryption 2016-2017 26 cloudswitch-a sd-wan solution 6.1.5 working 6.2 performed iterative development.. tested monolithic integration server server ability robustly handle stray request ensuring maximum uptime scale load server handle server tested stray memory allocation bandwidth streaming multiple source tested optimal number ensure consistency proposed 2016-2017 27 cloudswitch-a sd-wan solution chapter-7 2016-2017 28 cloudswitch-a sd-wan solution sd-wans potential disrupt enterprise wan built managed sd-wan focus connecting corporate headquarters branch office centralized network lot start-ups space general purpose key advantage sd-wan wa based network reconfiguration sdn principle programmability abstraction function classical sdn definition separate control plane centralized sdn controller global visibility path selection advantage include 40 80 cost reduction touch provisioning simplified le brittle better network availability wan optimization agility sd-wan emerging adopted business today tomorrow working dell-emc sd-wan domain concept ultimately interact customer 5g internet thing device smart smart device connected internet cloud sd-wan concept contribution continuous persistent making human life easier comfortable 2016-2017 29 cloudswitch-a sd-wan solution 1 sean wang ray ng jem pagan onug software-defined wan onug sd-wan working group 2014 2 riverbed-white paper optimizing software-defined wide area network riverbed-annual journal 2015 3 l.vdovin p. likin a.vilchinskii network utilization optimizer sd-wan science conference modern networking monetec 2014 international 2014 2016-2017 30 i. base paper telecommunication service provider gain fear latest wan service provider face changing landscape market trend wide area network wan competitive option cutting mpls revenue price erosion appear negative growth rate mpls vpn europe year north america suit 2018. enterprise trend service provider instance enterprise changing wan bandwidth-intensive business-critical require intelligent routing traffic multiple wan link optimize cost increased number branch office remote driving enterprise find more-efficient lower-cost method add network connection finally increased cloud service enterprise call secure reliable network connectivity public broadband 1 key wan trend 1source pwc conducted enterprise time software-defined wan exhibiting great deal growth potential idc 2020 sd-wan market size projected grow 6 billion cagr 93 2015 20202. shift marketplace represents revenue opportunity service provider compete service provider flexible hybrid network solution lower total cost ownership sd-wan provide sd- wan help service provider increase profitability accommodating wan market trend pwc sd-wan service provider threat opportunity 2 sd-wan service provider sd-wan ecosystem including customer-premises equipment edge device including controller service enables enterprise-grade wan performance reliability security variety allows dynamic efficient policy-based routing traffic multiple wan connection service provider mpls public internet lte wireless broadband method order optimize bandwidth usage cost second software-defined element service provider customer greater flexibility automating key process speed simplifies process configuring adding removing managing network service based business demand competitive concern 2 sd-wan pwc sd-wan service provider threat opportunity 3 software-defined element bring considerable advantage service provider importantly service provider reduce tco simplify delivery wan service branch office zero-touch deployment turn employee closer customer employee live service provider deploy provision branch office start revenue faster utilize multiple wan link enterprise wan offer flexibility deploying sd-wan framework service provider implement intelligence logic long increasing flexibility automation faster reprogram device procure install abstraction policy layer service provider dynamically manage branch office layer 3 wan connection enterprise capability turn trigger considerable deployment advantage intelligence distributed branch device service provider edge cloud appropriate deployment second sd-wan enhances reliability security network traffic untrusted broadband link allows provider route greater percentage network traffic lower cost wan channel public broadband service provider offer capability sd-wans instance shift slas network-based metric application-based metric customer better sense network easily chargeback told capability help service provider add enhancing mpls infrastructure increase revenue potential offering additional service sd-wan responsible intelligence logic analytics controller sps retain customer enticed sps offering service 3 business outcome service provider pwc sd-wan service provider threat opportunity 4 sd-wan chain availability sd-wans change traditional wan chain allowing entry player instance networking company traditionally sell device service provider enterprise service provider offer infrastructure service enterprise enterprise turn manage wan in-house utilize service provider changing sd-wan startup entering market vendor traditionally virtualization security space multiple operator msos entering chain offering enterprise customer good transport network sd-wan startup networking incumbent selling directly enterprise threat service provider 4 sd-wan chain pwc sd-wan service provider threat opportunity 5 service provider advantage shift based experience bring create potential revenue stream offering sd-wans more-flexible cost-effective alternative mpls branch customer segment small midsize business managing interconnects cloud provider enterprise providing single point-of contact customer physically connected service provider network providing cloud-based network function virtualization nfv service offer enterprise customer improve revenue service increasing revenue handling peak burst network traffic bundling higher value-add service increase customer retention analyzing enterprise network traffic sharing analytics help customer reconfigure network greater efficiency number service provider thinking providing sd-wan service enterprise high-bandwidth support enterprise advantage videoconferencing collaboration dont over-provision network bandwidth sd-wans bandwidth turn policy-based forwarding sd-wans enterprise prioritize bandwidth network traffic salesperson accessing crm higher priority background update accelerate branch office deployment enterprise bring office online support merger acquisition company acquisition integrate site sd-wan speed process enable internet-of-things sensor device intelligent sd-wan support connection flowing pwc sd-wan service provider threat opportunity 6 sd-wan competitive landscape sd-wan competitive landscape three category vendor include traditional routing/networking company offered networking solution year augmenting offering sd-wan solution include vendor specialized offering wan optimization virtualization finally number startup offering point solution sd-wan question offer term key competitive capability sd-wan component e.g edge device solution commoditized ease configuration visibility capability offered controller main differentiator sd-wan vendor service provider focus differentiation area interoperability product ability augment current service provider infrastructure addition cpe carrier-grade strong routing functionality enterprise service provider offer apis oss/bss integration flexible licensing function modularity time sd-wan solution allow key capability automated provisioning service cloud orchestration direct path enterprise cloud dynamic multi-path optimization automatic capacity steering link remediation scalable redundant cloud network key consideration service provider service provider capture retain customer move sd-wan market choose procure sd-wan solution resellers sd-wan component alternatively sps partner sd-wan vendor expand market reach provide input sd-wan roadmap option reduces control customer service provider focus augmenting existing enterprise offer broader portfolio product service offer industry-specific solution addressing specific network highly secure regulated industry healthcare financial service solution industry high-bandwidth content-streaming focus acting cloud broker aggregator providing cloud-to-cloud connectivity qos security offer value-add service analytics order help establish sd-wan adoption service provider consider phased approach depicted 6 pwc sd-wan service provider threat opportunity 7 6 adoption sd-wan requires phased approach ongoing assessment proof point service provider approach evaluating adopting sd-wan solution telco environment 1. expand footprint telco cloud 2. leverage nfv virtualize environment 3. virtualize edge router define industry business 1. define industry-specific slas 2. define business-specific slas 3. create business-specific 4. align sd-wan strategy roadmap evaluate identify top 3 5 criterion evaluation e.g configuration performance time deploy 1 2. attain proof concept potential vendor lab simulated production environment implement phase 1. implement component point point maintain security integrity a. controller centralized location b. orchestration centralized location c. cpes branch office pwc sd-wan service provider threat opportunity 8 threat vs. opportunity ultimately tackling sd-wan market service provider face threat opportunity threat include potential cannibalization mpls revenue managed service revenue outnumbering threat opportunity sd-wan potential enable revenue stream cost effectively offer enterprise differentiated service reduce time-to- market automated deployment offer metering enterprise advantage consumption-based pricing offer alternative wan link enterprise pwc broadband cost 97 le traditional mpls mbps month addition zero-touch deployment reduces on-site personnel branch office deployment maintenance capture customer segment smbs enterprise geographical area mpls link feasible allows service provider improve customer number efficiency providing enterprise visibility wan performance self-service portal add-on service service provider offer lower cost time service provider easily monitor wan traffic lower troubleshooting ongoing network cost bottom sd-wan opportunity outweigh threat service provider short service provider face three option advantage sd-wan choose adopt sd-wan advantage focus maintaining mpls revenue lose customer turn service provider sd-wan vendor transform wan option resell sd-wan service vendor retain customer sd-wan benefit allows capture customer segment mpls wa feasible earlier disadvantage service provider forgoes additional revenue growth opportunity logical option service provider stay competitive integrate sd-wan offering existing mpls network advantage retain customer sd-wan benefit increase revenue potential offering additional service sd-wan platform create foundation easily offering network service option sps differentiation help combat ott threat sd-wan threat option requires making change organizational infrastructure order support sell sd-wan service small sacrifice light potential upside face increased demand enterprise customer augmenting traditional offering mpls threat entrant path sd-wan clearly time optimizes wan link mpls public broadband lte based business policy lead lower tco enables reliability security untrusted broadband link enables automated provisioning leading faster activation branch site improve time customer service provider ultimately advantage sd-wan overcome disadvantage service provider tap sd-wan- enabled revenue stream offset declining mpls revenue well diversify revenue base additionally sd-wan adoption enables service provider respond faster demand service enterprise customer enabling better customer experience improve customer lifetime increase efficiency stay abreast cutting-edge order respond shift wan landscape ever-changing pwc sd-wan service provider threat opportunity 9 source 2 idc cloud drive wan efficiency power move sd-wan idc 2016. follow url access link author pwc professional contributed experience knowledge expertise produce paper romit dey consulting pricewaterhousecoopers llp romit.dey pwc.com +1 408 817 5906 amit kumar director consulting pricewaterhousecoopers llp amit.kumar pwc.com +1 408 817 1291 addition contact sushmita singal manager consulting jeremy santos associate consulting provided key insight amit dhir director consulting pricewaterhousecoopers llp amit.dhir pwc.com +1 408 817 5879 reproduction and/or transmission form including photocopying mechanical electronic recording permission publisher prohibited 2016 pwc reserved pwc refers member firm subsidiary affiliate refer pwc network member firm separate legal www.pwc.com/structure ii plagiarism iii review", "keywords": ["area network", "ashwin bhandare", "aws ec", "base paper", "branch office", "center cloud", "consulting pricewaterhousecoopers", "enterprise customer", "enterprise network", "ip address", "layer network", "local machine", "multiple wan", "network traffic", "proposed solution", "provider threat", "provider threat opportunity", "pwc sdwan", "pwc sdwan service", "reliability security", "revenue stream", "sb deshmukh", "sdwan market", "sdwan service", "sdwan service provider", "sdwan solution", "sdwan vendor", "server server", "service enterprise", "service provider", "service provider threat", "socket connection", "threat opportunity", "tun device", "vpn tunnel", "wan link", "wan service", "wide area", "wide area network"], "libraries": [], "languages": ["small"], "frameworks": [], "dbs": ["redis"]}, "./reports/15_final_report.pdf": {"title": "bblock data protection appliance", "filename": "./reports/15_final_report.pdf", "data": "bblock protection appliance fulfilment niraj jajoo prabhanshu jha b120058548 b120058550 siddhesh malegaonkar b120058577 shweta singh b120058635 guidance mr. s. b. deshmukh sr. 27 pune-satara road 43 2016-2017 bblock protection appliance bblock protection appliance niraj jajoo prabhanshu jha b120058548 b120058550 siddhesh malegaonkar b120058577 shweta singh b120058635 bonafide prof. s. b. deshmukh fulfilment earlier diploma prof. s. b. deshmukh prof. s. b. deshmukh co-ordinator signature examiner dr. p. t. 2016-17 scanned camscanner acknowledgement express deep sincere gratitude prof. s. b. deshmukh unflagging support continuous encouragement guidance persistent help express deepest gratitude in-charge hod-it dr. a. m. bagade opportunity express heartfelt gratitude dr. p. t. providing infrastructure complete warm faculty helped view encouraging dell emc supported guided continuously directly indirectly helped completion niraj jajoo b120058548 prabhanshu jha b120058550 siddhesh malegaonkar b120058577 shweta singh b120058635 iii bblock protection appliance title 2.1.3. process mining 2.1.4. etl 2.3.3. working mapreduce 4.1 4.2. level 4.3. class 4.4. 4.5. 4.6. deployment 4.7. snapshot wireframe utility 4.8. snapshot wireframe configuration utility 4.9. snapshot wireframe query utility 5.1. snapshot 5.2. snapshot 6.1 query input 6.2 output relevant log relevant log file 2016-17 iv 6 8 13 24 24 25 26 27 27 28 28 28 30 32 34 34 dd dpa dp sftp slct spi vce-dpa bblock protection appliance abbreviation domain protection advisor protection suite secure file transfer protocol simple log file clustering process intelligence vmvare cisco emc2 protection advisor 2016-17 bblock protection appliance industry acknowledgement abbreviation ii iii iv title 1. 1.1. 1.2. aim 1.3. 1.4. target audience 2. review 2.1. background 2.2. undertaken 2.3. 2.4. existing 2.5. proposed 3. specification 3.1. definition 3.2. concept 2016-17 1 1 3 3 4 5 5 8 9 16 17 20 20 20 bblock protection appliance 3.3 3.4. specification 3.5. restriction constraint evaluation a. base paper b. plagiarism c. review sheet ii iii iv 21 22 23 24 31 34 35 36 2016-17 4 5 6 7. bblock protection appliance analyzing providing centralized solution log dpas product bblock combine compute network storage virtualization pre-packaged unit infrastructure internally host multiple protection appliance server product avamar networker domain dp dpa utility bblock converged appliance smart efficient troubleshooting infrastructure automatically extract key log message perform invariant checking greatly simplify troubleshooting engineer considering parameter timestamp keywords log level thread level developing achieve efficient powerful troubleshooting support combined heterogeneous product terabyte log file file format 2016-17 bblock protection appliance 1.1. analytics interest rise magnanimously google adapted mapreduce wa definitely good move well catalyst number progress development area additionally slowly definitely involved domain e.g e- commerce government health insurance retail penetration supported overwhelming amount source e.g web trajectory streaming rfid build-up progressively growing scale door opened development deployment apache hadoop process extremely datasets impossible restriction traditional dbms capacity analytics bda modern method mining statistical find hidden pattern bda modern method operate term applied datasets grow tough conventional database amount method rely industrial extraction-transform-loading dbms olap business analytics relational warehousing 2006 international conference mining icdm top ten mining defined based nomination expert citation count community cover classification clustering association regression network multivariate technique factor regression discriminant clustering associated business incorporated commercial well source nave bayes cart c4.5 em expectation maximization pagerank svm support vector machine knn k-nearest neighbour k-means apriori 2016-17 1 bblock protection appliance matter fact generator create phone gps social network interaction government generate built stored conventional dbms call method analytics order sense 1.1.1. process mining process mining process technique allows business process based event log process mining specialized data- mining applied event log order identify trend pattern contained event log recorded process mining aim improve process efficiency understanding process automated business process discovery abpd process mining process mining method informal process description gained existing documentation doubtable instance process mining terminology trail audit workflow electronic patient record hospital describing process transaction log enterprise planning product 3 event log compare event log prior grasp observation conform descriptive prescriptive modern produce volume event log event pattern discovery log decade center network grown processing power size complexity commonly handle terabyte log daily basis mining technique called process mining kind 2016-17 2 bblock protection appliance three class process mining method categorization based prior process mining policy discovery priori exist based event log built discovered based low-level event famous method exist automatically constructing process based event log process mining begun target perspective e.g time etc. 1.2. aim process mining process event log generated mined process aware pais improvement discovery process conformity discovery technique process mine event log produced vce-dpa vmware-cisco-emc protection appliance produce process bblock protection appliance procedure inherits variety divergence consequently produced log spaghetti-like prove complex explore troublesome understand analyst 1.3. attain object completing 1. showing filtered parameter 2. smart unified view log dpas product proactively remedial step 3. logical hierarchy failure event 2016-17 3 bblock protection appliance 4. alert issue 5. interpretation aggregated 1.4. target audience 1. executive 2. manager 3. architect 4. administrator 5. support engineer 2016-17 4 bblock protection appliance review 2.1. background term business intelligence mining process mining analysing portion provided difference mining support business decision field example product supermarket dispatch marketing flyer dont expected process time company invest lot financially modelling process process modelling automated outdated losing synchronization reality stack paper 2.1.1. process mining process mining concept connect domain mining business process mining focus processing business process target modelling controlling improving business process process mining fuse modelling control improvement business process 2.1.2. mining 2016-17 5 bblock protection appliance mining datasets coming insight analysing convert hidden connection 2.1.3. process mining mining actual difference process mining method integrate strength process modelling mining automatically creating process based existing log process mining yield dynamic connected business updated easily time 2.1.3. process mining courtesy fluxicon blog 1. dynamic versus static mining process static time process mining side wa created process mining provide real-time view business process live feed process mining method allow process time based relevant 2. process versus pattern mining process predict pattern example doe marketing campaign greatest target group buy product focus discovering 2016-17 6 bblock protection appliance controlling improving actual business process mining direct link business process opposed process mining processing derived support thread process mining level view business process 3. versus mining analysing reveals pattern doe answer question pattern established mining limited solely process mining hand provide insight arrived technique doe search pattern causal process 4. specific versus arbitrary mining invisible pattern collection doe answer doubt process mining method hand allow answer clear predefined question 2016-17 7 bblock protection appliance 2.1.4. business intelligence process mining difference 2.1.4. etl courtesy fluxicon blog 2.2. undertaken fall discovery process mining figured studying background procedure built bblock protection appliance provide unified view product log easy support engineer troubleshoot issue addition post-event troubleshooting provide early warning potential issue issue memory cpu storage status delivered appliance admins real-time channel email mobile app 2016-17 8 bblock protection appliance 2.3. mass-produce mass event log mining method preferable method suggested previous center network developed remarkably size complexity operating power frequently deal terabyte log daily ease administration lot experimentation paper forward usage mining method uncovering event pattern event log expertise advantage recognition fault dell emc offer variety product enterprise market 1. avamar backup recovery company differently outlining recovery backup solution fit necessity increasing growth regulatory acceptance intensified service- level assent diminishing backup besets supplementary difficulty faced stimulated virtualization coinciding infrastructure urge enhance protection company involving distant office cloud dell emc avamar adaptable deployment alternative speedy full daily backup 2. protection advisor unified protection productively supervising protection situation toil painstaking convoluted expertise backup replication assisting infrastructure company acquiring multiple center hybrid computing frequently spread private public cloud expands organizing dell emc protection advisor 2016-17 9 bblock protection appliance automation unify collection unified inclusive view protection 3. protection suite backup recovery enterprise local cloud protection reporting 4. domain backup storage dell emc domain operating delivers industry-leading speed efficiency variable-length deduplication bblock converge appliance box internally host product sold company single product finding issue reason malfunctioning tough heterogeneous product working difficult order help support engineer devising centralized solution capture log dpas product perform elucidate knowledge regard analytics state-of-the-art investigated current well draft agenda based written exerted area analytics undergo lens three stage analytics step storage processing analytics focus analytics subject term technique opportunity challenge applied text-mining technique corpus log derive common writing text perspective predict dba trend 2.3.1. bblock protection appliance 2016-17 10 bblock protection appliance cloud computing gradually popular satisfying maintain difficult computing congenital impediment scale susceptible obstacle caused bug runtime event log prove core source engineer administrator carry job troubleshooting event log file increase rapidly dynamically challenging engineer administrator manually inspect trillion log produced week nowadays keywords critical warning error searched incorporated source code developer developer symbolize message warning critical debug resolution generate wrong alert administrator single product finding issue reason malfunctioning tough bblock protection appliance utility collect reduce merge interpret log independent product avamar domain protection suite protection advisor heterogeneous product working difficult product log entirely file format order help support engineer devising centralized solution capture log dpas product perform foregoing operation log coarse fine-grained log detection accuracy automatic anomaly detection engineer administrator face scrutinizing log message detect anomaly existing solution detecting 2016-17 11 bblock protection appliance 2.3.3. analytics find business process longer fit single cost effective simple solution buy specialty machine lot memory cpu solution scale generally conctraint cost infrastructure answer establish high-availability cluster cluster requires specialized configuration installation well administration service attempt single machine cheaper solution acquiring cloud computing high- availability cluster proprietary expensive hadoop support mapreduce wa introduced google method class petascale cluster inexpensive machine hadoop source framework cloud computing well distributed file bulk common pattern transformed processing item essentially dependent item named single-instruction multiple-data simd map programming iwhich key pair nitial ingestion independent input record processed parallely reduce framework call 's reduce function unique key sorted order reduce iterate associated key produce output aggregation summarization step associated record processed single individual processing chunk physically partitioned distinct sorted sorted block passed reducer 2.3.3. working mapreduce 2016-17 12 bblock protection appliance 2.3.3. working mapreduce map doe transforming record inputted key/value pair output map partitioned block partition sorted map computing node cluster network hadoop multiple map running simultaneously cluster partition sorted key key processed reducer hadoop mapreduce framework requires shared file multiple reduce running parallel cluster developer provide item hadoop framework 1. class read input record convert key/value pair record 2. map method 3. reduce method 4. class convert key/value pair reduce method output output record shared file doe system-level file long distributed file plug-in 2016-17 13 bblock protection appliance framework hadoop distributed file hdfs mapreduce environment sophisticated framework manage execution map reduce cluster machine hdfs shared file hadoop advantage knowledge node host physical copy input attempt read machine enter location distributed file job input location distributed file job output output format optionally class reduce function class map function jar file map reduce function support class framework divide partition input execute map cluster requested sort map execute reduce map output job status reported directly output directory final output sorted record input converted key/value pair hadoop framework map function input pair job doe reduce function doe reducer class reduce phase job map output key/value pairsthe transformed input pair perfectly considerable output multiple pair grouping output pair strictly sorted key reduce function called order sort time key key share key reduce method output arbitrary number key/value pair written output file situated output directory 2.3.4. mapreduce programming multithreading programming 2016-17 14 bblock protection appliance mapreduce approach programmable divide aspect mapping partitioning shuffling reducing called split subset operates aspect mapreduce processing strictly procedural step connected previous step partitioning phase started map executing perfectly furtherly shuffling phase initiated partitioning properly order mapreduce help processing keep file distributed file i.e kepping block logical manner storing physically node distributed processing node simultaneously block current node mapreduce programming multithreading programming based structurally fundamentally entirely policy contrary meant solve processing storage issue hadoop power parallelization multithreading based parallelization processing thread operates dataset concurrent process share lock semaphore subset processing logic parallelized multithreading scenario real programming challenge term multithreading criterias racing condition circular wait acyclic graph deadlock well hadoop power parallelization multithreading concept based parallelization processing step multithreading environment shared simultaneous process main challenge co-ordination access remaining simultaneous process challenge access generally accepted hadoop framework hdfs distributed file 2016-17 15 bblock protection appliance multithreading programming collection merging phase mapreduce programming reduction phase 2.3.5. status api showing status processing apis valuable technological innovation consider android controlled rice-cookers e-commerce pinterest apis age digital virtual programming apis program integrate interact service website authentication provided service twitter famous platform globally adaptation capability ability alter process introduced key role status apis status api aware notified event processing level event informational 's computational level adjusting web app 's usage reduce over-consumption memory cpu status apis 2.4. existing conducted defined kind working 2016-17 16 bblock protection appliance 1. existing exists troubleshooting log single dell emc product heterogeneous log create protection appliance achieve 2. dell emc multinational corporation developing i.e proprietary existing method wa avoided 2.5. proposed 2.5.1. sftp linux file transfer file access file reliable stream provided ssh protocol secure file transfer protocol sftp underlying protocol expected authentication security service sftp doe provide authentication security capability sftp attempt platform-independent compared scp scp example expansion wildcards client server sftp protocol 's avoids scp frequently unix platform sftp server majority environment sftp protocol allows array operation remote file remote file protocol compared scp protocol allows file transfer sftp client capability resuming interrupted transfer directory listing remote file removal 2016-17 17 bblock protection appliance uploaded file associated basic timestamps advantage common ftp protocol 2.5.2 microsoft smb window server message block smb protocol network file sharing protocol implemented microsoft window microsoft smb protocol message packet defines version protocol called dialect main purpose file sharing additional microsoft smb protocol functionality includes 1. opportunistic lock 2. dialect negotiation 3. determining microsoft smb protocol server network network browsing 4. file record locking 5. file directory change notification 6. printing network 7. unicode support 8. file directory share access authentication 9. extended file handling microsoft smb protocol client-server consists packet packet broadly classified 2016-17 18 bblock protection appliance 1. general message packetssends print queue mailslots named pipe status print queue 2. session control packetsestablishes discontinues connection shared server 3. file access packetsaccesses manipulates file directory remote server 2.5.3. mapreduce hadoop mapreduce framework write process amount parallel cluster commodity reliable manner mapreduce phase map reduce mapreduce computing method program distributed computing based java secondly reduce output map input combine tuples smaller tuples map convert individual element broken tuples key/value pair mapreduce implies reduce performed map job decomposing processing mapper reducer nontrivial writing mapreduce form scaling ten machine cluster configuration change major advantage mapreduce easy scale processing multiple computing node simple scalability attracted programmer mapreduce 2016-17 19 bblock protection appliance specification 3.1 definition troubleshoot issue bblock appliance analyzing log dpas product provide centralized solution targeted audience support engineer administrator bblock converged appliance internally host multiple dpas product avamar networker domain dp dpa product log format troubleshoot issue bblock appliance support engineer browse log format centralized solution capture log dpas product perform 3.2. concept development process consists 4 phase collection fetch file modified time window query.. reduction reduce number file depending filter parameter merging aggregate logical hierarchy event lead failure interpretation interpret output provide potential solution 2016-17 20 bblock protection appliance 3.3. specification aimed building troubleshooting collect reduce merge implement log fetched remote server dell emc dealing terabyte log file format requires efficient faster interpretation log file remote server existing implemented java choice programming language hosted source operating linux building support window well 3.3.1. purpose web allow engineer troubleshoot vce-dpa appliance effectively reduced time help easy debugging prevent breakdown unwanted crash achieved smart unified view log dpas product proactively remedial step logical hierarchy failure event interpretation aggregated alert issue showing filtered parameter accomplish fulfilled 2016-17 21 bblock protection appliance 3.4. 3.4.1. collection reduction merging 3.4.2. non-functional security dynamicity response time accuracy robustness scalable 3.4.3. converged appliance provided dell emc 3.4.4 programming language java 1.8 server-side java server hadoop client-side angularjs server tomcat 8 operating opensuse linux 12 sp 1 ide netbeans/eclipse package java secure channel 2016-17 22 bblock protection appliance vce-dpa implemented java tomcat server hosted source operating linux choice programming language server operating built compatible windows-installed machine well 3.5. restriction constraint fetch file remote server serving capacity exact storage processing power unknown restriction 2016-17 23 bblock protection appliance figure.4.1 level dell emc product avamar domain protection suite protection advisor terabyte log independent product collected reduced merged implemented converged utility propose create utility target audience web configuration query 4.2. 2016-17 24 bblock protection appliance 4.3. class 2016-17 25 bblock protection appliance 4.4. 2016-17 26 bblock protection appliance 4.5. phase 4.5. deployment 2016-17 27 bblock protection appliance 4.7. snapshot wireframe utility 4.8. snapshot wireframe configuration utility 4.9. snapshot wireframe query utility 2016-17 28 bblock protection appliance 5.1 bblock protection appliance analyzes heterogeneous coming entirely proprietary product dell emc generic format categorizing heterogeneous log splitting file traditional developed custom input format pass complete file mapper regular expression regex hadoop create extended regular expression object matching log text pattern operation 1. split file form record 2. custom record reader includes logic read record mapper generates key-value pair pas pair reducer custom writable format defined reducer finally applies parameter final hadoop mapreduce basically parallelism fast processing custom input format custom split function custom record reader three key developed basic map reduce screenshots 2016-17 29 bblock protection appliance 5.1 fetching phase multiple fetching 5.1 json configuration file operation 2016-17 30 bblock protection appliance 5.1 rest service 5.1 multithread handling fetching 2016-17 31 bblock protection appliance 5.2 phase considering corner product going deployed directly dell emc dpa appliance care robust flexible reliable property based rest sevices independency actual code snippet client side individual rest service tested well deal kind input query handle amount file prevent failure query engine configuration tested experience convenient product component considered performing query relevant dealing speed machine major concern fetching amount deal multi-process multithread tested well machine kind failure 5.2 rest service connecting actual mapreduce processing client 2016-17 32 bblock protection appliance 5.2 rest service configuration 5.2 support kind query timestamp missing parameter 2016-17 33 bblock protection appliance evaluation heterogeneous log dell emc product collected remote server dell emc reduced hadoop mapreduce merged implemented desired hadoop mapreduce basically parallelism fast processing custom input format custom split function custom record reader three key developed basic map reduce 6.1. query input 6.2. output relevant log relevant log file 2016-17 34 bblock protection appliance bblock protection appliance aim reduce overhead target audience support engineer providing centralized solution capture log dpas product perform single product finding issue reason malfunctioning tough heterogeneous product working difficult file format product unified solution remove difficulty extent 2016-17 35 bblock protection appliance 1 divya kundra prerna juneja anvaya study improving goodness process generated mining event logdata issue tracking 2016 2 xiaohui gu kamal kc elt efficient log based troubleshooting cloud computing infrastructure 2014 3 risto vaarandi mauno pihelgas logcluster clustering pattern mining event log 2015 4 ahmed elragal moutaz haddara westerdal analytics text mining-based 2015 5 emc avamar deduplication backup sheet online http //www.emc.com/collateral/software/data-sheet/h2568- emc-avamar-ds.pdf 6 emc protection advisor unified analytics insight environment datasheet online http //www.emc.com/software/data-protection-advisor-ds.pdf 8 d. jiang b. c. ooi l. shi s. wu performance mapreduce in-depth study pvldb 3 1 2010. 2016-17 36 solution guidesupplement emc hybrid cloud vmware infrastructure vce vblock emc solution solution supplement emc hybrid cloud solution focus vce vblock specification emc hybrid cloud solution includes vmware vcloud suite vce vblock emc service portfolio 2014 copyright 2014 emc corporation reserved published usa published 2014 emc belief publication accurate publication subject change notice publication provided emc corporation representation warranty kind respect publication disclaims implied warranty merchantability fitness purpose copying distribution emc described publication requires applicable license emc2 emc emc logo registered trademark trademark emc corporation united state country trademark property respective owner up-to-date listing emc product emc corporation trademark emc.com emc hybrid cloud vmware vcloud suite vce vblock solution supplement number h13022 2 emc hybrid cloud vmware vcloud suite vce vblock solution guidesupplement 1 executive summary document purpose document enables emc hybrid cloud solution vce vblock solution enables deploy on- premise hybrid cloud delivers infrastructure service iaa supplement complement emc hybrid cloud solution provide specific difference deploying vce vblock converged infrastructure solution supplement conjunction solution deploy emc hybrid cloud solution vce vblock audience document intended executive manager architect cloud administrator administrator environment implement hybrid cloud iaa platform reader familiar vmware vcloud suite emc storage vce vblock converged infrastructure solution purpose vce vblock robust foundation emc hybrid cloud solution enable emc customer build enterprise-class scalable multitenant infrastructure provide factory integration validation accelerate deployment ensure interoperability deliver predictable performance complete infrastructure service lifecycle vce ensures vblock component interoperable start validates vblock patch update install total cost ownership tco maximum uptime on-demand access control network bandwidth server storage security provisioning infrastructure service line-of-business administrator involvement maximum asset utilization comprehensive infrastructure support single point accountability entire infrastructure protection solution vce support eliminates manage multiple vendor diagnose resolve issue reduces time resolution 6 emc hybrid cloud vmware vcloud suite vce vblock solution guidesupplement 1 executive summary emc hybrid cloud solution best practice guidance integrate key component functionality hybrid cloud focus vcloud suite emc vipr core vce vblock configuration business challenge achieve level business lower cost reduce increase revenue introduced virtualization core datacenter benefit virtualization restricted infrastructure owner business unit experienced benefit virtualization increased agility mobility control transforming traditional iaa involves overcoming challenge legacy infrastructure process inefficiency inflexibility slow reactive response customer request limited choice availability protection service inadequate visibility cost requested infrastructure difficulty overcoming challenge business opportunity public cloud provider built business cater end-user agility control meet challenge pressure provide service level secure compliant confines on-premises datacenter create cost-effective alternative public cloud servicesalternatives compromise enterprise protection disaster recovery guaranteed service level emc hybrid cloud vmware vcloud suite vce vblock solution guidesupplement 7 1 executive summary solution emc hybrid cloud solution integrates best emc vmware product service empowers accelerate adoption hybrid cloud enabling customer choice compute networking infrastructure datacenter solution caters customer extend existing infrastructure build infrastructure dedicated hybrid cloud solution advantage strong integration emc vmware vcloud suite developed emc vmware product service includes emc scalable storage array integrated emc vmware protection suite ensure hybrid cloud solution foundation enabling iaa customer environment emc hybrid cloud solution built vcloud suite seamlessly integrates vce vblock infrastructure running vsphere esxi solution includes key component vce vblock emc vnx emc symmetrix vmax storage vce vblock protection emc avamar emc domain powered backup recovery solution emc vipr software-defined storage vmware vsphere virtualization platform vmware vcloud suite cloud infrastructure emc vmware integration solution note emc vmware component solution included vce vblock acquired installed separately key component refer key component 24 8 emc hybrid cloud vmware vcloud suite vce vblock solution guidesupplement 3 solution integrates key component hybrid cloud 8 provide self-service portal end-user administrative provisioning service catalog compute service rapid precise automated service provisioning multitenant capable reporting billing iaa storage-as-a-service staas framework enterprise customer build additional as-a-service offering 8. key component hybrid cloud key component vce vblock component hybrid cloud solution vblock combine compute network storage virtualization pre-packaged unit infrastructure vblock 720 vblock 340 enterprise-class service-provider- class designed help benefit virtualization cloud computing compute cisco unified computing ucs based standard component familiar staff cisco ucs manager manages entire 24 emc hybrid cloud vmware vcloud suite vce vblock solution guidesupplement 3 ucs communicating firmware embedded device ucs 5108 server chassis support ucs b-series blade b-series blade provide 24 intel xeon core vblock 720 support 48 chassis total 384 server blade 9 216 core vblock 340 support 16 chassis total 128 server blade 3 072 core network cisco ucs fabric interconnects core cisco ucs provide network connectivity capability attached blade chassis cisco ucs fabric interconnects offer line-rate low-latency lossless 10 gigabit ethernet gbe fibre channel fc fibre channel ethernet fcoe function interconnects provide base cisco ucs b-series blade ucs 5100 series blade server chassis cisco nexus offer end-to-end solution aggregation end-of-row top-of-rack server connectivity single platform switch series cut-through support line-rate 10 gbe port maintaining consistently latency irrespective enabled packet size service cisco md 9500 series multilayer director layer broad intelligent high-performance open-protocol switch fabric addressing stringent data-center storage environment multilayer director security scalability ease transparent integration storage emc vnx emc symmetrix vmax storage powerful trusted smart storage array platform provide highest level performance availability intelligence hybrid cloud vnx vmax offer advanced storage tiering efficiency deliver multiple storage service level accelerating simplifying as-a-service offering private cloud environment optimized virtual environment emc storage provide simplicity efficiency providing storage replication business continuity disaster recovery solution datacenter virtualization cloud vmware vcloud automation center vcloud automation center vcac enables customized self-service provisioning lifecycle cloud service comply established business policy secure portal authorized administrator developer business request service emc hybrid cloud vmware vcloud suite vce vblock solution guidesupplement 25 15-r1.pdf originality 20 similarity 18 10 internet source publication paper primary source 1 2 3 4 5 6 7 en.wikipedia.org internet source www.tutorialspoint.com internet source www.it.iitb.ac.in internet source www.odbms.org internet source msdn.microsoft.com internet source kodu.neti.ee internet source kc kamal xiaohui gu `` elt efficient log-based troubleshooting cloud computing infrastructure '' 2011 30th international symposium reliable distributed 2011. publication 8 www.emc.com internet source 5 2 1 1 1 1 1 1 9 10 11 12 13 14 15 16 17 18 19 20 www.installsetupconfig.com internet source dblp.dagstuhl.de internet source www.ijircce.com internet source xmlandmore.blogspot.com internet source www.ijarcsse.com internet source blogs.herts.ac.uk internet source venner `` started hadoop core '' pro hadoop 2009 publication www.pictsctr.edu internet source ijircce.com internet source recovery2.com internet source www.networkedmediatank.com internet source docplayer.net internet source 1 1 1 1 1 1 1 1 1 1 1 1 21 22 23 24 25 26 27 28 29 30 31 32 www.ijarcce.com internet source www.ijirset.com internet source computingnow.computer.org internet source pure.ltu.se internet source hub.hku.hk internet source documents.mx internet source ietepune.org internet source research.ijcaonline.org internet source www.grievance.nitc.ac.in internet source www.documentboss.com internet source www.win.tue.nl internet source ghriit.raisoni.net internet source ethesis.nitrkl.ac.in 1 1 1 1 1 1 1 1 1 1 1 1 33 34 35 36 37 38 39 40 41 42 43 internet source lecture note business processing 2015. publication sachinshetty.webs.com internet source sw-architecture.inform.hs-hannover.de internet source handbook decision support 1 2008. publication lecture note business processing 2014. publication van der aalst wil `` process mining making knowledge discovery process centric '' acm sigkdd exploration newsletter 2012. publication repositori.upf.edu internet source www.kuam.com internet source www.rroij.com internet source '' front matter '' 2012 congress 1 1 1 1 1 1 1 1 1 1 1 2012. publication exclude quote exclude bibliography exclude match 1 word scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner", "keywords": ["backup recovery", "based event", "based event log", "bblock protection", "bblock protection appliance", "business process", "centralized solution", "cisco ucs", "cloud computing", "cloud solution", "cloud vmware", "cloud vmware vcloud", "converged appliance", "dell emc", "dell emc product", "discovery process", "distributed file", "domain protection", "dpas product", "emc avamar", "emc corporation", "emc hybrid", "emc hybrid cloud", "emc product", "emc protection", "emc protection advisor", "emc vmware", "emc vnx", "emc vnx emc", "engineer administrator", "event log", "executive summary", "fibre channel", "file format", "file remote", "file transfer", "finding issue", "finding issue reason", "hadoop mapreduce", "hadoop power", "hadoop power parallelization", "heterogeneous log", "heterogeneous product", "hybrid cloud", "hybrid cloud solution", "hybrid cloud vmware", "internet source", "issue reason", "jajoo prabhanshu", "key component", "keyvalue pair", "log dpas", "log dpas product", "log file", "log process", "log process mining", "logical hierarchy", "microsoft smb", "microsoft smb protocol", "mining method", "mining process", "mining process mining", "power parallelization", "process mining", "process mining method", "process mining process", "product finding", "product finding issue", "protection advisor", "protection appliance", "protection suite", "public cloud", "relevant log", "remote server", "rest service", "service level", "single product", "single product finding", "smb protocol", "snapshot wireframe", "solution guidesupplement", "suite vce", "suite vce vblock", "support engineer", "target audience", "terabyte log", "troubleshoot issue", "unified view", "vblock emc", "vblock solution", "vblock solution guidesupplement", "vce vblock", "vce vblock emc", "vce vblock solution", "vcloud suite", "vcloud suite vce", "vmware vcloud", "vmware vcloud suite", "vnx emc", "xiaohui gu"], "libraries": [], "languages": ["basic", "java"], "frameworks": ["catalyst", "angularjs"], "dbs": []}, "./reports/16_final_report.pdf": {"title": "detection and recognition   of logos in images", "filename": "./reports/16_final_report.pdf", "data": "detection recognition logo image nisha gandhi aarya tilekar jessica roy suneha patil b120058592 b120058645 b120058549 b120058598 guidance dr. emmanuel m. sr.no.27 satara road 411043 2016-2017 detecttion recognition logo image ms. nisha gandhi ms. aarya tilekar b120058592 b120058645 ms. jessica roy b120058549 ms. suneha patil b120058598 bonafide dr. emmanuel m. earlier diploma dr. emmanuel m. pro prof. s.b deshmukh coordinator dr. p.t examiner _______________ sponsorship industry completion industry acknowledgement great pleasure presenting detection recognition logo image express gratitude appreciation opportunity complete dr. emmanuel m. help stimulated encouraged coordinate compiling acknowledge appreciation coordinator prof. s.b deshmukh help support guidance received course extend gratitude prof. j.b. jagdale encouraging dr. p.t opportunity great foundation directly indirectly helped completion nisha gandhi b120058592 aarya tilekar b120058645 jessica roy b120058549 suneha patil b120058598 title 1.1 waterfall 3.1 3.2 gantt 3.3 use-case 4.1 proposed 4.2 class proposed 4.3 proposed 4.4 5.1 convolutional layer 5.2 relu layer 5.3 pooling layer 5.4 inception v-3 6.1 blurry bmw logo image 6.2 screenshot indicating prediction accuracy bmw 70.98 6.3 mirror image google logo ii 5 15 17 18 21 24 24 26 29 29 30 30 36 36 36 6.4 screenshot indicating prediction accuracy google 59.6 6.5 facebook image 1 6.6 facebook image 2 6.7 screenshot prediction accuracy version logo 6.8 single image logo snapchat instagram 6.9 6.10 screenshot indicating prediction accuracy snapchat 83.9 instagram 10 image logo 6.11 screenshot prediction accuracy no-logo 39.53 6.12 demo dell logo 6.13 demo instagram logo 6.14 screenshot indicating initial accuracy 82.8 6.15 screenshot indicating final accuracy 87.6 6.16 accuracy loss graph 36 37 37 37 37 37 38 38 38 38 39 39 40 iii title 3.1 3.2 use-case description 16 19 iv nomenclature convolutional neural network constructive cost customer fully connected logo detection recognition random access memory cnn cocomo crm fc ldr ram ransac random sample consensus relu sdlc rectified linear unit development life cycle ___________________________________________ logo industry implement detection recognition absence/presence logo real-world image brand recognition social medium detection fraudulent logo concept transfer learning transfer knowledge extracted inception google 's pre-trained imagenet dataset flickrlogo-32 dataset comprising 32 logo-classes layer inception-v3 removed recalculated based dataset multiple non-linear layer input convolutional relu rectified linear unit pooling fc fully-connected layer convolutional neural network extract learn tensorflow open-source library deep learning tensorboard visualize live graph accuracy/loss statistic tensorflow graph training build android detect/recognize logo live camera feed keywords detection transfer learning convolutional neural network pooling layer relu layer fully connected layer tensorflow android prediction vi detection recognition logo image title acknowledgement nomenclature 1. 1.1 1.2 1.3 1.4 1.5 1.6 2.1 2.2 2.3 2 3 3.1 3.1.1 3.1.2 3.2 3.2.1 introduction/background aim relevance development review existing proposed programming language specification definition specification 3.2.1.1 staff ii iv vi 1 2 3 3 4 5 6 8 9 10 11 12 13 13 13 14 14 14 2016-17 detection recognition logo image 3.2.1.2 cocomo 3.2.3 staff 3.2.3 3.2.4 3.3 3.3.1 3.3.2 3.3.3 3.4 3.4.1 3.4.2 4 4.1 4.2 4.1.1 4.2.1 4.2.2 4.3 4.3.1 4.3.2 4.3.3 5 3.2.3.1 3.2.2.2 member role gantt description profile description reuirements main component 4.1.1.1 android 4.1.1.2 convolutional neural network 4.1.1.3 database description description class description description function description control description 4.3.3.1 implemention 5.1 implemented 2016-17 14 15 15 16 16 17 18 18 18 19 19 19 19 20 21 22 22 22 23 23 23 24 24 24 25 26 26 27 28 detection recognition logo image 5.1.1 5.1.2 5.1.3 5.1.4 6 6.1 6.2 6.3 6.3.1 6.3.2 6.3.3 6.3.4 6.3.5 6.3.6 6.4 6.4.1 6.4.2 6.4.3 6.4.4 6.4.5 6.4.6 6.5 6.5.1 6.5.2 6.5.3 6.5.4 convolutional neural network transfer learning inception-v3 tensorflow tensorboard android evaluation experimental setup strategy check correct recognition logo contained blurry image check correct recognition logo contained mirror image check correct recognition version logo class check correct recognition logo image detect absence logo input image check logo live camera feed blurry image mirror image logo version logo image image logo live camera feed evaluation initial accuracy final accuracy accuracy loss graph offer solution 28 30 31 31 32 33 33 34 34 34 35 35 35 35 36 36 36 37 37 38 38 39 39 39 40 40 2016-17 detection recognition logo image 6.5.5 7 8 7.1 7.1 8.1 8.2 8.3 base paper plagiarism review sheet 41 42 43 43 44 45 46 54 58 2016-17 detection recognition logo image 7 1 2016-17 1 detection recognition logo image organized 1.1 background proposed 1.2 1.3 relevance 1.4 1.1 introduction/background day definitely object image recognition lot field object recognition general remains challenging logo recognition subset object recognition general logo recognition identify logo image logo general public identify object vehicle uniform product logo graphic emblem mark company private institution government office logo characteristic help differentiate ownership document logo divided three graphical textual graphic text logo extraction detection recognition retrieval document image listed documental business document governmental thesis digital library book online security document 2016-17 2 detection recognition logo image logo attractive attention designed class logo consist intra-class variance recognition logo image deal perspective tilt 1.2 aim 1.2.1 aim ldr aim recognize logo real image overcoming difficulty viewpoint variation distortion logo captured image develop android brand tagging people social medium displaying relevant brand 1.2.2 ldr detects logo extracting major interesting keypoints training image assigns orientation building class logo 32 class flickr dataset input image performs matching predict accurate match output display confidence top class match input image class highest confidence class logo belongs 2016-17 3 detection recognition logo image 1.3 previous year company maintained official record printed format led space storage retrieval time reason started storing document image format company stored document image format advance field retrieval wa issue approach currently retrieve document logo focusing logo approach office company represent logo easier correctly judge logo interpret firm belongs help detect fraudulent logo help distinguish real fake logo logo brand capturing image real detecting logo finally maintaining count brand brand brand 1.4 relevance image worth word meta contained image extracting aim extracting image train classify input image logo class logo extraction detection recognition retrieval document image listed 1. social medium 2. document governmental 3. detection fraud logo 4. brand 5. distinguishing stale food fresh food 6. recognising person interest criminal investigation 2016-17 4 detection recognition logo image 1.5 development waterfall documented well fixed clear definition product stable well understood ambiguous 1.1 waterfall benefit waterfall allows control departmentalization time developmental stage product process waterfall development step 2016-17 5 detection recognition logo image framework gather analyze integrate deployment support 1.6 organized 1 background relevance 1.1 explains background 1.2 explains 1.3 explains relevance 1.4 explains 2 background 2.1 explains background 2.2 explains review 3 specification 3.1 explains definition 3.2 explains specification 3.3 explains description 3.4 explains 4 4.1 explains proposed 4.2 explains description 4.3 explains description 5 5.1 explains implemented 2016-17 6 detection recognition logo image 6 evaluation 6.1 explains experimental setup 6.2 explains strategy 6.3 explains 6.4 7 7.1 explains 7.2 explains evaluation 7.3 explains 7.4 explains explains solution 7.5 explains 7.6 explains 2016-17 7 detection recognition logo image 2 2016-17 8 detection recognition logo image review 2.1 existing 1. exists method 1 indexing encoding relative space layout local characteristic detected logo basis local characteristic group spatial triangle edge gather representation logo fully quantized 2. cascaded comprising primary secondary minimize positive detection 1 3. method aggregation individual local characteristic neighborhood bundle bundle min-hashing technique 3 4. ransac technique boost recall object retrieval synthesizing image original query image wa forward 5. disadvantage ransac upper bound time compute parameter number iteration computed limited solution optimal fit good 6. hashing technique approximate similarity searching technique unordered well ordered collection 2 7. applying cascading technique account variation image scaling transformation 2016-17 9 detection recognition logo image 8. visual bag word difficult vocabulary size word increase reason doe geometry consideration mix background foreground detection flawed time 1 9. vocabulary formation remains unclear 1 10. bundle min-hashing technique time consuming le robust image noise well viewpoint variation orientation difference doe support hard matching criterion 2.2 proposed neural network character recognition recognition object pattern recognition usage network ineffectual reason collaboration neural network applied negatively mark computational complexity run- time neural network highly sensitive factor presence individual image change shooting condition change orientation order overcome traditional convolutional neural network image classification image input predicting class cat car class best describes image image input array pixel depending resolution size image 32 32 3 array number 3 refers rgb color .these number sense perform image classification input number array output number describe image class .80 apple .15 bmw .05 dell 2016-17 10 detection recognition logo image traditional convolutional neural network layer intermingled convolutional layer provide nonlinearities preservation dimension help improve robustness network control overfitting cnn input- conv- relu- conv- relu- pool- conv- relu- conv- relu- pool- fullyconnected layer convolutional neural network 1. input layer hold raw pixel image 2. conv layer computes output neuron connected local region input computing dot product weight small region connected input volume 3. relu layer rectified linear unit applies element wise activation function 4. pool layer performs sampling operation spatial dimension width height 5. fc i.e fully-connected layer compute class score neuron layer connected number previous volume 2.3 programming language neural network tensorflow library coding python image stored directly machine 2016-17 11 detection recognition logo image 3 2016-17 12 detection recognition logo image specification organized 3.1 definition 3.2 explains specification 3.3 description 3.4 3.1 definition technological significance automatic logo/trademark recognition escalating rapidly innumerable domain social medium intelligent image marketing product placement crm aim detection recognition logo brand predefined dataset image manually machine learning technique cnn 3.1.1 main primary aim intelligently detect logo real-world image recognize classifying image top 5 logo class image static dynamic input 3.1.2 aim extracting image train classify input image logo class build android offline android phone order 2016-17 13 detection recognition logo image 3.2 specification 3.2.1 3.2.1.1 staff android designer order decide android developer order develop android database handler order handle logo image database change database documentation handler order create document change document tester order developed applying appropriate developing strategy 3.2.1.2 cocomo cocomo stand constructive cost cost effort complete depending calculated number person complete semi-detached reason lie middle difficulty spectrum partially complex firm experience dealing managing domain composed inexperienced experienced people simple 2016-17 14 detection recognition logo image equation find person month pm 3.0 8 month 1.12 30.8 30 person month duration 2.5 pm 0.35 =8.3 8 calender month staffing pm/d =3.71 3 4 people needed 3.2.3 staff 3.2.3.1 consists finalized change 3.1 2016-17 15 detection recognition logo image 3.2.2.2 member role monitor keep track preparing sponsor assigns monitor involve coding documentation guidance 3.2.3 3.1 start discussion 15/06/2016 15/07/16 topic finalization 16/07/2016 21/07/16 coding 02/09/16 documentation 16/03/17 23/03/17 20/07/16 01/09/16 15/03/17 26/03/17 04/04/17 2016-17 16 detection recognition logo image 3.2.4 gantt 3.2 gantt 2016-17 17 detection recognition logo image 3.3 description 3.3.1 profile profile category described actor description described actor customer developer performed actor described actor performed customer/user customer input image neural classified logo class developer developer responsible retraining logo database maintains database add image increase accuracy 3.3.2 3.3 use-case 2016-17 18 detection recognition logo image 3.3.3 description 3.2 use-case description use-case scan image use-case description scan image android prediction percentage note prediction score displayed freeze frame screenshot output monitor database sure image class training maintenance sure sufficient image add image 3.4 3.4.1 i5 processor 2.4-3.4 ghz 4 gb ram minimum 8 gb recommended nvidia graphic card 3.4.2 cuda 8.0 ubuntu 14.04 lts 64-bit python scripting language version 2.7 tensorflow-gpu 0.12.1 2016-17 19 detection recognition logo image 4 2016-17 20 detection recognition logo image organized 4.1 complete architectural proposed 4.2 description 4.3 description 4.1 4.1 proposed 2016-17 21 detection recognition logo image 4.1.1 main component main component android convolutional neural network database 4.1.1.1 android social web medium foundation excerpt gather knowledge social network environment provide inclination measure society attitude real area field asfinancial prediction marketing campaignsor health-care few.through feed logo based image input convolutional neural network classifies logo class prediction accuracy 4.1.1.2 convolutional neural network complication applying traditional neural network real pattern recognition image classification rule image inordinate dimension increase size neural network weight number neuron number parameter grows capability training sample grow time complexity learning process second thing absence full mesh topology input completely neglected input variable represented order disturbing learning convolutional neural network designed overawe 2016-17 22 detection recognition logo image inadequacy convolutional neural network provide fractional resistance change changing angle rotation scale displacement distortion 4.1.1.3 database logo dataset photo showing 32 brand logo adidas ferrari apple bmw class logo 70 image average 32nd class i.e logo 4000 image image manually camera resolution downloaded google dataset partitioned 3 training validation training 10 image class validation 30 image class 30 image class 4.2 description 4.2.1 description kind input logo based image output generated thing 5 class resembling input prediction accuracy class 2016-17 23 detection recognition logo image 4.2.2 class 4.2 class proposed 4.3 description 4.3.1 description function 4.3 proposed 2016-17 24 detection recognition logo image function performed layer convolutional neural network basic functionality local extraction neuron accepts input local accessible field previous layer retrieves local characteristic development layer card computing layer consists card i.e plane neuron synaptic weight sub-sampling layer follow convolutional computation layer implement local averaging sub-sample operation root reduction sensitivity output signal operator mapping slight displacement deformation 4.3.2 description described scan logo based image object fed input convolutional neural network classifies logo class prediction accuracy output top 3 class resembling output prediction accuracy class highest accuracy desired output 2016-17 25 detection recognition logo image 4.3.3 control description 4.3.3.1 4.4 2016-17 26 detection recognition logo image 5 2016-17 27 detection recognition logo image organized 5.1 explains main implemented 5.1 implemented consists 1. convolutional neural network 2. transfer learning inception-v3 3. tensorflow tensorboard 4. android 5.1.1 convolutional neural network convolutional neural network category artificial neural network image recognition cnns consists main layer 1. convolutional layer 2. rectified linear unit relu layer 3. pooling sub-sampling layer 4. fully connected fc classification layer convolutional layer extracted image computing element wise multiplication filter detector image matrix filter extract 2016-17 28 detection recognition logo image 5.1 convolutional layer relu layer applies element-wise activation function replacing negative pixel =max 0 5.2 relu layer 2016-17 29 detection recognition logo image pooling layer performs down-sampling operation reduce size image matrix 5.3 pooling layer fc compute class score returning top class prediction accuracy 5.1.2 transfer learning inception-v3 transfer learning involves storing knowledge gained knowledge solve transfer learning transfer extracted inception v3 google 's image recognition trained 1000 class treat fixed extractor remove fully-connected layer train dataset flickrlogo-32 consisting 32 class 5.4 inception v-3 2016-17 30 detection recognition logo image 5.1.3 tensorflow tensorboard tensorflow google 's source library python deep neural network tensorboard visualize accuracy loss graph dynamic change weight training 5.1.4 android implement logo detection recognition android retrain inception v3 dataset generate output tensorflow graph optimize graph suitable mobile phone graph integrated android recognizes logo live camera feed 2016-17 31 detection recognition logo image 6 2016-17 32 detection recognition logo image evaluation organized 6.1 explains experimental setup 6.2 explains strategy 6.3 6.4 6.1 experimental setup experimental setup 1. flickrlogo-32 dataset 32 logo-classes 70 image dataset stored file directory 2. program code written python language 3. tensorflow google 's source library deep neural network implementing convolutional neural network 4. tensorboard visualizing tensorflow graph live accuracy loss graph training visualized 5. re-train inception google 's pre-trained image recognition imagenet dataset dataset changing layer weight 6. tensorflow graph generated training build android 6.2 strategy strategy process verified functionality operates correctly expectation strategy involves black box weighs function source code functionality tested providing appropriate input cross-checking actual output expected output 2016-17 33 detection recognition logo image process 1. provide input 2. execute functionality input generate output 3. executed 4. actual compared 6.3 6.3.1 check correct recognition logo contained blurry image blurry image logo static input image input trained extract image prediction accuracy top 5 class prediction accuracy 50 indicate correct recognition logo 6.3.2 check correct recognition logo contained mirror image mirror image image logo static input image input trained extract image prediction accuracy top 5 class prediction accuracy 50 indicate correct recognition logo mirror image 2016-17 34 detection recognition logo image 6.3.3 check correct recognition version logo class multiple input image version logo example facebook letter 'facebook static input image trained extract image prediction accuracy top 5 class prediction accuracy multiple image preferably 70 indicate correct recognition version logo 6.3.4 check correct recognition logo image single image logo static input image trained extract image prediction accuracy top 5 class presence actual logo-classes 5 top class preferably prediction accuracy 20 indicate correct recognition logo image 6.3.5 detect absence logo input image image doe logo static input image trained extract image prediction accuracy top 5 class prediction accuracy 'no logo preferably 30 indicate absence logo image 6.3.6 check logo live camera feed live camera feed mobile input android continuous input image trained graph extract live feed prediction accuracy top 1 class prediction accuracy 80 indicate correct recognition logo 2016-17 35 detection recognition logo image 6.4 6.4.1 blurry image 6.1 blurry bmw logo image 6.2 screenshot indicating prediction accuracy bmw 70.98 6.4.2 mirror image 6.3 mirror image google logo 6.4 screenshot indicating prediction accuracy google 59.6 2016-17 36 detection recognition logo image 6.4.3 logo version 6.5 facebook image 1 6.6 facebook image 2 6.7 screenshot indicating prediction accuracy version logo 6.4.4 logo image 6.8 single image logo snapchat instagram 6.8 screenshot indicating prediction accuracy snapchat 83.9 instagram 10 2016-17 37 detection recognition logo image 6.4.5 image logo 6.10 image logo 6.11 screenshot indicating prediction accuracy no-logo 39.53 6.4.6 live camera feed 6.12 demo dell logo 6.13 demo instagram logo 2016-17 38 detection recognition logo image 6.5 evaluation wa completely implement expected allows efficiently detect recognize logo providing sample input image scanning his/her mobile camera android indicate top 5 logo-classes prediction accuracy met completely 6.5.1 initial accuracy 6.5.2 final accuracy 6.14 screenshot indicating initial accuracy 82.8 6.15 screenshot indicating final accuracy 87.6 2016-17 39 detection recognition logo image 6.5.3 accuracy loss graph 6.16 accuracy loss graph 6.5.4 offer solution existing logo detecting intolerant blurry/distorted image mirror image image multiple logo overcomes difficulty recognizing logo exceptional decent accuracy image static input time detect recognize logo feasible reason knowledge time mobile android picture convenient allows scan logo real environment his/her live camera logo recognized second saving time effort offer solution existing 2016-17 40 detection recognition logo image 6.5.5 1. unable recognize image mixture/combination logo confused wrong prediction 2. number logo-classes limited 32 logo-classes recognize logo belonging class classify logo 'no-logo 3. prediction accuracy live camera feed android stored 2016-17 41 detection recognition logo image 7 2016-17 42 detection recognition logo image 7.1 implemented logo detection recognition ldr transfer learning transfer knowledge extracted inception google 's pre-trained imagenet dataset flickrlogo-32 dataset multiple non-linear layer convolutional neural network extract learn achieved training accuracy 87.6 i.e ldr efficiently detects recognizes presence/absence logo static image tested blurry image mirror image image logo image multiple logo satisfactory built android detects recognizes logo live camera feed 7.2 1. ldr extended include wide range logo class 2. detecting recognizing logo ldr provide provide option store 3. ldr identify difference fake real logo 4. ldr improvised achieve accuracy 90 2016-17 43 detection recognition logo image 1 stefan romberg rainer lienhart lluis garcia pueyo scalable logo recognition real-world image acm 2011 2 prof. mrunalinee patole meera sambhaji sawalkar improved approach logo detection recognition international journal emerging trend science ijettcs 2014 3 sheetala.s.c u.d dixit logo recognition detection logo based document image retrieval international journal innovative science ijirset 2015 4 gayathri akshaya logo detection recognition artificial neural network international journal advanced ijart 2015 5 ximing hou hao shi logo recognition textual visual search international journal multimedia ijma 2012 6 dataset flickrlogos-32 online www.multimedia-computing.de/flickrlogos accessed 20 7 convolutional-neural-networks online http //cs23n.github.io/convolutional- networks/ accessed 5 8 convolutional-neural-network online http //ufldl.stanford.edu/tutorial/supervised/convolutionalneuralnetwork/ accessed 15 9 retraining-inception online http //www.tensorflow.org/tutorials/image_retraining accessed 1 10 tensorflow-on-android online http //www.oreilly.com/learning/tensorflow-for- mobile-poets accessed 1 2016-17 44 detection recognition logo image 2016-17 45 proceeding acm international conference multimedia retrieval 2011 acm 2011. author manuscript published doi 10.1145/1991996.1992021 scalable logo recognition real-world image stefan romberg multimedia computing lab augsburg augsburg germany romberg informatik.uni- lluis garcia pueyo yahoo 4401 great america parkway santa clara 95054 lluis yahoo-inc.com rainer lienhart multimedia computing lab augsburg augsburg germany lienhart informatik.uni- augsburg.de augsburg.de roelof van zwol yahoo 4401 great america parkway santa clara 95054 roelof yahoo-inc.com paper propose highly ective scalable framework recognizing logo image core approach lay method encoding indexing relative spatial layout local detected logo image based local composition basic spatial edge triangle derive quantized representation region logo minimize positive detec-tions propose cascaded scalable multi-class recognition logo evaluation constructed released logo recognition benchmark consists manually labeled logo image complemented non-logo image posted flickr dataset consists training validation 32 logo- class thoroughly evaluate benchmark approach ectively recognizes di erent logo class precision category subject descriptor h.3.3 storage retrieval informa-tion search retrieval i.5.4 pattern recognition vision general term experimentation keywords indexing local logo recognition object recognition 1 point triple red detected fedex logo green cross denote local 1. long-standing vision ob- ject recognition dedicated ob-ject recognition general subproblems explored remains challenging paper focus logo recognition consider logo recognition subset object recognition logo considered object planar surface addition lo-gos designed catch 's attention speci logo class intra-class vari-ance recognition logo natural image deal perspective tilt main di erence near-duplicate retrieval approach powerful object recognition scheme instance proposed felzenszwalb al 4 method require learn apply mod- el class contrast long term perform logo recognition image minute number di erent logo class usage one-vs-all classi er expensive infea-sible general logo recognition determine unknown image logo class doable incoming image logo class database option speed issue expected alarm rate disagreement multiple classi er illustrate consider real-world sce- scale social medium sharing site 1 nario flickr 1 flickr http //www ickr.com 4000 image uploaded minute typ-ically logo database multiple sample thou-sands brand commercial interest detect logo image recognition deployed practice address scalability constraint term image processed minute number logo-classes supported maintaining rate recognition accuracy step long term propose heavily tuned cient multi-class object recogni-tion precision cost recall basis local proven cient image object retrieval general visual bag word paradigm 11 local quantized visual dictionary image treated document visual word existing retrieval applied retrieve sim-ilar candidate image image object retrieval acceptable retrieval performance ex-pensive post retrieval step needed verify existence object candidate image propose relative spatial layout local logo region cascaded primary quantized pair point point representing patch logo-class pair point image correspond entry primary secondary queried consists triple point forming logo class 1 depicts example detected point triple red fedex logo cascaded drastically reduces number positive classi cation point longer perform expansive post-retrieval step logo-class validate presence logo image remainder paper organized sec- tion 2 describes relevant context paper cascaded 3. 4 discussed proposed rep-resentation spatial layout derive logo class usage cascaded cient logo recognition discussed 5. dataset evaluation 6. experiment presented 7 8 2. image retrieval object recognition vast highlight image object retrieval logo recognition relevant context approach publication address retrieval printed logo e.g cient search logo database petty patent logo recognition photo gained attention bagdanov al 2 retrieve logo sport video database directly matching fea-ture descriptor video training image joly al 5 propose visual query expansion strategy querying database sift descriptor geometric consistency check approach scale well increasing database size turning point scalable image object retrieval bag-of-words approach 11 core visual bag-of-words approach quantization local cient indexing matching raw descriptor directly descriptor quantized discrete visual word form vocabulary derived k-means cluster-ing approach succesful post- retrieval step needed lter number false- positive embeding spatial signi cantly reduce number posi-tives paper addition near-duplicate retrieval 13 3 9 vocabulary visual word deal intra-class variance logo perspective tilt minimize quan-tization error small vocabu-lary 2000 visual word sift 7 descriptor derived hessian-a ne interest point 8 describe image robust image tilt perspective transformation approach local well kleban al 6 logo recognition performing fre-quent item-set mining discover association rule spatial pyramid visual word essentially di erent existing approach encoding spatial hash function sec- tion 4 describe achieved short region image determined indexing geometric local hash ta- bles area geometric hash-ing 12 single image create logo-class training im-ages training triple interest point consistently appear di erent train-ing image poullot al 10 bucketing technique build signature local triple contrast approach build signature image approach suited near- duplicate detection publication avrithis al 1 incorporate global geometry map hashing building global geometric representation spatial describe small region image making approach suitable detection logo object 3. cascaded experience hold single e.g stored inverted le easily im-age retrieval bag-of-word lack distinctiveness post-retrieval veri ca- tion step previous qualitative experiment experienced pair local discriminative desired logo recognition three point minimum number point describe 2-d plane chose de-scribe spatial logo triple main image re- gions expect spatial layout word region relative position roughly actual orientation scale region image hold disregarding propose hold basis approach spatial triple queried edge linked triangle 2 schema cascaded denote local indexed ciently motivated image scanned logo unknown image prior knowledge ex-plore promising point con gurations matched propose cascaded cascaded hold lower-dimensional higher- dimensional representation linked lower-dimensional representation higher-dimensional representation struc-ture allows scan sparsely populated high-dimensional space determining lower-dimensional subspace rst chose local pair edge lower dimensional description triple including relative layout triangle linked edge edge triangle allows perform cient query step 1 pair point query edge edge pair point logo pair random point matched small number edge matched 2 edge hint random triangle constructed point edge additional point constructing query triangle precise de ne term through-out paper pair point enriched rela-tive orientation point triple enriched rela-tive layout called edge triangle refer k-means quantization local descriptor visual word label declare point matching la-bels equal edge triangle considered match consist point match spatial layout training aim gather matching edge triangle training image 4. training eventually describe spatial layout visual class edge triangle build logo class pair training image training procedure correspondence triangle image region judged human visually stress fact training em-ploy replaced approach suited nding correspondence image example alternative training homogra-phy training image ransac derive fea-ture triple illustrate indexing triangle demonstrate indexing technique determine correspondence training image index- 1 image logo image '' 3 relative position pair image green arrow indicate orientation sift ing local single image triangle class created simply ag- gregating triangle matching pair training image triangle edge stored edge edge al- indexed triangle training image matched triangle representation class 4.1 learning logo class represent logo class training image selected matching triangle computed com- bination image class 2 image pair matched note ob- served matching procedure wa matching triangle training image pair pri-marily caused inability robust tilt addition logo ecting background distort descriptor advantage exhaustive matching pro-cedure image matched image matched image matching procedure considered graph image connected matching fails e.g challenging image pair imperfectness connected sub-graphs yield match di erent image instance matching fails logo colour inverted matching triangle form logo class indexing quantize descriptor dis- crete visual word called label compute euclidean distance descriptor visual word la-bels equal allows sort visual word match descriptor ascending order eu-clidean distance descriptor image ia top 300 match descriptor image ib vice versa described x- y-position scale orientation label descriptor 4.2 similarity relative position angle aim initial edge candidate nding pair point visual word label relative orientation 3 fa image ia fb image ib fa denotes combination local image identical visual word image subsequent step determine matching pair potential pair fa discard label point pair 3 compute relative orientation point image computing di erence relative angle 0 0 =and= 1 compute angle similarity score fea-ture pair fa b. similarity score based di erence angle image 0 be-tween orientation 0 relative position compute normalized score di erence angle i.e 2 2 2 2 score yield indicates similarity angle empirically adjusted 8 normalize score score curve maximum 1.0 0 di erence increasing score smoothly drop di erences higher 25 considers score relative posi- tion point derive symmetric score score describes similarity view point relative position i. nal symmetric score edge de ned simedge simedge 3 note simedge drop 0 angle consistent image comparison di erence angle yield binary continuous score function allows sort matching edge match edge score simedge threshold tsim form initial edge ematch po- tential combination image excluded computation remain-ing edge match image serve starting point processing spatial con gurations 4.3 matching pair image increased encoding geometric described sec-tion 4.2 greatly reduces number positive edge match virtually quantization space edge signature simedge highly discrimi-native function lter non-matching edge expand spatial awareness matching technique reduce noise creating analysing triangle incorporate spa- tial layout indexing triangle edge par- ticular spatial point triplet image ia match point triplet image ib ematch detected edge 4.2 vmatch point ematch triangle derived randomly selecting edge ematch third arbitrary point vmatch 4 depicts extracted tri- angle create signature triangle described 8- tuple quantized element form signature quantized label three point quantized angle 1 edge quantized angle 2 edge relative orientation three point combination angle 1 2 capture 2 1 visual word shape orientation 64-bit integer 1 2 4 representation triangle shape triangle observation orientation ac- count lead better performance letter-like logo orientation describe layout include relative orientation 4 three point signature orientation depend orien- tations sift relative in-plane rotation scale invariance tri- angle representation maintained out-of-plane rotation captured width quantization bin angle describing triangle 's shape creating triangle signature quantizing angle proportion bin hard boundary introduces error potential loss match construct-ing signature triangle multiple signature vari-ants generated extensively experimented parameter setting minimize quantization error maintaining speci city triangle signature observed optimal performance multiple signature triangle stored di erent angle proportion distance quantized best bin second best bin store 32 2 di erent signature triangle optimal quantization three parameter evaluated 7.3. ciency triangle signature packed 64-bit integer 4 indexed avoid degenerated triangle included 5 impose additional constraint point satis triangle stored in-dex discard degenerated triangle carry spa-tial descriptive constraint three point wa quantized di erent visual word label constraint fact logo kind border border interest point descriptor label point triple consisting point carry su cient discriminative addition spatial distance point 5 pixel minimum angle triangle 15 constraint discard triangle point located triangle doe describe spatial finally constrain eccentricity 1 3 3 constraint discard triangle carry spatial impor-tant improves locality detection actual logo detected observed 5 triangle match image green orientation number denote visual word label bad detected triangle caused detection random third point actual logo detecting triangles.. matching image store signature triangle rst image ia hash correspondence triangle second image ib triangle constructed top edge ematch additional point signature exist hash note triangle ib generate single discrete repre-sentation query hashtable ia 5 depicts matching triangle training im-ages class `` ford '' 5. recognition 5.1 querying edge unknown image prior knowledge logo location scale size monte carlo method employed edge queried randomly se- lected pair point visual input image query match ideally match query extracted region logo com-pared number combination point randomly chosen pair point number returned match small edge detection implies triangle triangle de-tected triangle drawn randomly sampling edge detected edge sampling ad-ditional point belonging 2 note querying hash extremely fast number random sample tested space triangle description extremely feasible scan sparsely populated space ciently practice edge detection lower dimensional fea-ture space space edge representation allow scan semantically linked higher dimensional space triangle representation cient manner subspace scanned observe cascaded sampling logo covering area image discovered logo small query small area discovered ad- dition monte carlo sampling pair point 2 randomly drawn degenerated triangle 4.3 discarded querying duplicate drawn sample discarded well sampled selecting neighbor distance 3px 30px point sample cover small logo query selected randomly small number query cover image thoroughly 5.2 querying triangle edge ehit contained edge construct triangle query third point ehit query triangle matching triangle vote class accumulated yield frequency detection class detection count thresholded deci-sion threshold tclass class separately determine logo 7.2 describes class-speci threshold adaptive manner general class tclass tri-angle detection logo considered discovered oth-erwise image considered logo 6. dataset realistic evaluation proposed approach collection photo real environment moment aware dataset evaluat-ing logo recognition photo belgalogos dataset 5 feel dataset ideal evaluate approach based local im-ages small logo performance dataset depends recogni-tion capability visual feel dataset adequate evalu-ating recognition visual addition belgalogos dataset wa origi-nally logo retrieval classi cation de ne small number query image built publish dataset 3 '' flickrl-ogos '' photo depicting logo collected lo-gos 32 di erent class downloading flickr speci class determined trial-and-error chosen number logo retrieve querying web service appropriate query ad-dition included logo planar surface 32 logo class adidas aldi apple beck bmw carlsberg chimay coca-cola corona dhl esso erdinger fedex ferrari ford foster 's google guiness heineken hp milka nvidia paulaner pepsi ritter sport shell singha starbucks stella artois texaco tsingtao logo view retrieved image inspected manually ensure speci logo dataset split three disjunct subset p1 p2 p3 contain- ing image 32 class rst partition p1 consists 10 image hand-picked consis-tently single background clutter partition p2 p3 30 image class p1 image instance logo avoid total p2 p3 960 image showing logo subset p3 3 dataset supplementary material http //www.multimedia-computing.de/ ickrlogos 6 example detection esso logo original image left detected edge class middle left edge belonging real class middle nal detected triangle 7 example 4 32 logo class class left esso fedex paulaner ritter sport class 7. subset description p1 p2 p3 hand-picked image single logo clean background image showing sin- gle logo view non-logo image image showing sin- gle logo view non-logo image image sum 10 class 320 30 class 3000 30 class 3000 3960 3960 1 disjunct subset dataset facilitate development high-precision classi er evaluation sensitivity non-logo image partition p2 p3 include an- 3000 image downloaded flickr query '' building '' `` nature '' `` people '' `` friend '' image logo complete dataset summary subset 1 7. evaluation describe setup experi-ments 7.1 setup training image performed matching im- age pair described 4 derive triangle image pair triangle cas- caded perform logo detection tune parameter validation performance experiment choose subset p2 dataset validation p3 7.2 parameter sweep proposed parameter tuned performance directly change number detection point pair triple number change signi cantly adaptively select threshold tclass decision logo class adaptive threshold improves robustness class imbalance caused di erent logo common place-ments rst detection validation ne class- speci threshold raw detection count validation perform parameter sweep threshold tclass recompute precision recall class separately precision ratio recognizing logo class logo detected determine optimal threshold class xing precision 0 95 selecting threshold class doe reach 0 95 precision select threshold best precision severe single detection wa class threshold empirically 20. nal performance computed class-speci threshold ned validation word experiment choose desired precision rst optimize param-eters recall precision xed precision validation note tune parameter de ning quantiza-tion item cascaded implicitly tune constraint indexing scheme restrictive toler- ant constraint le restrictive positive de- tections increase precision constantly adaptive increase decision threshold noise noise validation implicitly lead decreasing recall 7.3 parameter optimization initial parameter chose parameter determined empirically experiment opti-mize parameter time keep xed monte carlo sampling density recall ap- proach based monte carlo sampling point cru- cial parameter number random sample number query increase recall increase density monte carlo sampling query time increasing ratio directly ect number detected edge triangle number query issued directly implies detection combination point there-fore evaluate proposed approach varying number query cascaded number query instantly change number detection per-form parameter sweep described 7.2 validation compute nal performance assures compare recall equivalently well performing term precision 1.0 0.6 0.9 0.8 0.7 0.5 0.4 0.3 0.2 0.1 1k 10k 50k 100k 200k 400k 600k 800k random sample precision +nn recall +nn precision recall 8 performance varying number ran-dom sample 8 rst random edge second addi-tionally spatial nearest neighbor described 5.1 marked +nn 8 recall improves in- creasing number random sample major im- provement e.g 100k sample improvement experiment perform nearest neigh-bour scanning 100 000 random edge visual vocabulary 2000 visual word derived gray-scale image quantization empirically determined bin size 24 three orientation 10 1 2. visual vocabulary dis- criminativeness triangle representation visual word label compare di erent vocabulary size compare vocabulary 1000 4096 visual word maximum number distinct label pack 64-bit integer code addition hessian-a ne sift extracted grayscale version image compare usage 192-dimensional color- sift clustering quantization descriptor introduce hard boundary space smaller vocabulary robust small change descriptor appearance yield positive detection note increasing amount positive detection validation lead smaller recall 7.2 9 including color descrip- tor improves performance larger vocabulary perform better fewer positive detection 1.0 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 1000 2000 3000 4096 visual word precision sift recall sift precision color sift recall color sift di erent size visual 9 performance vocabulary grayscale color sift experiment performed largest color-sift vocabulary quantization triangle shape orientation evaluate quantization triangle shape ect recall shape triangle quantized discrete angle 1 2. 10 left best recall bin size 15 1.0 1.0 0.8 0.6 0.4 0.2 0.0 5 precision recall 10 15 20 25 30 35 40 bin size shape angle 0.8 0.6 0.4 0.2 0.0 precision recall 10 20 30 40 50 60 orientation bin size 10 performance di erent quantization bin size angle orientation trian-gle shape evaluate performance ected quantization orientation change de-signing observed including relative orien-tations signi cantly lower positive detection mismatching region orienta-tions change dramatically depending view angle logo 10 recall di erent quantization bin size ori-entations larger smaller quantization bin size shape orientation lead overly speci coarse triangle signature degrade recall graph 10 insigni cant di erences assume caused extremely sparse trian-gle representation fact discriminativeness bound component single component extremely sparse triangle representation ect note re-train re-build shape orientation parameter ensure evaluation biased matching re-sults derived parameter con guration 11 confusion matrix 7.4 summary tuning parameter best sys-tem precision 0 982 recall 0 61. edge hold 613k key triangle hold 11m key 11 confusion matrix 32 class underline precision logo recognition re-sults clearly produce extremely number positive precision rate cost recall observe logo class easier detected explanation number triangle logo vary fewer triangle edge chance detecting logo decline varying dif-culty logo finally observe sophisticated post-processing detection accuracy based adaptively thresholded de-tection count 8. paper propose highly ective scalable framework recognizing logo image core approach lay method encoding indexing spatial local detected logo image automatic method con-structing logo-class multiple training image signi cantly extends ability detect lo-gos varying condition derived logo recognition inspired bag vi- sual word approach embedding spatial knowl- edge cascaded demon- strated rid expansive post-retrieval processing step existing image object retrieval validate existence query object evaluation constructed released flickrlogo recognition benchmark con- sists manually labelled logo image complemented non-logo image benchmark consists training de- velopment 32 logo-classes tuned tested benchmark ectively recognize di erent logo class precision maintaining good recall 9. acknowledgment funded deutsche wa forschungsgemein-schaft dfg 10. 1 y. avrithis g. tolias y. kalantidis map hashing sub-linear indexing appearance global geometry proceeding international conference multimedia 2010 2 a. bagdanov l. ballan m. bertini a. del bimbo trademark matching retrieval sport video database proceeding international workshop multimedia retrieval acm 2007 3 o. chum m. perdoch j. matas geometric min- hashing finding thick needle haystack 2009 conference vision pattern recognition 17 24 2009 4 p. felzenszwalb r. girshick d. mcallester d. ramanan object detection discriminatively trained part-based transaction pattern machine intelligence 32 9 sept. 2010 5 a. joly o. buisson logo retrieval contrario visual query expansion proceeding seventeen acm international conference multimedia acm 2009 6 j. kleban x. xie w. spatial pyramid mining logo detection natural scene international conference multimedia expo 2008 7 d. lowe distinctive image scale-invariant keypoints international journal vision 60 2 91 110 2004 8 k. mikolajczyk t. tuytelaars c. schmid a. zisserman j. matas f. scha alitzky t. kadir l. v. gool comparison ne region detector international journal vision 65 1-2 2005 9 d. nister h. stewenius scalable recognition vocabulary tree conference vision pattern recognition 2006 10 s. poullot m. crucianu s. satoh indexing local con gurations scalable content-based video copy detection proceeding acm workshop large- scale multimedia retrieval mining 2009 11 j. sivic a. zisserman video google text retrieval approach object matching video international conference vision 2003 12 h. wolfson i. rigoutsos geometric hashing computational science 4 4 1997 13 z. wu q. ke m. isard j. sun bundling scale partial-duplicate web image search conference vision pattern recognition 2009 1 2 3 4 5 originality 10 6 9 similarity internet source publication primary source paper arafat syed yasser syed afaq husain iftikhar azim niaz muhammad saleem `` logo detection recognition video stream '' 2010 international conference digital icdim 2010. publication cd.dgb.uanl.mx internet source cs231n.github.io internet source shridevi soma b.v. dhandra `` novel approach logo recognition machine learning svm '' 2016 6th international conference advanced computing iacc 2016 publication 2 1 1 1 romberg stefan lluis garcia pueyo rainer lienhart roelof van zwol `` scalable logo recognition real-world image '' 1 proceeding 1st acm international conference multimedia retrieval icmr 7 8 9 10 11 12 13 14 15 11 icmr 11 2011. publication 6 study computational intelligence 2015. publication pointclouds.org internet source www.rroij.com internet source '' multimedia modeling '' springer nature 2017 publication dl.acm.org internet source dse13.dtemaharashtra.org internet source vuir.vu.edu.au internet source www.ijcaonline.org internet source ietepune.org internet source s. yoshimura t. sugiyama k. yonemoto k. ueda `` 48 kframe/s cmos image sensor real-time 3-d sensing motion detection '' 2001 international solid- state circuit conference digest 1 1 1 1 1 1 1 1 1 1 16 17 18 19 20 21 22 23 paper isscc cat no.01ch37177 2001 publication www.personal.rdg.ac.uk internet source laptophub.com.pk internet source argouml.tigris.org internet source ijircce.com internet source unknown `` domain wall memory based convolutional neural network bit-width extendability energy-efficiency '' proceeding 2016 international symposium power electronics islped 16 2016. publication saman sarraf ghassem tofighi `` deep learning-based pipeline recognize alzheimer 's disease fmri '' 2016 conference ftc 2016 publication '' vision accv 2016 workshop '' springer nature 2017 publication ijarcce.com internet source 1 1 1 1 1 1 1 1 24 kithmi ashangani k. u. wickramasinghe d. w. n. de silva v. m. gamwara anupiya nugaliyadde yashas mallawarachchi `` semantic video search automatic video annotation tensorflow '' 2016 manufacturing industrial symposium mies 2016 publication 1 exclude quote exclude bibliography exclude match 1 word", "keywords": ["aarya tilekar", "absence logo", "accuracy loss", "accuracy loss graph", "acm international", "acm international conference", "actual logo", "additional point", "america parkway", "android convolutional", "android convolutional neural", "android prediction", "bin size", "bit integer", "blurry image", "camera feed", "carlo sampling", "check correct", "check correct recognition", "class image", "class logo", "class prediction", "class prediction accuracy", "conference multimedia", "conference vision", "conference vision pattern", "convolutional layer", "convolutional neural", "convolutional neural network", "correct recognition", "correct recognition logo", "correct recognition version", "description description", "description profile", "detected edge", "detection logo", "detection recognition", "detection recognition logo", "di erence", "di erent", "di erent logo", "document image", "edge edge", "edge match", "edge triangle", "erent logo", "erent logo class", "fully connected", "fullyconnected layer", "garcia pueyo", "great america", "great america parkway", "hard boundary", "image class", "image class image", "image classification", "image image", "image image logo", "image input", "image logo", "image logo class", "image mirror", "image mirror image", "image object", "image object retrieval", "image pair", "image recognition", "inception google", "indicating prediction", "indicating prediction accuracy", "initial accuracy", "input convolutional", "input image", "international conference", "international conference multimedia", "international journal", "internet source", "intraclass variance", "jessica roy", "layer convolutional", "layer convolutional neural", "learning transfer", "linear unit", "lluis garcia", "lluis garcia pueyo", "local characteristic", "logo class", "logo detection", "logo detection recognition", "logo image", "logo recognition", "loss graph", "mirror image", "mirror image image", "mirror image mirror", "monte carlo", "monte carlo sampling", "multimedia retrieval", "neural network", "nisha gandhi", "nonlogo image", "number query", "object recognition", "object recognition general", "object retrieval", "offer solution", "online http", "pair point", "pattern recognition", "pooling layer", "positive detection", "prediction accuracy", "quantization bin", "quantization bin size", "random sample", "recognition general", "recognition logo", "recognition logo image", "recognition version", "recognition version logo", "recognizing logo", "relative orientation", "relative position", "relu layer", "ritter sport", "scalable logo", "screenshot indicating", "screenshot indicating prediction", "shape orientation", "signature triangle", "single image", "small number", "social medium", "spatial layout", "spatial pyramid", "stefan romberg", "tensorflow graph", "threshold tclass", "training image", "transfer learning", "transfer learning transfer", "triangle edge", "triangle image", "triangle representation", "triangle shape", "triangle signature", "triangle training", "version logo", "vision pattern", "vision pattern recognition", "visual word", "visual word label", "vocabulary visual", "vocabulary visual word", "word label"], "libraries": ["tensorflow-gpu", "tensorflow"], "languages": ["basic", "small", "clean", "python"], "frameworks": [], "dbs": []}, "./reports/17_final_report.pdf": {"title": "research and implement frameworks to   support responsive web enterprise   application", "filename": "./reports/17_final_report.pdf", "data": "implement framework support responsive web enterprise priyanka bhagat examination seat b120058516 aditee dakhane examination seat b120058524 pranav mehta examination seat b120058581 naman mandlik examination seat b120058589 guidance prof. k. y. digholkar 2016-2017 implement framework support responsive web enterprise priyanka bhagat aditee dakhane pranav mehta naman mandlik examination seat b120058516 examination seat b120058524 examination seat b120058581 examination seat b120058589 bonafide prof. k. y. digholkar fulfilment earlier diploma prof. k. y. digholkar prof. s. b. deshmukh coordinator examiner sponsorship letter completion acknowledgement great pleasure satisfaction presenting implement framework support responsive web enterprise express deep sense gratitude parent teacher friend well-wisher sincere co-operation express deep sense gratitude prof. k.y digholkar support valuable guidance aci worldwide mr. amol deopujari valuable support express gratitude prof. s.b deshmukh valuable support guidance special dr. a. m. bagade incharge hod-it valuable support lastly directly indirectly helped completion priyanka bhagat seat b120058516 aditee dakhane seat b120058524 pranav mehta seat b120058581 naman mandlik seat b120058589 topic sr. nomenclature chapter-1 1.1 1.2 1.3 background relevance undertaken 1.3.1 1.3.2 1.3.2.1 1.3.2.2 developing web service developing ui configuration chapter-2 background review 2.1 2.2 background chapter-3 specification 3.1 3.2 3.3 3.4 3.5 definition area chapter-4 4.1 purpose ii iii 1 3 3 5 5 5 5 5 6 8 8 8 13 13 13 13 14 14 16 16 4.2 4.3 4.4 4.5 level description constraint chapter-5 5.1 5.2 5.3 5.4 5.5 5.6 execution 5.4.1 5.4.2 prioritization 5.4.3 5.4.4 tracking control mechanism 5.6.1 assurance control 5.6.2 change assurance control 5.7 specification 5.7.1 5.7.2 class 5.7.3 5.7.4 5.7.5 state chapter-6 evaluation 6.1 6.2 screenshots 6.2.1 ui configuration screenshots 16 16 16 19 21 21 21 22 24 24 24 24 25 26 27 27 27 28 28 29 30 31 32 34 34 34 34 6.3 6.4 6.5 6.2.2 web service screenshots item procedure chapter-7 a. base paper b. review sheet c. review sheet ii d. review sheet iii e. review sheet iv f. plagiarism 37 42 42 42 56 fig title 16 26 27 28 29 30 31 32 34 35 36 37 37 38 39 40 40 41 43 45 47 49 53 54 54 4.1 5.1 5.2 5.3 5.4 5.5 5.6 5.7 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9 proposed web service gantt pert class state screenshot ui initial screenshot drag drop screenshot default button screenshot save change screenshot preview screenshot change saved screenshot mysql screenshot elasticsearch screenshot kibana screenshot kibana visualization screenshot graph http status 500 screenshot code 6.10 screenshot grafana 6.11 body 6.12 default body 6.13 header change 6.14 header default 6.15 6.16 screenshot pie 6.17 screenshot 500 error message 5.1 title 25 ii nomenclature abbreviation http api rest slf4j elk ip ui xml soap jsp asp ajax cgi php json cpu i/o ide http url illustration hypertext transfer protocol program representational state transfer simple logging facade java elastic search logstash kibana internet protocol electrical electronics engineer extensible markup language simple object access protocol java server active server asynchronous javascript xml common gateway hypertext preprocessor javascript object notation processor unit input output integrated development environment hypertext transfer protocol secure uniform locater iii implement framework support responsive web enterprise framework web service scalable web service rest deployed agent record parameter accessed logger logging api java logging api called slf4j simple facade pattern logging back-end log4j store actual log http request response log file parameter request time response time status http ip address visualization elk elastic search logstash kibana stack log file created matched desired pattern stored elasticsearch document repository visualization kibana visualization final generated form bar graph pie framework ui configuration provide developer functionality drag drop ui component client developed angular 2 combination typescript actual configuration stored database based github called dragula source basic drag drop functionality modified event defined drag drop move http method manipulate configuration method directly send receive web server configure save change header footer body element save change roll default change manages version keywords rest representational state transfer angular 2 web service elasticsearch kibana logstash elk http hyper text transfer protocol pict-information 2016-17 1 implement framework support responsive web enterprise 1 pict-information 2016-17 2 implement framework support responsive web enterprise 1 main implement framework suitable banking enterprise help enhance working performance developed main framework web service ui configuration 's critical service-oriented based web service solution provide high-performance reliable extensible scalable standards-based integration easily monitored meet 's imperative company web service correctly check service conduct active performance continuously monitor end-point integrity web service purpose developed web service monitor web service parameter secondly developed ui configuration enables configure component header footer body difficult developer create product scratch provide template developer ui client designed automate ui building save valuable time 1.1 background aim develop implement framework api ui configuration searching suitable banking enterprise web main implement framework suitable banking enterprise help enhance pict-information 2016-17 3 implement framework support responsive web enterprise working performance 2 framework 1. develop web service 2. develop ui configuration prerequisite achieve 1. knowledge rest soap protocol 2. basic coding skill angular 2 typescript 3. elk stack develop web service referred paper titled e-business web service usage log based implement log based logging remote request rest web service log generated log4j/slf4j logger stored text file log entry log file comprises request time response time http method service http status exception caught apart log file logging stored database additional ip address client unique session request visualization stored log database elk stack combination source named elasticsearch logstash kibana elasticsearch distributed restful search analytics engine store discover expected uncover unexpected pattern kibana visualize elasticsearch navigate elastic stack providing friendly visualization logstash source server-side processing pipeline ingests multitude source simultaneously transforms sends favourite stash elasticsearch develop second ui configuration developed web angular 2 typescript drag drop functionality move element web change moving pict-information 2016-17 4 implement framework support responsive web enterprise element stored database interacting rest web service http call 1.2 relevance web aim enable business constantly supervise traffic server logging associated request server help expedite process finding point failure web service helpful business aim provide service client remote web service second ui configuration aimed web developer build web simply moving element generally common hosted web internet building web scratch help reduce development time web reducing time completion business product 1.3 undertaken 1.3.1 main implement framework suitable banking enterprise help enhance working performance 1.3.2 1.3.2.1 developing web service pict-information 2016-17 5 implement framework support responsive web enterprise providing managing online challenging highly regulated nature business concern security time critical single second delay processing transaction delay downtime cost revenue diluted brand equity lost customer slow performing web service break web service fuel banking service speed innovation emerging company base web service monitor web service availability performance correctness 1.3.2.2 developing ui configuration company standard major minor enhancement poor bank hinder benefit usage company specific ui adapt company configure ui easier client pict-information 2016-17 6 implement framework support responsive web enterprise 2 pict-information 2016-17 7 implement framework support responsive web enterprise 2 background review 2.1 background develop web service referred paper titled e-business web service usage log based implement log based logging remote request rest web service develop second ui configuration developed web angular 2 typescript drag drop functionality move element web change moving element stored database interacting rest web service http call 2.2 1. e-business web service usage log based banking enterprise java strut enterprise proper framework ui configuration web service standard xml soap http based web interact web purpose exchanging web service help operation active soap rest request web service monitor response time availability proposes log based relies logging mechanism capture web service usage contribution two-folded integrated business process view client personalization auditing supporting marketing merchandising strategy second support service addressing administrative issue performance availability pict-information 2016-17 8 implement framework support responsive web enterprise based soap intermediary support flexible log generation changing code existing service mart generated reveal usage pattern availability performance web service better insight web service 2. webinject webinject free automated web web service individual component http jsp asp cgi php ajax servlets html form xml/soap web service rest harness create suite http level automated acceptance regression 3. elasticsearch refresh interval indexing performance generating processing retaining rate exceeds ability analyze effectively time insight derived key success allowing better understand solve hard gain competitive advantage fast-moving voluminous increasingly impractical analyze traditional method read-only relational database including hadoop nosql database evolved better support analyzing elasticsearch distributed full-text search engine explicitly address issue scalability search performance relational database simply designed support elasticsearch achieve fast search response searching text directly search retrieving book pict-information 2016-17 9 implement framework support responsive web enterprise keyword scanning book opposed searching word book json object search 4.prometheus prometheus open-source alerting toolkit active ecosystem prometheus scrape metric instrumented job directly intermediary push gateway short-lived job store scraped sample locally rule record time series existing generate alert grafana api consumer visualize collected prometheus reliability view statistic failure condition 100 accuracy per-request billing prometheus good choice collected detailed complete best collect analyze billing prometheus rest store local disk doe support distributed deployment 5.grafana grafana source dashboard commonly graphite influxdb opentsdb essentially feature-rich replacement graphite-web help easily create edit dashboard .users create comprehensive smart axis format point grafanas fast client-side rendering long range time grafana focus presenting time-series based specific metric cpu i/o utilization grafana doe allow search exploring grafanas built-in rba allows maintain access dashboard addition grafanas rich api saving specific dashboard creating updating source pict-information 2016-17 10 implement framework support responsive web enterprise create specific api key assign specific role grafana contained option flexible navigation usage y-bar choosing specific time series doesnt support querying grouping string default grafana support storage backends source grafana specific query editor customized capability included source pict-information 2016-17 11 implement framework support responsive web enterprise 3 pict-information 2016-17 12 implement framework support responsive web enterprise 3 specification 3.1 definition implement framework support responsive web enterprise 3.2 1. develop web service framework build scalable web service deployed agent record metric metric configurable e.g web service performance correctness/validation commonly web service common error support notification framework based configured threshold threshold parameter identified based industry best practice web service development 2. ui configuration product branded customer implemented customer framework create help easily re-arrange ui control header footer menu suit customer store configuration configuration service read configuration render ui 3.3 laptop 4 gb ram i3 core processor pict-information 2016-17 13 implement framework support responsive web enterprise 3.4 angular2 rest service node.js npm dragula mysql bootstrap eclipse ide kibana 3.5 area category distributed sub-category web service internet computing pict-information 2016-17 14 implement framework support responsive web enterprise 4 pict-information 2016-17 15 implement framework support responsive web enterprise 4.1 purpose 4 enterprise expose multiple service rest soap source javascript framework angular2 responsive web support enterprise multiple framework ui configuration develop framework suitable banking enterprise 4.2 level web service 4.1. proposed web service 4.3 framework banking enterprise 2 framework 1. web service pict-information 2016-17 16 implement framework support responsive web enterprise 2. ui configuration 4.4 description 1.web service built web service framework scalable web service rest deployed agent record parameter accessed logger java logging api called slf4j simple faade pattern logging backend determined time adding desired binding classpath logging backends java.util.logging log4j logback tinylog log4j logger log4j store actuals log http request response log file created parameter request time response time status http ip address basically implemented paper explains mechanism saving log file visualization elk stack elastic search logstash kibana stack log file created matched pattern stored elasticsearch document repository 's log 's text engine heart analyze tokenization word stemming .kibana read elasticsearch allows explore dashboard pict-information 2016-17 17 implement framework support responsive web enterprise kibana visualization bar graph pie example working web service hour directly graph http status generated request response time ip address developer study working web service remove bug perform maintenance 2.ui configuration sponsored aci building framework client approach aci developer create product scratch building ui configuration provide developer functionality drag drop ui component client angular 2 combination typescript build framework ui responsive fit device twitter bootstrap mysql backend save ui configuration building logic github called dragula source drag drop functionality event defined api drag drop move modified event created http method restful service manipulate configuration example method default saved configuration web server- turn receives mysql database pict-information 2016-17 18 implement framework support responsive web enterprise post method create configuration method change saved configuration method directly send receive web server web server database configure save change header footer body element save change roll default change manages version add component final save final ui rendered help developer valuable time 4.5 constraint log purpose sure logging mechanism importantly logger working time missing entry incorrect ui configuration ui stored server server functioning time pict-information 2016-17 19 implement framework support responsive web enterprise 5 pict-information 2016-17 20 implement framework support responsive web enterprise 5 5.1. automate ui building phase save valuable time main implement framework suitable banking enterprise help enhance working performance 5.2 execution identification searching identifying finalizing conceptualization concept building studied level designing stage preliminary presentation clarification detailed stage low-level designing designed better visualization coding actual start stage coding coding 10 12 week unit initially tested number pict-information 2016-17 21 implement framework support responsive web enterprise integration integrated integrated component performed includes evaluation product wa tested context entire window os platform performance monitored documentation detailed document prepared stage gathering initial wa understanding definition understanding current scenario enterprise gathering gathering preparing preliminary workflow deciding execution execution actual 5.3 historical semi-detached reason development considered semi-detached development consists mixture experienced inexperienced people member limited experience developed pict-information 2016-17 22 implement framework support responsive web enterprise massive simple compact cocomo semi-detached estimation technique applied estimation technique constructive cost cocomo technique basic cocomo equation semi-detached ab 3.0 bb 1.12 cb 2.5 db 0.35 kloc estimated number delivered code 1 effort applied ab kloc bb man-months 3.0 8 1.12 30.8 2 development time cb effort applied db month 2.5* 30.8 0.35 8.3 3 people effort applied/development time count 30.8/8.3 3.7 3-4 people needed 5.4 pict-information 2016-17 23 implement framework support responsive web enterprise possibility loss injury definition environment exposure harm loss includes possibility well technique alleviate harm loss .all avoided performing attempt ensure time essential progress failure key learning involves identification prioritization 5.4.1 analyzed individually classification basis rated a. catastrophic b. critical c. marginal d. negligible reviewed consensus wa reached 5.4.2 prioritization analyzing prioritized based review consensus developer 5.4.3 series step help understand manage uncertainty plague potential happen outcome good identify access occurrence pict-information 2016-17 24 implement framework support responsive web enterprise developed empirical monitor manage unexpected delay hindrance faced actively managed rapid development word tom glib dont actively attack actively attack key function identify address eliminate source threat completion effective strategy address three issue a. avoidance b. c. contingency planning 5.4.4 common http status received log file completed log file corrupted generated connection server 5.1. 5.5 pict-information 2016-17 25 implement framework support responsive web enterprise 1. gantt gantt 5.1. gantt pict-information 2016-17 26 implement framework support responsive web enterprise 2. pert 5.2. pert 5.6 tracking control mechanism 5.6.1. assurance control control involves series inspection review development process gesture library scalable start small direct use-cases gesture follow incremental approach assurance consists auditing reporting function ass effectiveness completeness control 5.6.2. change control change inevitable built pict-information 2016-17 27 implement framework support responsive web enterprise 5.7 specification 5.7.1 expected behavior functioning respect actor focus description interaction website 5.3. pict-information 2016-17 28 implement framework support responsive web enterprise 5.7.2 class class expected behavior functioning respect class focus interaction class class 5.4 class pict-information 2016-17 29 implement framework support responsive web enterprise 5.7.3 represents business step-by-step workflow component control 5.5. pict-information 2016-17 30 implement framework support responsive web enterprise 5.7.4 parallel vertical process object live simultaneously horizontal arrow message exchanged order occur allows specification simple runtime scenario graphical manner 5.6. pict-information 2016-17 31 implement framework support responsive web enterprise 5.7.5 state state state depicts change state event output state 5.7. state pict-information 2016-17 32 implement framework support responsive web enterprise 6 pict-information 2016-17 33 implement framework support responsive web enterprise 6 evaluation 6.1 main aim provide web service ui configuration developer change position component header footer body ui configurable client web service monitored based parameter http request-response time exception status log viewed visualization http status kibanna 6.2 screenshots 6.2.1 ui configuration screenshots 1. screen appears ui configuration 6.1. screenshot ui initial pict-information 2016-17 34 implement framework support responsive web enterprise 2. drag drop header element save change 6.2. screenshot drag drop 3. click default header default configuration save 6.2. screenshot default button pict-information 2016-17 35 implement framework support responsive web enterprise 4. save change body default configuration 6.3. screenshot save change 5 .after change preview clicking preview button button final ui 6.3. screenshot preview pict-information 2016-17 36 implement framework support responsive web enterprise 6. save complete webpage saved drag drop functionality 6.4. screenshot change saved 6.2.2 web service screenshots 6.5. screenshot mysql pict-information 2016-17 37 implement framework support responsive web enterprise 6.5. screenshot mysql 6.6. screenshot elasticsearch pict-information 2016-17 38 implement framework support responsive web enterprise 6.7. screenshot kibana 6.7. screenshot kibana visualization pict-information 2016-17 39 implement framework support responsive web enterprise 6.8. screenshot graph http status 500. 6.9 screenshot code pict-information 2016-17 40 implement framework support responsive web enterprise 6.9. screenshot code 6.10. screenshot grafana pict-information 2016-17 41 implement framework support responsive web enterprise 6.3 item applies well integration input output tested validity tested final tested 6.4 unit boundary function executed integration 6.5 procedure 1.testsuite_1 body_details _getdetails status localhost time 391 size 359 timestamp apr 05 03 14 26 ist 2017 teststep http //localhost 8080/restservice/webapi/details/ -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive pict-information 2016-17 42 implement framework support responsive web enterprise http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 25 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=ae76d43ba70defbbe960489ed515f16e path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' 6.11. body pict-information 2016-17 43 implement framework support responsive web enterprise 2. testsuite_2 default_body_get-details status localhost time 312 size 359 timestamp apr 05 03 14 26 ist 2017 teststep http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 26 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=32a703756b8692e50d03ae1b98602763 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` pict-information 2016-17 44 implement framework support responsive web enterprise ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' 6.12. default body 3.testsuite_3 header_changes_getdetails status localhost time 575 size 359 timestamp apr 05 03 14 24 ist 2017 teststep http //localhost 8080/restservice/webapi/details/change -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body pict-information 2016-17 45 implement framework support responsive web enterprise -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 24 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=ceddb49c445a765973951af595c211f4 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' pict-information 2016-17 46 implement framework support responsive web enterprise 6.13. header change 4.testsuite_4 header_default_get-details status localhost time 638 size 359 timestamp apr 05 03 14 23 ist 2017 teststep http //localhost 8080/restservice/webapi/details/ -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive pict-information 2016-17 47 implement framework support responsive web enterprise http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 24 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=095b1f829127436f3fc5ceb77fbbfd78 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' pict-information 2016-17 48 implement framework support responsive web enterprise 6.14. header default 5.testsuite_5 header_details_get-details status localhost time 123036 size 359 timestamp apr 05 03 12 18 ist 2017 teststep request 1 -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate pict-information 2016-17 49 implement framework support responsive web enterprise user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 23 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=af5043c90ec0a3e7a6efefcde67e87a6 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' 6.testsuite_6 save_header_post-details status localhost time 396 size 359 timestamp apr 05 03 14 25 ist 2017 teststep http //localhost 8080/restservice/webapi/details -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body pict-information 2016-17 50 implement framework support responsive web enterprise -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 25 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=e402b0e79aef1d28cead804ecfd27f8c path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' 7.testsuite_7 update_put-details status localhost time 518 size 359 timestamp apr 05 03 14 25 ist 2017 teststep http //localhost 8080/restservice/webapi/details/ -- -- -- -- -- -- -- -- message -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- property -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- statuscode 200 method http version http/1.1 pict-information 2016-17 51 implement framework support responsive web enterprise endpoint http //localhost 8080 url http //localhost 8080/restservice/webapi/details/default_body -- -- -- -- -- -- -- -- request -- -- -- -- -- -- -- -- -- -- -- -- -- host localhost 8080 accept-encoding gzip deflate user-agent apache-httpclient/4.1.1 java 1.5 connection keep-alive http //localhost 8080/restservice/webapi/details/default_body http/1.1 accept-encoding gzip deflate host localhost 8080 connection keep-alive user-agent apache-httpclient/4.1.1 java 1.5 -- -- -- -- -- -- -- -- response -- -- -- -- -- -- -- -- -- -- -- -- -- tue 04 apr 2017 21 44 25 gmt status http/1.1 200 content-length 359 expires thu 01 jan 1970 05 30 00 ist set-cookie jsessionid=e2bf18e8ebdacb9b670ec8f2171aa951 path=/restservice/ httponly content-type application/json server apache-coyote/1.1 cache-control private `` component '' `` '' `` login- form '' `` exception '' `` succesfull '' `` '' 13 `` image '' `` text '' `` component '' `` c\\ ontent '' `` app/assets/img/1.jpg '' `` exception '' `` succesfull '' `` '' 14 `` image '' `` text '' `` component '' `` '' `` wished click '' `` exception '' `` succesfull '' `` '' 15 `` image '' `` text '' pict-information 2016-17 52 implement framework support responsive web enterprise 8. test-testsuite_8 6.15. developed web service finally help business developer deeper insight web service graph pie area bar graph pie depicts count http status status 500 occurred 85.31 time indicates component web service working properly better understanding error expand discover kibana specific error encountered log elasticsearch pict-information 2016-17 53 implement framework support responsive web enterprise 6.16. screenshot piechart 6.16. screenshot 500 error message pict-information 2016-17 54 implement framework support responsive web enterprise 7 pict-information 2016-17 55 implement framework support responsive web enterprise 7 researched existing framework framework provide configuration searching facility separately lack efficient unified platform providing aim providing unified platform provide top level security essential banking enterprise framework searched efficient implementing paper technique perform web service decided implement `` e-business web service usage log based '' wanted rest service paper implement rest service log efficiently elk stack handle amount generated log visualization researched implemented framework kibana grafana implemented framework compared provided framework individually concluded kibana wa better better provided kibana compared grafana number visualization option second framework researched web decided angular 2 help create view simple powerful template syntax typescript simple code ease combination angular 2. developed platform business facility configuring advanced searching capability business facility monitor third party web service developing framework developed platform integrates enhances business experience pict-information 2016-17 56 implement framework support responsive web enterprise 1 `` beginner logstash grok logz.io '' 2017 online logz.io http //logz.io/blog/logstash-grok/ accessed 12 jan. 2017 2 `` angular '' 2017 online .angular.io http //angular.io/ accessed 20 aug. 2017 3 `` elasticsearch refresh interval indexing performance '' 2017 online bit.ly http //bit.ly/1izopgc accessed 15 dec. 2016 4 `` elasticsearch restful distributed search analytics elastic '' 2017 online elastic.co http //www.elastic.co/products/elasticsearch accessed 25 dec. 2016 5 `` grafana platform analytics '' 2017 online grafana lab http //grafana.com/ accessed 10 mar 2017 6 `` kibana explore visualize discover elastic '' 2017 online elastic.co http //www.elastic.co/products/kibana accessed 25 dec. 2016 7 mark otto bootstrap contributor 2017 `` bootstrap 's popular mobile-first responsive front-end framework. '' online getbootstrap.com http //getbootstrap.com/ accessed 14 jan. 2017 8 `` valor-software/ng2-dragula '' 2017 online github http //github.com/valor- software/ng2-dragula accessed 15 dec. 2017 9 srgio manuel serra da cruz maria luiza m. campos paulo f. pires linair maria campos e-business web service usage log based proceeding international conference web service 2004 10 webinject http web web service '' 2017 online webinject.org http //www.webinject.org/ accessed 04 sept. 2017 pict-information 2016-17 57 e-business web service usage log based srgio manuel serra da cruz maria luiza m. campos paulo f. pires linair maria campos universidade federal rio de janeiro departamento de cincia da computao ncleo de computao eletrnica bloco cidade universitria ilha fundo rio de janeiro rj brasil serra mluiza paulopires nce.ufrj.br linairmc posgrad.nce.ufrj.br zip 20.001-970 p.o box 2324 order paradigm emergence web service represents advance continuing evolution e- fully explore business business opportunity provided track utilization logging facility current web logging approach contemplate web service utilization paper web service logging based soap intermediary usage explored improve b2b b2c transaction providing feedback customer electronic behavior comprehensive capture service 1. customer electronic behavior pursued company long time customer navigate web site action mouse click registered web server log flat ascii file format differs web server log originally conceived administrative purpose store clickstream consists sequential string domain client server ip address optional identification timestamp request method post requested filename request status code size requested url path client browser 1 accurate definition clickstream stand collection session web site derived raw request 2 proceeding international conference web service icws04 0-7695-2167-3/04 20.00 exist investigation proposal web server log associated technique arising paradigm web service 3 requires richer order fully capture business interaction customer electronic behavior web environment web server log derives request accessed tailored capture service utilization composition 4 today order track customer electronic behavior consider traditional web server log originated web service usage integrated web server log provide navigation interaction web site web service log provide web service supporting concerning business processing well service two-folded paper log based named wsloga relies logging mechanism capture web service usage contribution wsloga integrated business process view client personalization auditing supporting marketing merchandising strategy second support service addressing administrative issue performance availability wsloga based soap intermediary 5 6 support flexible log generation changing code existing service focus wsloga previous 7 proposed mart generated reveal usage pattern availability performance web service best knowledge logging context fulfill lack infrastructure integrated web behavior considering web server web service log remainder paper structured 2 describes wsloga 4 discus 5 wsloga utilization scenario including xml log extract finally 6 final remark log 2. server rely web current web site collection method log traditionally source support smooth site maintenance operation web traffic checking bottleneck availability customer demand response time three web server log colossal volume incomplete redundant lack integration non-web 8 9 address tailored deal kind 1 10 11 based statistical flexible powerful cover profile loyalty web log statistic explored complemented collected web service utilization decision making 12 offer source service intermediary authentication analyzing web conducted logging usage akkiraju al 13 proposed framework blending logging facility private web service registry provided log implement irani 14 collect proposed service log doe provide log brittenham al 15 ws-i working group proposed consists message monitor analyzer monitor log message web service analyzer validate web service interaction contained message log conform ws-i profile ws-i monitor capture single log file http soap message captured auditing proceeding international conference web service icws04 0-7695-2167-3/04 20.00 raw format making difficult differentiate analytical disposable capturing soap message brings amount traditional http log larger time 3. web service logging implement web service logging facility method debugging insert logging source code service order call service component responsible logging solution main disadvantage ownership third party code guarantee change behalf modifying existing time consuming error prone alternative soap intermediary 14 6 soap intermediary web service located client service provider responsible additional functionality value-added service capable receiving forwarding soap message 16 intercept message soap sender soap intermediary addressed listening port unspecified number soap intermediary message reach final soap receiver intermediary interception technique varies depending network transport protocol offer non-intrusive extend functionality client service provider offer flexibility dynamically removed soap intermediary active passive 3 active intermediary modify message fit passive intermediary doe change message inspect forward message wsloga active passive soap intermediary implement web service log passive intermediary avoid change service code providing independence flexibility log allowing log adapted eventual business modification existing source service active intermediary provide additional processing modify outbound soap message service supported active soap intermediary includes manipulation service 3 16 annotation web code security wsloga consists main component composite web service provider basic web service provider probing authority soap intermediary log configuration parameter web server log parser 1 logging wsloga xml repository web illustrates service log 1. wsloga composite web service provider publishes composite web service customer web service composition ability business offer value-added service composition basic web service offered company 4 basic web service provider represented third party provide individual web service instance composite web service provider probing authority responsible providing managing probe web service monitored responsibility probe special web service time time call service qos proposed nagarajan 5 menasc 9 including availability accessibility integrity reliability performance response time process time probe tag log entry special customer search program engine site visiting spider robot 5 11 soap intermediary provide underpinning flexible log generation intercept http-soap message side basic web service provider composite web service provider probing authority collecting granularity captured side log repository proceeding international conference web service icws04 0-7695-2167-3/04 20.00 example consider composite web service provider keep service order book service composed basic web service validate credit card second consummate book order 2 illustrates example 2. anatomy web service call composite web service provider instance book sale volume volume lower expected rate abandoned shopping cart rate higher investigate wsloga recorded intermediary intercept composite web service call point granularity level find abandon reason analyze smaller granularity level requires recorded intermediary intercept basic web service call example point availability performance 2 illustrates possibility logging support level time describe component xml log repository composed xml document file advantage compared traditional ascii log file xml log file store complex heterogeneous encapsulated comprehensive metadata xml log file structured document follow processing parsing web portable human-readable flexible validated correctness dtds xml schema xml log repository generated soap intermediary record captured soap message soap envelope body header fault element active passive soap intermediary providing xml log file active interrequest capture soap request message insert unique message identifier passive interresponse capture soap response message xml log web server input etl extraction transformation loading produce statistical mining olap online analytical processing 7 xml log provided 4. log serve basic log configuration parameter additional loaded component wsloga intermediary holding operation parameter provided xml file xml log date/time format probing interval e.g call service hour probing frequency e.g probing day probing monday probing authority e.g url probing service date/time state time standard time measure third party remember xml log repository reside basic web service provider composite web service provider location soap intermediary located service provider well wsloga probing authority trusted probing referee providing reliable qos metering standard time paper focused composite service provider log located composite service provider side web server log parser component parse transform plain ascii file produced web server standard xml format component independent web server supplier 4. log consumer web service well business provide ground xml log 1 example well metric log tag support 1 term service refers web service operation called log field service service calling date/time proceeding international conference web service icws04 0-7695-2167-3/04 20.00 identification service operation parameter considered involve describing period time service detailed discussion web service provided previous 7 1 web service description response time time spent message service provider process time time spent service accomplish time interval latency time time spent sending request receiving response including marshall unmarshall soap msg customer profile product purchased frequently product selected frequently metric considered log field response sending minus request arrival date/time msgtime msgdate wsexectime exec date/time minus exec date/time time requisition arrival wsexectime service call time service response sending response product code count total product count selling product code count total selling product count msgtime msgdate wsname wsoperation wsparameters params msgtime msgdate web service log vary soap intermediary generator network protocol addressing http-soap riding top tcp/ip interrequest generates xml log web service call interresponse responsible logging response web service call xml log file common element describe log file loginfoid loginfoid element tag identify file loaded relational dbms sub-elements producer intermediary version logdatetime describe intermediary version time log creation xml log file tag describe captured identification message request date/time message request arrival date/time message response date/time service execution date/time service execution date/time fault code fault origin detailed error service instruction e.g service method service priority security level service input parameter security priority response message service response code service response description security indicate service optionally called secure mode default non-secure mode priority indicate service optionally called higher priority default priority level tag optional recorded header soap message specific tag purpose fault code fault origin optional recorded error occurs wsloga soap header record optional stored special wsheaders tag encapsulates header mustunderstand tag inserted service example priority tag service wa called special priority detailed error optional wsfault tag defined service provider provide detailed eventual failure server error service abnormal behavior network error stored tag actor code string service instruction provide additional concerning service context tag wsname wsoperation tag record web service operation invoked web service parameter stored xml log file finally row tag responsible structuring collected service message row uniquely identified msgid tag created interrequest intermediary match intercepted message request intercepted service response capital log row relational dbms tag 5. wsloga usage web service log track qos aspect web service utilization tracking feedback service prevent example composite web service provider bad reputation third party response time availability issue web service log web service proceeding international conference web service icws04 0-7695-2167-3/04 20.00 client check qos exemplified 2 intervene 2 intervention based web service log occurrence intervention log entrance service time interval request service higher time day service response time higher expected time failure higher expected verify service availability accessibility detected situation remains verify service call service higher priority time verify network status service number access higher time persist hint review load balancing server contact service provider verify necessity service rebuild contact service provider 5.1. utilization scenario concrete usage web service log help e- business partner monitor book sale importantly competitor illustrate closer example virtual bookstore called virtual book scenario current amazon web service initiative 17 represent generation e- commerce partnership virtual book offer web service support richer presentation better control product customized shopping experience increasing loyalty site finally revenue associate virtual book web service provided e- commerce target associate vendors/sellers associate site dynamic linking virtual book earning referral fee sale drive link virtual book dozen third-party seller offer product web site web service seller manage inventory virtual book platform download latest product directly virtual book intermediary maintenance issue virtual book deal concerning sale promotion charity donation customer electronic behavior involving web service call virtual book partner registered specific piece designed purpose issue virtual book referral fee sale driven associate site virtual book keep track customer electronic behavior third-parties product reporting functionality partner proposal rich provide virtual book amazon recognize opportunity web service based partnership improve business web service logging mechanism wsloga basic infra- provide customized uniform delivered partner web service exemplify web service log customized configuration scenario indicate gathered wsloga 5.2. xml log example order build scenario consider simplified soap message call web service gather customer virtual book customer birth national identification document passed username birthdate idcardtype idcardnumber tag number xml version= '' 1.0 '' encoding= '' utf-8 '' soapenv envelope xmlns soapenv= '' http //schemas.xmlsoap.org/soap /envelope/ '' xmlns xsd= '' http //www.w3.org/2001/xmlschema '' xmlns xsi= '' http //www.w3.org/2001/xmlschema- instance '' soapenv header -- header info removed save space -- /soapenv header soapenv body validateinfo soapenv encodingstyle= '' http //schemas.xmlsoap org/soap/encoding/ '' username xsi type= '' xsd string '' sergio /username birthdate xsi type= '' xsd string '' 03/02/1965 /birthdate idcardtype xsi type= '' xsd string '' cpf /idcardtype idcardnumber xsi type= '' xsd string '' 45608 /idcardnumber /validateinfo /soapenv body proceeding international conference web service icws04 0-7695-2167-3/04 20.00 /soapenv envelope capture cryptography priority service call message header soapenv header soapenv criptograph soapenv mustunderstand= '' 0 '' xsi type= '' xsd string '' /soapenv criptograph soapenv priority soapenv mustunderstand= '' 0 '' xsi type= '' xsd string '' /soapenv priority /soapenv header excerpt wsloga interrequest log entry xml version= '' 1.0 '' encoding= '' utf-8 '' logfile xmlns xsi= '' http //www.w3.org/2001/xmlschema- instance '' xsi nonamespaceschemalocation= '' \\projetofinal \\wslogs\\wslogarequest.xsd '' loginfo loginfoid 1075756470727 /loginfoid producer wsloga /producer intermediary interrequest /intermediary version 1.0 /version logdatetime 2004-feb-02 15 14 30 /logdatetime row msgid 1075743687336 /msgid msgdate 2004-feb-02 /msgdate msgtime 15 41 27 /msgtime wsname /wsname wsoperation validateinfo /wsoperation wsparameters param username /name sergio /value /param param birthdate /name 03/02/1965 /value /param param idcardtype /name cpf /value /param param idcardnumber /name 45608 /value /param /wsparameters wsheaders header criptography /name /value mustunderstand 0 /mustunderstand /header header priority /name /value mustunderstand 0 /mustunderstand /header /wsheaders /row -- row tag removed save space -- /loginfo /logfile excerpt wsloga interresponse log entry xml version= '' 1.0 '' encoding= '' utf-8 '' logfile xmlns xsi= '' http //www.w3.org/2001/xmlschema- instance '' xsi nonamespaceschemalocation= '' \\projetofinal \\wslogs\\wslogaresponse.xsd '' loginfo loginfoid 1075756470727 /loginfoid producer wsloga /producer intermediary interresponse /intermediary version 1.0 /version 2004-feb-02 15 14 30 /date row msgid 1075743687336 /msgid msgdate 2004-feb-02 /msgdate msgtime 15 41 27 /msgtime wsname /wsname wsoperation validateinfo /wsoperation wsparameters param validateinforeturn /name /value /param /wsparameters wsexectime 0.015 /wsexectime /row -- row tag removed save space -- /loginfo /logfile finally excerpt wsloga web server log entry xml version= '' 1.0 '' encoding= '' utf-8 '' -- filename \\pf\\xml2log\\conv\\http_log.2004-02-02.txt -- -- webserver apache/tomcat 4.1.12 -- -- valve pattern -- logwebserver xmlns xsi= '' http //www.w3.org/2001/xmlschema- instance '' xsi nonamespaceschemalocation= '' \\projetofinal \\xml2log\\convert\\logtomcatschema.xsd '' xml2log remoteip 146.164.248.37 /remoteip localip 146.164.248.21 /localip bytessent 470 /bytessent remhostname 146.164.248.21 /remhostname requestprotocol http/10 /requestprotocol remlogicalusername /remlogicalusername requestmethod post /requestmethod localport 8080 /localport httpstatus 200 /httpstatus datetime 02/feb/2004 15 41 26-0300 /datetime authenticatedremotuser /authenticatedremotuser url /axis/services/validadeinfo /url localservername localhost /localservername /xml2log -- tag removed save space -- /logwebserver proposed log support level msgid tag link log entry generated interrequest interresponse proceeding international conference web service icws04 0-7695-2167-3/04 20.00 tag intermediary analyze instance service server network error wsname wsoperation tag provide service operation invoked msgtime invocation time analyze instance service throughput number web service request served time period latency round-trip time sending request receiving response execution time time web service instruction transaction time period time transaction completion process wsparameters tag store number parameter passed service request received service response element includes element param store parameter lower level detailed investigation reliability reliability refers number failure period time assured ordered delivery message received service requestors service provider instance wsloga analyze process tag imply difference post soap message header body element processed service provider example granularity hand error detected service processing error incidence higher expected lower level help investigate reason integrity implemented interresponse analytical processing tag produced interrequest date/time native web server log assist providing availability performance reliability service qos feedback current log standard kind easily impossible standard geared service execution 6. web service keystone leverage continuing evolution e-business order fully explore business opportunity provided paradigm track service utilization gain competitive advantage paper presented wsloga logging differs existing logging method logged format providing detailed service utilization log tailored support analytical processing well administrative auditing providing suitable level service wsloga framework promotes interoperability better possibility b2c b2b environment provide message tracing facility fundamental security administrative measuring qos identifying scalability bottleneck auditing development wsloga wa guided three fundamental requisite le intrusive i.e service source code modified ii consider granularity level supporting based composite basic web service usage iii provide mechanism probe service execution order monitor demonstrate wsloga implemented java prototype tomcat web server axis soap engine 18 19 tomcat web server log parsed xml format java xml log file loaded relational staging area multidimensional cube mart support behavioral web service usage http //genesis.nce.ufrj.br/dataware/wsloga prototype wsloga prototype wa tested originated collection web service based tpc-w specification 20 based overhead introduced intermediary negligible considering average network latency common b2b address issue concerning security service level agreement sla deal transfer encrypted service client provider http protocol support sla-related interest negotiating validating sla checking sla conformance gathering customer satisfaction metric refined benefit customer electronic behavior warehousing mining processing 7. 1 r. kimball r. merz webhouse toolkit building web-enabled warehouse john wiley son usa 2000. proceeding international conference web service icws04 0-7695-2167-3/04 20.00 2 j. lee m. podlaseck e. schonberg r. hoch '' visualization clickstream online store understanding web merchandising '' international journal mining knowledge discovery kluwer academic publisher 2001 3 s. graham s. simeonov t. boubez g. daniel d. davis y. nakamura r. neyama building web service java making sense xml soap wsdl uddi sam usa 2001 4 f. casati m. dynamic adaptive composition e-services 26 3 143- 163 2001 5 a. mani a. nagarajan improving performance web service ibm developerworks 2002. http //www-106.ibm.com/developerworks/ library/ws-quality.html 6 a. mani a. nagarajam soap-based intermediary build chain web service functionality ibm developerworks 2002. http //www-106.ibm.com/developerworks/java/ library/ws- soapbase/ loc=dwmain 7 s. m. s. cruz l. m. campos m. l. m. campos p. f. pires mart approach web service usage evaluating service xviii brazilian symposium base brazil 2003 8 k. p. joshi a. joshi y. yesha r. krishnapuram warehousing mining web log proceeding 2nd widm acm press usa 63-68 1999 9 d. a. menasc qos issue web service internet computing 6 6 72-75 2002 10 r. kohavi mining e-commerce good bad ugly proceeding 7th acm sigkdd acm press california usa 8-13 2001 11 m. sweiger m. r. madsen r. j. langston h. lombard clickstream warehousing john wiley son usa 2002 12 o. r. zaane m. xin j. han discovering web access pattern trend applying olap mining web log proceeding adl'98 19-29 1998 13 r. akkiraju d. flaxer h. chang t. chao l. zhang f. wu j. jeng framework enabling dynamic e- business web service proceeding oopsla 2001 florida usa 2001 14 r. irani web service intermediary adding web service web service architect 2001. www.webservicesarchitect.com/content/ articles/irani07.asp 15 p. brittenham j. clune j. durand l. kleijkers k. sankar s. seely k. stobie g. turrell ws-i analyzer specification http //www.ws- i.org/testing/specs/analyzerfunctionalspecification_bdad _1.02.pdf 16 m. gudgin m. hadley n. mendelsohn j-j moreau h. f. nielsen soap version 1.2 1 messaging framework- w3c recommendation 24 2003. http //www.w3.org/tr/soap/ 17 http //associates.amazon.com/exec/panama/associates/join/de veloper/faq.html service amazon web 18 j. brittain i. f. darwin tomcat definitive o'reilly associate usa 2003 19 http //jakarta.apache.org/tomcat/ 20 d.a menasc v. a. f. almeida capacity planning web service prentice hall nj usa 2002. apache jakarta proceeding international conference web service icws04 0-7695-2167-3/04 20.00 17.docx originality 24 similarity 23 11 internet source publication paper primary source 1 2 3 4 5 6 7 8 www.ijera.com internet source www.codingpedia.org internet source www.win.tue.nl internet source dl.acm.org internet source seohunt.biz internet source www.eas.asu.edu internet source l.m campos `` e-business web service usage log based '' proceeding international conference web service 2004 2004 publication customertesting.openobjects.com internet source 3 2 2 2 1 1 1 1 urlquery.net internet source www.sys-con.com internet source ftp.cyconet.org internet source newactor.com internet source ijact.in internet source www.ukessays.com internet source mydotnetcoolfaqs.blogspot.com internet source www.elastic.co internet source hamidrezaadl.com internet source www.dzone.com internet source textarchive.ru internet source w3.impa.br 9 10 11 12 13 14 15 16 17 18 19 20 1 1 1 1 1 1 1 1 1 1 1 21 22 23 24 25 26 27 28 29 30 internet source dept.is internet source soar.wichita.edu internet source amit.myktm.com internet source espace.curtin.edu.au internet source ethesis.nitrkl.ac.in internet source www.aero-scratch.net internet source www.eurescom.de internet source dl4a.org internet source myrajendrak.blogspot.com internet source kononenko oleksii olga baysal reid holmes michael w. godfrey `` mining modern repository elasticsearch '' proceeding 11th working conference mining 1 1 1 1 1 1 1 1 1 1 1 repository msr 2014 2014. publication exclude quote exclude bibliography exclude match 1 word", "keywords": ["acceptencoding gzip", "acceptencoding gzip deflate", "active passive", "aditee dakhane", "analytical processing", "apachehttpclient java", "applicationjson server", "assurance control", "availability performance", "banking enterprise", "basic web", "basic web service", "body element", "campos paulo", "campos paulo pires", "cgi php", "composite web", "composite web service", "conference web", "conference web service", "configuration method", "contenttype applicationjson", "contenttype applicationjson server", "cruz maria", "cruz maria luiza", "customer electronic", "customer electronic behavior", "da cruz", "da cruz maria", "deflate useragent", "deflate useragent apachehttpclient", "developed web", "drag drop", "drag drop functionality", "drop functionality", "ebusiness web", "ebusiness web service", "electronic behavior", "element save", "examination seat", "flexible log", "flexible log generation", "footer body", "framework suitable", "framework suitable banking", "framework support", "framework support responsive", "granularity level", "graph pie", "gzip deflate", "gzip deflate useragent", "header default", "header footer", "header footer body", "http method", "http status", "httponly contenttype", "httponly contenttype applicationjson", "implement framework", "international conference", "international conference web", "internet source", "john wiley", "kibana visualization", "localhost acceptencoding", "localhost acceptencoding gzip", "log file", "log generation", "log repository", "logging facility", "logging mechanism", "logstash kibana", "luiza campos", "luiza campos paulo", "manuel serra", "manuel serra da", "maria campos", "maria luiza", "maria luiza campos", "message service", "pathrestservice httponly", "pathrestservice httponly contenttype", "paulo pires", "period time", "pranav mehta", "priyanka bhagat", "probing authority", "proceeding international", "proceeding international conference", "provider probing", "provider probing authority", "response time", "responsive web", "responsive web enterprise", "rest service", "rest web", "rest web service", "rio janeiro", "save change", "screenshot code", "screenshot graph", "screenshot kibana", "screenshot kibana visualization", "serra da", "serra da cruz", "server log", "service framework", "service hour", "service instruction", "service log", "service monitor", "service operation", "service provider", "service provider probing", "service response", "service rest", "service usage", "service usage log", "service utilization", "soap intermediary", "soap message", "standard xml", "suitable banking", "suitable banking enterprise", "support responsive", "support responsive web", "time time", "transfer protocol", "ui configuration", "usage log", "useragent apachehttpclient", "useragent apachehttpclient java", "virtual book", "web enterprise", "web log", "web server", "web server log", "web service", "web service framework", "web service log", "web service monitor", "web service provider", "web service usage", "web service utilization", "web site", "wsname wsoperation", "xml format", "xml log", "xml log file", "xml log repository", "xml soap", "xsd string", "xsi type"], "libraries": [], "languages": ["php", "xml", "small", "charity", "javascript", "basic", "html", "java"], "frameworks": ["angular"], "dbs": ["mysql"]}, "./reports/18_final_report.pdf": {"title": "information flow control with minimum tag  disclosure", "filename": "./reports/18_final_report.pdf", "data": "control minimum tag disclosure priyanka krishnarao kokare rohan vijay dongare b120058567 b120058611 guidance prof. r.b murumkar sr.no.27 satara road 411043 2016-2017 control minimum tag disclosure control minimum tag disclosure priyanka kokare rohan dongare b120058567 b120058611 bonafide prof.r.b.murumkar earlier diploma r.b.murumkar prof. s.b deshmukh coordinator dr. p.t examiner p.i.c.t 2016-17 control minimum tag disclosure acknowledgement prof. r.b murumkar guiding phase providing support time coordinator prof. s. b. deshmukh reviewer prof.warhade prof. s.s.pande input in-charge prof. a. m. bagade providing facility dr. p. t. providing leverage pressure lab attendant providing lab lab facility time needed supporting completion priyanka kokare b120058567 rohan dongare b120058611 p.i.c.t 2016-17 ii control minimum tag disclosure fig title 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 level 0 level 1 level 2 downloading file class tag generation tag generation access control deployment ifc 16 18 18 19 20 21 22 23 24 p.i.c.t 2016-17 iii control minimum tag disclosure title 2.1 3.1 3.2 6.1 comparative study ifc technique 7 12 13 27 p.i.c.t 2016-17 iv control minimum tag disclosure abbrevations ifc control 1 2. difc decentralized control service saas 3 4. platform service paas infrastructure service iaa 5 6. sla service level agreement 7. aes advanced encryption standard 8. de encryption standard 9. hmac hash message authentication code p.i.c.t 2016-17 control minimum tag disclosure topic acknowledgement abbrevations background review existing comparative study proposed specification execution 1 2 3 1.1 1.2 2.1 2.2 2.3 3.1 3.2 3.3 3.4 3.5 ii iii iv ix 1 2 3 4 5 7 8 9 10 10 11 11 12 p.i.c.t 2016-17 control minimum tag disclosure 3.6 4 5 6 3.7 4.1 4.2 4.3 4.4 3.6.1 3.6.2 cost estimation proposed functionality 4.4.1 4.4.2 class 4.4.3 4.4.4 4.4.5 deployment 5.1 5.1.1 5.1.2 code snippet encryption 5.1.3 code snippet decryption 5.1.4 code snippet file tracing 6.1 6.2 6.3 evaluation snapshot 13 13 13 14 15 16 16 18 20 20 21 22 23 24 25 26 26 26 27 28 29 30 34 35 p.i.c.t 2016-17 control minimum tag disclosure 7. 7.1 7.2 i- base paper ii plagiarism iii- review sheet 39 40 40 41 42 47 51 p.i.c.t 2016-17 control minimum tag disclosure mandatory method access control ifc authentic approach access control abundant security initial ifc provide security centralized domain now-a-days ifc decentralized database developed researcher ifc based tagging re- audit included ifc complies consider possibility tag sensitive discus private inter- psi prevent unnecessary disclosure ifc tag establishment channel proposed approach guarantee authorized owner tag interaction disclosed tag disclosed prevented owner keywords difc ifc access control secure cloud computing security labeling p.i.c.t 2016-17 ix control minimum tag disclosure 1 p.i.c.t 2016-17 1 control minimum tag disclosure 1.1 background ifc earlier targeted security centralized setting localized kind ifc designed implemented educational latent decentralized ifc attain higher cloud security offered nowadays tendency target property cloud computing 8 -- software-as-a-service cloud -- review variety ifc spot opportunity utilizing ifc cloud computing context ifc security connected defends tenant supplier cloud service agree security policy manner doe n't grasp admit specific cloud package stack social control tend aim control decentralized difc iaa cloud service analyzed element cloud computing service examined working ifc cloud factor ifc cloud computing space difc decentralized control best appropriate saas cloud supply strong integrity security difc 1 central supply strong separation well grained continuous sharing difc defends cloud service supplier cloud tenant agree protection policy understanding underlying background p.i.c.t 2016-17 2 control minimum tag disclosure aim purpose focus managing fact ifc tag sensitive propose leverage well technique extend ifc non-uniformly trusted distributed iot method control ii .flowk iii .directing secure cloud edge silver lining 1.2 lack security guarantee agonizing issue cloud computing protection issue cloud computing difficult wide selection legal aspect leakage concern cloud computing holding lot widespread promotion cloud computing industry public establishment academic alike increasing extent confirmation strengthening signifying compliance confirmation cloud service supplier third party controversial current explored control ifc distributed cloud computing tend create proof concept execution standard ifc basis estimation p.i.c.t 2016-17 3 control minimum tag disclosure 2 p.i.c.t 2016-17 4 control minimum tag disclosure review 2.1 existing method control mechanism 1.flowk 9 cloud security web aim indicate ifc raise accessible security technique supply constant imposition enlarged better grained level security cloud flowks reduces modified obtainable ifc applied paper represents flowk included cloud 2.flow cc cloud computing 8 develop exchange policy iaa layering cc setting specially accept wall policy deal insecure channel technique easy cloud determine conflict-of-interest service supplier cloud key challenge address choice applicable service layer saas tough supply security level 3.silver lining author strategy computation java artifact processing platform service cloud aop irms.these technique secure trailing program untrustworthy job binary coded java efficient development access policy customise cloud p.i.c.t 2016-17 5 control minimum tag disclosure 4. flexible sharing control 6 centric technique paper despite technique mechanism appropriate approach central environment cloud platform ready offer fine-grained control sharing based ifc ifc manage leakage switching author planned caring common ifc declaration integrity ifc security tag token declares security issue 5. difc 9 depicts specializing fulfilling access cloud 6. flowr 8 targeted control mechanism supported aspect oriented programming flowr isolate execution security issue easier maintenance development.ifc serf library p.i.c.t 2016-17 6 control minimum tag disclosure 2.1 comparative study technique control ifc mechanism merit demerit flowk creates ifc policy separation mechanism integrating messaging middleware ifc control cloud computing imposes approach messaging middleware ifc method choose ifc constraint virtual machine acceptance security policy ifc infrastructure service platform directing secure cloud edge silver lining describes policy java calculation commodity processing flexible sharing control paas distributed access control flowr represents ifc appropriate approach centric environment distributed access control defined virtualized environment multitenant control platform service based aspect oriented coding offer flexibility support conflict interest control performance transparency security offered support dynamic reconfiguration better effectiveness ifc guarantee easy cloud help efficient development compulsory access policy good effectiveness scalability greatest simplicity supply fine grained control sharing determines including granularity scalability security performance better maintenance applicable oo language performance policy considered hold global unique tag fine grained ifc policy provided support infrastructure service cloud platform requires functionality approval performance java integrity lack impose end-to ifc virtualized environment le targeted physical well number virtual machine multithreading supported p.i.c.t 2016-17 7 control minimum tag disclosure 2.3 proposed ifc replacement existing security mechanism traditional point-based access control encryption sensitive complementary providing guarantee sharing sensitive party service ifc specie trust trust party involved trust ifc enforcement mechanism required.our full description 13 derives myers 8 ow policy encapsulated.using secrecy integrity label associated considered label tag tag representing security concern.security tag include e.g medical alice private encrypted integrity tag include e.g validated input standard format trusted source propose leverage well technique extend ifc non-uniformly trusted distributed iot authorization tag verification described 8 represent tag 1 3 private intersection psi 5 cryptographic mechanism allows party compute intersection revealing element intersection paper protocol hat psi prevent unnecessary disclosure tag communicating party ifc enforced connection establishment p.i.c.t 2016-17 8 control minimum tag disclosure 3 p.i.c.t 2016-17 9 control minimum tag disclosure specification intersection psi 3.1 consider possibility tag sensitive discus private ifc tag establishment channel proposed approach guarantee authorized tag interaction disclosed tag disclosed prevented functionality context health care privacy confidentiality paramount prevent unnecessary disclosure proposed going develop control uploaded file upload file access permission policy decision point policy decision point verifies credential permit access ifc admin check credential uploads file main database performs file operation operation tag generation encryption decryption text key generated generated tag applied uploaded file encryption decryption applied security purpose finally download file tag 3.2 tracking accountability provide enhanced security integrity sensitive provide isolation continuity sharing p.i.c.t 2016-17 10 control minimum tag disclosure providing control tracking encrypting uploading tagging 3.3 consider saas runtime label tracking considered ifc scheme target custom applicable 3.4 minimum intel pentium iv processor ram 1024 mb cache 1 mb hard disk 500 gb minimum dot net asp microsoft sql server window 7/8/10 p.i.c.t 2016-17 11 control minimum tag disclosure 3.5 execution 3.1 phase description phase search paper select paper phase ii collection raw elaboration phase iii assign process control phase iv code package individual integrated phase process wa phase vi documentation document prepared possibility enhancing potential p.i.c.t 2016-17 12 control minimum tag disclosure 3.6 3.6.1 major determined equipment failure loss connectivity resist change device deviation standard authorization failure meet expectation 3.6.2 faulty loss connectivity public adoption device interoperability authorization failure standard failure meet expectation 3.1 prob ti bu bu pi te 80 30 20 20 30 10 25 1 1 1 2 3 3 1 p.i.c.t 2016-17 13 control minimum tag disclosure 3.7 cost estimation cocomo semi-detached reason lie middle difficulty spectrum complex people experience dealing massive simple compact equation find person month pm 2.0 8 month 1.12 30.8 person-months duration 2* pm 0.35 8.5 8 calendar month staffing pm/d=3.71 2 3 people needed p.i.c.t 2016-17 14 control minimum tag disclosure 4 p.i.c.t 2016-17 15 control minimum tag disclosure 4.1 proposed fig 4.1 distributed ifc 4.2 functionality 1. tracking tracking achieved granting permission cloud provider well owner file tracked file access maintained base 2. multi-tenancy multi-tenancy number tenant share infrastructure three form cloud described above.a tenant multiuser platform security mandatory.using control alienation individual p.i.c.t 2016-17 16 control minimum tag disclosure 3. access control security challenge faced company host sensitive cloud provider main concern access cloud le subtle comprehensive view access control application.for access designed well admin cloud provider p.i.c.t 2016-17 17 control minimum tag disclosure 4.3 fig 4.2 level 0 fig 4.3 level 1 p.i.c.t 2016-17 18 control minimum tag disclosure fig 4.4 level 2 p.i.c.t 2016-17 19 control minimum tag disclosure 4.4 4.4.1 fig.4.5 downloading file p.i.c.t 2016-17 20 control minimum tag disclosure 4.4.2 class fig.4.6 class tag generation p.i.c.t 2016-17 21 control minimum tag disclosure 4.4.3 fig.4.7 tag generation p.i.c.t 2016-17 22 control minimum tag disclosure 4.4.4 fig.4.8 access control p.i.c.t 2016-17 23 control minimum tag disclosure 4.4.5 deployment fig.4.9 deployment ifc p.i.c.t 2016-17 24 control minimum tag disclosure 5 p.i.c.t 2016-17 25 control minimum tag disclosure 5.1 encrypt uploaded database file requested traced permission downloading file accepted/rejected permission granted decryption key registered email 5.1.1 code snippet encryption public string encrypttext string cleartext string encryptionkey configurationsettings.appsettings `` aeskey '' byte clearbytes encoding.unicode.getbytes cleartext aes encryptor aes.create rfc2898derivebytes pdb rfc2898derivebytes encryptionkey byte 0x49 0x76 0x61 0x6e 0x20 0x4d 0x65 0x64 0x76 0x65 0x64 0x65 0x76 encryptor.key pdb.getbytes 32 encryptor.iv pdb.getbytes 16 memorystream memorystream cryptostream cryptostream encryptor.createencryptor cryptostreammode.write cs.write clearbytes 0 clearbytes.length cs.close cleartext convert.tobase64string ms.toarray p.i.c.t 2016-17 26 control minimum tag disclosure return cleartext 5.1.2 code snippet decryption public string decrypt string ciphertext string encryptionkey configurationsettings.appsettings `` aeskey '' byte cipherbytes convert.frombase64string ciphertext aes encryptor aes.create rfc2898derivebytes pdb rfc2898derivebytes encryptionkey byte 0x49 0x76 0x61 0x6e 0x20 0x4d 0x65 0x64 0x76 0x65 0x64 0x65 0x76 encryptor.key pdb.getbytes 32 encryptor.iv pdb.getbytes 16 memorystream memorystream cryptostream cryptostream encryptor.createdecryptor cryptostreammode.write cs.write cipherbytes 0 cipherbytes.length cs.close ciphertext encoding.unicode.getstring ms.toarray return ciphertext p.i.c.t 2016-17 27 control minimum tag disclosure 5.1.3 code snippet file tracing public datatable get_trace_info fileinfo objfileinfo string strcon fileinfohandler objfileinfohandler dal.fileinfoh.fileinfohandler return objfileinfohandler.get_trace_info objfileinfo strcon catch exception //exceptionhandler.logexception throw finally objfileinfohandler null p.i.c.t 2016-17 28 control minimum tag disclosure 6 p.i.c.t 2016-17 29 control minimum tag disclosure evaluation 6.1 6.1 sr. 1 tc-1 2 tc-2 3 tc-3 step expected actual status pass/fail applicatio applicatio registration pas fail pas check functionality valid check functionality invalid check functionality 1.go 2.enter 3.enter password 4.click submit 1.go 2.enter 3.enter password 4.click submit 1.enter 2.enter password 3.enter 4.enter middle 5.enter 6.enter birth p.i.c.t 2016-17 30 control minimum tag disclosure 4 tc-4 5 tc-5 check functionality check secret key functionality 7.enter phone number 8. enter email 9. enter address 10.click submit 1.go 2.enter 3.enter password 4.click submit 1.go 2.enter 3.user send secret key email check email 4.enter secret key 5.click submit pas applicatio pas secret key displayed p.i.c.t 2016-17 31 control minimum tag disclosure file selected pas file selected displayed pas file uploaded file uploaded file encrypted file displayed encrypted file uploaded pas 6 tc-6 check file select functionality 7 tc-7 check upload file functionality tc-8 8 check encryption file functionality 1.go 2.select public/private labelling 2.choose file no-2 3.click upload file 4. uploaded file 1.go 2.select public labeling 2.choose file no-2 3.click upload file 4. encrypted file 5.click file 1.go 2.select private labeling 2.choose file no-2 3.click upload file 4. encrypted file 5.click file p.i.c.t 2016-17 32 control minimum tag disclosure 9. tc-9 check delete file functionality file deleted pas sure delete file file deleted 1.go 2.select private labeling 2.choose file no-2 3.click upload file 4. encrypted file 5.click delete file 10 tc-10 11 tc-11 12. tc-12 check logout functionalit check admin functionalit check functionalit 1.click log logout logout 1.go 2.enter 3.enter password 3.click submit 1.click admin admin pas pas pas p.i.c.t 2016-17 33 control minimum tag disclosure 13. tc-13 check functionality 14 tc-14 check functionality informati admin displayed display informati admin displayed display 1.go 2.select 3.select column 4.select level prathibha 5.see 1.go 2.select 3.select column 4.select level prathibha 15 tc-15 16 tc-16 check delete record functionality check profile functionality 1.go 2.clickon delete record 1.go 2.click profile deleted record selected profile displayed deleted record profile display pas pas pas pas p.i.c.t 2016-17 34 control minimum tag disclosure 17 tc-17 check functionality admin invalid 1.go 2.enter 3.enter password 3.click submit admin admin fail 18 tc-18 check logout admin functionality 1.click logout admin logout logout pas 6.2 entire checked performance final satisfactory observed performance pf good average delay execute query le second p.i.c.t 2016-17 35 control minimum tag disclosure 6.3 snapshot snapshot 1 snapshot 2 p.i.c.t 2016-17 36 control minimum tag disclosure snapshot 3 registration snapshot 4 profile p.i.c.t 2016-17 37 control minimum tag disclosure snapshot 5 secret key snapshot 6 select file p.i.c.t 2016-17 38 control minimum tag disclosure snapshot 7 upload encrypted file snapshot 8 file deletion p.i.c.t 2016-17 39 control minimum tag disclosure 7 p.i.c.t 2016-17 40 control minimum tag disclosure 7.1 proposed provide ability developer providing control cloud cloud platform achieve multitenancy i.e service shared multiple secured accountability improved service handle sensitive source ifc tag hold purpose freely revealed 7.2 control impose objectionable performance overhead crucial developer cloud-provided ifc aware trust inherent ifc provision p.i.c.t 2016-17 41 control minimum tag disclosure 1 jean bacon david eyers thomas f. j.-m. pasquier jatinder singh ioannis papagiannis peter pietzuch control secure cloud computing transaction network service 11 1 2014 2 david schultz barbara liskov ifdb decentralized control database acm eurosys13 1517 2013 3 l. foster c. kesselman j. nick s. tuecke physiology grid grid service distributed integration grid service infrastructure wg global grid forum volume 22 1-5. edinburgh 2002 4. foster y. zhao l. raicu s. lu cloud computing grid computing 360- compared arxiv e-prints 901 131 2008 5 t. ert service-oriented concept prentice hall ptr upper saddle river nj usa 2005 6 p. barham b. dragovic k. fraser s. hand t. harris a. ho r. neugebauer i. pratt a. warfield xen art visualization proceeding nineteenth acm symposium operating principle 177. acm 2003 7 m. vouk cloud computing issue 30th international conference intel ace 2008. iti 2008 31-40 2008 8 c. j. millard cloud computing law oup 2013 9 t. f. j.-m. pasquier j. bacon d. eyers flowk control cloud 6th international conference cloud computing science cloudcom dec 2014 10 j. singh t. pasquier j. bacon h. ko d. eyers 20 cloud security consideration supporting internet thing review p.i.c.t 2016-17 42 control minimum tag disclosure i- base paper p.i.c.t 2016-17 1 control minimal tag disclosure hajoon ko cambridge gogo9th hanmail.net changyu dong strathclyde rst.last strath.ac.uk jatinder singh cambridge rst.last cl.cam.ac.uk thomas f. j.-m. pasquier cambridge rst.last cl.cam.ac.uk david eyers otago dme cs.otago.ac.nz jean bacon cambridge rst.last cl.cam.ac.uk control ifc extends conventional access control boundary allows control cid 13 ows point authorised disclosure deployment ifc cloud operating ifc trusted run- ning instance ifc deployment distributed internet thing potential trustworthy enforcement ifc ascertained connection establishment ifc based tagging re- quirements audit included ifc complies paper consider possibility tag sensitive discus private inter- psi prevent unnecessary disclosure ifc tag establishment channel proposed approach guarantee authorised cid 13 ows tag interaction disclosed tag disclosed prevented cid 13 ows functional- ity context healthcare privacy con cid 12 dentiality paramount cc concept security privacy cid 13 ow control distributed security public key asymmetric tech- niques keywords control private intersection 1. previous 13 explores con- trol ifc information-centric security mechanism ensure safe sharing boundary cloud computing context traditional ac- ce control mechanism owner loses permission digital hard copy classroom granted fee provided copy distributed prot commercial advantage copy bear notice full citation rst copyright component owned author honored abstracting credit permitted copy republish post server redistribute requires prior specic permission and/or fee request permission permission acm.org icc 16 22 23 2016 cambridge united kingdom 2016 copyright held owner/author publication licensed acm isbn 978-1-4503-4063-2/16/03 15.00 doi http //dx.doi.org/10.1145/2896387.2896402 control move boundary ifc allows sharing mutually distrusting party 6 long un- derlying enforcement mechanism mutually trusted ifc guarantee shared derived shared speci cid 12 purpose 7 achieved attaching label comprising tag ifc-protected prevented label accord described x2 earlier relies single ifc-enforcing party paas cloud provider cloud provider incentivised guarantee proper en- forcement security mechanism service oering ifc extended wider distributed envi- ronment internet thing iot challenge multitude player involved current channel established mutual autho- risation veri cid 12 cation ifc label initial thought ensure remote party iot context sub- ject trustworthy enforcement regime discussed 11 paper focus managing fact ifc tag sensitive consider self-monitoring patient scenario hospital-issued medical device patient cid 12 tness/ wellbeing \\app '' feed patient medical record patient medical record sensitive tag disclosed app patient mobile phone current wa developed trusted environment ifc transparent ap- plication instance tag disclosed establishing channel generally preferable tag disclosed \\need-to- '' basis propose leverage well technique extend ifc non-uniformly trusted distributed iot x.509 certi cid 12 cates authorisation tag veri cid 12 cation described 18 certi cid 12 cates represent tag 1 3 private intersection psi 5 crypto- graphic mechanism allows party compute intersection revealing element out- side intersection paper protocol psi prevent unnecessary disclosure tag communicating party ifc enforced con- nection establishment current ifc developed paas cloud assumes trustworthy ifc enforcement en- forcement transparent instance applica- tion manager allocate tag instance direct involvement establishing connec- tion occurs middleware process involves mutual endpoint authorisation ifc enforcement 13 currently commu- nicating ifc component reveal entire tag check ifc subset cid 13 ow accepted rejected motivated x1 tag sensitive enforcing ifc disclosing party tag desirable general principle tag disclosed \\need-to-know '' basis party dynamically involved iot chain describes establish- ing common subset tag private intersection psi incorporating psi ifc enforcement cid 13 ow allowed party tag party allowed sending party secrecy tag subset receiver receiving party integrity tag subset sender ifc psi iot 3. psi enables party holding element sa sb compute intersection sa sb revealing non-intersecting element psi active area applied privacy-sensitive example government agency airline per- form psi identify terrorist suspect airline pas- senger directly revealing full suspect passenger 2 explain psi ifc context consider scenario cid 12 tness/wellbeing device e.g fitbit transmit patient hospital service b. establish one-way channel satisfy ifc constraint introduced x2 verify cid 18 verify cid 18 .1 fig 2 generic psi scheme leveraged enforce ifc disclosing unnecessary tag party example alices device faliceg verify alices hospital ser- vice instance label faliceg learning potential tag medical aid evaluation ifc psi selected oblivious pseudo-random function oprf 2 basic hash tag transmitting comparison simple hashing well-known tag subject guessing e.g dictionary attack public-key cryptography prevent 2 1to establish two-way party in- dependently verify eciently achieved private equality example described 4 1 camflow 2. camflow ifc ifc replacement existing security mechanism traditional point-based access control en- cryption sensitive complementary pro- viding guarantee sharing sensitive par- ifc speci cid 12 trust tie service trust party involved trust ifc enforcement mechanism full description 13 derives myers 8 cid 13 ow policy encapsulated secrecy integrity label associated en- tity considered label tag tag representing security concern security tag include e.g medical alice private encrypted integrity tag include e.g validated input standard format trusted datasource represents secrecy tag in- tegrity tag held a. cid 13 ow allowed cid 18 cid 18 word cid 13 ow allowed secrecy label subset integrity label subset security context de cid 12 ned state label ifc data-centric mandatory access control mechanism guarantee non-interference security context security property interacting checked continuously exchange camflow 13 cloud-targeted ifc linux security lsm enforces ifc constraint kernel object process cid 12 le pipe local machine middleware ifc-constrained inter-machine 16 illustrate fig 1. move distributed environment iot described 18 x.509 standard mechanism represent ifc concept public key certi cid 12 cates uniquely identify referred identity certi cid 12 cates idc certi cid 12 cates ac 3 represent ifc tag at- tribute linked identi cid 12 camflow con- text idcs authenticate e.g bob medical smartphone app authentication ac exchanged party e.g bob app web appli- cation instance hospital server determine based ifc constraint authorised appsensor apptrusted ifc enforcement camow lsm/middlewarepatients medical devicehospitals patient serveruntrusted processesdatabase appcontrolled flowby camflow camow lsm/middleware camow lsm/middleware secrecy tag sa fsa1 sa2 sajsajg integrity tag ia fia1 ia2 iajiajg secrecy tag sb fsb1 sb2 sbjsbjg secret input ib fib1 ib2 ibjibjg 1 sa === psi protocol sc == psi protocol ia === psi protocol ic == psi protocol sb == sc == sc sa sb ib == ic == ic ia ib 2 cid 13 ow 3 cid 13 ow sc sa disallow outgoing ic ib disallow incoming sc sb disallow outgoing ic ia disallow incoming 2 psi applied ifc policy enforcement trust threat paper consider attack psi number outstanding issue iot require attention 9 17 concern paper reveal tag \\need-to- '' basis veri cid 12 ifc gen- eral good practice adversarial \\honest-but- curious '' health professional device labelled fmedicalg review analyse general medical fmedicalg receive medical re- mote process fmedicalg attempt read fmedical alice aidsg ifc prevent labelled cid 13 ow ifc enforcement component learns tag process aiming prevent potential leakage ifc iot context ifc enforce- ment mechanism trusted tpm 10 physi- cally tamper-resistant security chip veri cid 12 stack platform boot time 14 continued execution assume integrity remote iot device camflow underlying platform veri cid 12 tpm 11 camflow ifc-psi connection establishment ifc-psi protocol described fig 3. communica- tion process controlled ifc enforcement cfa cfb ifc ensures communi- cation component process identity certi cid 12 cate idc certi cid 12 cates ac assigned tag ap- plication process communicate remotely invoke local ifc middleware cfa cfb setup stage step 0 cfa cfb load verify identity certi cid 12 cate idc tag certi cid 12 cates ac process step 1 request cfa remote transmission cid 13 ow control cfb step 2 cfa cfb authenticate based public key infrastructure pki idc s. step 3 cfa cfb psi protocol tag process psi input step 4 5 cfa cfb exchange ac common secrecy integrity tag veri cid 12 step 6 connection de cid 12 nitions cfa cfb camflow ifc middleware enforcement process invoked idca idcb identity certi cid 12 cate issued process cid 13 ow ac ti ac certi cid 12 cate tag ti tj controlled cfa cfb ifc-psi protocol 0 cfa cfb verify idc ac prepare sa ia verify idc ac prepare sb ib request remote transmission 1 cfa 2 cfa cfb pki-based mutual idc veri cid 12 cation 3 cfa cfb execution psi protocol 4 cfa cfb fac jt 2 icg cfb verify ac integrity tag 5 cfb cfa fac jt 2 scg cfa verify ac secrecy tag 6 cfa cfb cid 13 ow ifc enforced cfa cfb 3 ifc-psi protocol established transmitted 4. evaluation 75 50 25 0 psi-ac ac-only non-psi tl baseline 2 4 6 8 10 12 14 16 18 20 number tag party 4 psi overhead comparison demonstrate approach integrated ifc-psi protocol sbus 15 camflows middleware pro- tocol operates establishing chan- nel leveraged oprf-based psi sprout laboratory uni- versity california irvine.2 x.509 certi cid 12 cate ac library openssl wrapper de- veloped pervasive computing group carlos iii 3 general tag exchange 2http //sprout.ics.uci.edu/ 3http //www.it.uc3m.es/dds/ tl 22.15ms psi 18.12ms ac 6.03ms total 46.3ms 1 delay breakdown tl psi ac stage party hold 20 tag experiment involved 1.6ghz intel machine 4gib ram running ubuntu 14.04 lts directly connected local 1000base-t ethernet network re- sults presented fig 4. graph horizontal represents constant overhead imposed estab- lishing tl connection ac-only scheme tag exchanged veri cid 12 psi-ac represents minimal disclosure approach psi-ac imposes steeper linear overhead ac-only processing psi el- ement requires non-negligible cryptographic computation experiment wa demonstrate psi- based tag exchange ifc enforcement nature ifc x2 potential optimisation respect subset equality tag held party ifc considered typically policy represented tag 19 1 overhead situation involving 20 tag in- dicate performance overhead worst-case scenario note psi active area ecient protocol 5. iot evolves expect end-user device connect cloud-based service processing archiving service handle sensitive source ifc tag hold purpose freely revealed iot context establish connection ifc enforcement trustworthy i.e running hardware-veri cid 12 ifc-enforcement good practice reveal ifc tag \\need-to-know '' basis sen- sitive tag disclosed domain apply full threat iot including cloud ser- vice paper ifc enables policy- speci cid 12 control cid 13 ows audit al- lowed rejected cid 13 ows 12 creates ability demonstrate service comply manage- ment obligation paper argued psi use- ful addition ifc tag essential ifc-controlled revealed party concerned incorpo- rate psi protocol existing camflow ifc potential opti- misation cid 12 nement 6. acknowledgement wa supported uk physical science council grant ep/k011510 cloudsafe- tynet end-to-end security cloud acknowledge support microsoft microsoft cloud computing centre 7. 1 d. w. chadwick a. otenko e. ball role-based access control 509 certi cid 12 cates internet com- puting 7 2 62 69 2003 2 e. de cristofaro g. tsudik practical private in- tersection protocol linear complexity 14th inter- national conference financial cryptography security 143 159. springer 2010 3 s. farrell r. housley internet certi cid 12 cate pro cid 12 le authorization ietf 2002 4 m. freedman c. hazay k. nissim b. pinkas ecient intersection simulation-based security journal cryptology 1 41 2014 5 m. j. freedman k. nissim b. pinkas ecient private matching intersection advance cryptology- eurocrypt 2004 1 19. springer 2004 6 m. krohn a. yip m. brodsky n. clier m. f. kaashoek e. kohler r. morris control stan- dard abstraction symposium operating principle 321 334. acm 2007 7 n. kumar r. shyamasundar realizing purpose-based privacy policy succinctly information-flow label cloud computing bdcloud14 753 760. 2014 8 a. c. myers b. liskov decentralized infor- mation control symposium operating principle sosp 129 142. acm 1997 9 h. ning h. liu l. yang cyberentity security internet thing 46 4 46 53 2013 10 b. parno bootstrapping trust \\trusted '' platform conference hot topic security hotsec08 usenix 2008 11 t. pasquier j. singh j. bacon cloud thing control root trust international conference cloud computing science cloudcom15 2015 12 t. pasquier j. singh j. bacon d. eyers audit paas cloud international conference cloud ic2e 2016 13 t. pasquier j. singh d. eyers j. bacon camflow managed data-sharing cloud service transac- tions cloud computing 2015 14 n. santos k. p. gummadi r. rodrigues trusted cloud computing conference hot topic cloud computing 3 3. usenix 2009 15 j. singh d. eyers j. bacon policy enforcement emerging distributed event-based acm dis- tributed event-based debs14 246 255 2014. integrat- 16 j. singh t. pasquier j. bacon d. eyers ing middleware control inter- national conference cloud ic2e 54 59. 2015 17 j. singh t. pasquier j. bacon h. ko d. eyers twenty security consideration cloud-supported internet thing internet thing journal 2015 18 j. singh t. f. j.-m. pasquier j. bacon securing tag control internet thing international conference advance internet thing riot15 2015 19 j. singh j. powles t. pasquier j. bacon cid 13 ow compliance cloud computing cloud computing 2 4 24 32 2015. control minimum tag disclosure ii- plagiarism p.i.c.t 2016-17 18-r4.docx originality 16 similarity 14 11 internet source publication paper primary source 1 2 3 4 5 6 7 8 www.ijcaonline.org internet source research.ijcaonline.org internet source nnis.gr internet source www.slideshare.net internet source pasquier thomas f.j.m jatinder singh jean bacon olivier hermant `` managing control '' 2015 8th international conference cloud computing 2015. publication docplayer.net internet source www.fas.org internet source dse13.dtemaharashtra.org internet source 4 3 2 2 1 1 1 1 9 10 11 12 13 14 15 16 ietepune.org internet source eprints.mdx.ac.uk internet source pasquier thomas f.j.m jean bacon david eyers `` flowk control cloud '' 2014 6th international conference cloud computing science 2014. publication www.twcdi.ie internet source www.serverehosting.com internet source a.l pereira `` role-based access control grid database service community authorization service '' transaction dependable secure computing 4/2006 publication espace.curtin.edu.au internet source bacon jean david eyers thomas f. j.-m. pasquier jatinder singh ioannis papagiannis peter pietzuch `` control secure cloud computing '' transaction network 1 1 1 1 1 1 1 1 service 2014. publication exclude quote exclude bibliography exclude match 1 word control minimum tag disclosure iii- review sheet p.i.c.t 2016-17 control minimum tag disclosure p.i.c.t 2016-17 control minimum tag disclosure p.i.c.t 2016-17 control minimum tag disclosure p.i.c.t 2016-17 control minimum tag disclosure p.i.c.t 2016-17 control minimum tag disclosure p.i.c.t 2016-17 control minimum tag disclosure p.i.c.t 2016-17 control minimum tag disclosure p.i.c.t 2016-17 control minimum tag disclosure p.i.c.t 2016-17", "keywords": ["access control", "admin admin", "bacon eyers", "certi cid", "cfa cfb", "check functionality", "choose file", "cloud computing", "cloud provider", "cloud security", "cloud service", "code snippet", "comparative study", "conference cloud", "control cloud", "control mechanism", "control minimum", "control minimum tag", "delete file", "downloading file", "encrypted file", "enforcement mechanism", "enter enter", "establishment channel", "identity certi", "ifc cloud", "ifc constraint", "ifc enforcement", "ifc middleware", "ifc policy", "ifc psi", "ifc tag", "ifc tag establishment", "ifcpsi protocol", "international conference", "international conference cloud", "internet source", "internet thing", "jatinder singh", "jean bacon", "labeling choose", "labeling choose file", "minimum tag", "minimum tag disclosure", "national conference", "paas cloud", "pas pas", "pas pas pas", "pasquier bacon", "peter pietzuch", "pict control", "pict control minimum", "prevent unnecessary", "prevent unnecessary disclosure", "private intersection", "psi protocol", "public key", "rstlast clcamacuk", "secrecy integrity", "secrecy tag", "secret key", "secure cloud", "security mechanism", "speci cid", "tag disclosure", "tag establishment", "tag establishment channel", "tag generation", "tag interaction", "tag party", "tag sensitive", "tc check", "th international", "th international conference", "trust party", "unnecessary disclosure", "upload file", "uploaded file", "veri cid"], "libraries": [], "languages": ["basic", "java"], "frameworks": [], "dbs": []}, "./reports/19_final_report.pdf": {"title": "iot based prognostics and systems health   management for manufacturing   intelligence", "filename": "./reports/19_final_report.pdf", "data": "iot based prognostic health manufacturing intelligence aaditya waghanna b120058501 indrajit bhosale b120058521 yash gandhi b120058535 parth guntoorkar b120058539 guidance dr. emmanuel m. 2016-2017 iot based prognostic health manufacturing intelligence aaditya s. waghanna examination seat b120058501 indrajit m. bhosale yash s. gandhi parth l. guntoorkar examination seat b120058521 examination seat b120058535 examination seat b120058539 bonafide dr. emmanuel m.and fulfilment earlier diploma dr. emmanuel m. prof. s. b. deshmukh coordinator dr. p.t examiner ___________ acknowledgement opportunity gratitude dr. emmanuel m. valuable knowledgeable guidance success coordinator prof. s.b.deshmukh input proper documentation contributed debt gratitude dr. a. m. bagade in-charge i.t expert advice lab attendant constant support betterment extend gratitude industry sponsor company md mr. prashant pansare mentor mr. sachin chougule mr. umesh hatwar sponsorship company inteliment pvt ltd. guidance industry experience helped proper execution aaditya s. waghanna b120058501 indrajit m. bhosale b120058521 yash s. gandhi b120058535 parth l. guntoorkar b120058539 topic sr. abbreviation chapter-1 1.1 1.2 chapter-2 review 2.1 2.2 existing proposed chapter-3 specification 3.1 definition 3.2 3.3 3.4 3.5 area chapter-4 4.1 purpose 4.2 level 4.3 4.4 description 4.5 constraint chapter-5 5.1 5.2 execution ii iii iv 1 2 3 4 5 6 7 8 10 11 11 11 12 13 13 14 14 16 17 18 18 5.3 5.4 5.5 5.6 tracking control mechanism 5.7 specification chapter-6 evaluation 6.1 6.2 screenshots ui 6.3 item 6.4 6.5 evaluation chapter-7 a. base paper b. review sheet c. plagiarism 19 21 23 24 25 32 33 33 35 35 36 40 41 title 4.1 5.1 5.2 5.3 5.4 5.5 5.6 5.7 6.1 6.2 6.3 pert prediction visualization screenshot 1 screenshot 2 screenshot 3 13 23 24 24 27 28 28 31 33 34 34 title 5.1 22 ii iot jit phm plc acronym internet thing time prognostic health programmable logic control iii internet thing iot environment machine industry initializing archetype setting majorly encouraging entrepreneurial opening physical cost repute loss caused machine dependability performance just-in-time jit unique effective inventory strategy company implement improve efficiency reduce industrial waste bringing material manufacturing routine deducting inventory price technique requires manufacturer predict accurate demand prognostic health phm technique sensor help evaluate health detect anomalous pattern forecast residual health asset phm technique based key parameter sensor ability observing failure sign environmentally challenging condition phm comprises basic aspect prognosis sensing diagnosis data-based method phm descriptive predictive stage based machine learning approach analyzing volume irregularity detection time-series prediction machine learning high-dimensional learning analyzing varied complex concluding key iot based phm manufacturing precise decision making avoid appalling fault improve machine accessibility reducing failure downtime anomaly detected prolong maintenance routine perform timely overhauling measure reduce life-cycle expense decreasing amount inspection needed repair scheduled inventory overhead increase performance support logistics keywords internet thing analytics industrial internet thing cloud analytics prognostic health iv iot based prognostic health manufacturing intelligence 1 pune-43 1 iot based prognostic health manufacturing intelligence 1.1 prognostic health phm industry intensive study failure lifecycle phm method early detection fault calculating remaining life internet thing iot ecosystem phm applied manufacturing sector infinite business opportunity performance improvement proposed optimize scheduled maintenance predict failure business insight people decision making power aiming bunch lower cost repair reduce downtime loss reduce inventory maximize just-in-time jit concept develop end-to-end real life health occurring industry data-driven method machine learning provide meaningful insight valuable prediction investigating volume irregularity finding time series prediction create robust stack configured suit industry provide simple powerful visualization help real-time decision making improved productivity generated sensor inconsistent selection sensor independent customization industry cloud service database scalable pune-43 2 iot based prognostic health manufacturing intelligence 1.2 oldest mediocre maintenance restoration strategy break concern method planning issue approach incidence unprepared downtime situation tiresome prevents fulfilling committed manufacturing routine unprepared downtime consequence serious execute maintenance repair arises simplest approach perform maintenance pre-defined break defined term passed working hour approach provide comparatively machine dependability doe higher cost excessive scheduled downtime deduct repair cost maintenance failure perform real-time assessment health forecasting failure depending operating maintenance history current health prediction minimizing maintenance repair cost disturbance reducing jeopardy unscheduled downtime sensed opportunity iot prognostic health vast amount big-data generated channelized processed generate business decision effectively consideration factor emergence internet thing iot enables phm initializing archetype setting majorly encouraging entrepreneurial opening iot developing thrust number cost standardization development driver availability real- time increased addressing scheme wireless '' thing '' special address enables analytics machine learning industry strategy just-in-time jit adopted just-in-time jit unique effective inventory strategy company implement improve efficiency reduce industrial waste bringing material manufacturing routine deducting inventory price technique requires manufacturer predict accurate demand pune-43 3 iot based prognostic health manufacturing intelligence 2 pune-43 4 iot based prognostic health manufacturing intelligence review 2.1 existing current plcs electronics traditional manufacturing process existing environment high-end service product price key accomplishment manufacturing factory gain maximum output increase profit source accessible provide valuable aspect industry phase usage learning current condition diagnosing failure fault trending area traditional analytics expanded modified handling herculean volume variety distributed major difficulty include understanding distributed environment making sense high-dimensional understanding pattern varied multifaceted 1 prediction residual health asset remaining life approximation technique machine learning forecast trend specific key performance indicator historic failure confidence interval defined additional traditionally sensor maintenance background environmental condition 2 data-based method analytics machine learning finding anomaly predict dependability machine based and/or factor factor e.g pressure temperature determined sensor machine operation machine factor e.g electricity weather machine idle state operation 5 data-based method phm descriptive predictive stage depends machine learning approach include 1 variance statistic based method 3 2 graph based 3 self-learning map 4 4 time-series based method 5 fuzzy logic-based pune-43 5 iot based prognostic health manufacturing intelligence manufacturing industry industrie 4.0 intelligent factory program venture german government help progress cyber-physical framework allow advancement iot alter old-age manufacturing method automation device machine manufacturing unit connecting multiple factory integrating working 6 2.2 proposed modern industrial internet thing cloud computing analytics help forecast increasing productivity factory product manufactured adaptability benefit competing company help acquired field sensor constantly generate stream real-time effectively store apply machine learning analyze sense vast amount field proper health estimated business decision pune-43 6 iot based prognostic health manufacturing intelligence 3 pune-43 7 iot based prognostic health manufacturing intelligence specification 3.1 definition manufacturing fundamental essence economy undergoing revival globe time likewise people demanding higher product diversity availability customization keep effervescent demand manufacturer encourage programmable well dynamic operation manufacturing intelligence budding backbone industrial operation facilitate smooth integration upcoming legacy physical implicit authorize dynamic operation facilitate product volatility variability multifaceted sub-structure constituent smart industrialized demanding resolve precise influence process failure crash understanding fault mode identifying failure squalor process forecasting residual time machinery essential accomplishment intelligent manufacturing process dimension phm comprise progress novel augments intelligent manufacturing phm process emphasize measurement process capable validating verifying intelligent manufacturing phm highlight upcoming influenced sustenance intelligent manufacturing phm integrated real-time approach connecting improvement manufacturing analytics capability help intelligent manufacturing accepting iot analytics demanding multifaceted cross-functional e.g operation nature manufacturing industry today moving intelligent manufacturing optimizing process three major key factor considered moving manufacturing intelligence advent cyber-physical internet thing sensor ability collect producer pune-43 8 iot based prognostic health manufacturing intelligence manufacturer advance potent analytics crawl create insight acted speedily lastly supporting well protected scale industry advent iot manufacturing spurred change automated industry intelligent automated industry today technique jit time extensively manufacturing machine/system health critical process field developing great pace today machine learning machine learning field significance approach ability machine learning identify deep hidden pattern historic tagged untagged extraction reliable easy brought concept aim predict critical failure machine studying scale machine learning iot internet thing based prognostic health manufacturing intelligence aim acquisition real-time sensor variety volume sensor manufacturing analyze predict machine health effectively manufacture intended product best downtime higher productivity rate involve acquisition analytics simple powerful visualization based role privilege power decision change visualization machine learning arima classification helpful identifying pattern showing real-time issue rectifying change needed notifying person responsible action well advance early avoid issue manufacturing inception iot internet thing opportunity change thing manufacturing industry advancement highly parallel processing cloud based technique predictive decided forward help business identify bottleneck improvise process effectively pune-43 9 iot based prognostic health manufacturing intelligence 3.2 1. collection sensor interfaced middleware kaa source iot current gathered kaa client sdk specific send kaa server instance kaa client capability retention handled kaa server capability sending event notification sensor sensor log appenders kaa send directly visualization database instance 2. analytical engine analytical engine fetch database instance step retrieving database apply suitable tagged vary based prediction needed example time series forecasting trend probable forecast confidence interval support sensor wise classification identify sensor contributing worst/best metric performance machine 3. visualization dashboard output visualization dashboarding based privilege he/she monitor and/or control operation complete factory glance simple variety factor health pune-43 10 iot based prognostic health manufacturing intelligence 3.3 esp8266 nodemcu microprocessor light sensor smartphone laptop 8gb ram 3.4 kaa iot framework 0.9.0 esplorer python flask server 0.12 apache kafka 0.9.0 mongodb 3.2.x java tomcat 8 server web socket apache spark 2.1.0 3.0.2 node.js 6.9.4 angular2 npm 3.11.0 netbeans ide 8.0.1 3.5 area category internet thing analytics sub-category industrial iot smart manufacturing pune-43 11 iot based prognostic health manufacturing intelligence 4 pune-43 12 iot based prognostic health manufacturing intelligence 4.1 purpose develop end-to-end real life health occurring manufacturing industry data-driven method machine learning examine scale irregularity recognition time series forecasting provide meaningful insight valuable prediction help real-time decision making improved productivity 4.2 level fig 4.1 pune-43 13 iot based prognostic health manufacturing intelligence 4.3 end-to-end manufacturing industry 1. collection 2. analytical engine 3. visualization dashboard 4.4 description 1. collection kaa iot framework collection kaa sdks client c++ java android help effective easy interaction sensor backend stored kaa 100 source middleware lower level interfacing higher level development metadata i.e format raw incoming stored database configurable parameter doe expect source metadata kaa client send kaa server send database mongodb storage analytical engine processing instance kaa server send live visualization time sends database storage parallel process pune-43 14 iot based prognostic health manufacturing intelligence 2. analytical engine majority analytical engine functionality performed apache spark java r. multiclass classification multiple regression arima time series modeling forecasting multiclass classification multiple regression implemented apache spark machine learning library provided java arima time series modeling forecasting implemented r. multiclass classification classify state machine based multiple sensor contribute machine health multiple sensor classifying sensor state machine health multiple regression predict product produced machine based multiple sensor multiple sensor predicting percentage product arima time series modeling forecasting find probable sensor crucial manufacturing industry time period trained multiclass classification multiple regression persisted in- memory apache spark incoming picked mongodb kaa trained apache spark classification regression functionality provided api endpoint help java tomcat server 3. visualization dashboard visualization implemented angular2 graph provided dashboard displaying health product time series prediction dashboard people access pune-43 15 iot based prognostic health manufacturing intelligence 4.5 constraint 1. generated sensor inconsistent 2. selection sensor independent 3. customization industry 4. cloud service database scalable pune-43 16 iot based prognostic health manufacturing intelligence 5 pune-43 17 iot based prognostic health manufacturing intelligence 5.1 develop end-to-end real life health occurring manufacturing industry data-driven method machine learning analyze scale irregularity discovery time series forecasting provide meaningful insight valuable prediction help real-time decision making improved productivity 5.2 execution identification searching identifying finalizing conceptualization concept building iot analytics studied level designing stage preliminary presentation understanding detailed stage low-level designing designed better visualization coding actual start stage coding three coding 10 12 week unit tested number pune-43 18 iot based prognostic health manufacturing intelligence integration integrated integrated component performed includes evaluation product wa tested context entire linux os platform performance monitored documentation detailed document prepared stage gathering initial wa understanding definition understanding current scenario enterprise gathering gathering preparing preliminary workflow deciding execution execution actual 5.3 historical semi-detached pune-43 19 iot based prognostic health manufacturing intelligence reason development considered semi-detached development consists mixture experienced inexperienced people member limited experience developed massive simple compact cocomo semi-detached estimation technique applied estimation technique constructive cost cocomo technique basic cocomo equation semi-detached ab 3.0 bb 1.12 cb 2.5 db 0.35 kloc estimated number delivered code 1 effort applied ab kloc bb man-months 3.0 8 1.12 30.8 2 development time cb effort applied db month 2.5* 30.8 0.35 8.3 3 people effort applied/development time count pune-43 20 iot based prognostic health manufacturing intelligence 30.8/8.3 3.7 3-4 people needed 5.4 possibility loss injury definition environment exposure harm loss includes possibility well technique alleviate harm loss .all avoided performing attempt ensure time essential progress failure key learning involves identification prioritization 5.4.1 analyzed individually classification basis rated a. catastrophic b. critical c. marginal d. negligible reviewed consensus wa reached 5.4.2 prioritization analyzing prioritized based review consensus developer pune-43 21 iot based prognostic health manufacturing intelligence 5.4.3 series step help understand manage uncertainty plague potential happen outcome good identify access occurrence key function identify address eliminate source threat completion effective strategy address three issue a. avoidance b. c. contingency planning 5.4.4 common 5.1 rating apache spark error prediction failed catastrophic sensor connection fails critical connection critical server pune-43 22 iot based prognostic health manufacturing intelligence 5.5 1. gantt gantt fig 5.1 gantt pune-43 23 iot based prognostic health manufacturing intelligence 2. t1 acquisition sensor t2 apis t3 analytics prognostic t4 powerful visualization 3. pert t1 t2 t3 t4 fig 5.2 fig 5.3 pert 5.6 tracking control mechanism 5.6.1. assurance control control involves series inspection review development process entire scalable start small direct use- follow incremental approach assurance consists auditing reporting function ass effectiveness completeness control pune-43 24 iot based prognostic health manufacturing intelligence 5.6.2. change control change iterative step built rationalized unified process sdlc paradigm 5.7 specification 5.7.1 description involved 1. orgmodel organization/company 2. usermodel access control 3. deptmodel level 4. machinemodel specific machine 5. sensormodel specific sensor associated machine 5.7.2 object 1. orgmodel a. organisation b. organisation role c. organisation contact 2. usermodel a. authentication b. access control c. pune-43 25 iot based prognostic health manufacturing intelligence 3. deptmodel a. b. c. machine 4. machinemodel a. machine b. machine production c. sensor machine d. machine 5. sensormodel a. sensor b. sensor tag c. sensor timestamp d. sensor parent machine 5.7.3 a. b. manage c. machine d. machine sensor pune-43 26 iot based prognostic health manufacturing intelligence 5.7.4 fig 5.4 5.7.5 description functionality 1. prediction prediction provided sensor/bunch sensor machine learning sensor analyzed provided prediction sensor health calculated machine pune-43 27 iot based prognostic health manufacturing intelligence fig 5.5 prediction 2. visualization real time transmitted cloud visualization generated sensor group sensor sensor collected smart sensor simple microcontroller cloud kaa tagged real time visualization fig 5.6 visualization pune-43 28 iot based prognostic health manufacturing intelligence 5.7.6 profile authority permission person company role defined level control decision making i. ii iii shopfloor worker shopfloor manager topfloor manager executive ceo cto 5.7.7 i. ii iii shopfloor worker health machine responsible calibration adjust machine perform better frontend side simple visualization worker understand action perform shopfloor manager monitor machine issue predicted happen notified manager well advance shopfloor worker action avoiding issue downtime executive manage control plant-wide decision based prediction 5.7.8. specification shopfloor manager machine description shopfloor manager performance machine action needed analyze currently incoming based historic predicting health current scenario pune-43 29 iot based prognostic health manufacturing intelligence primary actor precondition 1. manager authenticated action 2. sensor calibrated properly 1. amount historic time basic 1. monitor health performance help visualization 2. visualization clearly indicates machine fixing prediction analytical engine 3. needed intervene process change 4. prediction visualized considering historic performance machine alternate course condition situation machine critical action notify situation higher authority post condition 1. expected production efficiency 2. unexpected error 3. prediction accuracy improved 4. paused moment critical situation pune-43 30 iot based prognostic health manufacturing intelligence actor 1. 2. machine 3. sensor included 1. historic 2. check inventory extended 1. combine metric measure relative performance 2. generate fig 5.7 pune-43 31 iot based prognostic health manufacturing intelligence 6 pune-43 32 iot based prognostic health manufacturing intelligence evaluation 6.1 iot internet thing based prognostic health manufacturing intelligence aim acquisition real-time sensor variety volume sensor manufacturing analyze predict machine health effectively manufacture intended product best downtime higher productivity rate involve acquisition analytics simple powerful visualization based role privilege power decision change visualization machine learning arima classification helpful identifying pattern showing real-time issue rectifying change needed notifying person responsible action well advance early avoid issue manufacturing 6.2 screenshots fig 6.1 screenshot 1 pune-43 33 iot based prognostic health manufacturing intelligence fig 6.2 screenshot 2 fig 6.3 screenshot 3 pune-43 34 iot based prognostic health manufacturing intelligence 6.3 item item include working properly individually well integration input output tested validity tested entire workflow tested item tested 1. connection sensor kaa collection 2. visualization live stream 3. apache spark job execution demand 4. changing classification regression arima 6.4 functionality accuracy function executed integration 1. check collection sensor verifying dumped mongodb well missing point live visualization 2. verify servlets working properly correct json output 3. verify general correlation health 4. check websocket kafka stream connection 5. check connection 6. validate output prediction respect end-user satisfaction pune-43 35 iot based prognostic health manufacturing intelligence 6.5 evaluation evaluation process curl request tomcat 8 server rest client chrome plugin named postman evaluation module-wise output 1. classification input 4 sensor f1 f2 f3 f4 output health class /mavenproject6/thirdservlet http/1.1 host localhost 8081 content-type application/json cache-control no-cache postman-token a78ff581-d924-31a3-b334-3431b4c3e7bb response `` f1 '' 238.67 `` f2 '' 32.449 `` f3 '' 107.5 `` f4 '' 47.78 `` class '' `` acceptable '' 2. arima input option time interval forecasting output json specifies trained preds specifies predicted /mavenproject6/secondservlet option=10 http/1.1 host localhost 8081 content-type application/json cache-control no-cache postman-token 52ee7869-3624-eb16-4594-75a42dafdb52 response `` actual '' `` '' 50 180 187 225 152 199 214 88 184 196 167 198 157 246 338 325 2 35 357 355 195 311 275 253 409 403 361 300 307 329 378 337 510 344 516 340 401 529 489 425 585 460 411 539 539 528 558 513 647 551 496 684 673 670 545 610 667 580 6 70 699 651 719 632 806 649 756 766 775 766 848 772 767 875 720 851 927 764 939 924 844 902 968 974 998 983 1018 966 914 904 1080 903 977 1034 951 969 1126 1045 108 3 1045 1128 1074 1066 1159 1100 1193 1173 1243 1251 1185 1201 1221 1186 1116 130 0 1141 1321 1228 1192 1319 1214 1193 1388 1246 1307 1269 1409 1385 1343 1413 137 4 1418 1418 1349 1454 1335 1495 1505 1425 1464 1484 1529 1408 1545 1616 1459 154 pune-43 36 iot based prognostic health manufacturing intelligence 7 1625 1598 1500 1517 1591 1660 1651 1568 1664 1548 1726 1732 1726 1650 1657 169 2 1720 1650 1663 1732 1658 1827 1777 1685 1869 1796 1867 1867 1853 1781 1893 194 4 1956 1880 1847 1829 1979 2003 1993 1974 2041 1996 1936 1900 2068 1973 2004 208 8 1974 2007 2022 1983 2095 2018 2168 2036 2077 2212 2135 2163 2092 2253 2240 211 4 2271 2213 2271 2181 2210 2305 2338 2301 2209 2224 2335 2295 2382 2390 2250 232 9 2447 2341 2420 2289 2456 2414 2476 2497 2460 2513 2469 2483 2551 2389 2476 243 5 2517 2452 2530 2617 2631 2578 2667 2675 2523 2585 2529 2548 2661 2740 2720 264 4 2736 2708 2673 2619 2710 2815 2721 2653 2765 2796 2713 2793 2854 2835 2784 282 1 2921 2796 2948 2815 2777 2912 2877 2973 2812 2895 2949 2903 3041 3011 3068 301 8 3029 2948 3000 3068 3118 3075 3128 3137 3031 3041 3152 3079 3109 3218 3222 313 4 3224 3202 3251 3149 3178 3248 3269 3230 3251 3296 3235 3331 3368 3320 3385 331 3 3338 3306 3331 3276 3408 3283 3354 3330 3395 3407 3419 3442 3424 3426 3470 356 0 3535 3450 3539 3468 3456 3445 3501 3503 3592 3550 3518 3612 3525 3594 3513 355 3 3716 3581 3636 3570 3588 3755 3772 3638 3621 3775 3690 3793 3658 3804 3800 377 9 3784 3739 3806 3882 3894 3922 3901 3785 3815 3807 3810 3953 3874 3935 3927 391 0 4009 4018 3895 4003 3903 4041 3982 4103 4018 3943 3978 3977 4157 4042 4091 414 5 4147 4076 4087 4088 4196 4180 4084 4102 4138 4162 4171 4201 4142 4337 4165 420 6 4193 4225 4378 4386 4338 4377 4402 4263 4273 4403 4383 4316 4392 4398 4365 435 8 4443 4448 4443 4429 4561 4451 4396 4426 4519 4475 4618 4514 4623 4583 4492 459 7 4491 4502 4609 4584 4571 4657 4580 4694 4619 4690 4670 4741 4790 4707 4690 467 2 4825 4697 4798 4764 4790 4804 4716 4882 4824 4934 4845 4820 4937 4967 4960 484 0 4937 4854 4876 4933 4964 5053 4945 4960 4926 4950 5032 4962 5024 5122 5103 513 7 5150 5038 5107 5060 5160 5104 5180 5160 5102 5232 5233 5207 5188 5286 5237 516 3 5212 5203 5242 5193 5222 5358 5264 5355 5372 5387 5400 5369 5429 5290 5291 538 2 5380 5487 5486 5329 5524 5518 5539 5455 5473 5393 5575 5503 5593 5430 5532 547 6 5603 5491 5593 5598 5542 5623 5660 5605 5570 5575 5676 5627 5649 5631 5660 579 3 5625 5740 5680 5764 5713 5842 5772 5747 5786 5725 5819 5731 5834 5749 5870 588 2 5841 5821 5854 5864 5913 6018 5941 5873 5924 6048 6064 6058 5970 5905 6109 601 0 6025 5970 6135 6159 5971 6067 6009 6101 6200 6102 6217 6164 6096 6108 6118 624 3 6192 6140 6266 6214 6150 6192 6162 6342 6191 6343 6274 6318 6238 6375 6375 628 6 6286 6316 6419 6330 6318 6355 6441 6496 6476 6409 6387 6454 6499 6527 6420 641 2 6510 6441 6583 6611 6601 6606 6540 6486 6534 6643 6536 6696 6721 6716 6582 667 2 6700 6770 6723 6672 6757 6740 6641 6681 6678 6781 6787 6739 6786 6849 6853 674 4 6820 6802 6823 6777 6820 6782 6812 6818 6838 6969 6885 7015 6938 7030 6969 693 4 6925 6984 7089 7071 7102 7126 7027 7067 7039 6995 7188 7153 7068 7188 7041 714 8 7149 7118 7230 7206 7224 7143 7126 7135 7238 7263 7249 7336 7340 7187 7232 720 6 7254 7399 7370 7313 7409 7404 7418 7448 7294 7474 7385 7488 7483 7457 7474 752 8 7391 7403 7503 7506 7498 7519 7595 7519 7509 7654 7582 7538 7669 7661 7610 764 8 7689 7566 7569 7600 7674 7690 7664 7790 7645 7784 7722 7712 7831 7661 7782 787 2 7805 7740 7875 7867 7791 7866 7895 7853 7793 7890 7848 7983 7937 7894 7979 801 8 8032 7902 7909 7901 7989 8064 8080 7949 8021 8129 7967 8079 8104 8066 8124 816 1 8097 8048 8076 8154 8161 8145 8083 8108 8130 8242 8142 8293 8272 8298 8248 828 8 8362 8352 8280 8321 8286 8229 8327 8240 8387 8313 8411 8305 8454 8371 8350 839 6 8330 8391 8462 8450 8410 8430 8432 8594 8411 8590 8557 8571 8614 8519 8484 860 5 8645 8588 8545 8609 8653 8580 8578 8607 8711 8768 8780 8678 8734 8801 8642 877 0 8687 8710 8694 8778 8851 8775 8773 8873 8771 8791 8806 8765 8947 8822 8899 899 pune-43 37 iot based prognostic health manufacturing intelligence 7 9006 8968 8991 9028 8974 9035 9020 8935 8993 9008 9106 9109 9087 8988 8971 907 4 9151 8998 9104 9099 9206 9121 9116 9227 9126 9106 9248 9278 9144 9278 9310 913 8 9240 9302 9209 9186 9363 9322 9340 9224 9383 9225 9352 9391 9274 9305 9406 947 8 9466 9432 9353 9331 9515 9499 9410 9512 9569 9435 9564 9497 9585 9543 9546 949 1 9519 9461 9639 9610 9655 9576 9598 9608 9724 9679 9661 9565 9650 9592 9640 979 9 9787 9776 9785 9718 9778 9778 9731 9690 9692 9827 9774 9825 9924 9894 9858 983 7 9880 9811 9941 9966 9900 9913 9916 9858 10005 9920 10018 10066 9938 10012 100 02 10037 10050 9949 10128 10134 10170 10048 10101 `` preds '' 10197.307859137776 10129.752722390953 10221.06310949962 10156.99383398397 10156.422877733277 1 0212.72898295158 10171.630596610177 10269.904001154857 10314.34629999689 102 69.130211272459 3. regression input 2 sensor contribute f1 f2 output percentage /mavenproject6/thirdservlet http/1.1 host localhost 8081 content-type application/json cache-control no-cache postman-token 73f6bf81-8484-2d22-6d1e-6b5963df4302 response `` f1 '' 238.67 `` f2 '' 32.449 `` '' 87.71048363908977 pune-43 38 iot based prognostic health manufacturing intelligence 7 pune-43 39 iot based prognostic health manufacturing intelligence concluding key iot based phm manufacturing precise decision making avoid appalling fault improve machine accessibility reducing failure downtime anomaly detected prolong maintenance routine perform timely overhauling measure reduce life-cycle expense decreasing amount inspection needed repair scheduled inventory overhead increase performance support logistics pune-43 40 iot based prognostic health manufacturing intelligence 1 daeil kwon melinda r. hodkiewicz jiajiefan tadahiroshibutani michealpecht iot-based prognostic health industrial access 4 2-5 2016 2 l. deng d. yu deep learning method trend signal process 7 34 197387 jun 2014 3 x.-s. si w. wang c.-h.hu d.-h. zhou remaining life estimationa review statistical driven approach eur j. oper 213 114 aug. 2011 4 m. e. porter j. e. heppelmann smart connected product transforming company harvard bus rev 93 97114 oct. 2015 5 a. heng a. c. c. tan j. mathew n. montgomery d. banjevic a. k. s. jardine intelligent condition-based prediction machinery reliability mech syst signal process 23 5 16001614 2009 6 j. lee b. bagheri h.-a kao cyber-physical industry 4.0-based manufacturing manuf lett 3 1823 jan. 2015 7 oct 4 2016 study data-driven industrial analytics platform smart manufacturing online http //www.phmsociety.org/node/1971 8 jan 2016 special issue phm smart manufacturing online http //www.phmsociety.org/journal/special-issue/smartmanufacturing 9 jun 30 2015 industry 4.0 fourth industrial revolution online .available http //blogs.sap.com/2015/06/30/industry-40-fourth-industrial-revolution 10 apr 29 2015 manufacturing study example online .available http //ucanalytics.com/blogs/category/manufacturing-case-study-example/ pune-43 41 base paper special trend advance ambient intelligence internet thing iot received 12 2016 accepted 27 2016 current version 22 2016. digital object identifier 10.1109/access.2016.2587754 iot-based prognostic health industrial daeil kwon1 member melinda r. hodkiewicz2 member jiajie fan3 member tadahiro shibutani4 michael g. pecht5 fellow 1department control ulsan national science ulsan 44919 south korea 2faculty computing mathematics western australia crawley wa 6009 australia 3college mechanical electrical hohai changzhou 213022 china 4institute advanced science yokohama national yokohama 240-8501 japan 5center advanced life cycle maryland college park md 20742 usa author d. kwon dkwon unist.ac.kr wa supported basic science program ministry science ict planning national foundation korea grant nrf-2014r1a1a1003653 ulsan national science 2016 fund grant 1.160046.01 australian arc industrial transformation hub offshore floating facility grant ih140100012 bhp billiton natural science foundation jiangsu province grant bk20150249 changzhou science program grant cj20159053 japan society promotion science grant-in-aid scientic grant 15k12459 calce consortium prognostic health phm enabling discipline sensor ass health diagnosis anomalous behavior predicts remaining performance life asset advent internet thing iot enables phm applied asset sector creating paradigm shift opening signicant business opportunity paper introduces concept phm discus opportunity provided iot development illustrated example innovation manufacturing consumer product infrastructure review number challenge rapid adoption iot-based phm identied include appropriate analytics security iot platform sensor energy harvesting iot business licensing approach term internet thing maintenance prognostic health reliability remaining life acronym phm iot mem rfid cbm rul pof fmmea failure mode mechanism prognostic health internet thing micro electronic mechanical radio frequency condition-based maintenance remaining life physic failure ttf mro ivhm nff time failure maintenance repair operation integrated vehicle health fault i. reliability ability asset perform expected performance specied period time eld condition 1 customer expect purchase reliable reliability inuences willingness pay manufacturer balance customer expectation prot expectation designing reliability infrastructure e.g road port utility e.g water power gas operator providing service commu- nities balance cost performance asset direct cost reputation loss caused poor asset reliability signicantly organizational performance ability predict asset reliability core capability organizational capability enabled appropri- ate prognostic health phm practice phm originates health degradation asset determined reli- ability remaining performance life asset predicted aid situ sensing 2 phm based key element volume 4 2016 2169-3536 2016 translation mining permitted academic permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html 3659 sensor provide capability failure precur- sors environmental loading condition e.g stress asset manufacturer operator sensor decade collect health asset dened item thing potential actual 3 collection today conducted sensor hard-wired industrial control aid assessing performance addition technician reading machine check performance discard 4 development iot offer paradigm sensor streamed wirelessly thing sys- tems sub-systems asset remote server cloud manner relevant health estimation e.g environmental condition maintenance operat- ing health prognostic assessment sharing asset platform enables development complete operating picture exibility ass manage unknown term iot wa reportedly rst 1997 5 institution electrical elec- tronic engineer denes iot network item embedded sensor connected internet 6 network enables connection geo- graphically dispersed people asset today iot devel- oping momentum number cost standardization driver development 7 8 size cost sensor decreasing advance micro- electronic-mechanical mem 2011 number interconnected device thing planet overtook number people 8 gartner inc. forecast 6.4 billion connected thing worldwide 2016 30 2015 number reach 20.8 billion 2020. 2016 5.5 thing estimated connected day 9 access real-time increasing wireless including radio frequency rfid tag embedded sensor proliferation wireless sensor network addressing scheme thing unique address cost connectivity decreasing spectrum ability commu- nicate sensor increasing further- consumer condence cloud computing reduction cost storage enables storing massive datasets platform analyt- ic machine learning prognostic health paper iot phm integrated discus opportunity iot offer unique business innovation implemented industrial remainder paper organized ii phm iii introduces iot-based phm approach industrial discus potential d. kwon al iot-based phm industrial benet representative industry sector iv discus challenge iot-based phm potential nancial benet finally concluding remark sugges- tions presented v. ii prognostic health phm asset owner operator health strat- egy asset dependent asset failure behavior failure mode consequence failure generally considered man- agement strategy corrective xed-interval preventative failure-nding condition-based maintenance condition-based maintenance cbm requires highest level asset maturity waiting asset fails replacing xed interval cbm sensor detect deterioration select appropriate time maintenance cbm pro- gram relies effective phm phm effective solution detecting anoma- lie fault diagnosing failure predicting residual remaining lifetime estimating reliability asset example phm include electronics 10 11 rotating machinery 12 14 linear asset transport water electrical distribu- tion 15 16 phm consists dimension sensing diagnosis prognosis fig 1. 1. dimension phm sensing enables anomaly detectability selecting appropriately locating sensor provide capability collect history time-dependent degradation material environmental stress anomaly indi- cate failure change operating condition well asset performance degradation inuence anomalous behavior anomaly valuable asset diagnosis extract fault-related sen- sor signal caused anomaly asset health anomaly material degradation well change condition diagnosis relates signal anomaly failure mode identies quantity damage occurred health indicator anomaly diagnosis provide advanced warning failure referred failure precursor 3660 volume 4 2016 d. kwon al iot-based phm industrial prognostic remaining performance life asset referred remaining life rul estimation method predict progression specic failure mechanism incipi- ence failure appropriate condence interval step requires additional traditionally provided sensor maintenance history operating prole environmental factor 17 iot nal key aspect phm appropriate decision making prevent catastrophic failure increase asset availability reducing downtime no-fault-founds extend maintenance cycle execute timely repair action lower life-cycle cost reduction inspec- tion repair inventory cost improve qual- ication logistical support phm integrates component lifetime estimation reli- ability prediction enabling reliability asset evaluated providing opportunity manage asset phm execution relies selection appropriate prognostic approach currently prognostic technique usage tuned prognostic method classied three approach physics-of-failure pof -based data-driven fusion 2. pof-based phm 18 a. physics-of-failure pof approach pof approach knowledge thing degrade fail knowledge based physical law linked 18 fig 2 pof approach requires understanding process physical electrical chemical mechanical stress material induce failure procedure conducting phm pof approach summarized follow- ing step 19 step 1 identify critical failure mechanism fail- ure site failure mode mechanism fmmea 1 step 2 monitor life-cycle load lead per- formance physical degradation associated asset response step 3 extract variable change response deterioration associated failure mecha- nisms identied step 1 step 4 ass damage calculate remaining life pof failure mechanism step 5 uncertainty predict time-to- failure ttf distribution fmmea potential failure mode mech- anisms asset accord- ing occurrence severity detectability fmmea assigns score potential failure mode rank identify critical failure mode life-cycle load establishes history loading condition asset thermal mechanical chemical physi- cal electrical loading condition sensor collect extracted represent quantify failure extent damage assessed pof failure mechanism uncertainty life prediction enables risk-based decision uncertainty source include measurement error parameter failure criterion usage monte- carlo simulation provide ttf distribution based probabilistic damage assessment main advantage pof approach ability incorporate engineering-based understanding phm knowledge material geometry asset well load condition e.g thermal mechanical electrical chemical life cycle pof tend failure mechanism-specic up-front reliability wa implemented b. data-driven approach data-driven approach analytics machine learn- ing determine anomaly prediction reliability asset based and/or covari- ate called endogenous exogenous covariates covariates e.g temperature vibration measured sensor asset asset operating covariates e.g weather asset operating 20 data-driven approach analyzes asset performance based training database and/or covariates implemented obtaining healthy condi- tions data-mining technique data-driven approach phm diagnosis prognosis stage .based statistical machine learning approach 21 include 1 multivariate statistical method 22 25 2 black- box method 26 27 3 graphical 28 29 4 self-organizing map 5 time-domain method 6 fuzzy rule-based review example 2 30 selection depends anomaly detection diagnostics prediction question considered volume 4 2016 3661 selection well doe describe reality accurate prediction robust modelling approach compared pof approach data-driven approach asset-specic data-driven approach learn behavior asset based collected analyze intermittent fault detecting change asset approach complex asset multiple competing failure mode long asset exhibit repeat- behavior word strength data-driven approach ability transform high-dimensional noisy lower-dimensional diagnostic prognostic decision data-driven approach main drawback reliance historical failure mode mechanism analyst seek detect issue consequence failure reliance simulated laboratory eld training dataset reliance historical issue product extensive eld failure history 3. fusion phm c. fusion pof-based/data-driven hybrid approach fusion approach fig 3 combine advantage pof-based data-driven approach allow better rul prediction capability 31 approach reduces reliance historical datasets address issue unseen failure mode fusion phm rst step determine vari- ables monitor variable consist covari- ate including environmental load well covariates based sensor step identify variable situ measurement deviation associated healthy state detect anomalous behavior e.g mahalanobis distance 32 33 sequential probabil- ity ratio 34 self-organizing map anoma- lie detected isolation technique identify d. kwon al iot-based phm industrial signicantly contribute abnormal status input pof rul prediction purpose isolation data-mining machine learning-based technique e.g compo- nent 35 mutual information-based selec- tion support vector machine 36 employed pof ass situ degradation asset environmental operating condi- tions fact number potential failure mechanism exist asset theoretically pof failure mecha- nism accurate assessment situ degradation fusion phm scheme basically identies prioritizes potential mechanism asset environmental condition pof identied database involving pre-dened pof failure considered process dening criterion failure additionally failure based pof historical usage asset specications standard potential failure mechanism fig 3 degradation modeling dened process learning predicting behavior param- eters highly correlated failure predict parame- ter degradation trend technique relevance vector machine 37 hidden markov lters 38 e.g kalman lter 39 particle lter 40 finally rul predicted determining predictive parameter meet failure criterion failure mode ttf predicted statistical machine learning aforementioned advantage fusion approach applied rul estimation electronics avionics instance fusion phm approach predicted rul mul- tilayer ceramic capacitor wide array including consumer electronics telecommu- nications processing hard disk video camera mobile phone general electronic cir- cuits 41 fusion phm approach wa predict rul lithium-ion battery scheduling battery recharge replacement emerging electric aerospace vehicle 42 rul estimation based fusion phm approach avion- ic insulated-gate bipolar transistor igbts corrosion fatigue physical wa reported 43 45 iii iot-based phm industrial smart connected element iot require appropriate infrastructure infrastructure represented stack fig 4. technol- ogy stack facilitates exchange asset integrates business source serf platform storage analytics safeguard access asset 3662 volume 4 2016 d. kwon al iot-based phm industrial 4. stack supporting iot 46 lower half stack describes element associated asset partssoftware evolution currently underway addition embed- ded sensor rfid tag processor built asset collectively enables collected phm transmitted network connectivity central block key iot collected transmitted stored processed efcient interpretable increasingly cloud computing service represented top block stack top gure includes people access well involved development maintenance stack element support block side stack identify authentication security level stack well potential source considers iot applied phm industrial sector a. manufacturing manufacturing major source benet country manufacturing industry traditionally focused product quantity mass production order strengthen competitiveness manufacturing paradigm shifting combining sale maintenance service enabled iot 4 signicant shift under- focus product focus platform platform approach company product operates facilitator product created par- ticipants company example include platform-based business apple uber airbnb prerequisite platform company ability build proposition ecosystem product 47 ability manufacturer customer discussed iii.b manufacturing industry industrie 4.0 asso- ciated smart factory program initiative german government assist development cyber-physical platform enable iot development 48 cyber-physical platform change traditional manufacturing process integrating device equipment platform factory connecting factory-to-factory integrating 49 example platform support include siemens totally integrated automation portal 50 ge predix platform 4 51 sap hana 52 japanese manufacturer tend collaborate com- panies develop iot-based manufacturing example toshiba machine developed iot-based phm nec customer product send failure operating nec center toshiba machine cloud propose maintenance service resolving root failure offsite travel expense troubleshooting reduced 15 nidec devel- oped iot-based conjunction ibm machine nidec sends operating center managed ibm center diagnosis machine based collected 53 54 b. heavy industry mobile asset mobile asset heavy industry include airplane ship construction mining equipment industry embraced opportunity provided iot equip- ment mobile transmitted real time order enable decision making mobile asset increasingly connected eet iot allows remote maintenance process smart ship fig 5 good example value-added asset heavy industry sensor environment e.g sea wave tidal current wind ship e.g device ship e.g route analyzed provide captain optimal e.g fast eco- nomic route maintenance safe eet 55 construction mining equipment product excavator wheel loader backhoe loader embrac- ing benet connectivity 56 construction site remote isolated loca- tions connectivity real-time phm critical function example komatsu monitor diagnosis fault construction volume 4 2016 3663 d. kwon al iot-based phm industrial eventually wind turbine failure wind farm located remote location offshore moun- tain accessibility limited number organiza- tions example ge digital wind farm siemens wind service solution provide iot service solution wind farm solution aim optimize turbine performance equipment life rul estimation predict maintenance 62 iot-based phm energy-generation industry change maintenance paradigm supporting cbm increase plant reliability availability stabilize power supply fewer power interruption eventually provide industry good reputation customer trust addition iot-based phm play role ensuring aging power infrastructure appropriately monitored unplanned failure deteriorated asset replaced cost- risk-effective interval d. transportation logistics iot playing increasing role transportation logistics industry physical object equipped barcodes rfid tag sensor transportation logistics company conduct real-time move physical object origin destination supply chain iot-based phm perspec- tive ability long item storage condition e.g heat vibration humidity contaminating environment enhances ability predict failure asset undergo loading condition fail transportation storage unexpected exposure mechanical shock vibration cosmic radia- tion dry wet humid environment commercial aviation spends 50 total expense maintenance repair operation mro 63 aircraft component failure signicant loss prot well reputation integrated vehicle health man- agement ivhm unied ass current state vehicle evolved 50 year 64 ivhm phm capability poten- tial inuence aircraft reducing redun- dancy fewer subsystem aircraft iot-based phm aviation reduce unplanned maintenance no-fault-found nff event improve aircraft availability 65 e. infrastructure asset infrastructure asset e.g water gas power geo- graphically dispersed reliant remote sensor telemetry water industry ability iot solution ow meter allows real-time pre- dict adjust consumption ability link condition-monitoring enables predictive analytic solution cloud prediction network failure infrastructure exploring sensor unconnected asset provide 5. conceptual representation smart ship equipment product eld satellite communica- tions 57 ge monitor gas turbine eld collect 30 000 hour operation day power plant installed world-wide trigger alarm vari- ables noise vibration temperature anoma- lous behavior ge reported phm saved 70 2014 58 rolls-royce offer business charge hourly service fee jet engine monitor product eld real time provide customer optimized maintenance forecasted needed scheduled worse conducted failure occurred 59 iot-based phm add product eld marketing strategy differentiate business c. energy generation energy-generation industry consists nuclear thermal power renewable energy thermal power oil coal natural gas generates 81.4 supply biofuels 10.2 nuclear 4.8 hydro 2.4 renewables geother- mal wind heat 1.2 60 power generation signicant contributor co2 emis- sion responsible 50 globally signicant effort going improving efciency generation distribution cloud computing enabling development so-called smart grid computing smart grid number networked sensor power electronic device distributed electricity generator appli- ances electric grid smarter complex requires integration quantity real-time processing 61 iot-based phm integral smart grid engineer seek monitor health key component network renewable energy includes wind hydro solar biofuel energy generation wind energy generation encounter reliability issue order deliver desired capacity wind power plant require long blade tower increase load stress 3664 volume 4 2016 d. kwon al iot-based phm industrial relevant asset health example accelerometer driver mobile phone detect pothole road defect 66 city local government forefront making collect publically called smart city pro- gram initiative enable developer create appli- cation enhance public infrastructure asset 67 68 f. automobile automobile industry driving innovation appli- cation enables consumer advanced notice vehicle well real-time diagnostics support example car general motor tesla bmw manufacturer programming apis apis allow built third party collected car enables development iot-based phm add increasing connectivity availability iot allows smart car eld connect net- enabling real-time navigation remote vehicle control self-diagnosis in-vehicle infotainment service smart car connect car well infrastructure share route efcient route planning smart car evolving connected device purchase mobility driverless car network car 69 reliability smart car network depend appropriate iot-based phm car deteriorating health scheduled unplanned in-service failure affect car net- performance avoided g. medical consumer product medical device area consumer increasing consequence failure critical example failure in- vivo device pacemaker patient death medical device fail battery performance degradation patient pacemaker check xed-time interval ensure device functioning correctly iot-based phm allows medical consumer product monitored diag- nosed continuously remotely help patient reducing number interval regular checking iot-based phm medical device facilitate remote patient homecare service elderly chronic disease 70 71 h. warranty service conventionally customer seek warranty service asset fail seeking remedy failure failure occurred costly customer maintainer customer loses availability maintainer conduct corrective maintenance generally expensive predictive maintenance collateral damage scheduling diagnosis spare availability addition waiting asset fails pose liability issue 6. inclusion iot-based phm predictive warranty service fig 6 predictive warranty service asset customer signicant investment availability asset critical customer e.g car aircraft inclusion iot-based phm warranty augment customer ability decision seek warranty service prior asset failure offering onset asset degradation failure rul consequently iot-based phm facilitate effective logistical support showing customer asset degrading 72 i. robotics robot combination sensor actuator full function sensor phm tied iot robotics market expand- ing country example u.s. government released national robotics initiative 2011 accelerate development robot 2014 e.u launched innovation eld robotics collaboration european commission 180 private company 73 japanese gov- ernment released robot strategy 2015 74 japanese government advocate ve-year aim implementing next-generation robot advance- ment sensor articial intelligence ai iot enables robot connect robot device fanucs intelligent edge link drive field example iot-based phm 75 platform connects robot peripheral device sensor fanuc collaborating cisco rockwell automation preferred network establish platform iot expands robot simple performer autonomous self-learning ability transformation potential robot play role interacting human iot-based phm key autonomous robot enables robot diagnose based collecting ai self-cognizant electronic volume 4 2016 3665 iv making iot-based phm previous described number current signicant business opportunity iot-based phm discus key challenge analytics security iot platform energy harvesting iot business licensing entitlement a. analytics machine learning mining iot-based phm environment ever-growing sensor networked thing contin- uous generation high-volume high-velocity high- variety 76 conventional analytical approach inadequate extended adapted deal challenge scale diversity distributed nature 77 78 major challenge include learning distributed setting learning high- dimensional learning heterogeneous com- plex novel framework alternating direction method multiplier 79 introduced enable optimization core functionality learn- ing distributed setting advance enabled version machine learning convolutional neural net 80 restricted boltzman machine 81 support vector machine 82 regres- sion 83 large-scale setting addition advance method aimed analyzing scale anomaly detection time- series forecasting needed require online learning adapted evolving reality extraction challenge resurfaced longer feasible learning designed discovered conven- tional technique novel approach enabling automated extraction learning generalized built extremely distributed datasets promising development learning sophisticated network auto-encoders deep learning method 84 deep learning starting signicant promise phm 85 87 b. security iot-based phm scheme collected wire- le sensor transmitted base e.g local server server cloud post- wireless transmission rfid bluetooth wi-fi 802.11 ultra-wideband wimax worldwide interoperability microwave access 802.16 zigbee 802.15.4 88 reliability affordabil- ity iot-based phm closely associated connection robustness security real-time access faced transmission malicious disturb integrity leakage security-critical e.g d. kwon al iot-based phm industrial usage record performance affect trustworthiness iot-based phm security major issue addressed iot-based phm c. iot platform iot platform help reduce cost developing iot-based service iot platform chal- lenges building iot signicant devel- oping logic database developing analytics iot platform provider leverage underlying asset consideration business customer understanding provider offer evaluating iot platform selection underlying platform critical decision iot-based service developer general switching platform messy expensive time-consuming painful issue iot community proliferation pro- tocols standardization body standard association 89 90 internet protocol smart object alliance 91 industrial internet con- sortium 92 interconnect consortium 93 working common protocol d. energy harvesting despite potential reliability iot asset impeded limited energy supply device deployed energy-scarce location human intervention address energy constraint re-generating power iot asset energy harvesting energy harvesting dened process scavenging hunting energy envi- ronment solar wind vibration device powered additional power source 94 considerable currently directed low-power energy-harvesting support sensor associated connectivity 95 e. business iot-based phm combination iot phm business support effective number dimension consider including speed decision making opportunity collect appropriate real-time asset health allows faster response changing asset condition business process faster risk- based decision currently prognostic decision experienced engi- neers pas alert recommen- dations chain command slows response time addition current performance measure maintenance based metric compliance 3666 volume 4 2016 d. kwon al iot-based phm industrial planned maintenance adherence target metric breaker action coming phm rapid response welcomed manager account- meeting target performance measure trust accountability orga- nizations health inter- nally trusted consultant paradigm sitting cloud recommendation based reviewed analyst sitting remote operation center sort question authority process build trust local asset operator remote analyst actual asset opera- tion analyst employed company original equipment manufacturer oem third party liability group involved process described fig 4 liability determined event major asset failure support evolving paradigm style risk- performance-based contract needed support tighter coupling multiple party involved workforce competency process iot-based phm described require suite skill current workforce ready worker currently involved traditional cbm role longer needed collected sensor collector people decision analyst specialist modelling engi- neering skill analyst well third party making current on-site workforce redundant supporting change incorporate phm-based iot skill employee third-party provider require signicant change current organiza- tional 78 f. licensing entitlement licensing entitlement pro- vides locking capability enable manufacturer protect embedded intellectual property ip running connected intelligent device manufacturer faced increasing global competitive pressure reduce manufacturing cost leverage created internet-connected product increase revenue manufacturer protect ip contained monetize achieved licensing entitlement platform control access internet-connected device function licensing entitlement platform enable dynamic pricing bespoke bundling near- real-time upgrade help man- ufacturers competitive increasing speed market product combination product enhancement v. direction paper introduced opportunity challenge iot-based phm industrial paper presented example company imple- menting iot-based phm major impediment human capital develop validate maintain prognostic require engineer- ing statistic machine learning community phm requires ability link anomalous pattern failure mode connec- tions underlying physic failure e.g failure mechanism challenge rela- tionships called spurious correlation 96 phm sense accelerate iot-based phm development datasets real asset failure datasets enable development validation existing specic condition- sufcient phm metadata asset operating environment covariates inuence deterioration collection failure mode mechanism failure event stored separate sensor advent iot enables datasets merged move develop global prognostic library assist making t-for-purpose datasets 97 common iot platform focus access platform enable develop- ment third party transition access paradigm shift business pre- viously relied proprietary product competitive advan- tage number international business government group experimenting competition platform kaggle hackathons datasets predictive analytics 98 challenge iot-based phm issue insurmountable sensor small inter- fere product function connectivity lower power consumption process support advanced statistical machine learning method improving cloud computing capacity speed increased signicantly meet biggest concern respect security 99 key iot-based phm expected signicant inuence reliability assessment prediction create business opportunity volume 4 2016 3667 1 k. c. kapur m. pecht reliability hoboken nj usa wiley 2014 2 m. g. pecht prognostic health electronics hoboken nj usa wiley 2008 3 asset managementoverview principle terminology standard iso 55000 2014 4 l. winig ge bet analytics proc mit sloan manage rev 57 2016 116 5 r. minerva a. biru internet thing iot online http //iot.ieee.org/images/les/pdf/ieee_iot_towards_denition_internet_of _things_revision1_27may15.pdf d. rotondi 2015 6 2014 special internet thing online http //theinstitute.ieee.org/static/special-report-the-internet-of-things 7 m. alam r. h. nielsen n. r. prasad evolution m2m iot proc 1st int black sea conf commun netw blackseacom 2013 112115 8 j. gubbi r. buyya s. marusic m. palaniswami internet thing iot vision architectural element direction generat comput syst 29 16451660 sep. 2013 9 gartner 2015 gartner 6.4 billion connected thing online http //www.gartner 2016. com/newsroom/id/3165317 10 2 2015 gm prognostic 4g acquisition cloud online http //articles.sae.org/14101/ 11 g. a. susto a. beghi c. de luca predictive maintenance epitaxy process based ltering prediction technique trans semicond manuf 25 4 638649 nov. 2012 12 y. g. li p. nilkitsaranont gas turbine performance prognostic condition-based maintenance appl energy 86 21522161 oct. 2009 13 j. lee f. wu w. zhao m. ghaffari l. liao d. siegel prognostic health rotary machinery systemsreviews mech syst signal process 42 314334 jan. 2014 14 d. a. tobon-mejia k. medjaher n. zerhouni g. tripot data- driven failure prognostic method based mixture gaussians hidden markov trans rel 61 2 491503 jun 2012 15 s. yamijala s. d. guikema k. brumbelow statistical water distribution pipe break rel eng syst 94 282293 feb. 2009 16 d. galar al hybrid phm deployment technique railway proc 10th int conf condition mach failure prevention technol 2013 10471056 17 n. montgomery d. banjevic a. k. s. jardine minor maintenance action diagnostic prognostic cbm j. intell manuf 23 2 303311 2012 18 a. k. s. jardine d. lin d. banjevic review machinery diagnostics prognostic implementing condition-based maintenance mech syst signal process 20 14831510 oct. 2006 19 j. gu m. pecht prognostic health physics- of-failure proc annu rel maintainab symp 2008 481487 20 d. rizopoulos joint longitudinal time-to-event r. boca raton fl usa crc press 2012 21 x.-s. si w. wang c.-h. hu d.-h. zhou remaining life estimationa review statistical driven approach eur j. oper 213 114 aug. 2011 22 a. k. s. jardine p. m. anderson d. s. mann weibull proportional hazard aircraft marine engine failure rel eng int 3 2 7782 1987 23 a. ghasemi m. r. hodkiewicz estimating residual life study rail wagon bearing trans rel 61 3 719730 sep. 2012 24 p. j. vlok j. l. coetzee d. banjevic a. k. s. jardine v. makis optimal component replacement decision vibration proportional-hazards j. oper soc 53 2 193202 2002 25 d. lin d. banjevic a. k. s. jardine compo- nents proportional hazard condition- based maintenance j. oper soc 57 8 910919 2006. d. kwon al iot-based phm industrial 26 a. heng a. c. c. tan j. mathew n. montgomery d. banjevic a. k. s. jardine intelligent condition-based prediction machinery reliability mech syst signal process 23 5 16001614 2009 27 z. tian l. wong n. safaei neural network approach remain- ing life prediction utilizing failure suspension history mech syst signal process 24 15421555 jul 2010 28 d. tobon-mejia k. medjaher n. zerhouni cnc machine wear diagnostic prognostic dynamic bayesian network mech syst signal process 28 167182 apr 2012 29 o. f. eker f. camci a. guclu h. yilboga m. sevkli s. baskan simple state-based prognostic railway turnout trans ind electron 58 5 17181726 2011 30 j. z. sikorska m. hodkiewicz l. prognostic modelling option remaining life estimation industry mech syst signal process 25 18031836 jul 2011 31 m. pecht t. shibutani m. kang m. hodkiewicz e. cripps fusion prognostics-based qualication microelec- tronic product microelectron rel published 32 j. fan c. qian x. fan g. zhang m. pecht in-situ anomaly detection led package mahalanobis distance approach presented 1st int conf rel syst eng icrse beijing china 2015 16 33 s. kumar n. m. vichare e. dolev m. pecht health indicator method degradation detection electronic product microelectron rel 52 439445 feb. 2012 34 s. cheng m. pecht cross-validation parameter selection sequential ratio expert syst appl 39 84678473 jul 2012 35 q. jiang x. yan w. zhao fault detection diagnosis chemical process sensitive component ind eng chem 52 4 16351644 2013 36 j. qu support-vector-machine-based diagnostics prognostic rotating ph.d. dissertation mech eng univ alberta edmonton ab canada 2011 37 m. e. tipping sparse bayesian learning relevance vector machine j. mach learn 1 211244 jun 2001 38 w. wang m. carr stochastic ltering based driven approach residual life prediction condition based maintenance decision making support presented prognostic syst health manage conf 2010 110 39 p. baraldi f. mangili e. zio kalman lter-based ensemble approach turbine creep prognostic trans rel 61 4 966977 dec. 2012 40 j. fan k.-c. yung m. pecht predicting long-term lumen mainte- nance life led light source particle lter-based prognostic approach expert syst appl 42 24112420 apr 2015 41 s. cheng m. pecht fusion prognostic method remaining life prediction electronic product presented int conf autom sci eng aug. 2009 102107 42 j. liu w. wang f. y. b. yang c. s. yang data-model-fusion prognostic framework dynamic state forecasting eng appl artif intell 25 814823 jun 2012 43 j. xu l. xu health based fusion prognostic avionics j. syst eng electron 22 3 428436 jun 2011 44 a. s. s. vasan m. pecht investigation stochastic differential mod- el recursive nonlinear ltering approach fusion-prognostics presented proc annu conf prognostic health manage soc 2011 13 45 m. chookah m. nuhi m. modarres probabilistic physics-of- failure prognostic health subject pit- ting corrosion-fatigue rel eng syst 96 16011610 dec. 2011 46 m. e. porter j. e. heppelmann smart connected product transforming company harvard bus rev 93 97114 oct. 2015 47 m. w. van alstyne g. g. parker s. p. choudary pipeline plat- form rule strategy proc harvard bus rev 2016 5462 48 r. drath a. horch industrie 4.0 hit hype industry forum ind electron mag 8 2 5658 jun 2014 3668 volume 4 2016 d. kwon al iot-based phm industrial 49 j. lee b. bagheri h.-a kao cyber-physical architec- ture industry 4.0-based manufacturing manuf lett 3 1823 jan. 2015 50 2011 ec totally tia portal automation control online http //www.controleng.com/single-article/ec-totally-integrated-automation- portal-tia-portal-automation-software integrated automation portal 51 j. bruner industrial internet machine talking sebastopol usa oreilly medium inc. 2013 52 f. frber al sap hana databasean eng bull 35 1 2833 apr 2012 53 nec 25 2016 nec help toshiba machine enhance trouble- free operation detecting malfunction machine occur http //www.nec.com/en/case/toshiba- machine/index.html online 54 nidec jun 10 2016 nidec ibm japan jointly develop http //www.nidec.com/en- online iot na/product/news/2015/news0622-01/ 55 accenture apr 28 2015 hyundai heavy industry accenture build connected smart ship online http //newsroom accenture.com/news/hyundai-heavy-industries-and-accenture-to-build- connected-smart-ships.htm 56 r. berger 2011 growth strategy global construction equip- ment marketcapturing growth market bric online http //www.rolandberger.com/media/pdf/roland_berger_ construction_equipment_market_20111007.pdf 57 komatsu apr 28 2015 komtrax online http //www.komatsu.com/companyinfo/prole/product_supports/ 58 ge-power apr 28 2016 remote diagnostics online http //powergen.gepower.com/content/dam/gepower-pgdp/ global/en_us/documents/service/gas 20turbine 20services/monitoring- diagnostics-fact-sheet.pdf 59 n. water engine health proc ingenia 2009 3742 60 key energy statistic int energy agency paris france nov. 2015 61 d. s. markovic d. zivkovic i. branovic r. popovic d. cvetkovic smart power grid cloud computing renew sustain energy rev 24 566577 aug. 2013 62 w. zhixin j. chuanwen a. qian w. chengmin key offshore wind farm development china renew sustain energy rev 13 1 216222 jan. 2009 63 g. cro industry trend maintenance cost presented iata 3rd airline cost conf geneva switzerland aug. 2015 64 z. williams benet ivhm analytical approach presented aerosp conf sky mt usa mar 2006 65 d. e. paris l. c. trevino m. d. watson framework integration ivhm intelligent integration vehicle presented aerosp conf sky mt usa mar 2005 38433852 66 j. eriksson l. girod b. hull r. newton s. madden h. balakrishnan pothole patrol mobile sensor network road surface presented 6th annu int conf mobile syst appl service mobisys breckenridge usa 2008 67 h. schaffers n. komninos m. pallot b. trousse m. nilsson a. oliveira smart city internet cooperation framework innovation lecture note science 6656 2011 431446 68 j. m. hernndez-muoz al smart city forefront internet lecture note science 6656 2011 431- 446 69 l. d. burn sustainable mobility vision transport nature 497 181182 2013 70 a. j. j. valera m. a. zamora a. f. g. skarmeta based internet thing support mobility security medi- cal environment presented 7th consum commun netw conf ccnc la vega nv usa jan. 2010 15 71 a. dohr r. modre-opsrian m. drobics d. hayn g. schreier internet thing ambient assisted living presented 7th int conf inf technol generat la vega nv usa apr 2010 804809 72 y. ning p. sandborn m. pecht prognostics-based product war- ranties proc conf prognostic health manage phm jun 2013 18 73 2015 eu-sparcthe partnership robotics europe online http //sparc-robotics.eu/ 74 2015 robot strategyjapans robot strategyvision strat- egy action online http //www.meti.go.jp/english/ press/2015/pdf/0123_01b.pdf 75 2016 manufacturing automation leader collaborate optimizing industrial production analytics online http //www fanucamerica.com/cmsmedia/pr/fanuc-field-announcement_79.pdf 76 a. mcafee e. brynjolfsson revolution harvard bus rev 90 10 6168 2012 77 t. h. davenport d. j. patil scientist sexiest job 21st century harvard bus rev 90 10 7076 2012 78 d. barton d. court advanced analytics harvard bus rev 90 10 7983 2012 79 s. boyd n. parikh e. chu b. peleato j. eckstein distributed optimization statistical learning alternating direction method multiplier trend mach learn 3 1 1122 2011 80 t. n. sainath a.-r. mohamed b. kingsbury b. ramabhadran deep convolutional neural network lvcsr presented 2013 int conf acoust speech signal process vancouver bc canada 2013 86148618 81 s. k. kim p. l. mcmahon k. olukotun large-scale restricted boltzmann machine proc 18th annu int symp field-program custom comput mach fccm 2010 201208 82 j. zheng f. shen h. fan j. zhao online incremental learn- ing support vector machine large-scale neural comput appl 22 5 10231035 apr 2013 83 c.-y lin c.-h. tsai c.-p. lee c.-j lin large-scale logistic regression linear support vector machine spark proc int conf oct. 2014 519528 84 l. deng d. yu deep learning method trend signal process 7 34 197387 jun 2014 85 g. s. babu p. zhao x.-l. li deep convolutional neural network based regression approach estimation remaining life lecture note science 9642 2016 214228 86 f. jia y. lei j. lin x. zhou n. lu deep neural network promising fault characteristic mining intelligent diagnosis rotating machinery massive mech syst signal process 72 303315 2016 87 p. tamilselvan p. wang failure diagnosis deep belief learn- ing based health state rel eng syst 115 124135 jul 2013 88 s. cheng m. h. azarian m. pecht sensor prognostic health sensor 10 6 57745797 2010 89 2015 ieee-sa internet thing iot ecosystem study online http //standards.ieee.org/innovate/iot/study.html 90 standard architectural framework internet thing iot standard p2413 2016 91 s. torhorst n. hlzel v. gollnick evaluation potential prognostic health civil aircraft proc eur conf prognostic health manage soc nantes france 2014 15 92 l. j. bond p. ramuhalli m. s. tawk n. j. lybeck prognostic life 60 year nuclear power plant proc prognostic health manage phm montreal qc canada jun 2011 17 93 14 2016 industrial internet power 1 online http //www.ge.com/digital/blog/industrial-internet-visual-journey 94 m. gorlatova j. sarik g. grebla m. cong i. kymissis g. zussman mover shaker kinetic energy harvesting internet thing j. sel area commun 33 8 16241639 aug. 2015 95 o. vermesan al internet thing strategic roadmap proc internet things-global technol soc trend 2011 952 96 d. bollier c. m. firestone promise peril washington dc usa aspen society program 2010 97 j. sikorska m. r. hodkiewicz a. de cruz l. astfalck a. keating collaborative library prognostic presented 3rd eur conf prognostic health manage soc bilbao spain 2016 98 k. j. boudreau k. r. lakhani crowd innovation partner harvard bus rev 91 4 6069 2013 99 m. j. covington r. carskadden threat implication internet thing proc 5th int conf cyber conict cycon jun 2013 112. volume 4 2016 3669 daeil kwon m07 received bache- lors mechanical postech south korea ph.d. mechanical maryland college park usa joined ulsan national science technol- ogy unist wa senior reliability engineer intel corporation chandler az usa developed condition-based reliability assessing package sys- tem reliability performance currently assistant professor human unist ulsan south korea interest focused prognostic health electronics reliability modeling condition characterization melinda r. hodkiewicz received b.a hons metallurgy science material oxford 1985 ph.d. mechanical western australia 2004. currently bhp billiton fellow remote operation western australia uwa wa industry operation maintenance role currently lead health laboratory uwa involved area asset health maintenance 2012 2015 wa member pc251 iso55000 asset standard committee chartered engineer u.k. member material mineral mining iom3 asset council jiajie fan s12m14 received b.s inorganic material science engineer- ing nanjing nanjing china 2006 m.s mate- rial science east china science shanghai china 2009 ph.d. industrial hong kong polytechnic hong kong 2014. currently assistant professor college mechanical electrical hohai changzhou china post-doctoral fellow delft beijing centre netherlands registered certied sigma green belt hong kong society main interest include lifetime estimation led failure diagnosis prognosis electric device prognostic health manage- ment led lighting advanced electronic packaging assembly d. kwon al iot-based phm industrial received shibutani tadahiro ph.d. mechanical kyoto kyoto japan 2000. wa visiting scholar center advanced life cycle maryland 2007. currently associate professor center creation symbiosis society yokohama national yokohama japan interest include physic failure health physic michael g. pecht m83sm90f92 received b.s m.s electrical m.s ph.d. mechanic wisconsin madison world-renowned expert strategic planning assessment currently professional engineer asme fellow sae fellow imaps fellow editor-in-chief access served chief editor transaction reliability year chief editor microelectronics reliability 16 year served three study u.s. congressional investigation automotive expert fda founder director center advanced life cycle calce maryland funded 150 leading electronics company 6m/year received nsf innovation 2009 national defense industry association currently chair professor mechanical professor applied mathematics maryland 2015 received component packaging manufacturing visionary leadership devel- opment physics-of-failure-based prognostics-based approach electronic packaging reliability received distinguished chinese academy science president international fellowship 2013 received wisconsin-madisons college distinguished achievement 2011 received maryland innovation concept 2010 received exceptional achievement innovation area prognostic health 2008 wa awarded highest reliability honor reliability society lifetime achievement 3670 volume 4 2016 review sheet plagiarism 19-r1.docx originality 22 similarity 15 15 internet source publication paper primary source www.phmsociety.org internet source kwon daeil melinda r. hodkiewicz jiajie fan tadahiro shibutani michael g. pecht `` iot- based prognostic health industrial '' access 2016. publication emmanuel `` parallel approach based medical image retrieval '' journal science 2010. publication www.ijera.com internet source www.win.tue.nl internet source www.eas.asu.edu internet source ranganath kothamasu `` health 1 2 3 4 5 6 7 4 4 4 3 2 1 prognostic review current paradigm practice '' international journal advanced manufacturing 07/2006 publication mydotnetcoolfaqs.blogspot.com internet source www.genrica.com internet source www.webcourses.ir internet source daniel zurita miguel delgado jesus a. carino juan a. ortega guy clerc `` industrial time series modelling neo-fuzzy neuron '' access 2016 publication elena aurel railean `` digital textbook '' springer nature 2017 publication amit.myktm.com internet source www.asfglobal.com internet source docs.hp.com internet source 1 1 1 1 1 1 1 1 1 8 9 10 11 12 13 14 15 16 17 18 19 20 21 dspace.lib.cranfield.ac.uk internet source ifip advance 2015. publication docplayer.net internet source textarchive.ru internet source ru.scribd.com internet source dextercattleamericanlegacy.info internet source 1 1 1 1 1 1 exclude quote exclude bibliography exclude match 1 word", "keywords": ["advanced life", "advanced life cycle", "al iot", "al iotbased", "al iotbased phm", "analytical engine", "analytics machine", "anomaly detection", "apache spark", "asset health", "banjevic jardine", "base paper", "bus rev", "business opportunity", "center advanced", "center advanced life", "challenge iotbased", "challenge iotbased phm", "cloud computing", "conditionbased maintenance", "consequence failure", "convolutional neural", "critical failure", "datadriven approach", "deep learning", "deep learning method", "deng yu", "diagnosis prognosis", "diagnostic prognostic", "energy harvesting", "eng syst", "environmental condition", "examination seat", "failure mechanism", "failure mode", "failure mode mechanism", "fusion phm", "fusion phm approach", "generated sensor", "harvard bus", "harvard bus rev", "health industrial", "health manufacturing", "health manufacturing intelligence", "health phm", "heavy industry", "hong kong", "ii iii", "ind electron", "industrial internet", "int conf", "intelligent manufacturing", "intelligent manufacturing phm", "internet source", "internet thing", "iot internet", "iot internet thing", "iot platform", "iotbased phm", "iotbased phm industrial", "jiajie fan", "kaa server", "kwon al", "kwon al iotbased", "learning approach", "learning method", "lee bagheri", "licensing entitlement", "life asset", "life cycle", "life prediction", "lin banjevic", "loading condition", "machine health", "machine learning", "machine learning approach", "machine machine", "maintenance repair", "manuf lett", "manufacturing industry", "manufacturing intelligence", "manufacturing phm", "manufacturing process", "mech syst", "mech syst signal", "mechanical electrical", "melinda hodkiewicz", "michael pecht", "mode mechanism", "multiclass classification", "multiple regression", "national yokohama", "neural network", "parth guntoorkar", "performance life", "performance life asset", "performance machine", "phm approach", "phm industrial", "pof approach", "pof failure", "potential failure", "power plant", "prognostic health", "prognostic health industrial", "prognostic health manufacturing", "prognostic health phm", "prognostic method", "pune iot", "rel eng", "reliability asset", "reliance historical", "remaining life", "remaining performance", "remaining performance life", "rul estimation", "sensor sensor", "series forecasting", "shopfloor manager", "shopfloor worker", "signal process", "sikorska hodkiewicz", "smart car", "smart city", "smart ship", "support vector", "support vector machine", "syst appl", "syst signal", "syst signal process", "tag sensor", "time series", "time series forecasting", "transportation logistics", "vector machine", "visualization dashboard", "warranty service", "western australia", "wind farm", "yash gandhi", "yokohama national", "yokohama national yokohama"], "libraries": [], "languages": ["python", "c++", "curl", "revolution", "basic", "small", "java"], "frameworks": ["flask"], "dbs": ["mongodb"]}, "./reports/20_final_report.pdf": {"title": "sentimental analysis on news articles sentimental analysis on news articles        submitted to savitribai phule pune university, pune submitted to savitribai phule pune university, pune", "filename": "./reports/20_final_report.pdf", "data": "sentimental news article sentimental news article fulfilment fulfilment fulfilment nalin vat nalin vat shubham maske shubham maske aditya sable aditya sable kulwal kulwal b120058588 b120058580 b120058613 b120058576 guidance guidance mr. n.v.buradkar sr. 27 sr. 27 pune-satara road satara road 43 2016-2017 sentimental news article nalin vat shubham maske aditya sable kulwal b120058588 b120058580 b120058613 b120058576 bonafide prof. n.v.buradkar fulfilment mrs. s. c. dharmadhikari earlier diploma mr. n.v.buradkar mr. shyam deshmukh dr. p. t. cordinator examiner completion acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting great pleasure satisfaction presenting sentimental news article express sincere gratitude dr. s. c. dharmadhikari invaluable support express deep sense gratitude prof. n.v.buradkar constant support encouragement express sincere gratitude coordinator prof. s. b. deshmukh acknowledge valuable criticism well timely appreciation humbling experience express sincere gratitude reviewer prof. v.jaiswal prof. v.b.bhosle invaluable support guidance sincerely making enriching experience nalin vat shubham maske aditya sable kulwal b120058588 b120058580 b120058613 b120058576 sentimental news article topic synopsis title option sponsorship background relevance undertaken 2.3.1 2.3.2 background 3.1.1 existing 3.2.1 proposed specification definition sr. 1.1 1.2 1.3 1.4 1.5 1.6 1.7 2.1 2.2 2.3 3.1 4.1 4.2 1 2 3 4. 1 2 2 2 2 2 2 3 4 5 5 6 6 6 7 8 8 8 10 11 11 2016-17 sentimental news article outcome area client side 4.9.1 4.9.2 execution 4.9.3 4.9.4 4.9.5 4.3 4.4 4.5 4.6 4.7 4.8 4.9 4.10 5.1 5.2 4.10.1 4.10.2 architectural database 5.2.1 profiling parameter 5.3 component 5.3.1 acquisition 5.3.2 processing 5.3.3 cluster mapping 5.3.4 hybrid recommendation 5.3.5 front 5.4 usage scenario 5.4.1 profile 5.4.2 5.4.3 5.5 description 5 11 11 11 12 12 12 12 13 14 14 14 14 2016-17 sentimental news article 5.5.1 object 5.5.2 class 5.6 description 5.61 5.6.2 description deign constraint 6.2.1 6.2.2 methodologies/algorithm evaluation screenshots item procedure deployment maintenance installation un-installation help deployment 5.7 5.8 6 7 8 9 6.1 6.2 6.3 7.1 7.2 7.3 7.4 7.5 8.1 8.2 8.3 2016-17 sentimental news article 9.1 2016-17 sentimental news article title 5.1 5.2 5.3 5.1 5.2 7.3 architectural class screenshots 2016-17 sentimental news article title 4.1 4.2 5.1 cluster configuration 2016-17 sentimental news article abbreviation cocomo icp constructive cost mode ideal customer profiling 2016-17 sentimental news article newspaper article influential building score indicates positive negative opinion single phrase extracted article platform doe sentimental single phrase search orientation extracted phrase finally extract significance relevence score news article text mining referred text mining refers extracting maze form article extracted pattern trend statistical pattern keywords text mining profiling profiling behavioral tracking 2016-17 sentimental news article 1 synopsis 2016-17 sentimental news article 1.1 title sentimental news article 1.2 option industry sponsored 1.3 prof. n.v.buradkar 1.4 sponsorship 1.5 create web-tool classifying article negative positive neutral category extract latest social tweet twitter sentimental 1.6 newspaper article influential building score indicates positive negative opinion single phrase extracted article platform doe sentimental single phrase search orientation extracted phrase finally extract significance relevence score news article text mining referred text mining refers extracting maze form article extracted pattern trend statistical pattern 1.7 build platform going store news article category 2016-17 sentimental news article extract frequent article determine positivity negativity article help sentimental review reader text mining going rate article scale 10. 2016-17 sentimental news article 2 2016-17 sentimental news article news positive negative rare neutral full comprehension natural language text remains well power machine statistical simple sentiment meaningful sense sentiment news article built extraction phrase extract sentiment phrase sentiment change change word aspect sentiment 1. algorithmic construction sentiment dictionary sentiment based detecting adjective positive negative meaning method extract small candidate seed positive negative word word net 2. sentiment formulation storing seedlist adjective sentiment sentiment formulation technique po tagging finding sentiment phrase article 3. evaluation significance provide statistical formulation method finding relevance score phrase storing seed 2.1 background artificial intelligence interested field machine learning behavioral tracking day internet adapting machine learning behavioral tracking understand searching behavior led interest field opportunity explore artificial intelligence find answer question company sentimental customizing service customer order increase revenue intent behavioral tracking track customer internet build profile characteristic interest 2016-17 sentimental news article age gender living standard customization provide customer relevant interest help appropriate decision 2.2 relevance current method requires manual intelligence finding sentiment article blog based sentiment classification focused finding real sentiment article existing allow upload article focusing extracting rating text review existing limited term field userbase undertaken 2.3 2.3.1 develop break sentence respected article text help pos-tagging find frequent respected article provide respective orientation going relevence score article 2.3.2 existing n't find rating article .our provide platform account review article .the platform provide facility text rating extracted text review 2016-17 sentimental news article 3 background 2016-17 sentimental news article 3.1 3.1.1 existing current solution suffer existing doe relevance score sentiment respected article rating specific article 3.1.1 existing sentiment constructed withdraw sentiment identify sentence phrase sentiment based finding placement sentiment finding remaining sentiment 3.1.2 sentiment lexicon creation sentiment analysisid based ability finfd sentiment phrase orientation dimension rely identification news sphere separate standard sentiment 2016-17 sentimental news article 3.1.2 proposed build platform store news article specific field help sentimental extract frequent judge article positive negative neutral rate article help text plateform article category field develop break sentence respected article text help pos-tagging find frequent respected article provide respective orientation going relevence score article existing n't find rating article .our provide platform account review article .the platform provide facility text rating extracted text review 2016-17 sentimental news article 4 specification 2016-17 sentimental news article 4.1 definition build platform store news article specific field help sentimental extract frequent judge article positive negative neutral rate article help text plateform article category field 4.2 going build platform going store news article category help sentimental extract frequent article determine positivity negativity article going review reader text mining going rate article scale 10 4.3 outcome article classified positive negative neutral tweet 4.4 reader special genre article writer kind category 4.5 sr. parameter minimum 1 2 3. cpu speed ram storage space 1.8 ghz 1 gb 1 gb 4.6 resourcs sr. parameter minimum 1. operating linux ubuntu 14.04 higher 2016-17 sentimental news article programming language python ide database pyhon django mongodb 2 3 4 4.7 area category recommendation sub-category web based online 4.8 client side window xp sp2+ mac 10.8+ ubuntu 12.04+ steamos+ 32 bit/64-bit operating web browser firefox chrome 4.9 4.9.1 4.9.1.1 major function major function function recommendation function function 4.9.1.2 constraint requires waterfall requires linear approach provided waterfall event gathering designing implemented deployment 2016-17 sentimental news article maintenance 4.9.2 execution a. identification searching identifying finalizing b. conceptualization concept building studied level designing stage preliminary presentation clarification c. detailed stage low-level designing designed better visualization d. coding actual start stage coding coding 10 12 week e. unit initially tested number gui scenario involving tested separately f. integration integrated integrated component performed includes evaluation g. product wa tested context entire window os platform performance monitored h. documentation detailed document prepared stage gathering initial wa a. understanding definition b. understanding current scenario enterprise c. gathering d. gathering e. preparing preliminary workflow f. deciding execution g. execution actual 2016-17 sentimental news article 4.9.3 estimation technique three point based estimation based estimation process based estimation applied 4.9.3.1 based estimation provide insight estimation level structural hierarchy established average length determined defined rough considered characteristic established empirical establish loc historical compute effort based estimation decomposition wa performed major identified total loc 10 000 4.9.3.2 process based estimation common technique estimating base process process decomposed small effort accomplish estimated problem-based technique process based estimation delineation function series framework performed function function process melded planner effort e.g person-months accomplish process function constitute central matrix process estimation average labor rate applied effort estimated process labor rate vary cost effort function computed step process based estimation 2016-17 sentimental news article decomposition wa performed major function identified function 1. input admin database mongodb 2. article category 4.9.3.3. final time reconciliation 3.5 month 4.9.4 4.9.4.1 decomposition critical determined 6 leading development breakdown major t1 initial a. setting apache server python mongodb database b. checking connection t2 database schema creation store a. designing database schema b. implementing database schema t3 creating front ui input a. studying front creation web b. creating ui gathering registration form form c. connecting front t4 input gathering property a. developing code collect article tweet t5 developing search property 2016-17 sentimental news article a. providing filter search b. fetching category based filtering t6 selecting parameter recommendation a. selecting b. checking validity parameter t7 developing code recommendation a. writing machine learning article c. designing implementing schema random forest classifier t8 developing code fetch property specific c. displaying webpage t9 a. checking validity b. checking recommendation profile c. throughput web d. integration fig 5.1 network 2016-17 sentimental news article 4.9.4.2 sr softwares/technologies period week 1 2. initial apache2 php mysql database schema creation mongodb store 3. creating front input html cs javascript 4 5 6 7. input gathering developing search html cs php selecting parameter developing code python php mysql recommendation 8. developing code fetch html javascript property 9. 4.9.5 1 1 2 2 2 2 3 1 3 2016-17 sentimental news article fig 6.1 4.10 managment 4.10.1 failing equipment delay delivery reliable continuous change standard meet expectation 4.10.2 equipment failure delay delivery reliable continuous change standard meet expectation 65 35 20 25 15 2 2 2 3 2 2016-17 sentimental news article 2016-17 sentimental news article 5 2016-17 sentimental news article 5.1 architectural output web composition sentiment composition displayed executes summarization step mentioned 1 mining article breaking small text pushing sentence database 2 recognizing opinion sentence text judging judgement sentence positive negative 3 reviewing 5.2 database article tweet stored mongodb database collection database description 5.3 component 5.3.1 acquisition asked enter preference based preference clustered 5.3.2 processing involves clustering clustered 5.3.2 cluster mapping cluster mapped property cluster find matching property cluster comparing centroid cluster centroid property cluster property cluster arranged decreasing order similarity cluster 2016-17 sentimental news article 5.3.4 hybrid recommendation article displayed combining admin behavioral tracking 5.3.5 front property screen property best suited customer/user based preference 5.4 usage scenario 5.4.1 profile 1. article writer .writers write article specific topic 2. reader person read article category 3. admin person article validating 2016-17 sentimental news article 5.4.3 5.5 description 5.5.1 object image label stored dierent pickle le csv le sample eld lename image lename training le train.zip title title painting string style style painting string 5.5.2 class 2016-17 sentimental news article 5.6 description 5.6.1 5.6.1.1 2016-17 sentimental news article .5.6.1.2 seller 5.6.1.3 admin 5.6.2 5.6.2.1 2016-17 sentimental news article fig 5.7. buyer 2016-17 sentimental news article 5.7 description web based allow top article news.the developed html cs dependent language 5.8 constraint constraint people provide asked limit capability good recommendation preference change time time dont update making recommendation le accurate 2016-17 sentimental news article 6 2016-17 sentimental news article 6.1 output web composition sentiment composition displayed executes summarization step mentioned 1 mining article breaking small text pushing sentence database 2 recognizing opinion sentence text judging judgement sentence positive negative 3 reviewing 6.2 6.2.1 django free source administration python mongodb mongodbi mongodb1i extension mongodb improved relational database driver python programming language provide mongodb database mongodb connector/python self-contained python driver communicating mongodb 6.2.2 front django mongodb programming python 6.3 6.3.1 random forest classifier 2016-17 sentimental news article random forest random decision forest 1 2 ensemble learning method classification regression operate constructing multitude decision tree training time outputting class mode class classification prediction regression individual tree random decision forest correct decision tree habit overfitting training 3 587588 random decision forest wa created tin kam ho random subspace method 2 ho 's formulation implement '' stochastic discrimination '' approach classification proposed eugene kleinberg 4 5 6 extension wa developed leo breiman adele cutler 8 '' random forest '' trademark extension combine breiman 's `` bagging '' random selection introduced ho independently amit geman order construct collection decision tree controlled variance clustering property string1= '' select propertyextra order asc '' import mysql.connector mysql.connector import error sklearn.cluster import kmeans import numpy np def connect `` '' '' connect mysql database `` '' '' conn mysql.connector.connect host='localhost database='property4u user='root password='mysql cursor conn.cursor cursor.execute `` select profession family_size lifestyle vehicle surrounding propertyextra order asc '' row cursor.fetchall print 'total row cursor.rowcount row row print row kmeans kmeans n_clusters=15 random_state=0 .fit row var kmeans.labels_ cursor.execute string1 rows2 cursor.fetchall print rows2 print row var2 kmeans.cluster_centers_ print var2 range 0 5 print var 2016-17 sentimental news article print var2 print var2 query `` update propertyextra cluster= int var i+=1 cursor.execute query conn.commit string1= '' select cluster propertyextra '' cursor.execute string1 rows2 cursor.fetchall print rows2 i=0 j=0 row rows2 row 0 row 1 row 2 row 3 row 4 query `` update propertyextra cluster= profession= family_size= lifestyle= vehicle= surrounding= '' id= '' 4 profession= family_size= lifestyle= vehicle= surroundin g= value= '' float float float float float error print finally conn.close range 0 15 a=var2 0 b=var2 1 c=var2 2 d=var2 3 e=var2 4 print var2 0 var2 1 var2 2 var2 3 var2 cursor.execute query conn.commit query `` update propertycluster 2016-17 sentimental news article __name__ == '__main__ connect clustering string1= '' select userextra order asc '' cursor.execute string1 rows2 cursor.fetchall print rows2 print row import mysql.connector mysql.connector import error sklearn.cluster import kmeans import numpy np def connect `` '' '' connect mysql database `` '' '' conn mysql.connector.connect host='localhost database='property4u user='root password='mysql cursor conn.cursor cursor.execute `` select profession family_size lifestyle vehicle surrounding userextra order asc '' row cursor.fetchall print 'total row cursor.rowcount row row print row kmeans kmeans n_clusters=15 random_state=0 .fit row var kmeans.labels_ query `` update propertyextra cluster= profession= family_size= lifestyle= vehicle= surrounding= '' var2 kmeans.cluster_centers_ print var2 i=0 j=0 row rows2 row 0 row 1 row 2 row 3 row 4 query `` update userextra cluster= id= '' int var print var 2016-17 sentimental news article query `` update usercluster a=var2 0 b=var2 1 c=var2 2 d=var2 3 e=var2 4 i+=1 cursor.execute query conn.commit range 0 15 string1= '' select cluster userextra '' cursor.execute string1 rows2 cursor.fetchall print rows2 profession= family_size= lifestyle= vehicle= surroundin g= value= '' float float float float float error print finally conn.close __name__ == '__main__ connect cursor.execute query conn.commit 2016-17 sentimental news article 7 evaluation 2016-17 sentimental news article 7.1 news positive negative rare neutral full comprehension natural language text remains well power machine statistical simple sentiment meaningful sense sentiment news article built extraction phrase extract sentiment phrase sentiment change change word aspect sentiment 7.2 screenshots 2016-17 sentimental news article 2016-17 sentimental news article 2016-17 sentimental news article 7.3 item applies well integration input output tested validity tested final tested 7.4 unit boundary function executed integration 7.4.1 unit unit focus verification effort smallest unit component occur running 2016-17 sentimental news article selected unit ensure detailed unit correctly implemented 7.4.2 integration integration systematic technique constructing time conducting uncover error associated combine major main tested involves basic procedure invocation execution 7.4.3 item pas /fail criterion unit level unit level satisfies condition completed function return expected output input boundary pass boundary condition input function tested validity integration level unit level completed including boundary condition gesture implemented valid performance display acceptable limit 7.4.4 suspension criterion failure occur outlier normal runtime condition halted development occur 2016-17 sentimental news article 7.5 procedure apart function major tested described unit applied integrated 7.5.1 unit 1 aim validate function input blank username password expected error actual error 2 aim verify search functionality article category expected article based parameter actual expected actual expected 7.5.2 integration 1 aim integrate admin website parameter search filter expected property matching provided filter actual expected 2 2016-17 sentimental news article aim integrate clustering mapping profile expected recommendation matching profile actual expected 7.5.3 black box black-box method examines functionality peering working typical black-box technique include decision all-pairs equivalence partitioning boundary causeeffect graph error guessing 7.5.4 white box white-box clear box glass box transparent box structural method working opposed functionality i.e black-box white-box perspective well programming skill white-box method level source code derived technique mentioned control branch 2016-17 sentimental news article coverage decision coverage modified condition/decision coverage prime path path 2016-17 sentimental news article 8 deployment maintenance 2016-17 sentimental news article 8.1 installation un-installation web site usage site simply site browser installation un-installation 8.2 help website require documentation help designed easily 2016-17 sentimental news article 9 2016-17 sentimental news article 9.1 storing article posted medium people import.io analyzing single article extracting frequent article based extracting sentiment article .after article stored database sentiment plateform rate article review .our text extract rating article 2016-17 sentimental news article 1. riccardo guidotti michele coscia dino pedreschi diego pennacchioli '' behavioral entropy profitability retail '' science advanced analytics dsaa 2015 36678 2015. international conference 1- 10 2015 2. short-term load forecasting profile identification customer segmentation based periodic time series transaction power volume 20 issue 3 aug. 2015 3. customer characterization option improving tariff offer transaction power volume 18 issue 1 feb 2013 4. third-party web tracking policy security privacy sp 2012 symposium security privacy volume 9 issue 3 2013 5. sparse real estate ranking online review offline moving behavior 14th international conference mining 6. x. li k. wang w. wang y. li `` multiple object tracking method kalman filter '' proc 2010 international conference automation 7. b. alexander smart meter real time pricing demand response program implication income electric customer 2012 8. g. chicco r. napoli f. piglione `` comparison clustering technique electricity customer classification '' trans power syst 21 2 933-940 2011ss 9. a. mutanen m. ruska s. repo p. jarventausta `` customer classification load profiling method distribution '' trans power del 26 3 1755-1763 jul 2011 10. y. zhang z. liu `` irregular behavior recognition based treading track '' proc int conf wavelet anal pattern recog 1322-1326 07 2014 2016-17", "keywords": ["aditya sable", "aditya sable kulwal", "article category", "based estimation", "behavioral tracking", "cursorexecute query", "cursorexecute query conncommit", "cursorfetchall print", "cursorfetchall print rows", "customer classification", "database schema", "decision forest", "decision tree", "developing code", "extract frequent", "html cs", "international conference", "mongodb database", "negative neutral", "news article", "php mysql", "positive negative", "positive negative neutral", "print rows", "print var", "process based", "process based estimation", "profession familysize", "property cluster", "propertyextra cluster", "python mongodb", "query conncommit", "random decision", "random decision forest", "random forest", "rate article", "respected article", "sable kulwal", "sentiment article", "sentiment phrase", "sentimental extract", "sentimental extract frequent", "sentimental news", "sentimental news article", "store news", "store news article", "string rows", "text mining", "trans power"], "libraries": ["numpy"], "languages": ["php", "html", "python", "cs", "sr", "javascript", "basic", "small"], "frameworks": ["django"], "dbs": ["mysql", "mongodb"]}, "./reports/21_final_report.pdf": {"title": "improving authentication using image-block  based graphical authentication system", "filename": "./reports/21_final_report.pdf", "data": "improving authentication image-block based graphical authentication b120058600 patni nidhi jitendra b120058619 saumya pandey ghongade kiran pramod b120058537 b120058545 jagtap malvika prakash guidance prof. r.b murumkar sr.no.27 satara road 411043 2016-2017 improving authentication image-block based graphical authentication patni nidhi jitendra b120058600 saumya pandey b120058619 ghongade kiran pramod b120058537 jagtap malvika prakash b120058545 bonafide prof. r.b.murumkar earlier diploma prof. r.b murumkar prof. s.b deshmukh co-ordinator dr. p.t examiner technolgy scanned camscanner scanned camscanner acknowledgement express profound prof. r. b. murumkar cheerful encouragement valuable suggestion support vital helped complete acknowledge appreciation co-ordinator prof. s. b. deshmukh acknowledgeable guidance key completion express sincere regard dr. a. bagade incharge h.o.d valuable suggestion help undertaken complete kind assistance encouragement forget express immense sense thankfulness dr. p. t. college extended co-operation needed express gratitude mr. kiran ratnakar company offered sponsorship synerzip infotech pvt monetarily helping difficulty providing support needed timely betterment.. express gratitude staff college completion help received staff express feeling gratitude number people instrumental supportive completion ghongade kiran pramod b120058537 jagtap malvika prakash b120058545 patni nidhi jitendra b120058600 saumya pandey b120058619 sr. topic ii abbreviation iii iv 1 1 1.1 background 2 1.2 relevance 3 1.3 undertaken 3 1.4 3 2 background review 4 2.1 existing 5 2.2 proposed 8 3 specification 11 3.1 definition 12 3.2 specification 13 3.2.1 14 3.2.2 14 3.2.3 context 14 3.2.4 major constraint 14 3.2.5 restriction constraint 14 3.2.6 class text 15 3.2.7 expected response 15 3.2.8 performance bound 15 3.2.9 cocomo 15 3.3 description 17 3.3.1 17 3.3.2 profile 18 3.4 18 4 19 4.1 20 4.2 description 21 4.2.1 description 21 4.2.2 object 21 4.2.3 22 4.2.4 class 23 4.3 24 4.3.1 description function 24 4.3.2 description 24 4.3.3 control description 24 4.4 behavioural description 26 4.4.1 description 26 4.4.2 state transition 27 4.4.3 control specification 28 5 29 5.1 description coding 30 5.2 discretization 31 5.3 axis generation 32 5.4 otp generation 32 5.5 matching 33 6 evaluation 34 6.1 experimental setup 35 6.1.2 evaluation 36 6.2 37 6.2.1 unit 37 7 41 7.1 42 7.2 43 44 45 base paper plagiarism review sheet 2.1 title comparison 9 10 3.1 coefficient semi detatched 15 title object class state transition 17 20 21 22 23 25 26 27 3.1 4.1 4.2 4.4 4.4 4.5 4.6 4.7 acronym time password rivest shameer adleman time-based time password point technique otp rsa totp fp authentication based textual password common now-a-days security textual password weak secured storing maintaining privacy attacker tend hack attack smudge attack random guess attack shoulder surfing attack tend memorizing issue password order overcome issue textual password developed graphical authentication visuals strongest memory image authentication graphical authentication drawback overhead associated time complexity le resistant shoulder surfing attack smudge attack le friendly developed graphical authentication securesignal liberty choose choice image image discretised number block block password choice registration phase time password generated mobile number authentication performed inputting time password phase axis comprises horizontal vertical scroll bar cover entire image chosen lead efficient resistance shoulder surfing attack scrolling bar help safeguard multiple camera-based attack evaluation led conclude securesignal best usability memorability keywords smudge attack random guess attack shoulder surfing otp improving authentication image-block based graphical authentication 1 2016-17 1 improving authentication image-block based graphical authentication organized 1.1 background existing i.e evolved 1.2 proposed 1.1 background time authentication designed textual password increase complexity protect brute force attack demanded textual password compromise number upper lower letter password strong memorizing recollecting password issue picture password account random guess attack easily prone account shoulder surfing attack entering password public common accessing account public attack common solution main textual password memorizing issue maintaining strong password overhead graphical password authentication scheme designed keeping mind issue textual password focusing fact visuals strongest memory compared verbal representation memorizing image better image-based password proved easy security issue solve making image setting password shoulder surfing attack threat security developing secure graphical authentication necessity image-based password shoulder surfing main working accessing account public threat security textual password graphical based password memorizing knowing visuals password tough secure handle account security necessity 2016-17 2 improving authentication image-block based graphical authentication 1.2 relevance graphical designed keeping mind concept secured respective drawback le user- friendly time complexity issue ultimately lead secured authentication prone vulnerable threat eaves dropping word book attack social 1.3 undertaken designed registration registration liberty choose choice image password step image appear discretized format select block password .in phase shoulder surfing attack overcome great extent ax comprises vertical horizontal bar cover image chosen matching time indicator mobile number ax matching ax doe click directly selected image-block password letting attacker password preventing shoulder surfing attack liberty choose choice image password random guess attack reduced great extent phase image chosen password appears shuffled format select distinct block image password choosing option shuffled image 1.4 relevance background background three dedicated specification evaluation 2016-17 3 improving authentication image-block based graphical authentication 2 2016-17 4 improving authentication image-block based graphical authentication background review organized 2.1 existing method authentication password graphical element proposed earlier includes resolving attack 2.2 proposed i.e graphical authentication image password efficient 2.1 existing textual password authentication method decade strong textual password hard memorize recollect .also textual password insecure difficulty maintaining strong .various graphical password authentication scheme developed address weakness associated textual password strongest memory image-based password vulnerable shoulder surfing attack authentication scheme designed overcome vulnerability compared paper base paper 2 saeed swaleha m. sarosh umar `` hybrid graphical authentication scheme '' 2015 control intelligent ccis 2015. proposed exploit novel concept dynamic graphic coloured object associated individual password portfolio image screen colour object change rapidly .the click instant desired colour associated portfolio image displayed .here authentication relies click operation click time instant desired colour appears screen 2016-17 5 improving authentication image-block based graphical authentication advantage 1 time factor aspect enhances security sacrificing usability aspect 2 resistant shoulder surfing disadvantage 1 time consuming 2 le friendly 3 anandhavalli d. 2014 image based authentication ensure security mail server advanced control computing icaccct 2014 international conference 555-558 authentication password color session password proposed consists 3 phase registration phase phase otp generation enter credential pass-color consists phase roatation color wheel comparing password stored registration matching password generates time password 4 bianchi andrea ian oakley hyoungshick kim `` passbyop bring picture securing graphical password '' transaction human-machine 46.3 2016 380-389. passbyop graphical password scheme form digital picture displayed physical owned device mobile phone image camera enter password selection live video token.highly distinctive extracted selection password 2016-17 6 improving authentication image-block based graphical authentication advantage 1 effective greater speed efficiency attained native 2 resistant shoulder surfing 5 choi dongmin dongkil tak ilyong chung `` secure password-based authentication method mobile banking service '' journal korea multimedia society 19.1 2016 41-50. genuine authentication box typing his/her password k- box assigns password matched his/her original password k-box operated pushing random string button password his/her password desire password authentication service robust attack his/her password enters random string button registration process randomly changed password robust remembers changed password k-box advantage 1 friendly menu changing color 2 proposed method convenient typing correcting typographical error color blind 2016-17 7 improving authentication image-block based graphical authentication 2.2 proposed authentication area focus textual based password implementing authentication graphical password based authentication image-block password text include regular registration phase image password text expected resolve attack shoulder surfing guessing smudge attack one-time indicator password saved encrypted format 2016-17 8 improving authentication image-block based graphical authentication sr. parameter pas matrix hybrid graphical k-box byop 1 friendly friendly hybrid le friendly 2 security average level security security compared method friendly rest le secured method mail server friendly le friendly hybrid level security level security 3 4 5 time requires le time hybrid time consuming requires le time comparativ ely time consuming implementati easy implement hard implement moderate ly difficult hard implement hacker point view moderately difficult hack co-ordinate easy hack level authenticati moderate ly difficult hack tracking keyboard password generatio average level security hacked easily 6 overhead aligning password le overhead order image selection memorized overhead mac address device overhead image processing histogram method overhead depends behavior complex impleme nt moderat ely hacked simple biometric behavior observe behavior biometric techniqu overhea 2016-17 9 improving authentication image-block based graphical authentication 7 complexity le complex understanda ble complex pas matrix easy understand 8 cost cost affordable cost affordable 2.1 comparison le complex level complexity level complexi ty cost affordabl cost cost 2016-17 10 improving authentication image-block based graphical authentication 3 __ 2016-17 11 improving authentication image-block based graphical authentication specification ________________________________________________________ organized 3.1 state exact 3.1 definition increasing amount mobile device web service access account send confidential business email upload photo album cloud remit money e-bank account anytime logging service public expose password unknown party un-consciously people malicious intent watch authentication procedure omnipresent video camera surveillance equipment reflected image window shoulder surfing attack gained attention decade address 1 perform authentication public shoulder surfing attack alleviated 2 increase password space traditional pin 3 efficiently search exact pass- word object authentication phase 4 requiring memorize extra perform extra computation authentication 5 limited usability authentication scheme applied device 2016-17 12 improving authentication image-block based graphical authentication 3.2 specification organized 4.1 basic i.e context measure constraint 4.2 usage scenario i.e profile use-case special consideration 4.3 description includes object class 4.4 description includes description function control 4.5 behavioral description includes behavior state transition control specification 4.6 restriction constraint 4.7 validation criterion include class expected response 4.8 describes 3.2.1 main improve authentication graphical password include providing better easy authentication overcome drawback graphical password resolve issue 1 perform authentication public shoulder surfing attack alleviated 2 increase password space traditional pin 3 efficiently search exact password object authentication phase 4 requiring memorize extra perform extra computation authentication 5 limited usability authentication scheme applied device 3.2.2 2016-17 13 improving authentication image-block based graphical authentication protects victim shoulder surfing attack selects image block image password indicator randomly generated pass-image useless session terminates indicator better security shoulder surfing attack rotated image screen dynamic pointer point position password clicking password object directly 3.2.3 context completion deployed graphical authentication replacing textual password based authentication deployed multiple online website 3.2.4 major constraint limit creation multiple account i.e includes single account single authenticated enter graphical authentication 3.2.5 restriction constraint restriction designed single individual implies create account single difficult understand attempt password space limited designed constraint uploaded image specific size resizing consume additional time 2016-17 14 improving authentication image-block based graphical authentication 3.2.6 class conducted listed including stage study authentication till performed 1 random guessing attack 2 shoulder surfing attack 3 smudge attack 3.2.7 expected response experimental log average 1.64 trial total accuracy trial 93.33 week registration 3.2.8 performance bound special performance secure resist brute force attack random guessing attack .the proposed vulnerable random guessing attack hot spot analyzing 3.2.9 cocomo cocomo stand constructive cost cost effort complete depending calculated number person complete semi- detached kilo code 8.5 semi- detached co-efficient ab co-efficient bb co-efficient cb co-efficient db semi-detached 3.0 1.12 2.5 0.35 3.1 co-efficient semi detached 2016-17 15 improving authentication image-block based graphical authentication effort applied ab kloc 3.0 8.5 1.12 effort applied 32.966 persons/month development time cb effort applied 2.5 32.966 0.35 development time 8.497 month people effort applied/ development time 32.966/8.497 people 3.88 4. people complete 4. 2016-17 16 improving authentication image-block based graphical authentication 3.3 description 3.4.1 fig 3.1 2016-17 17 improving authentication image-block based graphical authentication 3.4.2 profile prole category described actor description actor 1 account uploading image block password registering authentication 2 database handler uploads image directly save encrypted coordinate image-block 3 encryptor proper encrypt coordinate image block sending database 4 discritizer display image grid format select image block setting password well matching otp time 5 otp generator proper generate time indicator unique guessed easily 6 axis generator generates axis provide matching otp image- block password sliding axis 7 decryptor decrypts coordinate database sends verifier check correct password authentication 8 verifier finally accepts coordinate chosen time match decrypted password decryptor database 3.4 front end- swing java html end- database netbeans 4gb ram 2016-17 18 improving authentication image-block based graphical authentication 4 2016-17 19 improving authentication image-block based graphical authentication _________________________________________________ organized 5.1 complete architectural proposed 4.1 fig 4.1 registration registration phase upload image image discritized allows image-block password password database encrypted format time otp generated match image block selected registration phase verification check valid/invalid 2016-17 20 improving authentication image-block based graphical authentication 4.2 description 4.2.1 description kind input selected image output generated include verification registered verification valid matching image-block coordinate 4.2.2 object registration database entry screen success/failure fig4.2 object 2016-17 21 improving authentication image-block based graphical authentication 4.2.3 fig 4.3 2016-17 22 improving authentication image-block based graphical authentication 4.2.4 class fig 4.4 class 2016-17 23 improving authentication image-block based graphical authentication 4.3 description 4.3.1 description function function performed basic functionality registration phase include uploading image choice allow select image block password encryption selected image-block coordinate encrypted saved database phase includes generation otp axis generation matching image lock otp verification decrypted coordinate database matched selected coordinate phase 4.3.2 description described devices/systems/networks/human stated kind input human include registration screen include discretization image uploading image image block selection word dependent machine machine 4.3.3 control description presented help 2016-17 24 improving authentication image-block based graphical authentication 4.3.3.1 fig 4.5 2016-17 25 improving authentication image-block based graphical authentication 4.3.3.2. fig 4.6 4.4 behavioral description 4.4.1 description behavior detailed description major event state presented switch state event state event include major event registration phase 2016-17 26 improving authentication image-block based graphical authentication state undergoes 4.4.2 state transition fig 4.7 state transition 2016-17 27 improving authentication image-block based graphical authentication 4.4.3 control specification firstly registration phase upload choice image discretize uploaded image image appear grid form select block grid image password encryption block co-ordinate selected block image password saved database phase registered directly screen generation appear image retrieved database discretized axis control generated time password generated verification password verification 2016-17 28 improving authentication image-block based graphical authentication 5 2016-17 29 improving authentication image-block based graphical authentication organized 5.1 complete description 5.1 description coding designed securesignal consists registration phase phase registration phase choose security three option provided normal image second shuffled image third rotated image choosing security choose block image password discretized image registration phase complete phase otp generated mobile number authentication performed inputting time password phase axis comprises horizontal vertical scroll bar cover entire image chosen lead efficient resistance shoulder surfing attack 5.2 discretization graphical authentication basically designed prevent shoulder surfing liberty choose choice image block password image selected discriztion image appears block block password 2016-17 30 improving authentication image-block based graphical authentication 5.3 axis generation axis generation picture phase block image password identified time password mobile number password 4 horizontal axis consists number 1 6 vertical axis consists alphabet e. axis otp generated match block image password complete authentication alphabet number appearing axis time regular pattern code designed axis digit alphabet shuffled x-axis initialize frame layout border initialize scroll panel inside frame layout grid 6 row 1 column random number row column y-axis initialize frame layout border initialize scroll panel inside frame layout grid 1 row 6 column 2016-17 31 improving authentication image-block based graphical authentication random alphabet column row 5.4 otp generation process graphical authentication registered registered mobile number receive otp mobile receive otp scroll axis block image password entering otp unique thing phase person standing password click image block scroll axis receive otp image block secured image appear shuffled manner registered knowing distinct block image selected scrolling axis providing secure otp generate random number 1 6 initaialize num random number generate random alphabet initialize letter random alphaet send num letter phone 2016-17 32 improving authentication image-block based graphical authentication 5.5 matching matching main actual authentication otp received registered mobile number matched image block password matching exactly position vertical horizontal axis point matched block password suppose otp received 4 horizontal axis consists number vertical axis consists alphabet matched image block block matched authentication complete matching search position alphabet otp initialize alphabet position create array initialize distance scrolled alphabet scrolled distance panel distance array ==distance fail database connectivity establish connection database create insert insert password selected connection 2016-17 33 improving authentication image-block based graphical authentication 6 2016-17 34 improving authentication image-block based graphical authentication evaluation ______________________________________________________ organised 6.1 complete experimental setup 6.1 experimental setup conducted study proposed evaluate performance metric password memorability/recollection 1. check well doe remember password 2. keep check doe registration phase usability check usability measure experience based total time consumed registration authentication phase 1. order memorability rate asked experiment securesystem log account week 2. attempt marked failed blocked trial number trial exceed 3 time 3. measured time spent registration phase keep check authentication time consuming 4. parameter helpful statistic working experimental setup tested securesystem 15 field electronics telecommunication 2016-17 35 improving authentication image-block based graphical authentication asked create account basic demo wa assumed image password private public password password securesystem normal shuffle rotated privacy 6.1.2 evaluation 1 perform authentication public shoulder surfing attack alleviated shoulder surfing attack common people performing authentication process public multiple camera-based attack prone performing authentication public securesignal overcomes attack firstly liberty select choice image image selected appear discretized form block image password phase discretized image covered vertical horizontal scroll bar based time indicator mobile number perform scrolling horizontal vertical bar match password directly clicking image letting attacker video capturing device guess password scroll bar play role letting attacker password 2 increase password space traditional pin textual password easy ongoing authentication purpose weak textual password easily cracked random guess attack strong textual password memorizing issue graphical password replaced provide easy 2016-17 36 improving authentication image-block based graphical authentication authentication 3 efficiently search exact password object authentication phase liberty choice image password memorizing issue automatically reduced providing efficient 4 requiring memorize extra perform extra computation authentication extra remembering textual number performing computation cleared graphical authentication doe authentication efficiently 6.2 6.2.1 unit unit tested separately single unit independently tested consists phase registration phase credential filled properly format screen appear proceed firstly start registration start registration form includes username contact field filled properly completely step proceed 2016-17 37 improving authentication image-block based graphical authentication validating username filling username valid proceed 2016-17 38 improving authentication image-block based graphical authentication proper filling naming block number alphabet contact number filling 10 number alphabet valid block registration phase credential filled proper validation proceeds selection image block chooses choice image database image appears discretised form image chooses block image password appear till time doe select block password 2016-17 39 improving authentication image-block based graphical authentication block selected password stored time phase authentication block selected properly 2016-17 40 improving authentication image-block based graphical authentication 7 2016-17 41 improving authentication image-block based graphical authentication _________________________________________________________ based experimental view securesignal easy- to-use graphical password authentication effectively alleviate shoulder-surng attack addition securesignal applied authentication scenario device simple input output wa basically designed remove shoulder surfing attack securesystem applicable real scenario 1 perform authentication public shoulder surfing attack alleviated 2 increase password space traditional pin 3 efficiently search exact password object authentication phase 4 requiring memorize extra perform extra computation authentication completed implemented graphical authentication designed overcomes drawback shoulder surfing random guess attack smudge attack better liberty choose choice image password memorizing issue enhanced security three option normal image shuffled image rotated image convince security chooses image appeared authentication phase otp registered mobile number clue coordinate slide axis secure medium authentication 2016-17 42 improving authentication image-block based graphical authentication 7.2 wanted provide password image shuffled form phase covered implemented basically desktop going extend android io device authentication proper format 2016-17 43 improving authentication image-block based graphical authentication ________________________________________ 1 hung-min sun shiuan-tung chen jyh-haw yeh chia-yun cheng shoulder surng resistant graphical authentication transaction dependable secure computing 2016 2 saeed swaleha m. sarosh umar `` hybrid graphical authentication scheme '' 2015 control intelligent ccis 2015 3 anandhavalli d. 2014 image based authentication ensure security mail server advanced control computing icaccct 2014 international conference 555-558 4 bianchi andrea ian oakley hyoungshick kim `` passbyop bring picture securing graphical password '' transaction human-machine 46.3 2016 380-389 5 choi dongmin dongkil tak ilyong chung `` secure password-based authentication method mobile banking service '' journal korea multimedia society 19.1 2016 41-50. 2016-17 44 article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing shoulder surng resistant graphical authentication hung-min sun shiuan-tung chen jyh-haw yeh chia-yun cheng abstractauthentication based password security privacy human action choosing bad password inputting password insecure regarded weakest link authentication chain arbitrary alphanumeric string tend choose password short meaningful easy memorization web mobile apps piling people access anytime device evolution brings great convenience increase exposing password shoulder surng attack attacker observe directly recording device collect credential overcome proposed novel authentication passmatrix based graphical password resist shoulder surng attack one-time valid indicator circulative horizontal vertical bar covering entire pass-images passmatrix offer hint attacker gure narrow password conduct multiple camera-based attack implemented passmatrix prototype android real experiment evaluate memorability usability experimental proposed achieves better resistance shoulder surng attack maintaining usability termsgraphical password authentication shoulder surng attack cid 70 1 extual password authentication method decade comprised num- bers upper- lower-case letter textual password considered strong resist brute force attack strong textual password hard memorize recollect 1 tend choose password short dictionary random alphanumeric string worse rare username password multiple account 2 article security company network password cracker surprisingly cracked 80 employee password 30 second 3 textual password insecure difculty maintaining strong graphical password authentication scheme 4 5 6 7 developed address weakness associated textual password based study 8 9 human better ability memorize image long-term memory ltm verbal representation image-based password proved easier recollect study 10 11 12 complex authentication password capable recollecting long time memory activated period- ically image-based password vulnerable shoulder surng attack ssa attack direct observation watching shoulder applies video capturing technique password pin sensitive informa- tion 13 14 15 human action choosing bad password account inputting password insecure logins regarded weakest link au- thentication chain 16 authentication scheme designed overcome vulnerability paper secure graphical authentica- tion named passmatrix protects be- coming victim shoulder surng attack inputting password public usage one-time indicator indicator randomly generated pass-image useless session terminates indicator better security shoulder surng attack dynamic pointer point position password clicking password object directly 1.1 mobile marketing statistic compilation danyl mobile shipment overtaken pc shipment 2011 number mobile overtaken desktop 2014 closed 2 billion 17 shoulder surng attack posed great threat privacy condentiality mobile device indis- pensable modern life people log web service apps public access account smart phone tablet public device bank atm shoulder-surng attacker observe password entered help reecting glass window monitor hanging public password exposed risky environment password complex secure secure authentication defend shoulder surng attack applicable kind device authentication scheme 6 18 19 20 21 22 23 24 25 resistant shoulder-surng usability small password space suitable applied mobile device 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing easily compromised shoulder surng attack attacker video capturing technique google glass 15 26 usability include issue time log password difcult recall period time authentication method complicated proper education practice 2006 wiedenbeck al proposed passpoints 7 pick point 3 5 image password creation phase re-enters pre-selected click-points correct order tolerant square phase com- paring traditional pin textual password pass- point scheme increase password space enhances password memorability graphical authentication scheme vulnerable shoulder surng attack based passpoints add one-time session password distractors develop passmatrix authentication resistant shoulder surng attack 1.2 paper organized 2 background technique graphical authen- tication scheme 3 describes attack proposed passmatrix presented 4. study 5 6 security discussed 7. 8 concludes paper 2 background decade lot password authentication proposed scheme paper focus graphical-based authentication keep paper concise review scheme mentioned previous scheme 27 28 29 30 31 good usability graphical-based additional support extra audio multi-touch monitor vibration sensor gyroscope early day graphical capability handheld device wa weak color pixel wa limited draw-a-secret da 6 technique wa proposed jermyn al 1999 re-draw pre-dened picture 2d grid directly extract gure 6 1 drawing touch grid authenticated graphical capability handheld device steadily ceaselessly improved advance science 2005 susan wiedenbeck al introduced graphical authentication scheme passpoints 7 time handheld device resolution color picture passpoint scheme click pre-dened pixel predestined photo 1 gure extracted 7 correct tolerant square stage marcos al extended da based nger-drawn doodle pseudosignatures mobile device 32 33 au- thentication based extracted dynamic gesture drawing process e.g speed acceleration behavioral biometric characteristic word attacker imitate draw draw three authentication scheme vulnerable shoulder surng attack reveal graphical password directly unknown observer public fig 1 pixel square selected authentication password passpoints 7 authentication password drew raw bit recorded database 6 addition graphical authentication scheme wa extension conventional per- sonal number pin entry authentication sys- tems 2004 roth al 34 presented approach pin entry shoulder surng attack increasing noise observer approach pin digit displayed black white randomly round respond identifying color password digit series binary choice black white gure pin number intended enter intersecting choice approach confuse observer watch screen help video capturing device observer capture authentication process password cracked easily order defend shoulder surng attack video capturing fakepointer 35 wa introduced 2008 t. takada 2 35 usage fakepointer addition pin number answer indicator time authentication process bank atm word secret authentication pin xed secret answer indicator disposable secret answer indicator shape pin digit session fakepointer image numeric keypad 10 number numeric keypad phone key number top randomly picked shape numeric key shape moved circularly left arrow key authentication repeatedly move numeric key circularly leftmost gure 2 rst digit pin overlap rst shape answer indicator keypad conrm selection pressing space key operation repeated pin digit entered conrmed approach robust attacker capture authen- tication process room improve 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing password space example device authentication smartphone tablet bank atm password space enlarged pin combination alphanumeric character numeric digit fig 2. fakepointer move numeric key layout circularly left arrow key 35 wiedenback al 36 described graphical password entry scheme 2006 3 gure extracted 36 scheme resistant shoulder surng attack convex hull method recognize pass-icons screen click inside convex hull formed pass-icons order password hard guess number icon inserted screen increase password space number object crowd display object indistinguishable 2010 david kim al 25 proposed visual authen- tication scheme tabletop called color ring 3 gure extracted 25 assigned authentication key icon collectively assigned color-rings red green blue pink grid icon provided 72 icon displayed grid key icon presented grid drag ring ideally nger thumb hand concurrently grid distinct key icon captured correct color ring rest ring decoy selection conrms selection dropping ring position ring include icon obfuscate direct observer kind password cracked intersecting selection color assigned ring xed ring include icon attacker requires limited number trial guess password fig 3 color ring method 25 convex hull method 36 3 attack 3.1 increasing amount mobile device web service access account send condential business email upload photo album cloud remit money e-bank account anytime logging service public expose password unknown party un- consciously people malicious intent watch authentication procedure omnipresent video camera surveillance equipment reected image window 37 attacker obtains password access account denitely pose great threat asset shoulder surng attack gained attention decade address study 1 perform authentication public shoulder surng attack allevi- ated 2 increase password space traditional pin 3 efciently search exact pass- word object authentication phase 4 requiring memorize extra perform extra computation authentication 5 limited usability authentication scheme applied device 3.2 attack 3.2.1 shoulder surng attack based previous 20 21 25 34 35 action typing keyboard clicking pass-images pass-points public reveal password people bad intention paper based attacker categorize shoulder- surng attack three 1 type-i naked eye 2 type-ii video capture entire authentication 3 type-iii video capture entire authentication process process attack require effort tech- niques attacker authentication scheme resist attack secure previous attack proposed authentica- tion scheme 4 5 6 7 25 38 including traditional text-password pin vulnerable shoulder surng type-i attack subject type-ii type- iii attack scheme reveal password attacker enter password directly pressing clicking specic item screen scheme 19 34 resist type-i vulnerable type-ii type-iii attack attacker crack password intersecting video capture multiple step entire authentication process 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing 3.2.2 smudge attack previous study 39 authentication scheme require touch ing monitor display screen phase vulnerable smudge attack attacker password easily observing smudge left touch screen 4 directly extracted 39 fig 4 android pattern screen lock draw unlock pattern connects dot screen 39 residue ngerprints left screen 39 3.3 paper discus habitual movement preference attacker advantage gure potential password addition study 1 client device server protected ssl packet eavesdropped intercepted attacker transmission 2 server client device authentica- tion trustworthy 3 keyboard entire screen mobile de- vice difcult protect small area 1.5 cm2 easy protected malicious people shoulder surf password 4 account safe observer bad intention surveillance camera proper man- agement fig 5. password three image n=3 pas square pas square orange-lled area image ccp method doe good job helping recollect remember password click incorrect region image image warning feedback aiming alleviating shoulder surng attack recommend approach feedback attacker fact people account screen lock frequently assume setup event safe environment public pick pass-squares simply touching clicking registra- tion phase 4.1 passmatrix composed component 6 image discretization horizontal vertical axis control indicator generator password verication database 4 passmatrix overcome 1 security weakness traditional pin method 2 easiness obtaining password observer public 3 compatibility issue device introduced graphical authentication called passmatrix passmatrix password consists pass-square pass-image image number image i.e user-dened 5 demonstrates proposed scheme rst pass-square located 4 8 rst image second pass-square top smoke second image 7 2 pass-square 7 10 third image passmatrix choose square image image square image passpoints 7 scheme based study cued click point ccp 40 proposed chiasson al fig 6. passmatrix image discretization divide image square choose pass-square 5 image divided 7 11 grid smaller image discretized larger password space overly concentrated division recognition 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing specic object increase difculty operation palm-sized mobile device division wa 60-pixel interval horizontal vertical direction 60 pixels2 best size accurately select specic object touch screen indicator generator gener- ate indicator consisting distinguishable character alphabet number visual mate- rial color icon authen- tication phase character 1 11 7 11 grid letter number generated randomly indicator provided time called generated indicator visually acoustically indicator display 7 directly predened image predened image instance chooses square 5 9 image 7 indicator 11 acoustical delivery indicator received audio signal ear bud bluetooth principle keep indicator secret people password pass- square reconstructed easily indicator fig 7 indicator 11 directly indicator predened image horizontal vertical axis control scroll bar horizontal bar letter vertical bar number control drag ing function control bar ing bar nger shift alphanumeric time shift check time dragging bar distance bar circulative i.e shift horizontal bar 8 left three check bar 8 bar implicitly point word align indicator location pass-square charge transmitted client device authentication server protected ssl secure socket layer protocol 41 safe eavesdropped intercepted password verication veries password authentication phase pass- fig 8. horizontal scroll bar right/blue vertical bar left/green square password digit text-based password authenticated pass-square pass-image correctly aligned indicator align indicator pass-square described database database server store account password number pass- image position pass-squares time duration spent registration phase phase passmatrix privilege perform operation insert modify delete search 4.2 passmatrix passmatrixs authentication consists registration phase authentication phase described 4.2.1 registration phase 9 owchart registration phase stage creates account user- password password consists pass-square image image number image i.e decided considering trade-off security usability 42 purpose username imagination account username passmatrix applied authentication screen lock choose image provided upload image device pass-images pick pass- square selected pass-image grid wa divided image discretization repeat step password 4.2.2 authentication phase 10 owchart authentication phase stage his/her username password indicator log passmatrix describes step 1 input his/her username wa cre- ated registration phase 2 indicator comprised letter number created indicator generator indicator 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing fig 9. owchart registration phase passmatrix fig 10. owchart authentication phase passmatrix his/her hand form circle touch screen indicator conveyed visual feedback indicator delivered predened image audio feedback mentioned previous 3 rst pass-image display horizontal bar vertical bar top left respond challenge ings drag bar align pre-selected pass-square image indicator example indicator 11 pass-square 5 7 grid image shift character 5th column horizontal bar 11 7th row vertical bar 12 4 repeat step 2 step 3 pre-selected pass- image 6 5 account infor- mation server httprequest post method finally image password verication veries alignment pass- square indicator align- ments correct image allowed log passmatrix 5 study passmatrix prototype wa implemented android small screen limited small screen device example screen locking fact applied wide range authentication scenario instance account window 8 email account web browser login/unlock android applied client device laptop tablet mobile phone bank atm fact method authentication simple entire authentication process completed touching clicking screen assumed down- load google play 43 account service android 44 source operating based linux kernel mobile device tablet pc smart phone implemented passmatrix prototype android experiment evaluate memorability usability describe passmatrix study exper- imental environment participant procedure study 6 5.1 passmatrix prototype wa built android sdk 2.3.3 wa mainstream version distribution 2012 45 connecting internet account log time practice mode log experiment client device 11 client side prototype xml build java android api implement function including username checking pass- image listing image discretization pass-squares selection indicator delivery horizontal vertical bar circulation server side php mysql store fetch registered account to/from database handle password verication proposed mentioned import image 24 xed image experiment 11 image 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing pass-image shift position 12 implemented bar- shifting function dragging inging entire bar shiftable circulated side i.e bi- directional circulative nger specic element order move 5.2 study introduce study experimental environment participant detailed proce- dure evaluates accuracy usability passmatrix 5.2.1 experimental conducted study proposed evaluate performance metric password memorability/recollection well remember password log period time registration usability measured experience passmatrix includes total time consumed registration authentication success- ful rate password number time bar control function shift element position authentication phase order analyze memorability asked experiment participant passmatrix account rst log account week marked attempt failure number retries exceeded 5 time analyze usability recorded time par- ticipant spent registration passmatrixs authentication time-consuming recorded number time participant ing nger shift horizontal vertical bar measure effort authentication phase calculate rate asked participant log passmatrix three time account rst session re-log three time second session week statistic participant evaluate well operate authentication detailed procedure described 5.2.4 6 5.2.2 environment deployed installed passmatrix.apk samsung nexus android version 2.3.6 display size 480 800 pixel mysql 5.0.51 php installed server intel core tm 2 quad cpu 3gb ram ubuntu 8.04.4 5.2.3 participant 30 novice 11 female 19 male un- familiar passmatrix graphical authentication scheme recruited participate study time study participant fig 11 main passmatrix account practice start log experiment choose 24 image pass-images 7 11 square image choose pass-square displayed size 420 660 pixel discretized 60 60 pixel square 7 11 square select image 11 selects three image pass-square image password stored coordinate database i.e location selected pass-squares 7 11 grid password space depends number image instance creates account image password space 7 11 4. fig 12 visual one-time valid indi- cator permutation alphanumerics horizontal vertical bar randomly generated image shift bar correct position indicator aligns pass-square rst step phase one- time valid indicator indicator weve illustrated example 4.1. adopted simplest grasping hand space left center touching screen smart phone 12 protect shoulder surng indicator hand touch screen vanish hand leaf screen number element horizontal vertical bar depends discretization image 7 letter 11 number 1 11 horizontal bar vertical bar align one-time indicator pass-square pass-image authentication phase order obfuscate hide alignment pattern observer randomly shufed element bar 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing 24.53 year average stddev=3.14 three post-doctors majority rest graduate participant science informa- tion major 76.67 background security 13 73 participant le year experience smart phone 20 participant le year experience nal 7 veteran year experience authentication process average 12.6 time day public 13 fig 13. trend number time participant authentication process public day experience smart phone touch screen 5.2.4 procedure participant usability study session initial session follow-up session rst session participant asked create account passmatrix describes rst session wa conducted 1 phase explained basic purpose passmatrix presentation participant simple animation 2 registration phase participant created account consisting username password pass- matrix phase participant educated tutorial knew account private safe choose pass-squares simply clicking registration phase knew choose pass- square light object meaningful knew re-choose chosen square pass-image conr- mation knew three pass-images 3 practice phase participant told log account practice mode repeated step thought knew control horizontal vertical bar passmatrix authentication feedback password input process completed pass-image 4 phase practicing participant re- quested log account formally mode 5 participant asked answer short de- mographic questionnaire simple per- sonal experience mobile phone authentication 6 participant wa answer sheet third person previous record participant asked gure third person pass-squares record incentive gift wa provided crack password ten i.e ten guess answer sheet week crack password follow-up session week participant asked 1 2 3 log passmatrix repeatedly three logins answer questionnaire sheet experience passmatrix turn answer sheet password cracking experiment 6 collected analyzed collected experiment evaluate effectiveness proposed sys- tem presented perspective accuracy usability accuracy perspective focus suc- cessful rate session including practice logins usability perspective measured amount time spent passmatrix phase suggested passmatrix practical presented statistic participant background experience smart phone passmatrix 6.1 accuracy practice phase rst session participant prac- ticed process average 4 time ranging 1 14 excluding outlier moved authentication phase dened pre- vious participant keep log account failed time word attempt le equal pas authentication correct password failed attempt marked failure dene term accuracy total accuracy experiment irst accuracy successf ul attempt irst ry otal attempt 1 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing otal accuracy successf ul attempt otal attempt 2 accuracy practice/authentication session 1 session total second session total practice phase phase 60.00 100 86.67 100 66.67 93.33 1 accuracy total accuracy practice phase session 30 participant average 3.2 pass-images selected participant total accuracy rst session higher second session rst session 26 30 86.67 participant log authenticated i.e total accuracy 100 week average 16.3 day accuracy second session wa 66.67 total accuracy 93.33 surveyed participant reason drop accuracy analyzed failed attempt second session participant forget password remember location pass-squares accidentally shifted horizontal vertical bar wrong position checking log total accuracy 93.33 higher accuracy 66.67 second session 2 average number re-tries nally logged week participant log average 0.64 median=0 re-tries word total 1.64 25 30 83.33 participant log account three rest 4 participant logged ten participant failed log ten time recorded 5 participant failed log 3 trouble pas three pass-images registration phase summary conclude password passmatrix easy memorize log 1.64 median=1 authentication request average total accuracy trial 93.33 week median standard deviation number retries 2 attempt session second session median s.d median s.d practice phase phase 0.41 0.13 0 0 0.50 0.35 0.64 0 2.64 6.2 usability counted number shift elapsed time pass-image experiment measure usability passmatrix practice median standard deviation total time 3 registration phase registration 1st median s.d total time 106.6 90.5 55.58 3 elapsed time participant con- sumed registration phase registration 1 minute 46 second average average registration time bit lengthy record 73.33 participant felt registration process actu- ally time consuming 10 spent registration time nding pass-squares meaningful based participant concluded time registration acceptable practice registration participant choose 3 5 pass-images password experiment participant chose 3 image mean=3.2 image average time spent practice 4 rst session wa 47.86 second 31.31 second time log passmatrix reduced 16.55 second practicing 4 time average familiar shifting i.e dragging inging operation touch screen good fact 73 participant le year experience smart phone 13 week 16.3 day average average time wa 37.11 second 31.11 second rst session reason time wa increased wa participant needed recall password time spent process acceptable 83.33 participant felt spending bit extra time worthwhile authentication protect password peeking shoulder shifting operation aligning in- dicator pass-square pass-image 4 signicant difference f=3.6 0.05 number operation practice phase phase session f-test http //en.wikipedia.org/wiki/f-test p- http //en.wikipedia.org/wiki/p-value indicator randomly generated pass-image element horizontal bar vertical bar randomly shufed number shifting operation move indicator position differ well shifting operation dragging aligning indicator pass-square single move inging fast nger movement screen shifting unit time 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing experimental participant shifted 4 5 time pass-image average median standard deviation total time number shift practice/authentication phase 4 practice 1st 1st 2nd median median median 47.86 5.67 31.31 4.91 37.11 4.9 41 5 34 4 29.5 5 time shift summary experimental participant operate process pass- matrix authentication passmatrix friendly practice spend time log passmatrix practice phase 47.86 second average registering account log week registration 31.31 second 37.11 second easily control horizontal vertical bar align lo- gin indicator pass-squares passmatrix practical perspective easy-to-use efciency questionnaire response score 1 5. 5 question exposed authenticat- ing public serious loss password cracked passmatrix protect password be- ing attacked ssa compared text password pin passma- trix secure passmatrix secure trustable difcult pass-square screen shot video process easy fast create account pass- matrix general passmatrix user-friendly easy time consumed passmatrix ac- ceptable indicator clear easy memo- rize temporarily indicator safe peeped tend choose square eye-catching tend choose square obtrusive median 4.13 4 4 4.23 4.27 4.27 4.27 3.87 4.2 4.07 3.9 4 3.83 2.6 4 4 4 4 4 4 4 4 4 4 4 2 6.3 questionnaire participant asked question background likert-scale question experience passmatrix rst second session adopted ve-point likert scale 1 represents strong disagreement 5 indicates strong agreement 5 question median score participant felt insecure traditional text password pin method believed passmatrix log protect password shoulder surng attacked experience passmatrix score series question ranging 3.87 4.20. participant agreed passmatrix easy majority 93.33 considered time spent word complexity passmatrixs process acceptable in-depth investigation number pass-images accept authentication scenario 14 tended pass-image password screen lock mobile phone 2 3 e-mail service 5 bank account told participant choose meaningful pass-squares password spent time nding memorizing special square meaningful asked decided pass-squares expressed chose square conspicuous image hot-spot 46 discus issue summary feedback participant good trouble passmatrix log passmatrix protect pass-squares operating public addition time acceptable time decreased gain experience passmatrix fig 14. number pass-images accept authenti- cation scenario 6.4 cracking passmatrix order brainstorm crack passmatrix shoulder surng attack aggregated pass-images pass-squares chosen participant registration phase randomly picked 10 to- be-cracked account three pass-images 30 partic- ipants divided 10 group 3 participant group wa asked crack account simulated owner 10 account log passmatrix time screenshot entire process record account answer sheet three participant asked crack identify pass-square pass-image record 25 participant returned answer sheet week 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing feedback participant wa clue record pass- image gure location pass- square didnt indicator image record didnt easier crack pass-squares operation pass-images trial independent operation pass-image trial independent lled answer sheet random guessing hot- spot guessing participant ten chance guess pass-squares three pass-images received 250 guessing participant wa considered answer 10 guessing correct three pass-squares 6 250 guessing correct three pass-squares 1 correct guess pass-squares 23 guessed pass-square 226 totally failed guess 6 cracking passmatrix number 250 total success fail 3 correct 2 correct 1 correct 0 correct 0 1 23 226 investigated experimental selected square image memorable obvious unique pass-images rel- atively easier guess fact lacking abundant object image hot-spot 46 47 common graphical-based authentication scheme chose three representative pass-images image demonstrate hot-spot three image complex rich image scenery simple vision 6 25 returned password cracking answer sheet guessing pass-squares three image 10 guessing answer sheet total 60 guessing 15 password guessing statistic number square represents number time square selected guessed password square selected password rst image uniformly distributed 38.96 44.16 total area third image square selected concentrated 28.57 area image square red frame real pass-squares participant registration phase real pass-squares selected majority password cracking participant guessed password experiment attacker higher random guess break account conducting hot-spot guessing attack fig 15. pass-squares chosen participant number square square hot spot 7 security evaluate security proposed authentication three attack random guess attack shoulder surng attack smudge attack 7.1 random guess attack perform random guess attack attacker randomly square pass-square pass- image occurs key security determinant number pass-images discretization image quantify security passmatrix random guess attack dene entropy password space equation 3. 7 denes notation equation entropy password space bit 2k password space entropy log2 dx dy 3 notation equation 3. 7 notation dx dy i=1 i=2 number partition x-direction number partition y-direction indicator touching screen hand grasped indicator predened image number pass-images 8 entropy bit passmatrix random guess attack entropy text password pin password varied 1 5 pass-images 1-5 click-point number image 1 2 3 4 5 passmatrix 7 11 32 20 1 2 1 2 text password pin 6.27 12.53 9.32 18.64 6.57 3.32 12.53 25.07 18.64 37.29 13.14 6.64 18.80 37.60 27.97 55.93 19.71 9.97 25.07 50.13 37.29 74.58 26.28 13.29 31.33 62.67 46.61 93.22 32.85 16.61 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing built prototype pass- matrix android conducted study samsung nexus device small screen size tolerance square 60 60 pixel distinguish square clearly size image 420 660 pixel 7 partition x-axis 11 partition y-axis total 7 11 square image 8 entropy passmatrix 1 indicator touching screen hand grasped 2 indicator predened image pass-image pass-images 1-5 click point well entropy text pass- word pin password entropy 1 larger pin password 3 pass-images entropy proposed 18.8 bit larger entropy 18.57 bit android pattern screen lock 48 currently primary authentication mechanism android device 2 proposed i.e obtaining indicator graph random guess attacker require effort crack discover correct pass-square correct indicator grid attacker pass-square pass- image break account correct indicator trial entropy passmatrix 2 signicantly larger pin password android pattern screen lock pass-images web pcs/laptops screen image resolution displayed en- tirely screen scroll bar discretization image increase security strength passmatrix instance size 40 40 pixel square 1280 800 image divided 32 20 partition x-axis y-axis entropy increased log2 32 20 n. 7.2 shoulder surng attack fact shoulder surng real threat authentication textual graphical password novel authentication scheme pro- posed protect attack unsuccessful alleviate threat shoulder-surng attack camera-based instance scheme pin-entry method 34 spy- resistant keyboard 19 designed based difcul- tie short-term memory camera-based shoulder surng attack easily crack password scheme password space scheme captcha-based method 24 pass-icons 18 color- ring 25 narrowed camera-based shoulder surng attack proposed authentication passmatrix full advantage adding extra obfuscate process approach point location pass-squares implicitly typing clicking password object directly horizontal vertical bar circulative cover entire area image password space narrowed authentication process recorded attacker indicator pass-image varies pass-image independent pattern extracted pass-images authentication trial multiple process security passmatrix strong resist shoulder surng attack attack camera-equipped 7.3 smudge attack smudge attack 39 implicit attack attacker attempt extract sensitive input inspecting smudge left touch screen horizontal vertical bar passmatrix scrol- lable shifting element bar circulate bar shift bar touching indicator smudge left xed indicates habitual stretching range thumb nger length smudge left screen indicator generated randomly pass-image permutation element bar randomly re-arranged pass-image session proposed passmatrix immune smudge attack 8 8.1 discussion discretized image grid 7 11 hold 77 square image secure resist brute force attack random guessing attack questionnaire study expressed prefer 1 2 pass-images screen lock considering trade-off security usability entropy passmatrix screen lock 6.27 bit 12.53 bit pass-image pass-images respec- tively strengthened 12.53 25.07 bit obtaining indicator graphical method order secure existing android pattern password entropy 18.57 bit brute force attack pass-images graphical method one-time indicator graphical password authentication passmatrix vulnerable random guess attack based hot-spot analyzing weakness im- proved letting upload image there- fore difcult attacker collect statistic hot-spots image le indepen- dent object suffer hot-spot carefully selecting image rich object alleviate hot-spot based random guess attack summary passmatrix compared da 6 passpoints 7 marcoss nger-drawn doodle 33 passmatrix strong resist shoulder surng attack attack camera-equipped pin-entry method 34 fakepointer 35 wieden- scheme 36 color ring 25 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing computational complexity facing random guess attack passmatrix withstand 7 8.2 increasing trend web service apps access anytime device order protect digital prop- erty authentication time access account conducting authentication process public potential shoulder surng attack complicated password cracked easily shoulder surng tradi- tional textual password pin method password authenticate password revealed easily peek shoulder video recording device cell phone overcome proposed shoulder- surng resistant authentication based graphi- cal password named passmatrix one-time indicator image point location pass-square directly clicking touching action vulnerable shoulder surng attack horizontal vertical bar cover entire pass-image offer clue attacker narrow password space record account implemented passmatrix prototype android experiment evaluate memorability usability experimental log average 1.64 median=1 total accuracy trial 93.33 week registration total time consumed log passmatrix average 3.2 pass-images 31.31 37.11 second considered acceptable 83.33 participant study based experimental passmatrix novel easy-to-use graphical pass- word authentication effectively alleviate shoulder-surng attack addition passmatrix ap- plied authentication scenario device simple input output capability study passmatrix practical real 1 s. sood a. sarje k. singh cryptanalysis password authentication scheme current status key issue method science 2009. icm2cs 2009. proceeding international conference dec 2009 17. s. gurav l. gawade p. rane n. khochare graphical password authentication cloud securing scheme electronic signal processing computing icesc 2014 international conference jan 2014 479483 3 k. gilhooly biometrics business computer- 2 9 2005 4 r. dhamija a. perrig deja vu study image authentication proceeding 9th conference usenix security symposium-volume 9. usenix association 2000 44. realuser http //www.realuser.com/ i. jermyn a. mayer f. monrose m. reiter a. rubin graphical password proceeding 8th conference usenix security symposium-volume 8. usenix association 1999 11 5 6 s. wiedenbeck j. water j. birget a. brodskiy n. memon passpoints longitudinal evaluation graphical password international journal human-computer study 63 1-2 102127 2005 8 a. paivio t. rogers p. smythe picture easier recall word psychonomic science 1968 9 d. nelson u. reed j. walling picture superiority journal experimental psychology human learning memory 3 485497 1977 10 s. brostoff m. sasse passfaces usable pass- word eld trial investigation people 405424 2000 11 a. de angeli m. coutts l. coventry g. johnson d. cameron m. fischer vip visual approach authentication proceeding working conference advanced visual acm 2002 316323 12 b. ives k. walsh h. schneider domino pass- word reuse acm 47 4 7578 2004 13 j. long k. mitnick tech hacking social engi- neering dumpster diving shoulder surng elsevier science 2011 14 t. kwon s. shin s. covert attentional shoulder surf- ing human adversary powerful expected transaction man cybernetics 44 6 716727 2014 15 google glass snooper steal passcode glance http //www.wired.com/2014/06/google-glass-snoopers-can- steal-your-passcode-with-a-glance/ 16 m. sasse s. brostoff d. weirich transforming weakest linka human/computer interaction approach usable effec- tive security bt journal 19 3 122131 2001 17 mobile marketing statistic compilation http //www.smartinsights.com/mobile-marketing/mobile- marketing-analytics/mobile-marketing-statistics/ 18 d. hong s. man b. hawes m. mathews password scheme resistant spyware proceeding interna- tional conference security 2004 19 d. tan p. keyani m. czerwinski spy-resistant keyboard secure password entry publicly observable touch screen proceeding ozchi-computer-human interac- tion special interest group chisig australia canberra australia acm press citeseer 2005 20 m. kumar t. garnkel d. boneh t. winograd reducing shoulder-surng gaze-based password entry proceed- ings 3rd symposium usable privacy security acm 2007 1319 21 h. zhao x. li s3pas scalable shoulder-surng resis- tant textual-graphical password authentication scheme ad- vanced networking workshop 2007 ainaw07 21st international conference 2. 2007 467472 22 x. bai w. gu s. chellappan x. wang d. xuan b. pa predicate-based authentication service powerful passive adversary 2008 annual security conference 2008 433442 23 z. zheng x. liu l. yin z. liu stroke-based textual password authentication scheme education science 2009. etcs09 international workshop 3. 2009 9095 24 l. wang x. chang z. ren h. gao x. liu u. aickelin spyware captcha graphical password scheme 2010 24th international conference advanced networking 2010 760767 25 d. kim p. dunphy p. briggs j. hook j. nicholson j. nichol- son p. olivier multi-touch authentication tabletop proceeding 28th international conference human factor computing acm 2010 10931102 26 black hat google glass steal passcodes http //www.technologyreview.com/s/529896/black-hat- google-glass-can-steal-your-passcodes/ 27 a. de luca m. harbach e. von zezschwitz m.-e. maurer b. e. slawik h. hussmann m. smith dont protecting smartphone authentication shoulder surfer proceeding 32nd annual acm conference 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html article accepted publication issue journal fully edited change prior final publication citation doi 10.1109/tdsc.2016.2539942 transaction dependable secure computing human factor computing ser chi 14. york ny usa acm 2014 29372946 28 e. von zezschwitz a. de luca h. hussmann honey shrunk key inuences mobile device password composition authentication performance proceeding 8th nordic conference human-computer interaction fun fast foundational ser nordichi 14. york ny usa acm 2014 461470 29 a. bianchi i. oakley v. kostakos d. s. kwon phone lock audio haptic shoulder-surng resistant pin entry meth- od mobile device proceeding international conference tangible embedded embodied interaction ser tei 11. york ny usa acm 2011 197200 30 a. bianchi i. oakley d. s. kwon secure haptic keypad tactile password proceeding sigchi conference human factor computing ser chi 10. york ny usa acm 2010 10891092 31 i. oakley a. bianchi multi-touch password mobile device access proceeding 2012 acm conference ubiq- uitous computing ser ubicomp 12. york ny usa acm 2012 611612 32 m. martinez-diaz j. fierrez j. galbally doodb graphical password database benchmark access 1 596605 2013 33 m. martinez-diaz j. fierrez j. galbally graphical password- based authentication free-form doodle transac- tions human-machine 99 18 2015 34 v. roth k. richter r. freidinger pin-entry method re- silient shoulder surng proceeding 11th acm conference security ser cc 04. york ny usa acm 2004 236245 35 t. takada fakepointer authentication scheme improving security peeping attack video camera mobile ubiquitous computing service 2008. ubi- comm08 second international conference 2008 395400 36 s. wiedenbeck j. water l. sobrado j.-c. birget evaluation shoulder-surng resistant graphical password scheme proceeding working conference advanced visual ser avi 06. york ny usa acm 2006 177 184 37 b. laxton k. wang s. savage reconsidering physical key secrecy teleduplication optical decoding proceeding 15th acm conference security acm 2008 469478 38 x. suo y. zhu g. owen graphical password technique advance visual computing 741749 2006 39 a. aviv k. gibson e. mossop m. blaze j. smith smudge attack smartphone touch screen usenix 4th workshop offensive 2010 40 s. chiasson p. van oorschot r. biddle graphical pass- word authentication cued click point security esorics 2007 359374 2007. transport\\ layer\\ security http //en.wikipedia.org/wiki/ 41 secure 42 l. cranor s. garnkel security usability oreilly medium socket layer ssl inc. 2005 43 google play http //play.google.com/store/ 44 android developer http //developer.android.com/index.html 45 android version distribution http //developer.android com/resources/dashboard/platform-versions.html 46 j. thorpe p. van oorschot human-seeded attack exploiting hot-spots graphical password proceeding 16th usenix security symposium usenix security symposium usenix association 2007 p. 8 47 s. wiedenbeck j. water j. birget a. brodskiy n. memon authentication graphical password tolerance image choice proceeding 2005 symposium usable privacy security acm 2005 112 48 android 2.2 platform highlight http //developer.android com/sdk/android-2.2-highlights.html b.s hung-min sun received m.s applied mathematics national chung-hsing 1988 1990 ph.d. science fromnational chiao-tung 1995. wa associate professor chaoyang 1995 1999 science national cheng- kung 2000 2002 science national cheng-kung 2002 2008. currently working full professor science national tsing hua published 150 international journal conference paper wa program cochair 2001 national security conference program committee member international conference wa honor chair 2009 international conference automation 2009 international conference development 2009 international conference telecom serf editor-in-chief international journal digital editor member international journal including isrn networking international journal security advance science service science international journal innovation international journal intelligent processing journal generation best paper academic journal conference including annual best paper journal science 2003 best paper mobisys09 nsc05 nisc06 nisc07 cisc09 ics2010 y. z. hsu scientic paper eastern y. z. hsu science memorial foundation 2010. interest include network security cryptography wireless network shiuan-tung chen received b.s applied mathematics na- tional chung hsing 2004 m.s national tsing hua univer- 2007. ph.d. science national tsing hua 2007 ph.d. candidate interest include forward error correction code reliable transmission applied cryptography jyh-haw yeh received b.a ap- plied mathematics national chung-hsing taiwan 1984 m.s science cleveland state cleveland ohio 1993 ph.d sci- ence florida 1999. joined science boise state 2000 wa awarded tenure 2006. served editor track chair pc member array international journal conference proceeding served panelist 2008 nsf cyber trust program current interest area security cloud security cryp- tography chia-yun cheng received b.s national sun yat-sen 2010 m.s de- gree national tsing hua 2012. interest include wireless network security multimedia security applied cryptography 1545-5971 2015 permitted republication/redistribution requires permission http //www.ieee.org/publications_standards/publications/rights/index.html 21.pdf originality 9 similarity 8 3 internet source publication paper primary source 1 2 3 4 5 6 7 8 ijircce.com internet source people.inf.elte.hu internet source bianchi andrea ian oakley hyoungshick kim `` passbyop bring picture securing graphical password '' transaction human- machine 2015. publication cd.dgb.uanl.mx internet source seclab.skku.edu internet source www.rroij.com internet source ieeexplore.ieee.org internet source advance intelligent computing 2016. publication 3 1 1 1 1 1 1 1 9 10 11 12 13 www.mass.gov internet source newbooks.mannlib.cornell.edu internet source etd.ohiolink.edu internet source www.ijritcc.org internet source lecture note science 2013. publication 1 1 1 1 1 exclude quote exclude bibliography exclude match 1 word scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner", "keywords": ["accuracy trial", "acm conference", "android pattern", "android pattern screen", "android version", "answer indicator", "answer sheet", "applied mathematics", "area image", "attack attacker", "attack random", "attack shoulder", "attack smudge", "attack smudge attack", "attacker password", "attention decade", "authen tication", "authentication graphical", "authentication graphical password", "authentication imageblock", "authentication imageblock based", "authentication method", "authentication passmatrix", "authentication password", "authentication phase", "authentication process", "authentication scenario", "authentication scheme", "axis generation", "bank atm", "bar cover", "bar vertical", "bar vertical bar", "based authentication", "based graphical", "based graphical authentication", "bianchi andrea", "birget brodskiy", "block image", "block image password", "block password", "brute force", "brute force attack", "chen jyhhaw", "chen jyhhaw yeh", "chiayun cheng", "choice image", "click point", "clicking password", "client device", "color ring", "computing ser", "conference human", "conference security", "conference usenix", "control specification", "coordinate database", "cover entire", "device authentication", "discretization image", "element bar", "entire authentication", "entire authentication process", "entropy passmatrix", "experience passmatrix", "experiment evaluate", "experimental setup", "fierrez galbally", "force attack", "google glass", "graphical authentication", "graphical authentication scheme", "graphical password", "graphical password authentication", "graphical password scheme", "guess attack", "guess attack shoulder", "guessing attack", "horizontal axis", "horizontal bar", "horizontal bar vertical", "horizontal vertical", "horizontal vertical bar", "human factor", "hungmin sun", "hyoungshick kim", "image block", "image block password", "image discretization", "image image", "image number", "image password", "image square", "imagebased password", "imageblock based", "imageblock based graphical", "improving authentication", "improving authentication imageblock", "increase password", "increase password space", "indicator passsquare", "inputting password", "international conference", "international journal", "internet source", "journal conference", "jyhhaw yeh", "jyhhaw yeh chiayun", "key icon", "le friendly", "le year", "letter number", "level security", "log account", "log passmatrix", "martinezdiaz fierrez", "martinezdiaz fierrez galbally", "mathematics national", "median standard", "median standard deviation", "memorizing issue", "mobile device", "mobile number", "mobile phone", "national tsing", "national tsing hua", "nidhi jitendra", "number image", "number passimages", "number time", "oakley hyoungshick", "oakley hyoungshick kim", "onetime indicator", "participant log", "passmatrix prototype", "passmatrix prototype android", "passsquare image", "passsquare passimage", "password authentication", "password authentication scheme", "password based", "password based authentication", "password entry", "password insecure", "password password", "password pin", "password scheme", "password shoulder", "password space", "password verication", "pattern screen", "phase participant", "phase phase", "phase registration", "pin digit", "pin entry", "pin method", "pin password", "pixel square", "practice phase", "practice phase phase", "predened image", "prototype android", "random guess", "random guess attack", "random guessing", "random guessing attack", "random number", "random string", "random string button", "registered mobile", "registered mobile number", "registration phase", "resistant graphical", "resistant shoulder", "restriction constraint", "samsung nexus", "science national", "screen indicator", "screen lock", "scroll bar", "second session", "secure computing", "security conference", "security textual", "security usability", "session participant", "shiuantung chen", "shiuantung chen jyhhaw", "shoulder surfing", "shoulder surfing attack", "shoulder surng", "shoulder surng attack", "shoulder surng resistant", "smart phone", "smudge attack", "socket layer", "square image", "square selected", "standard deviation", "state transition", "string button", "surfing attack", "surng attack", "surng resistant", "swaleha sarosh", "text password", "text password pin", "textual password", "time password", "total accuracy", "total accuracy trial", "total time", "touch screen", "tsing hua", "upload image", "uploading image", "usenix association", "usenix security", "username password", "vertical bar", "vertical horizontal", "video capture", "video capturing", "von zezschwitz", "vulnerable shoulder", "vulnerable shoulder surng", "web service", "wiedenbeck al", "yeh chiayun", "yeh chiayun cheng"], "libraries": [], "languages": ["php", "xml", "small", "io", "basic", "html", "java"], "frameworks": [], "dbs": ["mysql"]}, "./reports/24-Tierfs.pdf": {"title": "tierfs", "filename": "./reports/24-Tierfs.pdf", "data": "tierfs hatolkar abhiram b-80058560 jalamkar abhilash b-80058563 kumargaurav singh b-80058588 patil deepak b-80058616 guidance prof. d. d. londhe b.e 2015 411043 affiliated 2014-2015 411043 dissertation tierfs hatolkar abhiram b80058560 jalamkar abhilash b80058563 kumargaurav singh b80058588 patil deepak b80058616 record bonafide year 2014-2015 guidance _______________ ___________________ _________________ prof. d.d londhe dr. emmanuel m. dr. p. t. hod examiner_______________ acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting profoundly grateful prof. d. d. londhe expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. naman v. buradkar coordinator invaluable guidance supported completing express sincere heartfelt gratitude staff member helped directly indirectly course hatolkar abhiram jalamkar abhilash kumargaurav singh patil deepak ch topic abbreviation ii iii iv 1 1.1 1.2 need.. 2 basic concept 3 ... 5 2.1 2.2 done.. 6 existing ... 7 proposed ... 11 3.1 3.2 3.3 ... 12 ... 12 ... ... 14 ... 15 4.1 4.2 step acquire process 16 approach.. 16 4.3 ... 16 ... .. 18 5.1 5.2 5.3 5.4 tools.. 19 ... 24 ... 25 26 5.4.1 26 5.4.2 class 27 5.4.3 28 5.4.4 29 5.4.5 state 30 6 ... 31 1 2 3 4 5 7 8 6.1 6.2 screenshots code 32 comparison earlier work.. 34 scheduling ... 35 ... 38 8.1 8.2 39 ... 39 ... 40 tierfs hierarchical storage solution file level tierfs create file appropriate tier intelligently consideration policy file size file free space tier storage device tierfs move file automatically tier defined policy file move lower tier accessed long time tier full moved frequently add modify delete policy point time integrity maintained synchronization mechanism moving file tier tierfs file stored tierfs stored retrieved underlying tier knowledge movement file tier stubbing tierfs layer find actual location file seek daemon process running continuously check policy satisfied file file satisfying policy tier moved appropriate tier wrapfs fist based file template development tierfs keywords tierfs virtual file vfs hook fig 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9 6.1 6.2 6.3 6.4 normal file boundary .. 23 vnode stackable file .. 23 file boundary wrapfs 24 block tierfs ... 25 ... 26 class 27 ... 28 29 state .. 30 lookup code ... 32 tier mount code ... 32 code ... 33 makefile ... 33 ii 7.1 schedule.. 36 iii abbreviation abbreviation illustration file virtual file hierarchical storage multi-tier hybrid storage vfs hsm mths iv 1 1 1 tierfs 1 defined file stored retrieved well organized rule relation file storage method technique differ traditionally unix file hold operating bootstrap ordinary file convenient create install version operating develop ordinary program arrangement choose alternative version operating newer development fall back-up version reason default damaged unusable 2 1.1 hsm hierarchical storage policy-based file backup archiving storage device economically needing aware file retrieved backup storage medium hsm implemented standalone frequently distributed network enterprise hierarchy represents storage medium redundant array independent disk optical storage tape representing level cost speed retrieval access needed example file age archive automatically moved slower le expensive form storage hsm product administrator establish state guideline kind file copied backup storage device guideline hsm manages automatically throwing device generalize construct virtualize nice ordered arrange book arranged library 2 purpose file easy update maintain mounting file nice logical virtual disk device driver view disk continuous paper write note file code store bookkeeping serve kernel showing nice ordered virtual responsibility file ensure action program accessing remains consistent tierfs 2 1 1.2 basic concept amount disk space linux machine backed regularity observed main filer currently three tier tierfs tier1 main filer maytag ii tier2 file backed week iii tier3 file backed concept tierfs extend main filer 's disk space less- frequently backed-up space allocated tstaff main filer 's space file tierfs seamlessly incorporated main filer achieve tierfs-tools authored easy move file allocate space 's logic rule manage group called `` file '' unix-like operating create virtual file file device appear exist single hierarchy root directory file existing located unix-like ram disk network shared root directory file typically directory allow group file separate collection includes action program modifying terminates abnormally neglect inform file completed include updating metadata directory entry handling wa buffered updated physical storage medium length contained file stored number block allocated file byte count time file wa modified stored file 's timestamp file store file creation time time wa accessed time file 's metadata wa changed time file wa backed file storage device organize represent access stored dynamically generated 3 file include utility initialize alter parameter remove instance file include ability extend truncate space allocated file mechanism file control access intent prevent reading modifying file group reason ensure modified controlled access restricted specific program method encrypting file included file effective tierfs 3 1 file utility encryption seed effectively manage relying encryption include fact attacker copy brute force decrypt losing seed losing file limit defines maximum storable capacity limit best-guess effort designer based storage storage 2 tierfs 4 2 2 5 tierfs 2 ibm tivoli storage manager hsm window control disk storage automatically migrating rarely file move low-activity inactive file hierarchy lower-cost storage option gain efficient storage capacity solution based rules-driven migration policy 2.1 author paper considered burst buffer dedicated storage positioned compute node parallel file tier storage hierarchy fill performance gap node-local storage parallel file burst buffer store checkpoint increased reliability explore burst buffer improve efficiency compared node-local storage current storage facing bottleneck performance gap fast cpu computing speed slow response time hard disk multi-tier hybrid storage mths fast flash device solid state drive ssd performance storage tier proposed boost storage performance order maintain performance mths optimal disk storage assignment designed migrated performance tier ssd optimal 1 paper proposed optimal allocation disk storage mths allocation dap find optimal file storage tier mths achieve maximal benefit exceeding size tier formulate dap special multiple choice knapsack mckp propose multiple-stage dynamic programming mdp find optimal solution 2 mass storage challenge hadron collider lhc experiment nowadays critical issue tier-1 computing centre tier-0 centre involved custodial produced experiment tape mass storage strong amounting petabyte near-line access time solution employed energy physic community interesting option based interaction general parallel file gpfs tierfs 6 2 tivoli storage manager tsm ibm introduced gpfs version 3.2 allow gpfs tape storage manager 3 tsm performed performance study pre-production storm srm developed joint collaboration infn-cnaf ictp-trieste solution fulfill tier-1 wlcg centre storm-gpfs-tsm based entered production phase cnaf presently adopted lhcb experiment describe prototype test-bed discus 4 tivoli storage manager hsm window enhances productivity offering rapid access archived help maximize disk space minimizes backup time usage focusing active file migrates microsoft window file based file creation access modification transparently recall file original host needed advantage ibm tivoli storage manager server hierarchy storage tier reliable backup recovery function automatic threshold migration help maintain amount free space protected file enterprise storage typically multiple storage tier performance reliability recoverability primary multi-tier cost storage tier cost vary considerably paper describe file called tierfs store file multiple storage tier providing recoverability tier achieve tierfs novel technique leverage coupling multiple tier reduce loss consistent snapshot tier provide continuous protection improve recovery time evaluate tierfs analytical showing tierfs provide better recoverability conventional cost 2.2 existing unix organized file file organized directory tierfs 7 2 directory organized tree-like called file unix spend time working file unix three basic file ordinary file ordinary file file text program instruction tutorial working ordinary file directory directory store special ordinary file familiar window mac unix directory equivalent folder special file special file provide access hard drive cd-rom drive modem ethernet adapter special file alias shortcut enable access single file virtual file vfs virtual file switch abstraction layer top concrete file purpose vfs allow client access concrete file uniform vfs example access local network storage device transparently client noticing difference bridge difference window mac unix file access file local file file accessing vfs specifies `` contract '' kernel concrete file easy add support file kernel simply fulfilling contract term contract change incompatibly release release require concrete file support recompiled modified recompilation allow release operating supplier operating backward-compatible change contract concrete file support built release operating version operating point storage manager archive edition point storage manager archive edition purge archived automated hsm hierarchical storage functionality secondary storage release primary tierfs 8 2 storage advantage transparent access archived file primary storage policy-based file archiving- file archiver capability assist saving storage reporting view file server owner size pinpoint abuse storage deleting clean file server purge unneeded file check box file click delete reclaim storage minute archiving protect file copying archive server move older version file archive stubbing reclaim storage space disrupting remove older file file server replace intelligent stub automatically retrieves original file archive file archiver automatically remove file policy free space expensive storage device replaces file link file wa moved archive policy-based archiving create tiered storage environment automatically move static primary storage archive optimize storage utilization drastically reduce backup authentication security logon authentication file permission protect network unauthorized access physical access stolen laptop install operating bypass existing operating security sensitive exposed encrypting sensitive file efs add layer security file encrypted protected attacker full access storage authorized designated recovery agent decrypt encrypted file account permission fileeven ownership permissioncannot file authorization administrator account file account designated recovery agent unauthorized encrypted file access denied encryption file system-level encryption called file/folder tierfs 9 2 encryption form disk encryption individual file directory encrypted file contrast full disk encryption entire partition disk file resides encrypted file system-level encryption include 'stackable cryptographic file layered top main file single general-purpose file encryption cryptographic file full disk encryption general-purpose file include file system-level encryption typically encrypt file metadata directory file size modification timestamps problematic metadata confidential word file stored identifying file access physical disk document stored disk document replication- replicator includes volume replicator file replicator provide world-class cost effective continuous replication enabling rapid recovery critical remote recovery site distance ip network replicator option support major operating storage extremely flexible alternative traditional array-based replication replicating multiple server increase availability remote site fast reliable access file dfsr compression called remote differential compression rdc rdc `` diff wire '' protocol efficiently update file limited-bandwidth network participating replication defined configured topology connection called replication group multiple replicated folder included replication group membership selectively enabling disabling specific replicated folder tierfs 10 proposed 3 3 proposed tierfs 11 3 proposed 3.1 develop provide hsm solution file level developed tierfs move automatically defined tier accessed long time policy recalled accessed frequently based policy administrator add modify delete policy point time 3.2 storage tier represent tier term tier mounted dir capacity example tier 1 /mnt/data1 capacity -- xxx tier 2 /mnt/data2 capacity -- yyy tier 3 /mnt/data3 capacity -- zzz mount point directory typically empty currently accessible file additional file mounted i.e logically attached file hierarchy directory referred directory tree organize file linux unix-like operating top hierarchy root directory directory inclusive subdirectory variant definition entire hierarchy directory i.e directory tree located single partition disk partition logically independent hard disk drive hdd mount point root directory newly filesystem filesystem accessible directory original directory invisible inaccessible filesystem unmounted i.e detached main filesystem default mount point directory filesystems automatically mounted told listed /etc/fstab tierfs 12 3 proposed plain text configuration file major filesystems column /etc/fstab thedevice i.e partition disk second column default mount point /etc/fstab easily safely viewed commandsuch cat cat /etc/fstab mount point device listed /etc/fstab easily changed text editor gedit vi root i.e administrative permission conveniently acquired complete control su i.e substitute command entering root password easy damage /etc/fstab boot i.e start properly backup copy attempting edit example storage medium e.g cdroms floppy disk mounted subdirectory /mnt directory i.e /mnt/cdrom /mnt/floppy mounted default directory created e.g /cdrom /mnt/disk recorded mount point column completed booting device mounted automatically mounted existing mount point mount point example desired mount partition named /dev/hda5 partition hdd directory created /par5 /home/p5 partition mounted mount command i.e mount /dev/hda5 /par5 desired device mounted mount point automatically boot time /etc/fstab concept mount point confusing concerned mounting microsoft window operating avoided mounting cost loss flexibility configuration tierfs 13 3 proposed reason confusing term implies point directory directory thought container i.e holding directory file point concept clearer directory visualized node i.e point tree filesystem directory file branch container 3.3 policy rule a. define policy rule moved b. policy engine compiler point inconsistency policy definition archival archive moved tier rule recall recalled accessed frequently frequency controlled policy rule movement unit file object 14 tierfs 4 4 tierfs 15 4 4.1 step acquire process installing 64-bit centos 6.5 recompilation linux kernel 2.6.35 patching wrapfs creation compliation 4.2 approach unix file organized directory turn organized tree-like called file virtual file vfs switch abstraction layer top concrete file purpose vfs allow client access concrete file uniform vfs specifies `` contract '' kernel concrete file easy add support file kernel simply fulfilling contract term contract change incompatibly release release require concrete file support recompiled modified recompilation allow release operating supplier operating backward-compatible change contract concrete file support built release operating version operating tierfs call pas vfs tierfs allows define function object tierfs function allows function method vfs 4.3 4.3.1 tier manager tier manager responsible managing maintaining tier tierfs tierfs 16 4 4.3.2 migration recalling file help policy maintainer continuously check file migration migrates file hit policy responsible archiving tier policy hitting 4.3.3 policy maintainer policy maintainer carry addition modification deletion policy administrator 17 tierfs 5 5 tierfs 18 5 5.1 5.1.1 operating centos 6.5 centos abbreviated community enterprise operating linux distribution attempt provide free enterprise community-supported computing platform aim functionally compatible upstream source red rhel .the centos release 2004 numbered centos version 2 wa forked rhel version 2.1as version 5.10 6.5 centos officially support x86-64 x86 physical address extension pae beta release expected powerpc 5.1.2 kernel version linux kernel 2.6.35 linux kernel unix-like operating kernel variety operating based form linux distribution linux kernel prominent example free source linux kernel popular operating kernel addition wide variety device linux kernel number android-based device contribute kernel 's popularity linux kernel released gnu general public license version 2 gplv2 firmware image non-free license developed contributor worldwide day-to-day development discussion linux kernel mailing linux kernel wa initially conceived created 1991 finnish science linus torvalds linux rapidly accumulated developer adapted code free operating linux kernel received contribution programmer 5.1.3 compiler gcc gcc default compiler linux kernel source 2004 intel claimed modified kernel compiler wa capable compiling wa reported success 2009 modified 2.6.22 version kernel 2010 effort underway build linux kernel clang alternative compiler language 12 2014 official kernel compiled clang tierfs 19 5 dedicated effort named llvmlinux llvm compiler infrastructure clang built llvmlinux doe aim fork linux kernel llvm meta-project composed patch eventually upstream enabling linux kernel compiled clang advantage fast compilation time gcc kernel developer benefit faster workflow shorter compilation time 5.1.4 lio library standard i/o library simple efficient buffered stream i/o input output mapped logical stream physical i/o characteristic concealed function macro listed individual man stream associated file physical device opening file involve creating file creating existing file discarded file support positioning request disk file opposed terminal file position indicator associated stream positioned start file byte file opened append mode append mode unspecified position indicator start file position indicator maintained subsequent read writes positioning request input occurs character read successive call fgetc function output character written successive call fputc function file disassociated stream closing file output stream flushed unwritten buffer transferred host environment stream disassociated file pointer file object indeterminate file closed garbage file subsequently reopened program execution reclaimed modified repositioned start main function return original caller exit function called file closed output stream flushed program termination method program termination abort bother closing file properly program startup three text stream predefined opened explicitly standard input reading conventional input standard output writing conventional input standard error writing diagnostic output stream abbreviated stdin stdout stderr opened standard error stream fully buffered standard input output stream fully buffered stream tierfs 20 5 refer interactive device output stream refer terminal device buffered default pending output stream written automatically input stream refers terminal device read amount computation printing output terminal fflush standard output going computing output appear 1 git- version control record change file file time recall specific version example book source code file version controlled reality file graphic web designer keep version image layout version control vcs wise thing allows revert file previous state revert entire previous state compare change time modified causing introduced issue vcs generally screw thing lose file easily recover addition overhead people version-control method choice copy file directory time-stamped directory clever approach common simple incredibly error prone easy forget directory accidentally write wrong file copy file dont deal issue programmer long ago developed local vcss simple database change file revision control popular vcs wa called rcs distributed today rcs keeping patch difference file special format disk re-create file looked point time adding patch major issue people encounter collaborate developer deal centralized version control cvcss developed cv subversion perforce single server versioned file number client check file central year standard version control setup offer tierfs 21 5 advantage local vcss example administrator fine-grained control easier administer cvcs deal local database client setup serious downside obvious single point failure centralized server represents server hour hour collaborate save versioned change working hard disk central database corrupted proper backup havent lose absolutely entire history single snapshot people happen local machine local vcs suffer entire history single losing distributed version control dvcss step dvcs git mercurial bazaar darcs client dont check latest snapshot file fully mirror repository server dy collaborating client repository copied server restore checkout full backup deal pretty well remote repository collaborate group people simultaneously allows workflow centralized hierarchical 2 wrapfs- native file harder develop stackable file easier develop existing file wrapfs implemented stackable vnode 5 virtual node vnode linux memory inode unix-based operating represent file directory device e.g socket appear file namespace vnode doe expose physical file implement vnode allows higher level operating perform operation vnodes uniformly notable improvement vnode concept vnode stacking 3 technique modularizing file function allowing tierfs 22 5 vnode call stacking existed wa single vnode higher level operating code called vnode turn called code specific file vnode stacking instance vnode exist call code operation stack level typically call operation level 1 fig 5.1 normal file boundary 4 fig 5.2 vnode stackable file 4 tierfs 23 5 fig 5.3 file boundary wrapfs 4 5.2 5.2.1 processor 1.6 ghz cpu processor minimum speed 1.6 ghz slow lead turmoil tierfs concerned 5.2.2 ram 512 mb minimum 512 mb proper planned execution implemented 5.2.3 hdd space 40 gb hard disk drive space 40 gb wrapfs implemented tierfs 24 5 5.3 fig 5.4 block tierfs tierfs 25 5 5.4 5.4.1 fig 5.5 tierfs 26 5 5.4.2 class fig 5.6 class tierfs 27 5 5.4.3 fig 5.7 tierfs tierfs 28 5 5.4.4 fig 5.8 tierfs 29 5 5.5.5 state fig 5.9 state tierfs 30 6 6 tierfs 31 6 6.1 screenshots code fig 6.1 lookup code fig 6.2 tier mount code tierfs 32 6 fig 6.3 code fig 6.4 makefile tierfs 33 6 6.2 comparison earlier unix organized file file organized directory turn organized tree-like called file three basic file are- ordinary file directory special file virtual file vfs switch abstraction layer top concrete file purpose vfs allow client access concrete file uniform vfs specifies `` contract '' kernel concrete file easy add support file kernel simply fulfilling contract term contract change incompatibly release release require concrete file support recompiled modified recompilation allow release operating supplier operating backward-compatible change contract concrete file support built release operating version operating tierfs call pas vfs tierfs allows define function object tierfs function allows function method vfs 34 tierfs 7 scheduling 7 scheduling tierfs 35 7 scheduling duration start 1 phase 15 day 1 aug 2014 15 aug 2014 1.1 deciding 3 day 1 aug 2014 3 aug 2014 1.2 existing 2 day 4 aug 2014 5 aug 2014 1.3 discussing 4 day 6 aug 2014 9 aug 2014 solution 1.4 study basic concept 6 day 10 aug 2014 15 aug 2014 2 description phase 15 day 16 aug 2014 30 aug 2014 2.1 deciding 4 day 16 aug 2014 19 aug 2014 definition 2.2 deciding platform 4 day 20 aug 2014 23 aug 2014 language 2.3 identifying 5 day 24 aug 2014 28 aug 2014 term 2.4 preparing synopsis 2 day 29 aug 2014 30 aug 2014 3 phase 14 day 31 aug 13 sep 4 5 3.1 identifying 4 day 31 aug 3 sep 3.2 designing 10 day 4 sep 13 sep drawing coding 120 day 14 sep 14 jan phase 60 day 15 jan 16 tierfs 36 7 scheduling 5.1 identifying 30 day 15 jan 14 feb preparing 7.1 tierfs 37 8 8 tierfs 38 8 tierfs larger scale considering cloud tier 8.1 extended geographically situated location connected internet currently kernel version seamlessly kernel version number tier current scenario defined mounting administrator define installation 8.1 tierfs doe file efficient manner hsm solution file level developed tierfs move automatically defined tier accessed long time policy recalled accessed frequently based policy administrator add modify delete policy point time tierfs 39 1 sato k. mohror k. moody a. gamblin t. de supinski b.r maruyama n. matsuoka s. user-level infiniband-based file checkpoint strategy burst buffer cluster cloud grid computing ccgrid 2014 14th ieee/acm international symposium 26-29 2014 21 30 2 haixiang shi arumugam r.v chuan heng foh khaing optimal disk storage allocation multi-tier storage apmrc 2012 digest 31 oct- 2 nov 2012 1 7 3 carbone a. istituto nazionale di fisica nucleare sezione di bologna dell'agnello l. ghiselli a. gregori d. magnoni l. martelli b. mazzucato m. ricci p.p ronchieri e. sapunenko v. vagnoni v. vitlacil d. zappi r. novel approach mass storage custodial nuclear science symposium conference record 2008. 08. 19-25 oct 2008 3553 3557 4 aguilera m.k keeton k. merchant a. muniswamy reddy k. k. uysal m. improving recoverability multi-tier storage dependable network 2007. dsn 07 37th annual ieee/ifip international conference 25-28 2007 677 686 5 m. accetta r. baron w. bolosky d. golub r. rashid a. tevanian m. young mach kernel foundation unix development usenix conference proceeding atlanta ga 93-112. usenix summer 1986. tierfs 40", "keywords": ["abhiram jalamkar", "abhiram jalamkar abhilash", "abstraction layer", "basic concept", "burst buffer", "concrete file", "directory directory", "directory file", "disk encryption", "disk space", "file access", "file directory", "file file", "file server", "file storage", "file support", "file tier", "file virtual", "file virtual file", "free space", "hard disk", "hatolkar abhiram", "hatolkar abhiram jalamkar", "hierarchy root", "hierarchy root directory", "jalamkar abhilash", "linux kernel", "main filer", "mntdata capacity", "mount point", "ordinary file", "output stream", "parallel file", "partition disk", "root directory", "root directory file", "special file", "stackable file", "storage device", "storage manager", "storage medium", "storage tier", "switch abstraction", "switch abstraction layer", "tier file", "tivoli storage", "tivoli storage manager", "version control", "virtual file"], "libraries": [], "languages": ["basic", "clean", "beta"], "frameworks": [], "dbs": []}, "./reports/25_final_report.pdf": {"title": "live answer recognition through image   processing in andrid application", "filename": "./reports/25_final_report.pdf", "data": "live answer recognition image processing andrid kavya angara b120058562 renu tapdiya b120058643 kavita wakchaure b120058648 guidance dr. a. m. bagade sr. 27 satara road 411043 2016-2017 live answer recognition image processing android ms. kavya angara b120058562 ms. renu tapdiya b120058643 ms. kavita wakchaure b120058648 bonafide dr. a. m. bagade fulfilment earlier diploma _______________ dr. a. m. bagade __________________ prof. s.b deshmukh __________________ co-ordinator ________________ dr. p.t _________________ examiner sponsorship ii completion iii acknowledgement great pleasure presenting live answer recognition image processing android dr. a. m. bagade in-charge hod help guidance grateful valuable support valuable suggestion helpful extend gratitude coordinator prof. s. b. deshmukh guiding semester timely assistance dr. p.t consistent help support express gratitude abhinav solution mr. abhinav bhutada mr. jitendra patil guidance support thankful mr. amol lachake mr. mangesh shegokar providing providing facility support meet express gratitude appreciation opportunity completing directly indirectly helped ms. kavya angara b120058562 ms. renu tapdiya b120058643 ms. kavita wakchaure b120058648 iv title 1.1 3.1 3.2 3.3 4.1 4.2 4.3 4.4 4.5 waterfall use-case gantt class deployment 5 16 17 18 21 24 26 27 28 title 3.1 6.1 6.2 6.3 6.4 6.5 6.6 6.7 use-case description unit registration unit class creation unit creation unit real time scanning unit unit class operation integration 17 41 42 42 43 43 44 45 vi nomenclature component scale invariant transformation multiple choice question optical mark recognition pca sift mcq omr vii sponsorship completion acknowledgment nomenclature title 1 2 3 1.1 1.2 1.3 1.4 1.5 2.1 2.2 2.2 2.2 3.1 3.2 3.3 3.4 3.5 3.6 introduction/background aim development background review background review existing proposed specification definition context usage scenario gantt ii iii iv vi vii viii 2 2 3 4 4 5 8 8 9 9 10 13 13 14 14 15 15 17 18 18 21 21 24 25 26 28 30 30 35 35 35 40 47 47 47 48 49 50 3.7 3.8 staff 4 4.1 4.2 4.3 4.4 4.5 description description control description deployment 5 5.1 implemented 6 6.1 6.2 6.3 evaluation experimental setup snapshot strategy 7 7.1 7.2 bibliography base paper plagiarism function point review sheet ii iii iv 1 2 3 4 today innovation smart class digital education trending concept modernize age paper-pen fashion likewise ezee-test series connected ezee-class teacher note paper his/her analyse performance provide parent small ezee-class ezee-test mobile answering question feasible age time solve issue improved concept android allows teacher conduct perform real time assessment answer processing image coded sheet provided image coded sheet represents answer based held teacher retrieve answer sheet held scanning sheet efficient sheet answer reduce teacher overhead check answer enabled generate statistical help teacher parent analyse performance better keywords real time image coded sheet mobile android statistical live answer recognition image processing android 1 2016-17 1 live answer recognition image processing android organized 1.1 background proposed 1.2 aim 1.3 1.4 development 1.4 1.1 introduction/background ezee class ezee combined parent connecting filling gap current education ezee series connected ezee class teacher note paper his/her detailed performance provided parent proposed help teacher scanning answer allows teacher conduct perform real time assessment answer processing image coded sheet provided image coded sheet represents answer based held teacher retrieve answer sheet held creates individually subject class wise generated teacher weekly monthly performance graph help teacher track progress efficiently help reduce teacher 's overhead correcting evaluating answer sheet evaluation generated parent guardian email concept ezee ezee class interactive feasible current education scenario developing country india 1. teacher mandatory mobile registered current 2. coded image sheet 4 direction showing 4 answer question asked teacher 3. question raise coded image sheet answer held 2016-17 2 live answer recognition image processing android 4. teacher scan class room answer acquired teacher sure answer collected 5. answer him/her recognized based binary code detection 6. mark stored server based evaluation 7. performed generate wise 8. stored server generate weekly monthly wise performance graph 9. parent notifying performance 10. subject wise class wise provided teacher directing teacher conduct efficient teaching-learning process 1.2 aim 1.2.1 aim aim implementing android based educational teacher scan store answer evaluate analyse communicate efficiently parent help digitalising current examination accuracy le paper manual 1.2.2 main deliver series android allows teacher conduct efficiently scanning image coded sheet provided collecting real time answer deliver evaluate store analyse answer generate format deliver reduce overhead correcting answer-sheets better accuracy deliver communicate parent automatically bridging gap teacher parent 2016-17 3 live answer recognition image processing android deliver keep teacher updated providing graph class performance subject 1.3 examination procedure opting conduct multiple choice question mcqs theory main reason reduce overhead checking paper provide accurate justified evaluation processor reducing manpower mcq conducted rural area school conduct acquire amount proposed help conduct mcq rural area minimal amount allows teacher conduct perform real time assessment answer processing image coded sheet provided teacher smartphone retrieve answer sheet held performed generated 1.4 development waterfall documented well fixed clear definition product stable well understood ambiguous 2016-17 4 live answer recognition image processing android fig 1.1 waterfall benefit waterfall allows control departmentalization time developmental stage product process waterfall development step 1.5 organized 1 background relevance 1.1 explains background 1.2 explains 1.3 explains relevance 1.4 explains 2 background 2.1 explains background 2.2 explains review 2016-17 5 live answer recognition image processing android 3 specification 3.1 explains definition 3.2 explains specification 3.3 explains description 3.4 explains 4 4.1 explains proposed 4.2 explains description 4.3 explains description 5 5.1 explains implemented 6 evaluation 6.1 explains experimental setup 6.2 explains strategy 6.3 explains 6.4 7 7.1 explains 7.2 explains evaluation 7.3 explains 7.4 explains explains solution 7.5 explains 7.6 explains 2016-17 6 live answer recognition image processing android 2 2016-17 7 live answer recognition image processing android background review organized 2.1 background 2.2 review explains existing proposed 2.1 background ezee class ezee combined parent connecting filling gap current education ezee series connected ezee class teacher note paper his/her detailed performance provided parent proposed help teacher scanning answer allows teacher conduct perform real time assessment answer processing image coded sheet provided image coded sheet represents answer based held teacher retrieve answer sheet held creates individually subject class wise generated teacher weekly monthly performance graph help teacher track progress efficiently help reduce teacher 's overhead correcting evaluating answer sheet evaluation generated parent guardian email concept ezee ezee class interactive feasible current education scenario developing country india allows teacher conduct efficiently scanning image coded sheet provided collecting real time answer evaluates store answer generate format reduces overhead correcting answer-sheets better accuracy communicates parent automatically bridging gap teacher parent 2016-17 8 live answer recognition image processing android keep teacher updated providing graph class performance subject 2.2 review everyday require object recognition object distinguishable visual industry designed recognize object photo-snapping photo-snapping button acting camera shutter trigger photo subsequently object identification process photo good sufficient well provide good object recognition difficult correctly frame camera photo target object good position scanning image acquiring key frame avoids arising photo-snapping 1 classical approach image search step 1 step performed compare standard deviation three colour component hsv rgb format 2 second step euclidean distance coefficient stored image comparable image i.e calculated image smallest distance selected sorted matching image query 5 traditional object recognition static image sift efficient object descriptor sift fails recognize object variation based colour pca-sift proposed .this combination clustered voting scheme positive achieving localization detection multiple object video stream aimed scanning scenario extracting key frame processing 4 2.2.1 existing 1. approach based qr code detection examination conducted 2 subjective examination preferred automated existing qr code technology-integrated approach profit evaluation real-time feedback 2016-17 9 live answer recognition image processing android volume reduction processing speed environmental protection advantage qr code approach suitable scanning distance scanning distance size qr code image proportional qr code wa efficient 8 2. sift based object detection popular image matching scale invariant transform sift approach sift descriptor prefer grayscale image acquired color image order reduce complexity sift descriptor suffers major doe color colored image convert image colored image gray scale image majorly limit image matching performance amount color variation grayscale variation instance picture separate color luminance level point detected variation point detected missed 2 current solution suffer photo-snapping lead difficulty correctly frame camera picture target object good position generated stored server assigned unique image code increase storage space parent reported 2.2.2 proposed image detection major approach image processing order process image object relevant image object scenario retrieved consider scenario classroom classroom holding answer-sheets sheet retrieved scenario sheet considered image object processing object order retrieve answer order sheet classroom scenario contour-finding method 2016-17 10 live answer recognition image processing android contour-finding method object scenario separated basis color word border drawn colored surface processed shape contour drawn sheet rectangle/square shape contour rectangle/square shape rest discarded color sheet white sheet differentiated contour border shape sheet rectangle discarded processing scanning scenario contour square/rectangle shape blue-border contour stored array array element square/rectangle object answer-sheet square material .then array element function final array element answer identity random square object simply discarded 2016-17 11 live answer recognition image processing android 3 2016-17 12 live answer recognition image processing android specification organized 3.1 definition 3.2 explains specification 3.3 description 3.4 3.1 definition aim implementing android based educational teacher scan store answer evaluate analyse communicate efficiently parent help digitalising current examination accuracy le paper manual examination procedure opting conduct multiple choice question mcqs theory main reason reduce overhead checking paper provide accurate justified evaluation processor reducing manpower mcq conducted rural area school conduct acquire amount proposed help conduct mcq rural area minimal amount allows teacher conduct perform real time assessment answer processing image coded sheet provided teacher smartphone retrieve answer sheet held performed generated generated respective parent email automatically class performance subject performance graph build basis stored class progress academic 2016-17 13 live answer recognition image processing android 3.2 3.2.1 main allow teacher conduct efficiently scanning collecting real time answer main allow teacher conduct efficiently scanning collecting real time answer aim evaluating storing analysing reducing overhead evaluating increasing accuracy parent bridge gap teacher parent 3.2.2 main digitalise examination allow teacher collect real time formative assessment improve accuracy efficiency conducted bridge gap teacher parent track performance class individual reduce lesser 3.3 teacher add class conduct answer question image coded sheet provided teacher scan classroom question recognizes answer separately store evaluation automatically separately generated stored parent bridging gap teacher parent 2016-17 14 live answer recognition image processing android 3.4 context educational school teacher great real time formative assessment save time evaluation reduce increase accuracy allow teacher communicate parent effectively regularly 3.5 usage scenario 3.5.1 profile profile category described actor description described actor teacher parent server performed actor described actor performed teacher teacher log username password account add class class class adding number question marking scheme selected class subject teacher feed answer question scan image coded sheet class collect answer teacher view subject wise class wise performance graph sends parent server server connected database mark calculated stored server mark mailed parent monthly parent requested teacher parent parent secondary actor directly parent performance 2016-17 15 live answer recognition image processing android 3.5.2 use-case fig 3.1 use-case 2016-17 16 live answer recognition image processing android 3.5.3 use-case description 3.1 use-case description 3.6 gantt fig 3.2 gantt 2016-17 17 live answer recognition image processing android 3.7 staff 3.7.1 consists three fig 3.3 3.7.2 member role monitor keep track preparing sponsor assigns monitor involve coding documentation guidance 3.8 3.8.1 intel dual core processor minimum 2gb ram hard disk space 50gb 2016-17 18 live answer recognition image processing android android phone minimum 5mp camera 3.8.2 window 7/ubuntu 14.04 android studio version 1.0 android version 4.0 android sdk opencv version 3.1.0 2016-17 19 live answer recognition image processing android 4 2016-17 20 live answer recognition image processing android organized 4.1 complete architectural proposed 4.2 description 4.3 description 4.1 fig 4.1 2016-17 21 live answer recognition image processing android 4.1.1 main component main component 1. android teacher 2. answer recognition 3. storage 4. database 5. 4.1.1.1 android teacher component teacher requires teacher log username password account add class class class adding number question marking scheme selected class subject teacher feed answer question scan image coded sheet class collect answer teacher view subject wise class wise performance graph sends parent 4.1.1.2 answer recognition main working component teacher scan classroom answer acquired frame scanning image coded sheet held correctness answer checked mark allotted recognition binary code detection technique roll number binary code image coded sheet roll number scanned decoded considering rotation sheet 2016-17 22 live answer recognition image processing android 4.1.1.3 storage component storage acquired scanning image sheet mark based correctness answer calculated database stored based evaluation judge performance individually class subject graph generated percentage includes performance subject includes graph displaying class performance subject wise performance helpful teacher 4.1.1.4 database component database stored database mysql database 3nf 3rd normalization form connecting database stored.in username teacher mail password stored.there separate class roll number parent mail id.and subject stored separate created subject class.in multiple requested teacher database fetched request output 4.1.1.5 component responsible bridging gap teacher parent sending mark parent number performance communicated parent help email 2016-17 23 live answer recognition image processing android 4.2 description 4.2.1 description kind input 1. class 2. output generated 1. 2. 4.2.2 class fig 4.2 class 2016-17 24 live answer recognition image processing android 4.3 description 4.3.1 description function function performed basic functionality registration phase includes uploading i.e teacher basic username email-id password teacher save database setting class phase includes adding roll number parent email-id includes addition subject class phase phase includes feeding answer question scanning image coded sheet held class acquiring answer identifying phase phase answer acquired frame scanned previous phase step identifying roll number performed binary code detection technique storing phase answer acquired stored evaluated based evaluation mark calculated stored database performance mark calculated phase stored conveyed respective parent performance communicated parent email 4.3.2 description described provide registration phase display allow logging display function add class function display addition class screen function invoke surface view camera display graph info fetch database display 2016-17 25 live answer recognition image processing android 4.4 control description 4.4.1 fig 4.3 2016-17 26 live answer recognition image processing android 4.4.2 fig 4.4 2016-17 27 live answer recognition image processing android 4.5 deployment fig 4.5 deployment 2016-17 28 live answer recognition image processing android 5 2016-17 29 live answer recognition image processing android organized 5.1 explains main implemented 5.1 implemented consists android android studio database mysql sqlite php connectivity android php main implemented teacher interaction key-frame extraction identifying acquiring answer storage 5.1.1 teacher interaction responsible teacher interaction includes uploading i.e teacher basic username email-id password teacher save database includes adding roll number parent email-id addition subject class 5.1.2 key-frame extraction phase includes feeding answer question scanning image coded sheet held class scanning acquiring square frame detecting square 1. store camera frame image object 2. down-scale upscale image filter noise 3. find square colour plane image 2016-17 30 live answer recognition image processing android i. ii find contour store contour a. approximate contour accuracy proportional contour perimeter b. square contour 4 vertex approximation area filter noisy contour convex c. find maximum cosine angle joint edge d. cosine angle small angle ~90 write quandrange vertex resultant array store square 4. resultant array square passed processing 5.1.3 identifying responsible identifying roll number procedure acquired frame identified binary code detection technique detecting 1. square convert square casting class rect 2. cast rect object mat object 3. mat object converted bitmap object processing 4. bitmap object passed 'getstudent bitmap bmp function 5. inside function i. bitmap object divided logically 12 horizontally 2 vertically i.e exactly half ii pixel pixel co-ordinate calculated w/2 11*h/12 6th block pixel w/2 9*h/12 5th block pixel w/2 7*h/12 4th block pixel w/2 5*h/12 3rd block pixel 2016-17 31 live answer recognition image processing android w/2 3*h/12 2nd block pixel w/2 h/12 bottom block pixel w- width bitmap h-height bitmap iii calculated pixel compared pixel white pixel range black pixel range 1 match black 0. stored array size 6. array binary digit convert iv v. vi decimal eg.000101 coverted 5. vii decimal returned function 6. returned stored 7. function return 1 bitmap discarded 5.1.4 acquiring answer answer acquired frame scanned key- extraction acquiring answer 1. square convert square casting class rect 2. cast rect object mat object 3. mat object converted bitmap object processing 4. bitmap object passed function i. ii iii iv is_a bmp is_b bmp is_c bmp is_d bmp 5. inside function i. bitmap object divided logically 8 horizontally vertically ii pixel pixel co-ordinate calculated w/8 7*h/8 top left pixel w/8 h/8 top pixel 2016-17 32 live answer recognition image processing android 7*w/8 7*h/8 bottom left pixel 7*w/8 h/8 bottom pixel w- width bitmap h-height bitmap iii calculated pixel compared pixel white pixel range black pixel range iv match pixel function 's answer 1 returned 0 returned 6. 1 returned answer assigned returning function 's answer 7. function return 1 bitmap discarded 5.1.5 storage responsible storage detected answer identified local storage sqlite server storage mysql play connection server android- php connection stored answer processed calculate total mark respective subject formula graph generated graphview library android aspect interactive parent teacher sending mail mark performance help bridging ga teacher parent maintaining transparency accuracy 2016-17 33 live answer recognition image processing android 6 2016-17 34 live answer recognition image processing android evaluation organized 6.1 explains experimental setup 6.2 explains strategy 6.3 6.4 6.1 experimental setup experimental setup described hosted server webhost free tier mysql store database phpmyadmin store mysql database android studio front java coding php connect mysql android sqlite database local storage graphview library implementing firstly layout created android retrieved database php request database android php occurring client server code executed emulator change converted .apk format android studio .apk file imported android phone installed executed 6.2 snapshot snapshot registration 2016-17 35 live answer recognition image processing android snapshot authentication snapshot screen snapshot creation class snapshot addition subject class 2016-17 36 live answer recognition image processing android snapshot database server snapshot real time scanning 2016-17 37 live answer recognition image processing android snapshot answer acquisition 2016-17 38 live answer recognition image processing android snapshot stored server database snapshot graph generated 2016-17 39 live answer recognition image processing android snapshot generated parent 6.3 strategy 6.3.1 unit unit strategy unit process development small individually tested unit individually tested integrating help unit amount error removed good built unit designed tested separately find bug bug error corrected main advantage unit individually unit thing sure tested separately multiple tested simultaneously unit input individual check output output correct tested output bug error change correct bug error unit applied process continues correct error free output unit strategy amount 2016-17 40 live answer recognition image processing android bug error minimized built efficient unit strategy 6.3.1.1 1 aim teacher registration 6.1 unit teacher registration expected actual 1 2 3 4 5 12mark username mark password mark123 confirm password mark123 email abc gmail.com 12mark username mark password mark123 confirm password mark123 email abc.com 12mark username mark password mark123 confirm password mark1234 email abc gmail.com 12mark username mark password mark123 confirm password mark123 email abc gmail.com username mark password mark123 teacher 's number registered expected invalid email teacher registered expected incorrect password confirmation teacher registered expected correct expected teacher database username password expected teacher logged 2016-17 41 live answer recognition image processing android 2 aim class creation 6.2 unit class creation expected actual class be10 number 0 number subject 2 class be10 number 5 number subject 0 class be10 number 5 number subject 4 1 2 3. 3 aim creation number greater 1 class creation failed number subject greater 1 class creation failed correct class creation expected expected expected class subject created database 6.3 unit creation expected actual select class be10 select subject be10_mc number question 0 mark question 2 select class be10 select subject be10_mc number question 5 mark question 2 negative mark question 3 select class be10 select subject be10_mc number question 5 mark question 2 negative mark question 1 number question greater 0 start expected expected neagive mark greater mark question start showind invalid selection enter correct start expected started 2016-17 42 1 2 3. live answer recognition image processing android 4 aim real time scanning recognition answer recognition updation parent 6.4 unit real time scanning expected actual individual question number class 5 sheet scanned expected question finish question scanned showing question scanned stored database ii individual 's parent expected expected column created score 1 2 3. 5 aim 1 2. 6.5 unit expected actual class be10 class be10 subject mc displayaing bar graph class subject horizontal axis performance subject vertical axis displaying graph subject number horizontal axis performance vertical axis expected expected 2016-17 43 live answer recognition image processing android 6 aim class operation view rename delete 1 2 3. 6.6 unit class operation expected actual class be10 view info selected properly fetched displayed expected showing class te10 rename te6 class be9 delete selected class respective subject changed expected class be9 respective subject deleted databse expected 2016-17 44 live answer recognition image processing android 6.3.2 integration 6.7 integration expected actual teacher registration class creation class operation success success teacher 's stored database he/she username password ii teacher session started class created ii subject created roll number foreign key class success scanned sheet stored score percentage subject ii score mailed parent class success success performance graph class well subject class shsuccessfully sown class proprly fetched ii class renamed iii class respective subject deleted sr 1 2 3 4 5. 2016-17 45 live answer recognition image processing android 7 2016-17 46 live answer recognition image processing android organized 7.1 7.2 explains 7.1 help help teacher collecting real time formative assessment provided image coded sheet answer multiple choice question roll number assigned binary code format generic accurate store evaluates answer generation includes progress class wise subject wise bridge gap teacher parent providing email performance graph teacher parent making complete interactive efficient 7.2 extended increase accuracy extensibility extended scanning omr sheet correcting time answer omr sheet completion sheet scanned help well answer detected answer score stored database extend national level institution-wise machine learning score 2016-17 47 live answer recognition image processing android 1 yu zhong pierre j. garrigues jeffrey p. bigham real time object scanning mobile phone cloud-based visual search engine 2501 9th st berkeley 94710 usa 2015 2 yan zhao1 yuwei zhai eric dubois2 shigang wang image matching based sift color exposure journal electronics 27.no 3 2016 3 prima dewi purnamasari jodhi adhikaprana sardjono dean zaka hidayat color code innovative attractive differentiate product international conference 2016 4 stefan zickler manuela m. veloso detection localization multiple object carnegie mellon pittsburgh pa 15213-3890 2007 5 fei lei1 wei ren1 lu lv1 image matching based improved harris international conference computational intelligence network 2015 6 m. uma devi c. raghavendra rao arun agarwal image processing technique identification printing document forensic perspective ijca special issue rtippr 2010 7 nileshrao c. sawant renuka panchagavi comparative image processing technique pest detection international journal advanced science volume 6 issue 3 2016 8 falguni patil utkarsha bhandari madhuri kasar qr code approach examination process international journal innovation trend computing volume 3 issue 2 2015. 2016-17 48 live answer recognition image processing android bibliography herbert schildt complete java 7th 1996 ian darwin android cookbook 2nd 2016 2016-17 49 live answer recognition image processing android 2016-17 50 real time object scanning mobile phone cloud-based visual search engine yu zhong rochester rochester ny 14627 usa zyu cs.rochester.edu pierre j. garrigues iq engine inc. 2501 9th st berkeley 94710 usa pierre iqengines.com jeffrey p. bigham rochester rochester ny 14627 usa jbigham cs.rochester.edu vision human-powered service provide blind people access visual efficacy dependent high-quality photo input blind people difficulty capturing picture paper scan search mobile offer blind people high-quality photo support recognition support real- time scanning object developed key frame extraction automatically retrieves high-quality frame continuous camera video stream mobile phone key frame streamed cloud-based recognition engine identifies object inside picture blind scan object interest hear potential real time study exploring tradeoff photo conduct study 8 blind participant compare scan search standard photo-snapping scan search allows capture object interest efficiently preferred standard category subject descriptor h.5.2 presentation k.4.2 social issue assistive person disability general term human factor experimentation keywords real time object scanning accessibility blind mobile 1. everyday require object identification object indistinguishable visual example food product size packaging apart label quick accurate visual scan sighted person help blind people minor finish daily permission digital hard copy classroom granted fee provided copy distributed profit commercial advantage copy bear notice full citation copy republish post server redistribute requires prior specific permission and/or fee asset '13 21 23 2013 bellevue wa usa copyright 2013 acm 978-1-4503-2405-2/13/10 15.00 independently blind people workarounds render individual mere nuisance collectively small lead decreased independence 7 industry designed help blind people recognize object applying vision 10 11 16 human computation 5 7 26 photo- snapping button acting camera shutter trigger photo subsequently object recognition event input photo good abundant well provide good recognition photo-taking current mobile phone friendly blind smart phone acoustic feedback photo-taking fact lead difficulty blind people correctly frame camera picture target object good position camera perfectly framed object distance good area object facing camera inside frame focus inside photo identify object example camera facing wrong side food product advertisement nutrition fact photo difficulty blind photography assistive service le beneficial blind people worker powering vizwiz 7 camera positioning guidance help blind better photo minute recognize object longer time complete individual object identification desired 4 service powered vision lack difficulty constructing automatic well paper introduce scan search aiming enabling real time object scanning blind people help accurately identify everyday object blind people scan search existing camera phone automatically extract good frame camera feed sends frame iq engine web service identification iq engine cloud-based visual search engine public dataset image packaged good print medium brand logo 6 current assistive object identification scan search doe photo button blind object identified front camera start scanning angle distance real-time identification scan search intelligently decides frame process conserve computational opposed fully process frame leverage cloud-based visual search engine address general scenario opposed ocr 18 currency recognition 10 bar code scanning 11 offered scan search real-time scanning fashion save time blind position camera order single high-quality photo wait feedback study scan search allows blind identify food product success rate 91.7 opposed photo-snapping success rate 62.5 image recognition mechanism scan search efficient computational networking iphone visual search engine iq engine 6 doesnt high-resolution input image experiment bandwidth wa 50 kb/s deployed range smart phone long camera reasonable resolution prevalence smartphones better accessibility phone 2 scan search benefit population visual impairment contribution paper include efficient automatically extract good information-rich frame continuous camera video stream ii mobile scan search enables blind scan everyday object real-time identification iii usability study scan search preferred blind standard photo-snapping effectiveness efficiency good photo identifying object 2. 2.1 accessibility mobile phone decade mainstream cellphone inaccessible blind people blind people rely separate screen reading mobile speak pocket msp 13 best access phone limited price dollar addition price smart phone year smart phone manufacturer started develop screen reading allows blind people phone include operating ship free example apple iphone 3gs voiceover1 android-powered starting 4.0 smartphones support eye-free2 multi-touch interaction nokia released free screen reader online store 20113. touchscreen device iphone thought inaccessible blind well-designed multi-touch leverage spatial layout screen preferred blind people 8 iphone proven popular blind developed version scan search io accessibility smart phone platform improving existing graphic web browser accessible blind people 1 http //www.apple.com/accessibility/voiceover 2 http //code.google.com/p/eyes-free/ 3 http //conversations.nokia.com/2011/10/27/nokia-rolls-out-new- screen-reader/ 1 3-step iq engine visual search achieve real time experience scan search vision server scalable designed blind including limited gps navigation way-finding ocr reader currency/color recognizers object identification 2.2 object identification blind people object identification frequent people daily life critical step completing complicated object identified visual example tactual object differentiable visual characteristic size tactual feel label blind people work-arounds small seek help sighted person collectively decreased independence le efficiency frustration prior study identification common visual challenge blind people seek help access 41 category question 4 access help blind people object identification kind approach vision powered automatic service human-powered service vision powered service generally faster response time better availability limited error-prone 7 human-powered service flexible economical service require level input photo provide satisfactory small lead 2.2.1 vision powered service mobile phone accessible object identification employ vision identify object inside input photo captured blind real time object identification mobile phone local dataset faster dont require network connection specific computational storage mobile phone comparable desktop web server instance looktel money reader 10 identify currency 2. scan search read frame camera buffer extract key frame stream sends key frame cloud-based visual search engine recognition denomination instantly le 0.5 second currency country kind object identification combine local image search web visual search engine web server store bigger datasets heavy computational faster mobile phone wide range object respond real time example omoby 16 pass locally unrecognized photo visual search engine trained image match good network connection return remote search le 2 second helpful blind people daily life vision service fail long time blind identify object recognition rate blind people access visual difficult frame good photo optical inside cant provide camera framing guidance time blind multiple time s/he identification s/he succeeds 2.2.2 human-powered service human-powered service vizwiz 7 real human visual scan input photo wider range object lower image main advantage service provide camera positioning guidance blind order answer blind question context identifying object human computation fast requires time recruit online worker wait well-designed infrastructure provide real-time response instance vizwiz answer question le 30 second steady pool worker maintained 7 practice factor performance human-powered service lower availability online worker time period day malicious worker camera guidance blind photo inside aggregating time sending photo feedback longer desired frustrating complete 2.3 blind photography number published article 1 3 20 21 24 blind people photo multiple reason including sending remote sighted people feedback general object recognition 3 despite current camera marginally accessible lead poor-quality photo blurry tilted improperly framed instance 17 question vizwiz answered photo wa poor 4 effort 3 14 15 19 22 25 assist blind people better inaccessible camera 9 28 facilitate instance developed m. vzquez al 15 help visually impaired aim camera effectively assist blind frame better photo applying optical region interest better framing blind despite breadth blind people lower photo sighted people 15 indicating area high-quality photo blind people insufficient instance high- photo box label scan search help solve blind direct feedback camera 2.4 iq engine visual search engine scan search iq engine cloud-based image recognition service built top public dataset image private dataset created searching best flat object packaged good including limited beer wine label logo print ad book cd/dvds poster artwork iq engine service option process local visual search query io android phone remote search engine query triggered pas unrecognized image human-powered service guaranteed response order maintain controlled experiment condition evaluate real- time scanning option enabled scan search local search human-powered service disabled single visual query le 1 second finish good network connection accepts photo resolution ranging 200x200 800x800 network efficient mentioned iq engine handle visual search query matching input photo frame chosen scan search local image dataset mobile phone enabled 1 sends photo cloud-based server remote matching image private public datasets matching forward human-powered service le 10 second respond enabled return match 3. scan search scan search iphone designed voiceover iphone 3gs interaction identify object real-time scanning simple intuitive fully accessible blind 3.1 description 2 scan search facilitate real time object identification scanning object key frame extraction described continuous camera video stream retrieve frame frame defined stableness camera time frame recorded richness visual characteristic indicated green point 2 second object recognition sends key frame visual search engine recognition subsequently returned visual audio feedback matching stored accessible history order picture time blind review object identified differentiate picture corresponded start scan search start read frame buffer iphone camera process frame determine good considered key frame frame pass validation process resized encoded 640x480 jpg file iq engine visual search engine described previous visual audio hint time key frame sending event continues incoming frame waiting asynchronous recognition query finish recognition arrives phone alert visual audio feedback positive match object dataset match stored history review 3.2 key frame extraction 3.2.1 mainstream phone camera capture frame rate 30 fps impractical send frame camera buffer cloud-based visual search engine network bandwidth inefficient buffered frame blurry improperly framed image captured camera adjusting phone position sending buffer waste network computational addition single object identification visual search engine good image abundant optical characteristic efficiently accurately retrieve good image continuous video designed lightweight optical phone enable real time key frame extraction heuristic extracting key frame photo handheld camera camera steady well-focused actual photo-taking time visual included frame dont picture scene inefficient waste processing computational capacity limited mobile platform perform heavy calculation bearing principle mind leverage lightweight lucas kanade optical method 12 efficiently track point amount point frame indicator optical richness correspondent frame estimated movement specific frame previous serf indicator stableness camera lucas-kanade benchmarking stableness camera optical richness frame 3 continuously video stream break stream segment segment represents scene optical neighbor segment good frame extracted key frame scene order ensure efficiency 3. key frame extraction 3.2.2 popular optical flow-tracking lucas-kanade method included opencv 17 library platform including io 2.4 version firstly proposed 1981 12 nowadays mainstream smart phone computational power apply real time instance 800mhz a5 processor iphone 4 process 240x320 grayscale frame rate 15-20 fps key frame extraction compiled opencv library platform including io android linux easily ported embedded paper evaluate optimize performance io order better serve blind scan search tested android evaluation optimization discussed applicable platform 3.3 evaluation optimization performance key frame extraction depends device parameter setting evaluate optimize putting scan search illustrated 3 three parameters/thresholds key frame extraction a. movement threshold threshold point movement consecutive frame point moved distance smaller threshold considered stationary point subsequent computation discarded order compatible camera resolution movement threshold defined percentage width height frame whichever smaller instance frame size 640x480 movement threshold 1 stationary point move 480*1 -1 3 pixel b. initialization threshold threshold percentage left stationary point specific frame compared amount point frame current segment video stream segment point discarded movement percentage drop 100 frame gradually percentage lower threshold consider scene captured switch fresh segment c. stableness threshold threshold number stable frame needed frame considered key frame segment specific frame considered stable frame point discarded movement comparing previous frame frame categorized stable stable frame counter increment 1. counter reach threshold current stable frame outputted key frame segment order ideal performance analyzed parameter affect performance parameter stableness threshold depends processor speed generally faster device running larger best-fit stableness threshold instance phone camera capture clear well- focused image held stably 0.5-1 second frame 0.1 second process stable frame counter 5-10 indicates good time extract key frame processing speed 20 fps corresponds stableness threshold 10-20. parameter processor specification iphone best empirical stableness parameter iphone 4 4gs 5 listed 1. 1. empirical stableness threshold setting iphone 4 iphone 4 iphone 5 processor 27 threshold a4 clock speed unrevealed a5 800 mhz a6 1.3 ghz 10 15 20 order portable mobile platform empirical threshold setting implemented dynamic stableness threshold adjusting mechanism automatically threshold formula formed logic described stableness threshold ti time process i-th frame total number frame processed movement initialization threshold complicated le dependent performance directly affect quantity key frame extracted video stream adjusting movement threshold face tradeoff key frame number redundant key frame 2 lower movement threshold fewer point considered stationary harder frame pas stableness leading better key frame stream segment stationary point drop initialization threshold faster leading segment subsequently key frame extracted stream initialization threshold tradeoff thoroughness visual scanning amount redundant key frame logic 2 lower initialization threshold lead smaller difference optical characteristic consecutive segment leading thorough retrieval key frame extracted stream better understand tradeoff parameter experiment evaluate performance parameter optimized 3.3.1 experiment experiment differed dataset visual search engine wa conducted controlled private dataset trained image object experiment second wa conducted public dataset better evaluate expected performance practice experiment subject object three food size tactual feel label 13 picture object angle distance trained private dataset image matching amount key frame extracted parameter setting theory negative correlation number key frame movement threshold correct well positive correlation initialization threshold linear regression aggregated wa verify recorded 20-second video object simulated scanning object moving camera object zooming in/out angle script wa extract key frame video parameter setting send image extracted visual search engine match entry private dataset object identification second experiment subject object wa single canned food script process 30-second scanning video object extract key frame match trained image large-scale public dataset measure performance parameter visual query wa recorded movement threshold ranged 1 10 interval 1 initialization threshold wa chosen 1 5 10 20 referred 3.3.2 discussion parameter setting counted number key frame extracted calculated percentage frame inside object identified simplicity percentage higher percentage identified frame regarded indicator better key frame extracted experiment extracted key frame signal thorough retrieval redundancy parameter performance measurement analyzed identification rate 4. identification rate controlled dataset movement initialization threshold 4 identification rate varies object experiment object distinguishable visual logo distinct edge linear regression aggregated movement threshold predicted identification rate -1.11 37 -4.90 .001 hand initialization threshold didnt explained proportion variance identification rate r2 .39 2 37 12.03 001 finding negative coefficient movement threshold conforms theory parameter described previous private dataset small controlled key frame correctly identified engine average identification rate 76.23 5.07 5. number key frame extracted movement initialization threshold length bar total number key frame red unidentified frame identified frame finding 5 higher movement threshold predicted fewer key frame -204.85 37 -7.15 .001 higher initialization threshold predicted key frame 40.59 37 3.51 .01 explained proportion variance number key frame r2 .63 2 37 31.705 001 individual object varies difference visual video position trend individual average 30.45 frame extracted three video 8.25 total length three video 60 second frame extracting speed 1 frame 2 second file size 640x480 jpg 100 kb maximum network uploading bandwidth needed 50 kb/s supported wireless connection e.g edge 5 noticed movement threshold negatively correlated number key frame peak frame number appear 2 movement threshold explanation bump 1 2 movement threshold pre-processing step frame converted 160x240 grayscale image alleviate burden tracking 1 movement threshold stationary point move 160*1 1 0 pixel essentially move camera shake common handheld photograph light situation e.g inside building 23 1 strict segment video stream key frame extracted counterbalanced segment second experiment conducted large-scale public dataset insight expected performance practice 6 correlation movement/initialization identification rate well number key frame threshold threshold movement 6. experiment public dataset corroborated observation linear regression predicted identification rate -0.94 37 -2.96 .01 number key frame -126.36 37 -6.62 .001 hand initialization threshold predicted number key frame 32.72 37 4.24 .01 explained proportion variance identification rate r2 .24 2 37 5.77 01 number key frame r2 .63 2 37 30.89 001 confirmed public dataset theory parameter setting valid identified subject object video parameter setting interested difference private public datasets obvious change identification rate dropped 70 45 27.66 6.35 public dataset doe trained image subject object private dataset observed query returned ambiguous positive e.g canned food ground truth progresso vegetable classic bearing reality issue large-scale dataset lack access visual blind mind decide choose parameter setting allows redundancy change thorough scanning order enable blind identify object easily ability filter positive sacrifice key frame defined movement threshold 2 initialization threshold 10 scan search 4. study explore effectiveness scan search assisting blind identify object everyday life compare scanning standard photo-snapping conducted study 8 blind people 6 male 2 female age participant ranged 21 52 30.88 study wa conducted remotely blind participant iphones phone iphone 4 1 iphone 4 4 iphone 5 3 participant paid 5 consented online affiliated control condition developed object identification key frame extraction control push button picture omoby 16 taptapsee 26 study participant briefed worked identify object image opened web browser study asked find identify three differently shaped everyday object bottle water/light drink/beer ii food iii frozen dinner carton milk object trial confirmed exist public dataset failed trial poor picture visual search engine lack appropriate trained image participant encouraged photo distance angle camera orientation receive instruction participant scan search control identify object 3 category 6 trial participant alleviate short-term memory object positioning order randomized object identification wa limited 5 minute exceeded time limit considered failed discontinued completion time recorded completion time wa defined interval time start identify object time s/he receives satisfactory defined accurate her/him service identify object example accurate description product bar code number 5. discussion participant completed experiment network connection ranging slow edge speed wi-fi average image matching cloud le 1 second 11 48 total trial failed 9 failed trial occurred control condition standard photo-snapping failed control condition wa reviewing trial image positive wa accepted participant time easier blind identify object scan search photo-snapping success rate scanning 91.67 wa higher photo- snapping 62.5 46 6.29 .016. average time identification scan search wa 73.2s compared 126.4s control 42 le difference wa detectably variation completion time trial succeeded lucky starting position camera captured distinct area target object le three photo instance upc label worked well search wa trial 5 complete trial produced 3 picture correctly identified object suggesting visual search challenging blind people wa performed trial scan search needed 24.43s average photo-snapping 75.57s blind locate visual needed identify object faster scan search difference wa 12 5.99 .031 photo participant better scanning key frame extracted guaranteed non-blurry well-focused reason blind succeeded trial scanning average number photo trial scanning 11.4 photo-snapping 14.1 46 0.41 .523. suggests overwhelm picture observation worth noting blind level camera skill audible guided exploration visual scene helpful familiar photography study participant asked short preference scanning standard photo-snapping general feedback 7 participant prefer 1 prefer scanning photo-snapping 6 participant continue scan search daily life fast good 2 participant wa surprised recognize object random scanning 6. paper contributed extract high-quality visually-rich frame continuous camera video experiment evaluate optimize accessible real-time scanning blind people identify everyday object usability study approach better current standard camera lack accessibility blind people accessible mobile picture-based scan search improves blind experience multiple area study presently conducted combing frame extraction crowdsourcing real time camera framing assistance create improve accessible address image dataset scalability improvement scan search ongoing enable end-users train datasets phone cloud order customize visual search stage continue level refine scan search based feedback distribute public market better understand potential real-world benefit hand well improve optical account compare key frame extraction method instance naive sampling key 7. acknowledgment wa supported national science foundation iis-1116051 iis-1149709 national health r44ey019790 8. 1 blind camera http //www.blindwithcamera.org/ 2 burton d. 2011 current state cell phone accessibility 3 c. jayant h. ji s. white j. bigham supporting blind photography asset 2011 2011 4 e. brady m. morris y. zhong s. white j. bigham visual challenge everyday life blind people chi 2013 2013 5 e. brady y. zhong m. morris j. bigham investigating appropriateness social network question blind cscw 2013 1225-1236 2013 6 iq engine http //www.iqengines.com 7 j. bigham c. jayant h. ji g. a. miller r. c. miller r. miller a. tatrowicz b. white s. white t. yeh vizwiz real-time answer visual question uist 2010 2010 8 kane s. k. j. bigham j. wobbrock slide rule making mobile touch screen accessible blind people multi- touch interaction technique asset 2008 7380 2008 9 ko j. kim c. cost blur image detection estimation mobile device proc icact 2009 press 2009 16051610 10 looktel money reader http //www.looktel.com/moneyreader 11 looktel recognizer http //www.looktel.com/recognizer 12 lucas b. kanade t. 1981. iterative image registration technique stereo vision proceeding international joint conference artificial intelligence 674 679 13 mobile speak screen reader code factory 2008. http //www.codefactory.es/en/products.asp id=16 14 m. vzquez a. steinfeld assisted photography method street scene proceeding 2011 workshop vision 2011 15 m. vzquez a. steinfeld helping visually impaired properly aim camera asset 2012 95-102 2012 16 omoby http //www.iqengines.com/omoby/ 17 opencv http //opencv.org 18 pleco http //www.pleco.com/ 19 p. sanketi j. coughlan anti-blur feedback visually impaired smartphone camera asset 2010 2010 20 sight http //www.seeingbeyondsight.org/home/ 21 photography collective http //www.seeingwithphotography.com/swpc_home.html 22 s. harada d. sato d. w. adam s. kurniawan h. takagi c. asakawa accessible photo album enhancing photo sharing experience people visual impairment chi 2013 2127-2136 2013 23 s. harmeling m. hirsch b. schlkopf space-variant single-image blind deconvolution removing camera shake iccv 2011 2011 24 sight unseen ucr/california museum photography http //www.cmp.ucr.edu/exhibitions/sightunseen 25 s. white h. ji j. bigham easysnap real-time audio feedback blind photography uist 2010 409-410 2010 26 taptapsee http //www.taptapseeapp.com/ 27 wikipedia http //en.wikipedia.org 28 x. hou l. zhang saliency detection spectral residual approach cvpr 2007 2007. plagarism originality 7 5 5 similarity internet source publication paper primary source 1 2 3 4 www.cs.rochester.edu internet source stackoverflow.com internet source zhao yan yuwei zhai eric dubois shigang wang `` image matching based sift color exposure '' journal electronics 2016. publication etd.ohiolink.edu internet source 1 1 1 1 5 6 8 9 ijircce.com internet source www.ijcaonline.org internet source sha xin wei `` wavelet-based image indexing 7 technique sketch retrieval 1 capability '' proceeding adl 97 forum advance digital library adl-97 1997 publication dblp.dagstuhl.de internet source techimind.blogspot.com internet source 1 1 1 1 manuela veloso `` detection localization 10 multiple object '' 2006 6th ieee-ras international conference humanoid robot 12/2006 publication duarte otto carlos m.b.. `` 11 control situated view '' virtual network pluralistic approach generation internet 2013. publication 12 13 pastebin.com internet source ieeexplore.ieee.org internet source proceedings.spiedigitallibrary.org 14 internet source 1 1 1 1 1 www.sei.cmu.edu 15 internet source zhong yu pierre j. garrigues jeffrey 1 16 p. bigham `` real time object scanning 1 mobile phone cloud-based visual search engine '' proceeding 15th international acm sigaccess conference accessibility asset 13 2013. publication exclude quote exclude match 1 word exclude function point", "keywords": ["acquired frame", "actual class", "addition subject", "addition subject class", "android snapshot", "android studio", "answer generate", "answer generate format", "answer question", "answer recognition", "answer recognition image", "answer sheet", "background review", "binary code", "binary code detection", "blind people", "blind photography", "blind scan", "block pixel", "bridge gap", "bridge gap teacher", "bridging gap", "bridging gap teacher", "bug error", "camera video", "camera video stream", "choice question", "class creation", "class operation", "class performance", "class subject", "cloudbased visual", "cloudbased visual search", "code detection", "code detection technique", "continuous camera", "continuous camera video", "daily life", "dataset image", "detection technique", "evaluate optimize", "everyday object", "ezee class", "food product", "frame camera", "frame continuous", "frame continuous camera", "frame extraction", "frame frame", "gap teacher", "gap teacher parent", "generate format", "graph class", "highquality photo", "humanpowered service", "identification rate", "identification scan", "identification scan search", "ii iii", "image matching", "image object", "image processing", "image processing android", "image sheet", "initialization threshold", "input photo", "international conference", "international journal", "internet source", "iq engine", "jayant ji", "kavya angara", "key frame", "key frame extraction", "le paper", "le paper manual", "le second", "linear regression", "live answer", "live answer recognition", "mark password", "mobile phone", "movement initialization", "movement threshold", "multiple choice", "multiple choice question", "number key", "number key frame", "number parent", "object identification", "object recognition", "paper manual", "password mark", "performance graph", "performance parameter", "performance subject", "private dataset", "processing android", "processing android snapshot", "public dataset", "qr code", "real time", "real time object", "recognition image", "recognition image processing", "respective subject", "retrieve answer", "retrieve answer sheet", "roll number", "roll number parent", "scan search", "scanning image", "scanning object", "search engine", "sheet answer", "smart phone", "stable frame", "stableness threshold", "standard photosnapping", "stationary point", "stored database", "stored server", "subject class", "subject object", "subject wise", "teacher database", "teacher parent", "teacher scan", "threshold threshold", "time object", "trained image", "unit strategy", "usecase description", "username password", "video stream", "visual search", "visual search engine", "white bigham", "wise performance"], "libraries": ["opencv"], "languages": ["php", "io", "sr", "basic", "small", "java"], "frameworks": [], "dbs": ["sqlite", "mysql"]}, "./reports/26-05-2015-group id 38.pdf": {"title": "backup box  backup box \u2013 for all personal  for all personal data", "filename": "./reports/26-05-2015-group id 38.pdf", "data": "backup box backup box baldawa komal anushka gogale rohan walzade b-80058510 baldawa komal anushka gogale b-80058507 rohan walzade b-80058653 guidance dr.emmanuel m. fulfilment b. e. b. e. 411043 affiliated 2014 2015 411043 dissertation dissertation backup backup box- nal baldawa komal anushka gogale rohan walzade b-80058510 baldawa komal b-80058507 anushka gogale rohan walzade b-80058653 record bona fide him/her ide him/her year 201 year 2014-2015 guidance dr. emmanuel m. dr. emmanuel m. dr. emmanuel m. hod dr. p. t. dr. p. t. examiner examiner _______________________ acknowledgement profoundly grateful dr. emmanuel m. expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing express sincere heartfelt gratitude staff member helped directly indirectly course komal bldawa anushka gogale rohan walzade today scenario lot managed saved danger losing corrupted backup today people advanced storing time backup proposed serve achieve back-up retrieve needed traditional setup requires location storage device cloud step cloud remove physical location store concept backup refers duplication backup box backup kind store cloud and/or server restored demand stored server accessible web access time demand aim create android app help create cloud service i.e store retrieve retrieved time location specific constraint voice retrieve voice play role create cloud deploy access scalable service people reduce carry paper reduce loss precious document keywords android distributed computing web cloud storage server 5.1 ... 15 5.2 16 5.3 class diagram.. 17 5.4 ... 18 5.5 state machine 19 5.6 diagram.. 20 5.7 component 21 5.8 package diagram.. 21 6.1 interface.. 25 6.2 server side code ... 25 6.3 upload image ... ... 26 6.4 download image ... 27 6.5 upload file ... ... ... ... ... .28 6.6 download file ... 28 6.7 retrieve voice ... ... ..29 6.8 log ... ... ... ... 30 6.9 page..30 6.9 upload text file ... 31 6.9 uploaded text file ... 31 6.9 retrieve voice ... 32 ii 2.0 ... .5 5.1 ... 22 5.2 image-info..22 5.3 files22 6.1 table35 7.1 scheduling ... .38 7.2 grant chart40 iii abstract.. figures..ii ... iii 1 1 2 2 1.1 1.2 ... ... ... ... ... ... ... ... 1.3 ... 3 1.4 3 2 3 proposed 4 7 3.1 8 3.2 scope.. 8 3.3 9 3.4 objective.. 9 4 10 4.1 step acquire process 11 4.2 approach.. 11 4.3 12 4.3.1 upload text file.. 4.3.2 upload image.. 4.3.3 download text file 4.3.4 download image file.. 12 12 12 12 4.3.5 retrieve voice 12 5 13 5.1 tools.. 14 5.2 ... 14 5.3 14 5.4 design.. 15 5.5 16 5.6 database ... 22 6 6.1 23 24 31 32 37 40 41 6.2 code snippet 24 6.3 screen shot 30 6.4 6.4.1 unit testing.. 6.4.2 integration 34 7 scheduling 8 8.1 ... ... 8.2 42 9 42 1 1 backup box -for 1 1 1.1 day digitized carry document passport mark sheet theft carry document android phone facility document accessed phone store document phone keep document safely bank locker overhead front bank complains document theft government office time duplicate document backup box provide facility store image form text file form reducing overhead carrying hard copy time 1.2 initial period scanning stumbled concept cloud computing cloud storage discussion people facing storage today scenario lot managed saved danger losing corrupted backup today people advanced storing time backup proposed serve achieve back-up retrieve needed concept backup refers duplication backup box backup kind store cloud and/or server restored demand stored server/cloud accessible web access time demand voice retrieve backup box -for 2 1 1.3 focused storing cloud retrieves voice traditional setup requires location storage device cloud step cloud remove physical location store 1.4 store reduce loss reduce official duplication backup box -for 3 2 2 backup box -for 4 2 initially basic understanding cloud storage understand basic working initial meeting helped understand basic concept clearly paper understand paper /book author journal technique discussed 1. dblk deduplication primary block storage-ieee 6th usenix conference storage file fast08 2008 yoshihiro tsuchiya technique takashi watanabe j.c.r.licklider john mccarthy intergalactic network enabling development arpanet advanced agency network 1969 vision globe interconnected accessing program site proposed public computation delivered utility 2. portable lab peng li cloud computingdept.of toderick tech east carolina greenville nc27858 2013 technique 1999 arrival sale force .com 2002- arrival amazon web service 2006 amazon launched -elastic compute cloud ec2 -allows small company individual rent 2.0 backup box -for 5 2 2009 -web 2.0 launched google started offer browser-based enterprise service google apps emergence `` killer apps '' microsoft google 2.0 backup box -for 6 3 3 proposed proposed backup box -for 7 3 proposed 3.1 backup box imagine cloud service deploy access voice store cloud restore needed time special effort create android app function app aim create cloud service android app- create cloud deploy cloud store cloud access stored cloud voice modify/change stored cloud retrieve stored cloud voice recognition 3.2 processing functionality aim create android app help create cloud service i.e store retrieve retrieved time position/location specific constraint voice retrieve voice play role create cloud deploy access voice scalable service people reduce carry paper reduce loss precious document backup box -for 8 3 proposed input parameter text file image jpg png format internet connection output text file image jpg png format 3.3 focus conceptual approach document client created facility store soft copy form image authenticated encryption password encryption android access voice typing scanned copy document client upload image capturing image mobile camera prevents loss precious document store document cloud download time 3.4 store client form image text document cloud retrieve demand client store document android phone retrieve voice recognition capture image document phone camera storing document basically reduces overhead carry document time backup box -for 9 4 4 backup box -for 10 4 backup box android store document cloud backup form duplication prevent loss today backup industry backup soft copy stored backup box retrieve voice recognition recognize voice retrieve authenticated encryption password 4.1 step acquire process 64-bit operating server storage stored mysql database store ui input installing net bin server deployment implementing intuitive 4.2 approach company creating cloud storage file retrieve needed site passport passport passport care loses effort going passport office passport avoid overhead created keep record document proposed store mobile phone capturing image document store scanned copy document text format retrieve voice recognition i.e speaking file backup box -for 11 4 4.3 backup box 4.3.1 upload text file document stored text format upload document cloud backup box file uploads file stored database provide uploading 4.3.2 upload image upload scanned copy document cloud capture image document phone camera uploading image uploads image stored database provide uploading 4.3.3 download text file download text file uploaded unique provided uploading file cloud downloaded file stored phone memory 4.3.4 download image download image uploaded unique provided uploading image cloud downloaded image stored phone memory 4.3.5 retrieve voice download file/image uploaded cloud voice recognition speak file/image unique database recognize voice retrieve file/image download backup box -for 12 5 5 backup box -for 13 5 5.1 server side 64-bit operating glassfish server 3.1.1 net bin deploy cloud service mysql 5.5.1 store database client side android platform 5.2 server side processor- iv processor 2gb ram 500 gb hdd 5.3 collaboration upload text file upload image download text file download image download voice client interact collaborative manner backup box -for 14 5 5.4 server database fig 5.1 backup box -for 15 5 5.5 fig 5.2 backup box -for 16 5 fig 5.3 class backup box -for 17 5 fig 5.4 backup box -for 18 5 fig 5.5 state machine backup box -for 19 5 fig 5.6 backup box -for 20 5 fig 5.7 component fig 5.8 package backup box -for 21 5 5.6 database field description u-id f-name m-name l-name gender mobile address caste email middle gender mobile number address caste email hash password password account 5.1 field user-id description image username image-name image varchar varchar varchar varchar varchar varchar varchar varchar varchar varchar integer varchar varchar image image array byte medium blob 5.2 image-info field fid description file doc-name document user-id fname username file file 5.3 file integer varchar varchar varchar long blob backup box -for 22 6 6 backup box -for 23 6 6.1 backup box interacts store document upload document download document needed download document voice recognition method secure encryption security password upload document form image text file download needed demand unique database voice recognition download document backup box reduction loss document doe carry document time reduce overhead document lost soft copy stored document 6.2 code snippet code code devel0oped android eclipse ide adt-bundle graphical developed android backup box -for 24 6 server side code fig 6.1 server implemented java net bean database store mysql connected server jdbc driver server directly process client request fig 6.2 server side code backup box -for 25 6 client side code client side code developed android eclipse ide adt-bundle client upload download voice/text document server code snippet uploading downloading code fig 6.3 upload image backup box -for 26 fig 6.4 download image 6 backup box -for 27 6 fig 6.5 upload file fig 6.6 download file backup box -for 28 6 fig 6.7 retrieve voice backup box -for 29 6 6.3 screen shot fig 6.8 log fig 6.9 backup box -for 30 6 fig 6.9 upload text file fig 6.9 uploaded text file backup box -for 31 6 fig 6.9 retrieve voice 6.4 phase form development life cycle product tested thoroughly delivered customer document general strategy adopted product 6.4.1 unit performed developer setup handed formally execute unit performed respective developer individual unit source code assigned area developer separate assurance unit isolate program individual correct term functionality backup box -for 32 aim installation error install phone expected installed error actual expected 2 un-installation aim un-installation uninstall expected uninstalled error actual expected 3 mobile number aim mobile number digit enter mobile number digit character expected error character entered add actual expected 4 email aim email enter email expected accept doe actual expected 5 field blank aim accept blank field signing keep field blank accessing expected accept blank error message actual expected 6 1 installation entered digit backup box -for 33 6 6 aim accept enter entered signing expected accept actual expected 6.4.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision major carrying integration called bottom-up method top-down method bottom backup box -for 34 6 procedure window upload text file upload text file window capture/u pload image capture/ upload image window 1 2 3 4 1 2 1 keep user-id field blank keep password blank click enter wrong username enter correct password click enter username enter wrong password click enter username enter password click enter text file click upload file button enter unique text file click upload file button image enter image click upload button expected message failed message failed message failed accept accept accept actual expected expected expected expected expected expected expected pass/ fail pas pas pas pas pas pas pas download text file download image voice 1 1 1 download text file window download image window voice window enter unique text file click download button download file storage enter unique text file click download button speak unique file/image click download button download file storage download file/image storage 6.1 expected pas expected pas expected pas backup box -for 36 scheduling 7 7 scheduling backup box -for 37 7 scheduling 1 phase duration 15 day start 1 aug 2014 15 aug 2014 1.1 deciding 3 day 1 aug 2014 3 aug 2014 1.2 existing 2 day 4 aug 2014 5 aug 2014 1.3 discussing 4 day 6 aug 2014 9 aug 2014 solution 1.4 study basic 6 day 10 aug 2014 15 aug 2014 concept 2 description phase 15 day 16 aug 2014 30 aug 2014 2.1 deciding 4 day 16 aug 2014 19 aug 2014 definition 2.2 deciding platform 4 day 20 aug 2014 23 aug 2014 language 2.3 identifying 5 day 24 aug 2014 28 aug 2014 term 2.4 preparing synopsis 2 day 29 aug 2014 30 aug 2014 3 phase 14 day 3.1 identifying 4 day 31 aug 31 aug 13 sep 3 sep 3.2 designing 10 day 4 sep 13 sep drawing backup box -for 38 7 4 coding scheduling 120 day 20 day 4.1 gui 4.2 android server 15 day connectivity 14 sep 14 sep 4 oct 14 jan 3 oct 18 oct 4.3 process 18 day 19 oct 8 nov 4.4 file 30 day 9 nov 7 dec 4.5 send message 25 day 4.6 twin view 5 phase 12 day 60 day 5.1 identifying 30 day preparing 8 dec 3 jan 15 jan 15 jan 2 jan 14 jan 16 14 feb 5.2 process 8 15 feb 22 feb 5.3 file 7 23 feb 1 5.4 send message 7 5.5 twin view 8 4 14 12 26 7.1 backup box -for 39 7 week starting search sponsorship decide topic deciding 1st review gathering designing 2nd review 3rd review final scheduling 21/6 30/7 8/8 16/8 22/8 23/8 3/9 13/9 30/9 30/1 26//3 10/5 fig 7.2 gantt backup box -for 40 8 8 backup box -for 41 8 8.1 designed android app perform operations- upload textual capture /load image download text file download image file download /retrieve/access voice 8.2 app enhanced i.e text file image audio video mp3 mpv hd capacity speed operation consistent efficiency reliability excelled care apps functioning working bad weather condition friendly flexible operated operating backup box -for 42 9 9 backup box -for 43 9 1 c. wang al privacy-preserving public auditing storage security cloud computing proc infocom 10 mar 2010 2 k. ren c. wang q. wang security challenge public cloud internet computing 16 1 69-73 2012 3 q. wang c. wang k. ren w. lou j. li enabling public auditability dynamic storage security cloud computing trans parallel distributed 22 5 847-859 2011 4 c. wang s.s.m chow q. wang k. ren w. lou privacy-preserving public auditing secure cloud storage trans.computers preprint 2012 doi 10.1109/tc.2011.245 5 t. schwarz e.l. miller store forget check algebraic signature check remotely administered storage proc intl conf distributed computing icdcs 06 12-12 2006 6 r. c. merkle protocol public key cryptosystems proc symp.security privacy 1980 7 upkar varshney pervasive healthcare magazine 36 12 2003 138- 140 8 maglogiannis i. doukas c. kormentzas g. pliakas t. `` wavelet- based compression roi coding support mobile access dicom image heterogeneous radio network '' transaction biomedicine vol.13 no.4 pp.458-466 2009 9 r. curtmola o. khan r. burn g. ateniese mr-pdp multiple-replica provable possession proc 28th intl conf distributed computing icdcs 08 411-420 2008 10 c. wang q. wang k. ren w. lou privacy-preserving public auditing storage security cloud computing proc infocom mar 2010 11 c. wang k. ren w. lou j. li publicly auditable secure cloud storage service network magazine 24 4 19-24 july/aug 2010 12 r.c merkle protocol public key cryptosystems proc symp security privacy 1980 13 q. wang k. ren w. lou y. zhang dependable secure sensor storage dynamic integrity assurance proc infocom apr 2009. backup box -for 44 9 14 rankin i. mattson p. 1997 canmller controller-pilot link proceeding rhe 16rh dasc 15 t. dietterich `` machine learning current direction '' ai magazine 18 4 1997 97-136 16 q. wang c. wang j. li k. ren w. lou enabling public verifiability dynamic storage security cloud computing proc esorics09 saint malo france sep. 2009 17 rankin i.. 18 2000 controller- situational awareness terminal c- cast link manager dlm control document revision i. i. avionics center ohio athens 18 yoshihiro tsuchiya takashi watanabe dblk deduplication primary block storage 6th usenix conference file storage fast08 2008 19 peng li toderick 2013 portable lab cloud computingdept.of tech east carolina greenville nc27858 backup box -for 45", "keywords": ["access voice", "android app", "anushka gogale", "anushka gogale rohan", "backup box", "baldawa komal", "click download", "click download button", "click upload", "cloud computing", "cloud computing proc", "cloud service", "cloud storage", "cloud voice", "code snippet", "computing proc", "copy document", "document backup", "document backup box", "document cloud", "document phone", "download button", "download document", "download file", "download image", "download text", "download text file", "file backup", "file backup box", "file click", "file download", "file download image", "file image", "file storage", "gogale rohan", "ide adtbundle", "image document", "image download", "jpg png", "loss precious", "loss precious document", "mobile number", "peng li", "precious document", "public auditing", "ren lou", "retrieve voice", "security cloud", "security cloud computing", "storage security", "storage security cloud", "store cloud", "store document", "takashi watanabe", "text file", "text file click", "text file download", "text file image", "unique text", "unique text file", "upload file", "upload image", "upload text", "upload text file", "varchar varchar", "voice recognition", "voice retrieve", "wang wang"], "libraries": [], "languages": ["basic", "small", "java"], "frameworks": [], "dbs": ["mysql"]}, "./reports/26_final_report.pdf": {"title": "job recommendation using skill mining,   training & business analysis for   entrepreneurs", "filename": "./reports/26_final_report.pdf", "data": "job recommendation skill mining training business entrepreneur shivkumar mujahid shaikh sneha sancheti b120058608 b120058626 b120058615 lina shinde b120058631 guidance prof. m. r. khodaskar s. 27 satara road 411043 2016-2017 job recommendation skill mining training business entrepreneur shivkumar mujahid shaikh sneha sancheti b120058608 b120058626 b120058615 lina shinde b120058631 bonafide prof. m. r. khodaskar earlier diploma prof. m.r khodaskar examiner prof. s. b. deshmukh coordinator dr. p. t. 2017 sponsorship letter completion letter acknowledgement compromise theoretical consideration practical involves non-technical experience source express feeling gratitude number people instrumental supportive completion assessment express sincere regard prof. m. r. khodaskar coordinator prof. s. b. deshmukh valuable suggestion help undertaken complete kind assistance encouragement thankful mentor allylabs pvt ltd. mr. sashikanth alhat constant assistance provided forget express immense sense thankfulness staff college extended co-operation needed completion help received staff thankful friend offered helping hand needed family supporting spiritually life shivkumar mujahid shaikh sneha sancheti lina shinde title comparison phase description 2.1 6.1 6.2 6.3 6.4 9 46 46 47 47 ii title block class job business 18 19 20 21 22 23 24 iii 4.1 4.2 4.3 4.4 4.5 4.6 4.7 acronym grant commission national skill development corporation national association service company ugc nsdc nasscom iv title 1 2 3 acknowledgement abbreviation background challenge aim background existing proposed efficiency issue comparative study specification definition specification 3.2.1 web scraping 3.2.2 php dom parser 3.2.3 machine learning 3.2.4 recommendation 3.2.5 bootsrap 3.2.6 1.1 1.2 1.3 1.4 2.1 2.2 2.3 2.4 3.1 3.2 3.3 3.4 specification ii iii iv 1 2 3 4 5 5 6 7 7 7 9 10 11 11 11 12 12 12 14 14 14 16 4 5 6 7 4.1 4.2 4.3 5.1 5.2 6.1 6.2 6.3 6.4 4.1.1 block modular 4.3.1 static 4.3.2 dynamic 5.2.1 web scraper 5.2.2 recommendation engine 5.2.3 evaluation web scraper dictionary gui 17 18 19 20 20 21 25 26 26 26 28 33 35 36 37 40 44 49 51 job recommendation skill mining training business entrepreneur job recommendation skill mining training business entrepreneur sponsored allylabs pvt ltd. focus increasing employability enhancing skill employee encouraging entrepreneurship divided job skilled professional lot job portal internet create account job portal job skill developing web portal fetch job based skill job portal company website doesnt match skill industry needed best training fill industry skill gap entrepreneur start business analyzing area wise stats business best start business pict-information technology-2016-17 1 job recommendation skill mining training business entrepreneur 1 pict-information technology-2016-17 2 job recommendation skill mining training business 1.1 background entrepreneur employability improved good academic record skill enable adapt manage constantly changing environment grant commission ugc vice chairman h. devaraj 85 cent passing college employable bring lot skill- based course ensure learn skill passed college employable needed employability skill transferable skill needed individual 'employable good understanding subject knowledge employer outline skill employee working self- knowledge business literacy numeracy relevant post good interpersonal skill ability initiative follow instruction leadership skill global crisis happened unemployment rate increase employment rate decrease country country serious numerous population college graduate employment difficult second third class college vocational skill training focus vocation development promoting trainee skill training teach knowledge skill professional knowledge general knowledge practice skill behavioral capacity play role employment skill training challenge 1. mass correct correlation achievement indicated score employment situation 2. employment achievement job 3. employment recommend appropriate job pict-information technology-2016-17 3 job recommendation skill mining training business entrepreneur challenge paper propose approach job recommendation based skill mining training 1.2 challenge job seeking recruiting website experiencing striking rise amount grows recommendation help match candidate job recommendation technique content-based filtering collaborative filtering hybrid approach applied content-based approach match candidate profile employer profile job initially based keyword search based filtering wa improved statistical inference semantic engine match profile keyword previous study state challenge matching candidate job grounded interaction theory behavior interaction recommendation influence candidate job choice employer hiring decision interaction-based recommendation casper collaborative filtering recommend job based hybrid exploited match people job hybrid proposed malinowski based good match people job consider preference recruiter candidate match job candidate predicted candidate cv employer description well previous rating method difficult rate job worked best knowledge previous published applied recommender integrating action job seeking recruiting process pict-information technology-2016-17 4 job recommendation skill mining training business entrepreneur .1.3 aim growing economy india requires skilled workforce lack trainer training platform created roadblock growth skill shortage evident sector economy primary provide skill training entrepreneurship development making marketable employable based skill india program indian government nsdl nasscom skill gap current skill industry presented skill gap reduce skill gap providing appropriate training job 1.4 2 background 3 4 5 6 7 pict-information technology-2016-17 5 job recommendation skill mining training business entrepreneur 2 pict-information technology-2016-17 6 job recommendation skill mining training business entrepreneur background review 2.1 existing current solution suffer existing scan resume recommend job resume standard platform business entrepreneur existing training provider suggested existing 2.2 proposed develop technique recommend skill needed job his/her area provide skill suggestion training provider analyzing skill gap skill gap carrier opportunity existing n't business entrepreneur provide provide platform entrepreneur start business platform provide facility business entrepreneur analyze business 2.3 efficiency issue understood level language dynamic writing supply numerous zend product suggested employed supported giant developer community straightforward find compared c++ perl straightforward increase c++ java pict-information technology-2016-17 7 job recommendation skill mining training business entrepreneur transportable majority platform existing recompilation power freeze live object string illustration storing discretional object disk moving network theyll reborn identical object knowledge intact php 's function python 's pickle marshal note php handling serialized object category weaker error prone python 's php 's lack .when object serialized solely keep object 's category gift precise script serializes python handled mechanically module/import framework support namespaces support method chaining debugger ides support n't limited unix timestamps 1970 2038 built-in support cached byte-code built-in support wa php5.5 standardized database api support gtk qt support lambda built programming construct single unset/del scripting general programming cli sapi embedded php pict-information technology-2016-17 8 job recommendation skill mining training business entrepreneur 2.4 comparative study resume parsing website naukari.com indeed.com monster.com linkedin.com shine.com proposed skill job training business gap recommen- recommen- dation dation raw material recomme- ndation 2.1 comparison develop technique recommend skill needed job his/her area provide skill suggestion training provider analyzing skill gap skill gap carrier opportunity pict-information technology-2016-17 9 job recommendation skill mining training business entrepreneur 3 pict-information technology-2016-17 10 job recommendation skill mining training business entrepreneur specification 3.1 definition develop parse resume recommend job training analysing skill gap providing supportive platform entrepreneur analyse business 3.2 specification 3.2.1 web scraping web scraping method extraction wide internet classification scraped unstructured hypertext mark-up language exceedingly structured kind spreadsheet web scraping technique countermined human copy paste http command online server providing hypertext mark-up language dom parser code break structural front-end html language internet site underlying dom inheritable locating php dom parser extract job posting job listing site naukri.com monster.com pict-information technology-2016-17 11 job recommendation skill mining training business entrepreneur 3.2.2 php dom parser php dom program dream utility developer employment php dom developer simply realize dom component exploitation php document hypertext markup language dom parser written php5.x version dom program incredibly smart addressing xml addition hypertext markup language dom parser travel supported tree based access load dom object update net browser 3.2.3 machine learning machine learning form science ai power told expressly programmed machine learning focus event laptop program modification exposed method machine learning analogous mining search pattern extracting human comprehension -- processing -- machine learning find pattern regulate program action consequently machine learning categorized supervised unsupervised supervised apply learned unsupervised draw inference datasets 3.2.4 recommendation recommender engine conjointly referred recommender technique providing suggestion suggestion provided aimed supporting varied higher cognitive process process thing shop music pay attention profile browse news scan pict-information technology-2016-17 12 job recommendation skill mining training business entrepreneur recommender technique providing suggestion thing term item generic going represent example recommender recommend news news portal product internet service recommendation typically tailored form form cluster recommendation customized vary cluster amazon online tend hope browsing making attempt| shop item recommender amazon online people united nation agency purchased item conjointly purchased ... thing amazon recommender expected interest lot alternative website watch recommender example google news yahoo portal pandora spotify netflix classification recommendation recommendation classified based collaborative filtering item based collaborative filtering based collaborative filtering social network sharing rating pattern formed foremost chosen recommendation provided supported item rated item based collaborative filtering totally thing established creating active 's thing prediction formed active tend recommender designed job seeking recruiting website recommender going deployed website developed serving company recruiting top skill shaping individual career pict-information technology-2016-17 13 job recommendation skill mining training business entrepreneur 3.2.4 bootstrap bootstrap framework designing front wa written html php coding business logic cassandra database local lamp server 3.2.4 execution generation performance response time generation integration proper transition option interleaved proper error improper transition occur pict-information technology-2016-17 14 job recommendation skill mining training business 3.3 specification entrepreneur language database server php html java java servlet cassandra apace 2.0 tomcat 6.0 scraping website http //www.naukri.com/ http //www.monsterindia.com/ framework apache hadoop bootstrap library google graph api google map api php dom simple xml 3.4 ram cpu speed disk space 4 gb 1.8 ghz 8 gb major constraint access online job recommendation internet browsing internet browsing capability internet connection pict-information technology-2016-17 15 job recommendation skill mining training business entrepreneur 4 pict-information technology-2016-17 16 job recommendation skill mining training business entrepreneur 4.1 organized term closed layered format consist front-end gui middle layer business logic control function back-end storage adhere principle abstraction generalize simplify hiding expose relevant component modularity component replaceable testable independence cohesion coupling maximize functionality component minimize interdependence component usage scenario job seeker job seeker person job employer legal control directs servant worker express implied contract employment pay obligated pay salary wage compensation trainer training deliver apprenticeship leading nationally recognized qualification entrepreneur person business business financial hope profit raw material provider raw material provider distributer supply raw material business pict-information technology-2016-17 17 job recommendation skill mining training business entrepreneur 4.1.1 block fig 4.1 block function represented parser parser resume skill profile industry based similarity recommend job training ready training updated skill re-analyses includes basic 1 web scraper 2 profile builder 3 recommendation engine 4 business pict-information technology-2016-17 18 job recommendation skill mining training business entrepreneur 4.2 fig 4.2 fetching publicly website naukari.com monsterindia.com indiamart.com php-dom performing wrangling fetched storing xml file converting xml file database performing based recommend job training raw material provider visualizing analyzed dashboard pict-information technology-2016-17 19 job recommendation skill mining training business entrepreneur 4.3 modular 4.3.1 static fig 4.3 class class represents static view proposed jobseeker employer trainer entrepreneur raw-material-provider recommendation class helpful provide recommendation basically recommendation job class highly suitable job profile training recommendation class represents training job seeker skill gap business recommendation class raw-material provider location entrepreneur helpful entrepreneur business needed area pict-information technology-2016-17 20 job recommendation skill mining training business entrepreneur 4.3.2 dynamic job fig 4.4 job described action job seeker job suitable profile firstly create account fill build profile stored database recommendation find suitable job skill displayed profile employer post job training provider helpful provide training job seeker avail job pict-information technology-2016-17 21 job recommendation skill mining training business entrepreneur business fig 4.5 business described action entrepreneur search business grow based area business recommendation entrepreneur based recommendation provide raw material start business provide raw material provider pict-information technology-2016-17 22 job recommendation skill mining training business entrepreneur fig 4.6 representation workflow stepwise action create account jobseeker he/she job recommended recommendation job seeker apply job update database current status employer post job job description based response employer hire jobseeker criterion job-seeker skill gap training provider picture provide training reduce skill gap pict-information technology-2016-17 23 job recommendation skill mining training business entrepreneur fig 4.7 process operate manner recommendation start matching skill job-seeker employer highly matching job recommended job-seeker recommendation provide training recommendation job-seeker reduce skill gap pict-information technology-2016-17 24 job recommendation skill mining training business entrepreneur 5 pict-information technology-2016-17 25 job recommendation skill mining training business entrepreneur job training recommendation based skill mining business entrepreneur consists three job parsing recommendation engine business 5.1 web scrapping purpose php dom write parser database cassandra nosql database hadoop mapreduce analytics analytics visualizing fusion library logic written php java language google map apis visualization map 5.2 broadly divided 3 1 web scraping 2 recommendation engine 3 5.2.1 web scraping start web scraping build job recommendation require dataset job posting train dataset decided web scrapper parse job listing website developed 250 web scraper security reason single parser failed extract single skill separate parser pict-information technology-2016-17 26 job recommendation skill mining training business entrepreneur parser extract naukri.com link extract job pict-information technology-2016-17 27 job recommendation skill mining training business entrepreneur 5.2.2 recommendation engine job recommendation main web scraping i.e gathering process processing unstructured transformed loaded database scraping process action build recommendation engine 1 1. clean load job database xml file 2. calculate profile job similarity 3. load resume job similarity database 4. calculate resume similarity 5. load resume similarity database 6. recommend job based calculated similarity clean load job database code snapshot reading file establishing connection cassandra server iterating document pict-information technology-2016-17 28 job recommendation skill mining training business entrepreneur cleaning reading variable inserting cleaned database 2. calculate profile job similarity knn k- nearest neighbor developing recommendation nearest neighbor common approach nearest neighbor find number resume nearest neighbor job recommend job skill nearest neighbor.so lot variation based point calculate distance job calculating distance profile job cosine similarity recommend job method measuring distance cosine similarity measure calculating difference angel vector length vector matter normalize vector unit vector calculate inner product vector pict-information technology-2016-17 29 job recommendation skill mining training business entrepreneur calculating cosine similarity resume job skill find threshold calculated similarity avg function recommending job based cosine similarity cosine similarity job resume calculating cosine similarity resume job skill find threshold calculated similarity avg function recommending job based cosine similarity pict-information technology-2016-17 30 job recommendation skill mining training business entrepreneur output cosine similarity csv format second job third cosine similarity job load similarity database 3. code insert calculated similarity database 4. recommend job based calculated similarity code load recommended job php array pict-information technology-2016-17 31 job recommendation skill mining training business entrepreneur code display recommended job recommended job displayed pict-information technology-2016-17 32 job recommendation skill mining training business entrepreneur 5.2.3 extracting xml file save file code extracting saving txt file performing mapreduce calculate job count skill mapper code map txt file reducer code generates count skill pict-information technology-2016-17 33 job recommendation skill mining training business entrepreneur snapshot output mapreduce program skill second job count skill snapshot skill job count skill max number job generated fusion library axis represent skill axis represents job count pict-information technology-2016-17 34 job recommendation skill mining training business entrepreneur 6 pict-information technology-2016-17 35 job recommendation skill mining training business entrepreneur evaluation 6.1 web scrapper fig 6.1 web scrapper extracting website web scrapping scrapper fetch job web portal naukri.com monsterindia.com shine.com scrapper written php programming language php dom parse website scrapper send http request url fetch url store fetched xml format web scrapper fetch raw format parse job title skill location company experience storing xml file pict-information technology-2016-17 36 job recommendation skill mining training business entrepreneur 6.2 dictionary pict-information technology-2016-17 37 job recommendation skill mining training business entrepreneur fig 6.2 database pict-information technology-2016-17 38 job recommendation skill mining training business entrepreneur designed database store info company info job info calculated similarity stored database dictionary respected displayed created cassandra nosql database 6.3 similarity job profile snapshot cosine similarity calculated similarity job resume job mapping number resume number job pict-information technology-2016-17 39 job recommendation skill mining training business entrepreneur 6.3 gui homepage fig 6.3 homepage screenshot homepage navigation bar top wide screen slider focus main topic latest job side left side display spotlight job pict-information technology-2016-17 40 job recommendation skill mining training business entrepreneur authentication fig 6.4 login/ registration screen screenshot registration registration dashboard enters wrong username password error message pict-information technology-2016-17 41 job recommendation skill mining training business entrepreneur dashboard job recommendation fig.6.5 dashboard snapshot jobseekers dashboard top navigation bar access operation displaying short description side showing graph top skill recommending job side filtering option pict-information technology-2016-17 42 job recommendation skill mining training business entrepreneur fig 6.6 performing job analyzing top skill top experience range top location top company top package generated fusion library hadoop mapreduce 6.4.1 tested skill tested correctly recommending job skill tested priority job displayed designed matched skill correctly working pict-information technology-2016-17 43 job recommendation skill mining training business entrepreneur 6.5 major function function recommendation function function 6.5.1 constraint requires waterfall waterfall linear approach development event 1. gathering 2. 3. 4. 5. deployment 6. maintenance 6.5.2 constructive cost cocomo semi-detached reason lie middle difficulty spectrum complex people experience dealing massive simple compact equation find person month pm 3.0 8 month 1.12 30.8 person-months duration 3 pm 0.35 8.5 8 calendar month staffing pm/d=3.71 3 4 people needed pict-information technology-2016-17 44 job recommendation skill mining training business entrepreneur 6.5.3 minimum gnome kde desktop 64-bit distribution capable running 32-bit 2 gb ram minimum 8 gb ram recommended minimum linux operating python django virtualenv 6.5.4 major determined equipment failure late delivery meet expectation resist change deviation standard le reuse planned poor commenting source code pict-information technology-2016-17 45 job recommendation skill mining training business entrepreneur category ti bu 70 30 25 20 20 10 60 20 1 1 1 1 2 3 3 4 equipment failure late delivery meet expectation te resist change bu deviation pi standard le reuse planned poor comment code 6.5.5 ti 6.1 description resume parsing fetching filtering recommendation visualization 6.2 t1 t2 t3 pict-information technology-2016-17 46 job recommendation skill mining training business entrepreneur phase phase 1 phase 2 phase 3 phase 4 phase 5 phase 6 6 1 6 1 6 1 6 1 6 1 6 1 7 1 7 1 7 1 6.3 phase description phase 1 analyze paper phase 2 collect raw elaborate phase 3 assign process control phase 4 implement code integrate phase 5 code process weather process properly phase 6 documentation prepare document enhancement 6.4 phase description pict-information technology-2016-17 47 job recommendation skill mining training business entrepreneur 6.5.6 staff chief programmer programmer manager reporting engineer role chief programmer chief programmer partition small assigns member verifies integrates product developed member engineer role performed engineer gathering designing coding maintaining pict-information technology-2016-17 48 job recommendation skill mining training business entrepreneur 7 pict-information technology-2016-17 49 job recommendation skill mining training business entrepreneur parsing resume collecting skill job seeker analysing job seeker skill industry based recommend training job job seeker job seeker skill gap recommend appropriate training provider fill skill gap recommends best candidate job posting provide platform entrepreneur analyse business recommends entrepreneur best location business pict-information technology-2016-17 50 job recommendation skill mining training business entrepreneur 1 jia li dhruv arya dhruv arya viet ha-thuc shakti sinha dream job san francisco usa 2016 2 huang xuy zhiwen yuy jingyuan yangz hui xiongz hengshu zhu talent circle detection job transition network 3 vivek kumar sehgal akshay jagtiani meha shah job portal web geographically distributed multiple client 4 national skill development corporation nsdc india www.nsdcindia.org 5 ssc nasscom www.sscnasscom.com 6 midc india www.midcindia.org 7 roger s. pressman practitioner approach 8 michael blaha object oriented modelling 9 larman applying pattern 10 hisashi kobayashi modelling pict-information technology-2016-17 51 job recommendation skill mining training business entrepreneur", "keywords": ["business entrepreneur", "business pictinformation", "calculated similarity", "collaborative filtering", "cosine similarity", "dom parser", "grant commission", "hypertext markup", "hypertext markup language", "job portal", "job recommendation", "job recommendation skill", "job resume", "job seeker", "job seeker job", "job seeker skill", "job similarity", "job skill", "job training", "language dom", "language dom parser", "lina shinde", "markup language", "markup language dom", "material provider", "mining training", "mining training business", "mujahid shaikh", "php dom", "php dom parser", "pictinformation technology", "pictinformation technology job", "platform entrepreneur", "profile job", "raw material", "raw material provider", "recommend job", "recommendation class", "recommendation engine", "recommendation skill", "recommendation skill mining", "seeker job", "seeker skill", "similarity database", "similarity job", "skill gap", "skill industry", "skill job", "skill mining", "skill mining training", "skill training", "sneha sancheti", "technology job", "technology job recommendation", "training business", "training business entrepreneur", "training job", "training provider", "training recommendation", "web scraper", "web scraping", "web scrapper", "xml file"], "libraries": [], "languages": ["php", "clean", "python", "xml", "c++", "small", "perl", "basic", "html", "java"], "frameworks": ["django"], "dbs": ["cassandra"]}, "./reports/27_Final-Report(v1.4)HSCLAS-.pdf": {"title": "high speed cloud log aggregation system   (hsclas)", "filename": "./reports/27_Final-Report(v1.4)HSCLAS-.pdf", "data": "speed cloud log aggregation hsclas akanksha ashok gore ankita sharad sayeram eswar shweta satish ghenand b120058538 b120058528 b120058622 b120058536 guidance prof. m.r khodaskar s. 27 satara road 411043 2016-2017 speed cloud log aggregation hsclas akanksha ashok gore ankita sharad sayeram eswar shweta satish ghenand b120058538 b120058528 b120058622 b120058536 bonafide prof. m.r khodaskar earlier diploma prof. m. r. khodaskar prof. s.b.deshmukh coordinator dr. p. t. examiner ii iii acknowledgement great pleasure satisfaction presenting speed cloud log aggregation hsclas express gratitude appreciation opportunity complete .we mr. nitin gupta e-zest solution guidance course special mr. m. r. khodaskar help stimulating suggestion encouragement helped coordinate compiling acknowledge appreciation coordinator mr. s. b. deshmukh express deepest gratitude hod .we directly indirectly helped completion ms. akanksha a. gore b120058538 b120058528 ms. ankita s. mr. sayeram eswar b120058622 ms. shweta s. ghenand b120058536 iv 6.1 6.3 title pert gantt 34 36 title 2.1 3.1 3.2 3.3 4.1 4.2 4.3 4.4 4.5 4.6 6.2 6.4 interpretation hsclas function state transition level hsclas log generation lambda processing dyanamodb processing ec2 split-up pert 10 16 18 20 22 23 23 24 24 25 35 38 vi abbreviation aws al hsclas s3 cli abbreviation description aws web service elastic search aws lambda service speed cloud log aggregation simple storage service command vii sponsorship completion acknowledgement abbreviation ii iii iv vi vii 1.1 1.2 2.1 2.2 3.1 3.2 1 2 3. title background review existing 2.1.1 lambda batch real_time processing aws spark streaming spark sql analytics option aws 2016 security scale 2.1.3 2.1.4 hsclas cloud watch proposed specification context major constraint 3.2.1 3.2.2 3.2.3 3.2.4 1 2 2 3 4 4 5 7 9 10 11 12 13 13 13 14 14 2.1.2 4 5 6 7 8 9 15 15 15 16 17 17 19 20 20 20 21 22 23 25 26 27 27 30 31 34 34 35 36 37 38 38 39 42 43 44 3.3 3.4 3.3.1 3.3.2 3.3.3 3.4.1 3.4.2 3.5 3.5.1 3.5.2 description description object description description function description behavioral description description behavior state transition level hsclas based based split coding evaluation screen shot technique pert pert 6.2.1 6.2.2 6.4.1 6.5.1 valid log file 4.1 4.2 4.3 5.1 5.2 6.1 6.2 6.3 6.4 6.5 cloud server log automatically created cloud server log consist field client performed timestamp http method http status code size multiple log entry stored single file making difficult understand anayize speed cloud log aggregation aggregate log cloud parse simplify log file extract fromit error handling tuning easier productive log file initially loaded aws s3 bucket aws lambda trigger lambda transcribes store aws dynamodb.the mine dynamodb populates dashboard displaying pertinent graphical front order clearer friendly manner keywords log file aws web service aws s3 aws lambda aws dynamodb aws cloudtrail aws ec2 2016-17 1 speed cloud log aggregation 1 2016-17 1 _________________________________________ 1.1 log file file record event occur messaging computing text log produced automatically time-stamped document detailing event relevant log generated web server access log maintain record single file requested website file include html file embedded cs administrator record visitor count domain access number request usage pattern timestamps log file log file critical tracking fully automated human interaction server log file tough read comprehend increasing automated create platform read optimize log file analyze provide insight error handling tuning assistance cloud proposed called speed cloud log aggregation hsclas 1.2 aws on-demand computing service cloud pay pricing example running server aws log secure configure front going create platform aws service cloud trail s3 lambda dynamodb read simplify log file platform enable request highly specific log file aws modular nature independently going merge simplify log file speed cloud log aggregation 2 2016-17 2 2 background review speed cloud log aggregation 3 2016-17 _________________________________________ 2.1. existing 2.1.1 lambda batch real-time processing aws spark streaming spark sql 2015 2 today scenario enterprise expand handle global computational infrastructure efficiency concurrently optimizing cost well expense researcher cloud oriented integrate batch based well real-time processing lambda data- processing pattern handle massive amount integrate batch based real-time process singlular framework lambda administrator governs service comprising aws description lambda aws real-time stream aws kinesis combined stored aws s3 bucket historic aws s3 suggested style includes speed based layer spark streaming aws cluster collect kinesis stream batch segment spark sql aws cluster s3 base code called needed reducing overhead involved maintaining code base speed cloud log aggregation 4 2016-17 2.1.2. analytics option aws 2016 1 paper designed help scientist architect developer comprehend analytics aws providing summary service digitally driven extent produced collected mounting accelerating constantly increasing challenging standard analytics process innovative method gap produced analysed effectively technique offer method well option allowed perform efficiently order improve comprehension customer desire gain competitive advantage market enhance business oriented improved standard warehousing complicated support batch real-time processing unstructured well structured high-intensity transaction aws includes wide platform service help construct secure seamlessly scale end-to-end ease service described direction accumulating processing storage aws kinesis stream kinesis speed queuing form queue rapidly generating kinesis stream enables build customised analyse process streamed real-time stream constantly record save amount terabyte unit time number source financial transaction website clickstreams log location-tracking event aws lambda speed cloud log aggregation 5 2016-17 aws lambda programming administrative service aws allows programming provision managing lambda code form backend systemwithout administration code auto trigger call directly web mobile app aws service lambda enables executing code reaction trigger shift state change action lambda direct initiated aws service simple storage s3 kinesis dynamodb aws sn cloudwatch permitting building variety real-time processor aws elasticsearch service aws managed service simple organize scale elasticsearch aws cloud elasticsearch real-time distributed search analytics engine allows exploration velocity scale unmatched analytics structured search full-text search well three concert straight linked access elasticsearch open-source api code existing environment seamlessly speed cloud log aggregation 6 2016-17 2.1.3. security scale logging aws 2015 3 logging api call key aspect best practice security regulatory industry compliance aws cloudtrail record api call specific service aws account deliver log file s3 bucket aws variety on-demand service it-resources launched managed pay pricing recording api call change attached resource-configuration critical portion governance compliance security cloudtrail designed provide simple solution record api call associated modification help reduce burden on-location infrastructure storage challenge assisting build enhanced detection prevention security control aws environment cloudtrail remove infrastructure set-up turn log short step improved visibility api call account cloudtrail constantly record api call numerous server highly process pipeline.s paper describes key aspect aws security framework control access log file order keep integrity log critical manage access involving generation well storage log file ability create modify view log restricted authorized control prevent unauthorized access log control ensure access log record role-based alert log file generation misconfiguration near-real-time alert respect misconfiguration log detailing change api call critical effective governance compliance providing alert log created fail follow pre-defined step event misconfiguration speed cloud log aggregation 7 2016-17 alert pertaining log misconfiguration instruct appropriate log share unnecessary manages change aws log file cloudtrail allows tracking modification aws modification creation deletes conducting review history api call help analyze event understand unexpected unauthorized change occurred identifying initiated originated occurred provide edits component control avoid modification log modification failure associated log storage log file legal regulation industry standard require log stored longer period time hipaa requires record retained year pci ds state log stored year standard declare variable longer storage period based stored cloudtrail seamlessly integrate aws s3 glacier allowing customization lifecycle rule s3 bucket suit storage speed cloud log aggregation 8 2016-17 2.1.4 hsclas cloudwatch cloudwatch currently existing log file despite strong robust highly rigid doe tend user-friendly handling lack graphic completely command novice cloudwatch incredibly difficult requires depth knowledge command requiring amount time familiarization lack gui highlighted respect displaying restricted textual representation making difficult interpret analyse hsclas overcomes proving user-friendly gui well providing flexible approach dashboard menu option easier specific request enter highly complex command gui enables visual aid graph pie-charts making interpretation simpler efficient process speed cloud log aggregation 9 2016-17 2.2. proposed current shift on-site capacity cloud based service monitor off-site record log platform perform aggregation retrieved log generated cloud based service fig2.1 interpretation platform allow aggregation retrieved cloud log file well allowing processing yield specific platform interact service offered aws including log file kinesis lambda elastic search platform enable request highly specific log file produce pertinent graphically dashboard speed cloud log aggregation 10 2016-17 3 speed cloud log aggregation 11 2016-17 3 specification ________________________________________ 3.1 aws cloud popular enterprise expand restricted lack shifting public cloud security concern respect stored cloud apart security challenge troubleshooting network forensics compliance fault beat security professional observe understand log generated aws cloud real-time log digital footprint event occurring hosted cloud offer platform perform aggregation retrieved aws log generated aws cloud based service aim create platform method service aws cloud well running cloud speed cloud log aggregation hsclas collect track metric collect monitor aws log file automatically react change aws speed cloud log aggregation aws service s3 lambda dynamodb monitor aggregate aws log file generate system-wide visibility utilization performance health speed cloud log aggregation 12 2016-17 3.2 provide convenient centralized location read optimize log file analyze provide insight error handling tuning assistance cloud require service offered aws web service aws cloudtrail s3 bucket lambda dynamodb 3.2.1 perform real time speed log simplification log event occur insight reliable solution create platform aws service allows aggregation retrieved cloud log file platform enable request highly specific log file complete administration aws service extraction aws log file java based program control input regard procured complete 3.2.2 aws cloudtrail web service record aws api call account delivers log file aws s3 cloud storage internet term bucket object aws s3 apis storing log file aws lambda server le compute service code response event automatically manages underlying compute resources.aws dynamodb fully managed nosql database service fast predictable performance seamless scalability speed cloud log aggregation 13 2016-17 3.2.3 context write cloudtrail log account capture event troubleshooting issue log record composed ip address time http method aws lambda computes service upload log record manual strategy requires manual selection build deploy alternative scalable push simplified dynamodb dynamodb search group retrieve field search field 3.2.4 major constraint log file cloud input s3 bucket web service log provided aws lambda web service file ultimately store dynamodb web service dynamodb perform operation searching indexing partitioning speed cloud log aggregation 14 2016-17 3.3 description 3.3.1 description awsclient firstly username password generated awsclient awss3client creation deletion bucket awss3client awscloudtrailclient log generation process started awscloudtrailclient aws dynamodbclient log file simplification stored aws dynamodbclient 3.3.2 object object variable declares program awsclient object awsclient awsclient username string password string awss3client object awss3client awss3client bucket string region string speed cloud log aggregation 15 2016-17 awscloudtrailclient object awscloudtrailclient awscloudtrailclient tail string bcket_name string aws dynamodb client object awsdynamodb aws dynamodbclient inputstream string 3.3.3 fig 3.1 hsclas speed cloud log aggregation 16 2016-17 3.4 description 3.4.1 description function 3.4.1.1 processing narrative pspec function log generation firstly log generated cloud front cloud front s3 bucket created region cloud trail trail created named log generated bucket log collection log collection generation stored s3 bucket storing code executed lambda log generated dumped dynamodb database display dashboard dynamodb presented dashboard form graph pie speed cloud log aggregation 17 2016-17 3.4.1.2 function fig3.2 function hsclas 3.4.1.3 function description awsidentifymanagement access key security key generated awsidentifymanagement object awsidentifymanagement awsidentifymanagement username string no_of_user integer group_name string no_of_group integer function createaccesskey void create group string void addusertogroup string void speed cloud log aggregation 18 2016-17 3.4.1.4 performance issue proposed going develop chief performance company interacts aws service performance accurate fast handle amount log file size generated aws functionality service 3.4.1.5 constraint program created java programming language aws command speed cloud log aggregation minimum pc 64mb ram cpu 400mhz program good speed program 15 megabyte hard disk space store program library 3.4.2 description 3.4.2.1 machine 3.4.2.1.1 front-end java se 7. back-end dynamodb 3.4.2.1.2 window 8.1/10 and/or ubuntu 14.04 lts 64-bit i7 processor 2.4-4.5 ghz 8 gb 2400 mhz ddr3 ram speed cloud log aggregation 19 2016-17 3.5 behavioral description 3.5.1 description behavior 3.5.1 state state follow 1. log generated 2. log collection storage s3 bucket 3. streaming 4. execution 5. storage dynamodb 6. output dashboard 3.5.2 state transition fig3.3 state transition speed cloud log aggregation 20 2016-17 4 speed cloud log aggregation 21 2016-17 4 _________________________________________ 4.1 level hsclas architectural fig.4.1 level hsclas speed cloud log aggregation 22 2016-17 4.2 based fig.4.2 log generation fig 4.3 lambda processing speed cloud log aggregation 23 2016-17 fig4.4 dynamodb- processing fig4.5 ec2 speed cloud log aggregation 24 2016-17 4.3 based split fig4.6 split-up speed cloud log aggregation 25 2016-17 5 speed cloud log aggregation 26 2016-17 5 _________________________________________ 5.1 input w3c format log file fetch log file s3 bucket upload aws lambda java code govern entire perform based aggregation storing log aws dynamodb generation dashboard style 5.2 coding speed cloud log aggregation 27 2016-17 speed cloud log aggregation 28 2016-17 speed cloud log aggregation 29 2016-17 6 speed cloud log aggregation 30 2016-17 6 evaluation _________________________________________ 6.1 screenshots speed cloud log aggregation 31 2016-17 speed cloud log aggregation 32 2016-17 speed cloud log aggregation 33 2016-17 6.2 technique 6.2.1 pert table.6.1 pert signifying total time development speed cloud log aggregation 34 2016-17 6.2.2 pert fig.6.2 pert signifying total time development speed cloud log aggregation 35 2016-17 6.3 6.3.1 gantt fig6.3 gantt hsclas speed cloud log aggregation 36 2016-17 6.4 6.4.1 fig.6.4 6.4.1.1 engineer 1 member log generation storing log file 6.4.1.2 engineer 2 member responsible parsing entire log file breaking log single entry hash map converting suitable format store dynamo db 6.4.1.3 engineer 3 member responsible developing function lambda handler lambda function applied queued log file 6.4.1.4 engineer 4 member responsible querying dynamo db suitable displaying dashboard dynamodb lambda function process log file evaluate speed cloud log aggregation 37 2016-17 6 5 speed cloud log aggregation 38 2016-17 6.5.1 valid log file speed cloud log aggregation 39 2016-17 6.5.2 invalid log file speed cloud log aggregation 40 2016-17 7 speed cloud log aggregation 41 2016-17 7 _________________________________________ existing solve subset automated log ignore current ui generation method appropriate speed cloud log aggregation unified platform generic log hsclas engine allows directly observe log hsclas ui find critical create delete event hsclas effective graph simplified access lengthy log file hsclas log offer separate dashboard stream database web server app server middleware hsclas allows view log simplified graph format view easy understanding speed cloud log aggregation 42 2016-17 ______________________________________ 1 erik swensson manager solution aws erick dame solution architect aws shree kenghe solution architect aws analytics option aws 2016 2 vadim astakhov aws manjeet chayel aws lambda batch real-time processing aws spark streaming spark sql 2015 3 chad woolf aws security scale logging aws 2015 4 2016 aws web service online .available http //aws.aws.com/about- aws/globalinfrastructure/ 5 2016 aws web service online .available http //aws.aws.com /kinesis/streams 6 2016 aws web service online .available http //aws.aws.com/tools/ 7 2016 awsweb service online .available http //aws.aws.com/lambda/ 8 2016 aws web service online .available http //docs.aws.aws.com /elasticmapreduce/latest/developerguide/usingemr_s3distcp.html speed cloud log aggregation 43 2016-17 ______________________________________ plagiarism check final speed cloud log aggregation 44 2016-17 speed cloud log aggregation 45", "keywords": ["aggregation hsclas", "analytics option", "aws cloud", "aws cloudtrail", "aws cluster", "aws kinesis", "aws lambda", "aws log", "aws log file", "aws service", "aws web", "aws web service", "cloud log", "cloud log aggregation", "highly specific", "highly specific log", "kinesis stream", "lambda dynamodb", "log aggregation", "log aggregation hsclas", "log file", "log generation", "platform enable", "realtime processing", "specific log", "specific log file", "speed cloud", "speed cloud log", "state transition", "web service"], "libraries": [], "languages": ["html", "java", "cs"], "frameworks": ["react"], "dbs": []}, "./reports/28_final_Report.pdf": {"title": "a recommendation engine for q & a site    using apache mahout and hadoop", "filename": "./reports/28_final_Report.pdf", "data": "recommendation engine site apache mahout hadoop pankaj meshram b120058582 shoeb sharif patel b120058595 darshani marke b120058579 shruti mukkawar b120058584 guidance prof. k. y. digholkar s. 27 satara road 411043 2016-2017 recommendation engine site apache mahout hadoop pankaj meshram b120058582 shoeb sharif patel b120058595 darshani marke b120058579 shruti mukkawar b120058584 bonafide prof. k. y. digholkar earlier diploma prof. s. b. deshmukh coordinator prof. k.y digholkar examiner 2017 dr. p. t. ackowledgment compromise theoretical consideration practical involves non-technical experience source express feeling gratitude number people instrumental supportive completion assessment express sincere regard prof. k. y. digholkar coordinator prof. s. b. deshmukh valuable suggestion help undertaken complete kind assistance encouragement express profound dr. a. m. bagade incharge h.o.d cheerful encouragement valuable suggestion support vital helped complete express feeling gratitude dr. p. t. forget express immense sense thankfulness staff college extended co-operation needed completion help received staff thankful friend offered helping hand needed family supporting spiritually life pankaj meshram b120058582 shoeb sharif patel b120058595 darshani marke b120058579 shruti mukkawar b120058584 title 4.1 4.2 4.3 4.4 4.5 4.6 5.1 5.2 5.3 6.1 6.2 6.3 6.4 6.5 6.6 architectural block recommendation class recommendation recommendation recommendation er dataset build success screenshot created executing database springxd server terminal similarity score generated database top recommendation generated homepage site serving recommendation comparative dataset graph execution time size dataset 15 16 18 19 20 21 29 30 31 37 38 39 40 40 41 acronym term entagrec enhanced tag recommendation description ai dfs hdfs mvc xml dfd artificial intelligence distributed file hadoop distributed file model-view-controller extensible markup language title acknowledgement abbreviation background challenge aim background existing proposed specification definition specification 3.2.1 recommendation 3.2.2 machine learning 3.2.1 distributed file 3.2.4 mvc framework class ii iii 1 2 3 3 4 5 6 7 8 9 10 10 10 11 11 11 12 14 15 15 16 18 19 20 21 22 1 2 3 1.1 1.2 1.3 1.4 2.1 2.2 3.1 3.2 3.3 4 4.1 4.2 4.3 4.4 4.5 4.6 4.7 5 6 7 5.1 5.2 6.1 6.2 5.2.1 dataset collection 5.2.2 import mysql 5.2.3 ingest hadoop 5.2.4 recommender job 5.2.5 spring boot based web evaluation discussion base paper plagiarism review sheet 23 23 24 25 30 32 33 36 37 40 42 44 recommendation engine site apache mahout hadoop recommendation question-answer site focus increasing engagement site forward novel recommendation recommendation accurate personalized intelligent phase going tag tag correlation historic post regress preference score historic behavior second phase network recommendation based allocation improved collaborative filtering question node graph find correlation question recommend alternative relation solves caused sparse compressing rating matrix predicting null finally stackoverflow askubuntu askdifferent site verify recommendation optimizes accuracy coverage recommendation keywords recommendation collaborative filtering item-item similarity machine learning mahout spring batch maven map-reduce 2016-17 1 recommendation engine site apache mahout hadoop 1 2016-17 2 recommendation engine site apache mahout hadoop 1.1 background unstoppable increase amount digital number internet created worst challenge overload access item interest internet access google yandex duckduckgo solved completely prioritization customization absent creating demand recommendation engine recommender filtering deal excess filtering fragment massive amount real time generated preference interest observed behavior item recommender advantageous merchant development recommendation created field previous year question answer recommendation field state art actively developed accurate method recommending question answer established machine learning technique recommendation improved varied underlying network website 3 based intuition analyze underlying network stackoverflow askubuntu askdifferent precisely recommend question answer user-produced improve developing field 1.2 challenge focus designing recommendation engine social question answer site help question answer based answering history flipkart suggests product based previous purchase history stack exchange dataset main analyze previous answer 2016-17 3 recommendation engine site apache mahout hadoop recommend unanswered question he/she answer stack exchange recommendation engine better prevent helping learning purpose jargon perform operation dataset dataset social question answer site help generate generate recommendation well dealing extracting dataset building recommender extracted proposed recommendation engine based collaborative filtering technique 3 primary recommend unanswered question interested answering co-occurrence question answered tag similarity question similarity construction choosing best wa challenge faced wa cold start answered question wa solved help tag similarity 2 1.3 aim focused preprocess publically site stackoverflow askubuntu askdifferent freecode find associativity question tag apache mahout score recommender logic program web serve recommendation recommender provided flexibility pre-existing create platform social question answer site recommend unanswered question based context answered question tag associated 2016-17 4 recommendation engine site apache mahout hadoop 1.4 2 background background 3 detailed needed specification 4 dfds explanation 5 realization concept developed describe implemented 6 evaluation describes extent achieved comprehensible summary critical 7 summarizes achieved acknowledges 2016-17 5 recommendation engine site apache mahout hadoop 2 2016-17 6 recommendation engine site apache mahout hadoop background 2.1 2.2 existing 2.2.1 entagrec enhanced tag recommendation site improve tag site paper proposes entagrec automatic tag recommender based historical keyword i.e tag assignment object evaluate performance site stackoverflow.com askubuntu.com askdifferent.com freecode.com purpose paper proposes customized tag recommendation called entagrec 1 entagrec learns historical object tag recommends appropriate tag object entagrec borrows complementary thought statistic community bayesian frequentist pro 1 object tagged component output weighted score tag indicates likelihood tag assigned object finally paper combine component weighted sum score final score tag tag ranked based final score recommended 2.2.2 tag recommendation stackoverflow paper introduces nettagcombine network property stackoverflow existing machine learning method tag recommendation paper study tag recommendation improvement 2 study paper published year tagcombine entagrec tag recommendation site stackoverflow improvement early discussion social community detection networked graph improved recommendation 2 2016-17 7 recommendation engine site apache mahout hadoop current solution suffer existing scan question recommends question context standard platform recommending unanswered question existing 2.3 proposed basic concept create web platform serve social question answer site designing web going java spring boot frond development mysql database processing piece batch processing train machine learning hadoop export mysql hadoop mahout generate import mysql mahout recommender component generate recommendation question answer finally web serve recommendation 2016-17 8 recommendation engine site apache mahout hadoop 3 2016-17 9 recommendation engine site apache mahout hadoop specification 3.1 definition develop web social question answer site adding recommendation engine proposed recommendation engine based collaborative filtering technique 3.2 specification 3.2.1 recommendation recommendation emerged extension traditional e-commerce travel recommendation engine base trending artificial intelligence ai branch recommendation constantly observes behavior recommends item interested center recommendation machine-learning process leading service provider recommendation engine shift purchase history recommend product magazine article friend good major recommendation engine sale experience friendly effective example flipkart.com depending purchase history behavior site recommends product interest 3.2.2 machine learning machine learning discipline artificial intelligence ai power ability learn program machine explicitly machine learning focus development program adapt change exposed dataset 2016-17 10 recommendation engine site apache mahout hadoop process machine learning mining search hidden pattern extracting human comprehension mining machine learning detect hidden pattern adjust program action machine learning classified supervised unsupervised supervised apply learned historic unsupervised directly draw datasets 3.2.3 distributed file distributed file dfs file remote location i.e server accessed processed wa stored local client machine dfs convenient share file network controlled authorized server allows client share file store storing locally hadoop distributed file hdfs distributed file designed cheap commodity similarity early distributed file difference distributed file hdfs highly fault tolerant designed deployed low-cost hdfs throughput access suitable 3.2.4 mvc framework model-view-controller mvc pattern architectural separate three vital logical i.e component view controller component built handle developmental aspect mvc accepted industry-standard web development framework create scalable flexible 7 component database logic program represent accessed view controller component logic database 2016-17 11 recommendation engine site apache mahout hadoop example employee object retrieve employee database manipulate update database view view component logic i.e frontend view example employee view include frontend text box checkboxes dropdowns intended interacts controller provide view component process business logic incoming request manipulate database component interact view output example employee controller care interaction input employee view update database employee 2016-17 12 recommendation engine site apache mahout hadoop 3.3 requiremnts 3.3.1 processor intel i5 higher hard disk space 1 tb min ram memory 4gb 8 gb recommended 3.3.2 operating web server client side scripting server side scripting database handling linux ubuntu 10.04 apache tomcat server v2.2 html javascript java mysql 2005 framework spring springxd 2016-17 13 recommendation engine site apache mahout hadoop 4 2016-17 14 recommendation engine site apache mahout hadoop 4.1 question-answer recommendation engine consists collaborative filtering recommendation technique hadoop mahout springboot springxd dataset xml format input stored mysql converting format hadoop processing mysql preprocessing extracting map-reduce framework hadoop process mahout library provide functionality apply machine learning concept log likelihood co-occurrence similarity springboot frontend designing springxd ingesting exporting mysql hdfs 4.2 architectural 4.1 architectural block 2016-17 15 recommendation engine site apache mahout hadoop principle function represented dashboard principle input form interaction behavior recorded storing mysql mysql storage store behavior interaction form post_id user_id vote_type tag_id vote feedback similarity score based recommendation provided dashboard hadoop hdfs preprocessed mysql tag_id post_id user_id processing performing map reduce job sending similarity score mysql mahout similarity library processing hdfs library similarity co-occurrence log likelihood calculating similarity score 2016-17 16 recommendation engine site apache mahout hadoop 4.3 4.3 recommendation describes action search/view post use-case registered registered interacting filter post providing popular post access operation registered creates update deletes registered log log three included create/update database create update database 7 preprocess create/update database preprocesses performing remove word tokenization extraction similarity construction find similarity calculating similarity score recommendation recommendation similarity score exported update database 2016-17 17 recommendation engine site apache mahout hadoop 4.4 class 4.2 class recommendation class represents static view proposed class post class recorded post class form postfeatures feedback class form userprofile userfeedback userreviews input recommendation preprocessor categorize tokenize operation extractpost removestopword tokenization findtagtagsimilarity findsimilaruser findsimilarpost performing machine learning map reduce job involves class evaluaionmeasures modeltraining modeltraining updated training recommendation evaluationmeasures class evaluates generated class recommendation class form recommendation generating recommendation similarity score class 7 2016-17 18 recommendation engine site apache mahout hadoop 4.5 4.4 recommendation representation stepwise workflow action program activate web logging web perform view post ques/ans search ques/ans view ques/ans 7 activate input generation user-generated database update database updated database traverse perform action similarity construction calculates similarity score find node provided recommendation add recommendation display output evaluation train dataset updated generated database handle train dataset applied check 2016-17 19 recommendation engine site apache mahout hadoop 4.6 4.5 recommendation process operated manner 7 web start viewing post searching question answer servlet start web sends request servlet creates update database database similarity calculated recommendation web recommendation display 2016-17 20 recommendation engine site apache mahout hadoop 4.7 4.6 er dataset 2016-17 21 recommendation engine site apache mahout hadoop 5 2016-17 22 recommendation engine site apache mahout hadoop consists machine learning processing orchestration distributed storage web 5.1 apache hadoop apache hadoop 2.7.3 latest version supported spring framework apache hadoop spring xd worked best latest release 1.0.0 spring xd mysql database configuration pom file 's dataset extracted dump stackexcahnge 's website apache mahout mahout 0.9 currently working hadoop 2.x.x spring xd requires apache hadoop 2.x higher checkout build appropriate version apache mahout spring boot configuration front-end development purpose spring boot framework provided spring community 5.2 broadly divided 5 1. dataset collection 2. import mysql 3. ingest hdfs 4. recommender job 5. spring boot based web 2016-17 23 recommendation engine site apache mahout hadoop 5.2.1 dataset collection stack exchange quarterly publically study downloaded extracted extracted consists bunch xml file 5 dealing posts.xml comments.xml votes.xml users.xml post_history.xml tag.xml file form posts.xml comments.xml votes.xml users.xml post_history.xml 2016-17 24 recommendation engine site apache mahout hadoop tag.xml 5.2.2 import mysql running job downloaded imported database dataset provided .xml file imported mysql database batch job 6 configure mysql database connection instruction update application.properties file configure mysql instance.. application.properties 2016-17 25 recommendation engine site apache mahout hadoop importjob.java 2016-17 26 recommendation engine site apache mahout hadoop 2016-17 27 recommendation engine site apache mahout hadoop 2016-17 28 recommendation engine site apache mahout hadoop maven building build running mvn package root directory file 5.1 build success screenshot dataset import job command java -jar database- import/target/database-import-1.0-snapshot.jar importdirectory import_file_location location dataset input .xml file directory votes.xml users.xml posts.xml posthistory.xml comments.xml 2016-17 29 recommendation engine site apache mahout hadoop 5.2 created executing database 5.2.3 ingest hadoop ingest mysql database hadoops hdfs processed map reduce hadoop spring xd framework framework number pre-packaged batch job import export orchestration analytics jdbchdfs job ingest database hdfs 6 step performed ingest mysql hdfs fo hadoop 2016-17 30 recommendation engine site apache mahout hadoop 1. start apache hadoop service 2. start spring xd framework shell terminal single node mode command ./xd-singlenode bin directory spring xd framework 5.3 springxd server terminal 3. start spring xd shell bin directory spring xd command ./xd-shell xd shell created job deployed single node execute mahout itemsimilarityjob executed maven build packaged job deployed spring xd shell 2016-17 31 recommendation engine site apache mahout hadoop copy .zip file recommender.zip recommender/target /jobs directory running job output note output command full import 5.2.4 recommender job recommender.xml 2016-17 32 recommendation engine site apache mahout hadoop 5.2.5 spring boot based web postcontroller.java 2016-17 33 recommendation engine site apache mahout hadoop 2016-17 34 recommendation engine site apache mahout hadoop application.java 2016-17 35 recommendation engine site apache mahout hadoop 6 2016-17 36 recommendation engine site apache mahout hadoop 6.1 discussion running recommender job apache mahout similarity score item dataset demonstration considered item tag question recommender job map reduce framework calculating similarity score item help apache mahout machine learning stored mysql called taste_item_similarity 6.1 similarity score generated database 2016-17 37 recommendation engine site apache mahout hadoop help mentioned score generating recommendation unanswered question 6.2 top recommendation generated 2016-17 38 recommendation engine site apache mahout hadoop developed springboot web java maven building launch web help running .jar file wa generated building 6 6.3 homepage site 2016-17 39 recommendation engine site apache mahout hadoop 6.4 serving recommendation 6.2 discussion summarizes dataset experimentation measure calculated 6.5 comparative dataset graph summarizes graph dataset size approximate time computation 2016-17 40 recommendation engine site apache mahout hadoop 6.6 graph execution time size dataset 2016-17 41 recommendation engine site apache mahout hadoop 7 2016-17 42 recommendation engine site apache mahout hadoop developed question answer recommendation combined text-based machine learning recommendation technique newly developed network-based recommendation technique incorporating network recommendation yield higher question answer recommendation accuracy compared existing stackoverflow dataset confirm original intuition stackoverflow based web site underlying network additional post predict accurately demonstrates network based employed similarity web site relying body post network employed focus textual post wa produce accurate question answer recommendation analysing post position stackoverflow network entirely input conflict provided network provided text-based machine learning conclude network recommendation promising avenue improvement recommendation accuracy 2016-17 43 recommendation engine site apache mahout hadoop 1 s. wang d. lo entagrec enhanced tag recommendation site journal 9 2 110-103 2014 2 c. `` hybrid approach location based customized poi travel recommendation '' international journal science 2016 3 j. wang n. luo `` hybrid popular personalized tag recommendation '' journal 11 2 116-123 2016 4 v. subramaniyaswamy s. chenthur pandian `` effective tag recommendation based topic ontology usingwikipediaand wordnet '' international journal intelligent 27 12 1034-1048 2012 5 `` stack exchange dump stack exchange inc. free download streaming internet archive '' internet archive 2017 online http //archive.org/details/stackexchange accessed 31- may- 2017 6 `` building spring boot '' spring.io 2017 online http //spring.io/guides/gs/spring-boot/ accessed 31- may- 2017 7 r. pressman b. maxim 1st york mcgraw-hill 2015 8 m. priestley practical object-oriented 1st york mcgraw- hill 2003 9 a. badica b. trawinski n. nguyen development computational collective intelligence 1st 2016-17 44 recommendation engine site apache mahout hadoop 2016-17 45 recommendation engine site apache mahout hadoop 2016-17 46 recommendation engine site apache mahout hadoop 2016-17 47 recommendation engine site apache mahout hadoop 2016-17 48 recommendation engine site apache mahout hadoop 2016-17 49 recommendation engine site apache mahout hadoop 2016-17 50 recommendation engine site apache mahout hadoop 2016-17 51 recommendation engine site apache mahout hadoop 2016-17 52 recommendation engine site apache mahout hadoop 2016-17 53 recommendation engine site apache mahout hadoop 2016-17 54 recommendation engine site apache mahout hadoop 2016-17 55 recommendation engine site apache mahout hadoop 2016-17 56 recommendation engine site apache mahout hadoop 2016-17 57 recommendation engine site apache mahout hadoop 2016-17 58 recommendation engine site apache mahout hadoop 2016-17 59 recommendation engine site apache mahout hadoop 2016-17 60 recommendation engine site apache mahout hadoop 2016-17 61 recommendation engine site apache mahout hadoop 2016-17 62 recommendation engine site apache mahout hadoop 2016-17 63 recommendation engine site apache mahout hadoop 2016-17 64 recommendation engine site apache mahout hadoop 2016-17 65 recommendation engine site apache mahout hadoop 2016-17 66", "keywords": ["answer recommendation", "answer site", "apache mahout", "apache mahout hadoop", "based web", "collaborative filtering", "distributed file", "engine site", "engine site apache", "import mysql", "ingest hadoop", "machine learning", "mahout hadoop", "mysql database", "network recommendation", "pankaj meshram", "purchase history", "question answer", "question answer recommendation", "question answer site", "recommendation engine", "recommendation engine site", "recommendation recommendation", "recommender job", "sharif patel", "similarity construction", "similarity score", "site apache", "site apache mahout", "social question", "social question answer", "spring boot", "stack exchange", "tag recommendation", "unanswered question", "underlying network", "web site"], "libraries": [], "languages": ["xml", "javascript", "basic", "html", "java"], "frameworks": [], "dbs": ["mysql"]}, "./reports/29_final_report.pdf": {"title": "intelligent user profiling   through    integration of siem   qradar and big data", "filename": "./reports/29_final_report.pdf", "data": "intelligent profiling integration siem qradar sharayu amritkar antara bahursettiar rohit bhintade tushar methwani b120058507 b120058513 b120058520 b120058646 guidance prof. deepali d. londhe sr. no.27 pune-satara road bharati vidyapeeth pune-43 2016-2017 intelligent profiling integration siem-qradar intelligent profiling integration siem qradar sharayu amritkar antara bahursettiwar rohit bhintade tushar methwani b120058507 b120058513 b120058520 b120058646 bonafide prof. deepali d. londhe earlier diploma prof. deepali d. londhe prof. s.b.deshmukh prof. shweta dharmadhikari co-ordinator dr.p.t.kulkarni examiner 2016-17 2 intelligent profiling integration siem-qradar ibm ibm india pvt manyata embassy park g2 block nagawara outer ring road bangalore 560045 india tel 91-80- 43039999 fax 91-80- 49142409 www.ibm.com/in 14/5/2017 antara bahursettiwar rohit bhintade sharayu amritkar tushar methwani subject completion letter dear opportunity commend completion letter certifies completed internship ibm india private limited confirms employment intern capacity 12th 2016 5th 2017 guidance yogesh talekar title intelligent profiling integration siem-qradar best ibm india private limited sincerely rohit vohra recruitment leader india/sa ibm india private limited 2016-17 3 intelligent profiling integration siem-qradar 1 2016-17 4 intelligent profiling integration siem-qradar organized 1.1 background proposed 1.2 proposed 1.1 advancement network contributes improvement daily life people considered fundamental social infrastructure increase incident threat infrastructure turned serious nowadays maintain level security ensure safe trusted secured internet network threat intrusion misuse intrusion detection crucial component network security specialized product developed detect alert potential cyber-attacks employ misuse detection anomaly detection utilizing anomaly detection hand evaluates normal baseline issue alert based abnormal behaviour traditional product network intrusion detection nids monitor cyber threat network layer evaluating network traffic traditional product host-based intrusion detection hids monitor cyber threat directly host host log process 2016-17 5 intelligent profiling integration siem-qradar file network monitor specific protocol web server hyper text transfer protocol http called protocol-based intrusion detection pid today security personnel inundated overload ambiguous alarm cyber security domain frequently encounter dealing currently implemented compounding existing security seldom integrate wide spectrum example typically firewall workstation anti-virus database end-user variety traditional security breach attempt sort integrated security approach traffic depicts typical network network traffic workstation server firewall hids nids 9 .to improve intrusion detection security event correlated order improve alerting accuracy well comprehensive cyber threat perspective 1 1.2 day technique preventing cyber-attacks firewall vulnerability scanner prevent un-authorised outsider enter network scan vulnerability network care 's exploited preventing 2016-17 6 intelligent profiling integration siem-qradar attack forgot culprit sitting inside network restriction employee recognise risky query main started ponder making help people currently product profiling purpose product concept profiling network security.so kind concept profiling classify network chance criminal attack 2016-17 7 intelligent profiling integration siem-qradar 2 2016-17 8 intelligent profiling integration siem-qradar review ___________________________________________ organized 2.1 existing drawback 2.2 proposed efficiently providing recommendation 2.1 existing 2.1.1 existing profiling currently product market providing profiling securonix 15 collect integrates network server access real time detect suspicious bolster security specific insight behaviour access permission highest personnel cyfe 14 cyfe enables organisation integrate variety widget cover aspect business including client finance sale social medium twitter search widget create search mention brand username unique product 2.1.2 existing technique browsing measure 8 3 2016-17 9 intelligent profiling integration siem-qradar behaviour based time spent web technique investigates time spent web disregarded indicator online characterizing social network 7 5 technique understands behave connect social networking site decide interest building profile collected social network profile recommendation generated understanding semantic context personalised multimedia recommendation semantic context lead better understanding interest technique exploit textual context relevant document find interest technique follow internet explicitly judge relevance visit generate personalised news based generated profile context-aware profiling 2 10 agent provide service situational context bayesian network association rule case-based reasoning generate long term profile profile profiling nutch profiling involves indexing web mining thu nutch source search engine modelling phase 2016-17 10 intelligent profiling integration siem-qradar based filtering recommendation strategy nutch increased efficiency automating indexing educational based norm standard proxy server access log proxy log matthew myrick lawrence livermore national laboratory called `` mining proxy log finding needle haystack '' matthew provided excellent example leverage bluecoat web proxy log find `` bad guy '' simple stats agent compound search 's great presentation easy develop in-house perform daily effort lightbulb wa created find automated bluecoat web proxy logs.the wa malware contact doe based interval.the beacon proxy log analyzing amount randomness traffic website.regular beacon 's traffic randomness 22 drawback techniques/products a. doe include network event triggered b. technique considers going c. triggering action suspicious 2016-17 11 intelligent profiling integration siem-qradar 2.1 proposed proposed includes siem qradar structured network event vulnerability crawler unstructured social forum ibm devworks proposed analyze proxy server log map reduce job unstructured social feed analyzed correlated profile generated proxy log lastly profiling analyzing factor associated employee 2016-17 12 intelligent profiling integration siem-qradar 3 2016-17 13 intelligent profiling integration siem-qradar ______________________________________________ security event decade corner complete transformation security analytics platform siem comprises segment sem security event segment dealing event notification console view second sim security area storage reporting ibm qradar siem solution enterprise collecting log organisation network device host asset operating vulnerability ibm qradar common choice organisation small sought efficient reliable siem aim beast extension provide early visibility insider threat apts proposed extension analyse usage pattern employee organisation draw employee behaviour determine credential exploited qradar ability detect attack apply contextual awareness catch advanced malware deep performed social feed well browsinghistory build profile employee based usage characteristic profile behaviour 2016-17 14 intelligent profiling integration siem-qradar suspicious risky displayed ui siem admin choose drill log monitor pose threat siem admins qradar deployment ability identify prevent intrusion attack write complex correlation rule identify threat 4 2016-17 15 intelligent profiling integration siem-qradar __________________________________________ organized 4.1 basic major constraint 4.2 usage scenario i.e profile 4.3 description includes description class 4.4 restriction constraint 4.1 aim provide convenient reliable integrated existing security event qradar provide risky suspicious analysing employee 's portal blog social platform enable organisation prevent insider attack 1 4.1.1 4.1.1.1goals 2016-17 16 intelligent profiling integration siem-qradar provide security solution better security posture implementing profiling enable diagnosis insider threat 4.1.1.2objective perform calculation employee input gathered public portal blog proxy server log proxy server log analysed map reduce job browsing history analysed generate profile blog portal processed extracted mapped defined keyword directory includes keywords percentage associated individual employee his/her contribution evaluated build profile associated 4.1.2 profile provide better insight prevent insider attack input extracted portal blog proxy server log profile associated provided admin provided existing siem qradar platform admin generate rule offense block suspicious 4.1.3 context interacts forum blog proxy server log feed process provide reliable calculation employee security admin organisation profile employee facility query risky label suspicious 2016-17 17 intelligent profiling integration siem-qradar 4.1.4 major constraint designed siem ibm qradar depends traditional event provided mapping analytics designed platform provided ibm xforce app exchange enables ibm qradar platform 2016-17 18 intelligent profiling integration siem-qradar 4.2 4.2.1 siem-qradar siem qradar v7.2.8 aio rest apis ram-64gb cpu-xenon hdd- 1tb 4.2.2 hadoop hadoop apache flume hive pig python web crawler apis ram-32gb cpu-xenon hdd- 10tb 2016-17 19 intelligent profiling integration siem-qradar 4.3 structural 4.3.1 class 2016-17 20 intelligent profiling integration siem-qradar fig 4.2 class 4.4 behavioural 4.4.1 2016-17 21 intelligent profiling integration siem-qradar fig.4.3 2016-17 22 intelligent profiling integration siem-qradar 4.4.2 fig 4.4 1 2016-17 23 intelligent profiling integration siem-qradar fig 4.5 2 2016-17 24 intelligent profiling integration siem-qradar 4.4.3activity fig 4.6 2016-17 25 intelligent profiling integration siem-qradar 5 ______________________________________________ 5.1 illustrates detailed envisioned 5.2 5.3 state modified step 2016-17 26 intelligent profiling integration siem-qradar 5.1 fig 5.1 2016-17 27 intelligent profiling integration siem-qradar 5.2 fig.5.2 5.3 5.3.1 web crawling 11 amount web perspective retrieval extracting tedious job web crawler program crawl traverse web searching relevant filter search criterion narrowing search finding relevant practically search engine cover site 2016-17 28 intelligent profiling integration siem-qradar size web web crawling strategy breadth search depth search genetic nave bayes classification crawler combine ranking ranking determines web context extracted counting citation backlinks web 9 politeness policy crawler major performance site consuming network causing server overload solution robot exclusion protocol standard administrator indicate web server accessed crawler focused crawling crawler expressed function similarity search query enables crawler overlook unwanted web crawler designed download called focused crawler topical crawler 2016-17 29 intelligent profiling integration siem-qradar 5.3.2 mining 16 generate desired crawler mined mining categorical stored relational database current enterprise includes structured well unstructured item interest initially implement text mining function text extraction process text transformation generates number text text document extraction 6 treat treated separate text number provide essential training supervised text association association 12 uncover semantic meaning word association produce rule connecting word concept map reduce mapreduce java based distributed programming consists phase parallel map phase aggregating reduce phase processing generating datasets mapreduce programming map function process key/value pair key1 val1 key2 val2 generate intermediate key/value pair reduce function merges intermediate val2 associated intermediate key 2016-17 30 intelligent profiling integration siem-qradar key2 1 individual transform input record intermediate record called map input split independent chunk mapreduce job chunk processed map tasks.the framework sort output map input reduce input output processed job stored file-system reducer typically produce output mapreduce mapper reducer identified signature map k1 v1 k2 v2 reduce k2 v2 k3 v3 mapreduce best suitable written read time stored file namespace contributes hdfs allows master-slave 5.3.3 collection 13 collection enable storage retrieval complex collection map map stored record form key- pair map map stored record key-value tuple exist multiple key map map 2016-17 31 intelligent profiling integration siem-qradar map map stored record map key key based mapping function mapped single forming triplet map-key-value 2016-17 32 intelligent profiling integration siem-qradar 6 2016-17 33 intelligent profiling integration siem-qradar ____________________________________________ 6.1 state split 6.2 6.3 decomposition gantt 6.4 6.5 pert 6.1 split-up 1 web crawler web crawler 2 app development developing siem-qradar implement profiling 3 pre-processing/loading implementing pre-processor loader clean input hadoop 4 text mining mining identify relevant pattern string 5 collection creating complex collection 6.2 decomposition 6.1 decomposition studying paper gathering acquisition work-flow designing structural behavioral phase 1 web crawler phase 2 pre- processing phase 3 text mining phase 4 collection phase 5 basic document extension base completion documentation start duration 23-aug 15-sep 24-sep 6-oct 14-oct 4-nov 20-nov 1-dec 25-dec 13-jan 3-feb 22-feb 30 10 14 14 28 25 20 18 24 20 20 20 2016-17 34 intelligent profiling integration siem-qradar 6.3 2.0 fig 6.1 2.0 2016-17 35 intelligent profiling integration siem-qradar 6.4 pert 6.2 pert 6.5 pert fig 6.2 pert 2016-17 36 intelligent profiling integration siem-qradar 7 2016-17 37 intelligent profiling integration siem-qradar ______________________________________________ organized 7.1 proxy server log 7.2 discus web crawler blog 7.3 discus populating rest api 7.4 app extension qradar front 7.1 proxy server log map reduce proxy server server intermediary request client seeking web server company proxy server squid squid access log format access log converted comma separated file input hadoop map reduce framework log file loaded hdfs input mapreduce job fileinputformat class map long writable input reduce textinputformat break file consists character ip address client key remaining field pattern matching separate field log status 200 processing processed checked find method log robots.txt requested url identified removed 17 pre-processed log include timestamp elapsed client action code size method uri ident hierarchy mapreduce produce output file includes usernames url accessed count number time url accessed 2016-17 38 intelligent profiling integration siem-qradar 7.2 web crawler blog web crawler designed scrape html blog developer extract text find post link security 18 maintains dictionary establish relevance relevant post analysed extract usernames keywords count 19 web crawler comma separated file loaded hdfs file loaded hive keyword dictionary associated maintained hive keywords specific aggregated score calculated averaging word count score bolster profile proxy server log 2016-17 39 intelligent profiling integration siem-qradar 8 2016-17 40 intelligent profiling integration siem-qradar evaluation perform calculation employee input gathered public portal blog proxy server log proxy server log analysed map reduce job browsing history analysed generate profile blog portal processed extracted mapped defined keyword directory includes keywords percentage associated individual employee his/her contribution evaluated build profile associated score threshold triggered rule response risky suspicious extension 2016-17 41 intelligent profiling integration siem-qradar 9 2016-17 42 intelligent profiling integration siem-qradar ______________________________________________ siem evolutionary transformation cyber security witness discussed development platform traditional siem going solution enterprise better security posture identification security threat majorly insider threat easier efficient keeping track insider proposed extension identify apts slow attack ensure met illustrates comparison existing siem loophole dealt contribute ultimate crawling mining incorporated siem-big extension distinguishing studied event gathered traditional source non-traditional source develop solution extremely intelligent user-profiling gather essential extract build association factor drawing based usage pattern proposed technique 2016-17 43 intelligent profiling integration siem-qradar ____________________________________________ 1 ben wuest integrating qradar hadoop white paper security intelligence security ibm 16th 2014 2 tao ye chun ming profiling identifying network traffic service science ic 2015 6th international conference 2015 3 cyril onwubiko exploring web analytics enhance cyber situational awareness protection online web service homeland security hst 2015 international 2015 4 sandeep bhatt pratyusa k. manadhata loaizomlot operation role security security privacy volume 12 issue 5 sept.-oct. 2014 5 george saridakis vladena blenson jean-noel ezingeard hemamali tennakoon individual security behaviour cyber victimisation empirical study social networking technological forecasting social changevolume 102 2016 6 dr.s.vijayarani al preprocessing technique text mining international journal science network 5 1 7-16 2015 7 fabricio benevenuto tiago rodrigues meeyoung cha virgilio almeida characterizing behaviour online social network science federal mina gerais brazil nov 4th 2009 8 istvan k.nagy csaba gaspar-papanek behavior based time spent webpage telecommunication medium informatics budapest feb 2009. 2016-17 44 intelligent profiling integration siem-qradar 9 sergey brin lawrence anatomy scale hyper textual web search engine proc conference 200 dec 29th 2008 10 schiaffino silvia anala amandi `` intelligent profiling '' lecture note science 193-216. oct 13th 2016 11 vinay kancherla smart web crawler concept based semantic search engine sjsu scholar feb 12th 2014 12 2015 intel whitepaper analytics extract transform load apache urlhttps //software.intel.com/sites/default/files/article/402274/etl-big-data-with- hadoop.pdf online hadoop 13 2016 marshall yang ibm qradar v7.2.7 collection note online availablehttp //www.ibm.com/support/knowledgecenter/ss42vs_7.2.7/com ibm.qradar.doc/c_qradar_adm_ref_data_collection_overview.html 14 cyfe security web analytics 2016 http //www.cyfe.com/ 15 securonix insider threat detection 2016 http //securonix.com 16 oracle help center mining concept 2016 http //docs.oracle.com/cd/b28359_01/datamine.111/b28129/text.htm 17 savitha vijaya mining web server log distributed cluster international journal advanced science 5 1 2014 18 emma haddia xiaohui liua yong shib role text-preprocessing sentiment procedia science 17 2013 26 32 19 reshma bhonde binita bhagwat sayali ingulkar apeksha pande sentiment based dictionary approach international journal emerging 3 issue 1 2015 51-55 20 mining web proxy log interesting actionable data. online http //www.darkreading.com/risk/mining-web-proxy-logs-for-interesting- actionable-data/d/d-id/1135002 2016-17 45", "keywords": ["amritkar antara", "blog proxy", "blog proxy server", "bluecoat web", "calculation employee", "cyber threat", "ibm india", "ibm qradar", "insider threat", "integration siemqradar", "intelligent profiling", "intelligent profiling integration", "international journal", "intrusion detection", "map map", "portal blog", "profiling integration", "profiling integration siemqradar", "proxy log", "proxy server", "proxy server log", "search engine", "security event", "server log", "siem qradar", "social network", "text mining", "tushar methwani", "web crawler", "web server"], "libraries": [], "languages": ["clean", "python", "html", "basic", "small", "java"], "frameworks": [], "dbs": []}, "./reports/30_final_report.pdf": {"title": "blur removal on a no-reference image   using cpbd metric", "filename": "./reports/30_final_report.pdf", "data": "blur removal no-reference image cpbd metric narule shivali bhimashankar kothawale pradip sambhaji kandegale susmita ganpati shinde dharma b120058590 b120058569 b120058557 b120058630 guidance prof. n.v. buradkar s. 27 satara road 411043 2016-2017 blur removal no-reference image cpbd metric narule shivali bhimashankar kothawale pradip sambhaji kandegale susmita ganpati shinde dharma b120058590 b120058569 b120058557 b120058630 bonafide prof. n.v. buradkar earlier diploma prof. s. b. deshmukh coordinator dr. p. t. prof. n.v. buradkar examiner 2017 acknowledgement express feeling gratitude number people instrumental supportive completion assessment express sincere regard prof. n. v. buradkar coordinator prof. s. b. deshmukh valuable suggestion help undertaken complete kind assistance encouragement express profound dr. a. m. bagade charge h.o.d cheerful encouragement valuable suggestion support vital helped complete finally dr. p. t. staff helped narule shivali bhimashankar b120058590 kothawale pradip sambhaji b120058569 kandegale susmita ganpati b120058557 shinde dharma b120058630 title 2.1 2.2 3.1 comparison method comparison 8 9 15 ii title 3.1 3.2 4.1 4.2 4.3 4.4 4.5 gantt proposed class cpbd block 16 17 18 20 21 22 23 iii cpbd jnb qos nr psf pblur abbreviation cumulative blur detection noticeable blur service no-reference point spread function blur iv title acknowledgement abbreviation background review background review 1 1.1 1.2 2.1 2.2 2 2.2.1 existing 2.2.2 comparative study 2.2.3 comparative study method 2.2.4 proposed 3 specification 3.1 3.1.1 3.1.2 3.1.3 3.2 specification 3.2.1 3.2.2 staff orgnization 3.3 3.3.1 3.3.2 4 4.1 proposed ii iii iv 1 3 3 4 6 6 7 7 8 9 10 12 12 13 13 13 14 14 17 18 18 18 20 20 4.2 4.3 4.1.1 main component class description 4.3.1 cpbd block 4.3.2 control description 5 6 7 5.1 6.1 6.2 6.3 6.4 5.1.1 cumulative blur detection 5.1.2 classification blur 5.1.3 lucy-richardsons 5.1.4 blind-deconvolution 5.1.5 motion blur deblurring evaluation experimental setup strategy base paper plagiarism review sheet 20 22 23 23 24 27 27 28 33 34 34 35 37 37 37 38 39 44 45 blur removal no-reference image cpbd metric ____________________________________________ multimedia popular today great compression impairment introduced impairment qos consumer assessment technique measure multimedia going no-reference blur removal metric based human blur sensitivity probabilistic detecting blur edge pooled image computing cpbd going cumulative blur detection cpbd lucy- richardson blind deconvolution going develop detection noise blur amount blur noise image technique wiener blind deconvolution gaussian noise image lucy richardson technique best keywords blur detection blur metric no-reference perceptual sharpness metric visual pict-information -2016-2017 1 blur removal no-reference image cpbd metric 1 pict-information -2016-2017 2 blur removal no-reference image cpbd metric ____________________________________________ organized 1.1 background proposed 1.2 1.3 relevance 1.4 1.1 field entertainment education multimedia popular transmission compression technique advanced processing stage stage impairment introduced reason blurring image lens defocus atmospheric scatter spatial temporal sensor integration optical aberration blurring image occurs loss highly sensible caused processing acquisition processing considering original image image assessment metric classified reduced-reference full-reference no-reference metric real scenario assurance availability image difficult ass no-reference based image image reduced assessment metric no- image metric doe require original image full-reference assessment metric full original image blur area simply reduced sharpness area area caused object moved position capturing camera move caused inaccurate focusing camera blurring angle lens wide atmospheric turbulence exposure time short photon captured reduced equation blurred image hf blurred image distortion operator original image noise stage processing distortion operator represents optical spread light point no-reference assessment metric ass distortion blur sharpness metric combined metric ass image no-reference assessment metric concept noticeable blur cumulative blur detection pict-information -2016-2017 3 blur removal no-reference image cpbd metric 1.2 today storing transmitting compression field medicine aerospace transmission impairment image image degradation original image blurry noisy effective detection removal blur pict-information -2016-2017 4 blur removal no-reference image cpbd metric 2 pict-information -2016-2017 5 blur removal no-reference image cpbd background review ____________________________________________ organized 2.1 existing drawback 2.2 proposed efficiently providing recommendation 2.1 background field entertainment education multimedia popular transmission compression technique advanced processing stage stage impairment introduced reason blurring image lens defocus atmospheric scatter spatial temporal sensor integration optical aberration blurring image occurs loss highly sensible caused processing acquisition processing considering original image image assessment metric classified reduced-reference full-reference no-reference metric real scenario assurance availability image difficult ass no-reference based image image reduced assessment metric no- image metric doe require original image full-reference assessment metric full original image blur area simply reduced sharpness area area caused object moved position capturing camera move caused inaccurate focusing camera blurring angle lens wide atmospheric turbulence exposure time short photon captured reduced equation blurred image hf blurred image distortion operator original image noise stage processing distortion operator represents optical spread light point no-reference assessment metric ass distortion blur sharpness metric combined metric ass image no-reference assessment metric concept noticeable blur cumulative blur detection pict-information -2016-2017 6 blur removal no-reference image cpbd 2.2 review 2.2.1 existing paper authored niranjan narvekar lina karam 1 presented presented no- image blue metric fully based human blur sensitivity cumulative blur detection cpbd metric detection blur live image cpbd metric paper detection metric image cumulative blur detection cpbd metric detection blur image find image removal blur image paper authored suresh zadge dr. g. u. kharat 2 presented detection removal blur live database paper detected blur cumulative blur detection cpbd metric presented removal blur lucy richardson blur noise removed lucy richardson computed blur cpbd metric pooled image paper authored r. ferzli l.j karam 3 presented no-reference image sharpness based notion noticeable blur jnb add noticeable blur summation remove blur image paper authored moschetti 4 presented sharpness estimation technique document scene image presented efficient technique blurriness document image performed technique natural image method predict blur image camera-motion defocus pict-information -2016-2017 7 blur removal no-reference image cpbd 2.2.2 comparative study 2.1 comparison method existing paper detection detecting removal method noise method niranjan d. narvekar lina j. cpbd karam no-reference image blur metric based cumulative blur detection cpbd r. ferzli l.j karam no- jnb image sharpness based notion noticeable blur jnb suresh zadge g.u.kharat cpbd jnb lucy-richardson image blur detection cpbd metric deblurring gaussian blurred image lucy- richardson proposed method cpbd jnb lucy- richardson/blind deconvolution pict-information -2016-2017 8 blur removal no-reference image cpbd 2.2.3 comparative study method image processing method advantage disadvantage 2.2 method comparison edge sharpness depth field dof image segmentation blur extent measurement based image intensity profile photography blind image deconvolution preliminary step de-blurring process bayes discriminant function method preliminary step de-blurring process non-reference nr block blur measure lower computational cost time effective complex image ooi object interest identified effectively effective dof depth field image potential blur region image detected effectively interaction needed correctly estimated psf kernel fast computation effective blur identification sampling database needed prior detection lower complexity doe original signal effective gaussian noise lowest directional frequency energy motion blur motion blur detection robust closed form solution derived motion blur detection effective motion blur image wavelet-based histogram support vector machine svm focus blur detection effective robust detecting focus blur effective focus image pict-information -2016-2017 9 blur removal no-reference image cpbd 2.2.4 proposed proposed going detect image noise blur image gaussian blur excluding noise de-blur help blind deconvolution image gaussian noise well blur de-blur lucy richardson cumulative blur detection cpbd method going compute blur image pooled image detection going detect image noise blur image gaussian blur noise lucy richardson image blur excluding noise blind deconvolution lucy richardson image gaussian blur noise best blind deconvolution image blur excluding noise best pict-information -2016-2017 10 blur removal no-reference image cpbd 3 pict-information -2016-2017 11 blur removal no-reference image cpbd specification ____________________________________________ organized 3.1 exact 3.1 domain image processing implement detect blur no-reference image cpbd metric blur removal lucy richardson blind deconvolution existing image processing blur detection help cpbd metric jnb detecting noise blur existing cpbd jnb detecting blur lucy richardson method removal blur method detecting noise image existing deal lucy richardson blind deconvolution removal method best time accepts blurred image computes blur image cpbd method combined cpbd jnb approach edge detection performed image divide image block categorize block edge block smooth block deal edge block i.e block blur smooth block processed applies detect noise blur image depending decision choosing removal blur noise image gaussian blur noise lucy richardson removal blur image blur blind deconvolution aim reduce standard deviation image appears clearer currently standard deviation 3.6 aimed reduce accurate pict-information -2016-2017 12 blur removal no-reference image cpbd 3.1.1 main remove blur image best image best method blur detection removal 3.1.2 ensure maximum level image human vision evaluation point view minimize standard deviation maximum image efficient blurred image best method detect blur remove blur image 3.1.3 initial stage focus detecting blur noise image blur removal image motion image ensure correct functioning image processing exist image destination going image measure receiver side original image no-reference image assessment beneficial no-reference metric concept noticeable blur cpbd blur detection blur sensitivity edge image going implement blind technique noise image blue amount blur gaussian noise blur image going lucy richardson pict-information -2016-2017 13 blur removal no-reference image cpbd 3.2 specification 3.2.1 3.2.1.1 staff android designer android designer order decide android developer android developer order develop android database handler database handler order handle database change database documentation handler documentation handler order create document change document tester tester order developed applying appropriate developing strategy 3.2.1.2 cocomo cocomo stand constructive cost cost effort complete depending calculated number person complete semi- detached kilo code 10 semi- detached co-efficient ab co-efficient bb co-efficient cb co-efficient db semi-detached 3.0 1.12 2.5 0.35 pict-information -2016-2017 14 blur removal no-reference image cpbd effort applied ab kloc 3.0 8 1.12 effort applied 32.966 persons/month development time cb effort applied 2.5 32.966 0.35 development time 8.497 month people effort applied/ development time 32.966/8.497 people 3.88 4. people complete 4 3.2.1.3 3.1 start discussion 15/06/2016 15/07/2016 topic finalization 16/07/2016 20/07/2016 21/07/2016 1/09/2016 coding 2/9/2016 15/03/2017 16/03/2017 26/03/2017 documentation 26/03/2017 04/04/2017 pict-information -2016-2017 15 blur removal no-reference image cpbd 3.2.1.4 gantt 3.1 gantt pict-information -2016-2017 16 blur removal no-reference image cpbd 3.2.2 staff 3.2.2.1 consists finalized change 3.2 3.2.2.2 member role monitor keep track preparing involves coding documentation guidance pict-information -2016-2017 17 blur removal no-reference image cpbd 3.3 3.3.1 ram 1 gb cpu speed 1.8 ghz 500 mb disk 3.3.2 window 7 opencv 2.4.13 eclipse netbeans ide pict-information -2016-2017 18 blur removal no-reference image cpbd 4 pict-information -2016-2017 19 blur removal no-reference image cpbd _____________________________________________ organized 4.1 complete architectural proposed 4.1 proposed 4.1 proposed blur removal 4.1.1 main component cpbd detection detection blur lucy richardson removal gaussian blur noise blind deconvolution removal blur pict-information -2016-2017 20 blur removal no-reference image cpbd 4.1.1.1 cpbd cumulative blur detection going convert image grayscale detect edge image canny edge detection divide image 64*64 block check percentage edge block block 0.2 edge block process calculation 4.1.1.2 detection going implement detection blur image concentrate gaussian blur noise image block pixel intensity 255 black 0 white image gaussian blur noise 4.1.1.3 lucy richardson classify blur image block block gaussian blur noise remove blur noise 4.1.1.4 blind deconvolution image block blur blind deconvolution deblur image going reduce standard deviation image clear removing blur noise pict-information -2016-2017 21 blur removal no-reference image cpbd 4.2 class 4.2 class blur removal accepts blurred image computes blur image cpbd method applies detect noise blur image depending choice lucy richardson blind deconvolution removal blur pict-information -2016-2017 22 blur removal no-reference image cpbd 4.3 description 4.3.1 cpbd block 4.3 cpbd block cpbd metric edge detection image canny edge detection image divided block 64x64 block checked threshold categorized smooth block edge block edge block processed find blur pict-information -2016-2017 23 blur removal no-reference image cpbd 4.3.2 control description 4.3.2.1 4.4 blur removal pict-information -2016-2017 24 blur removal no-reference image cpbd 4.3.2.2 4.5 blur removal depicts object communicate input image processed cpbd find categorize edge block smooth block based metric image pass de-blurred image output pict-information -2016-2017 25 blur removal no-reference image cpbd 5 pict-information -2016-2017 26 blur removal no-reference image cpbd ____________________________________________ 5.1 opencv platform building java language main thing library main implemented cumulative blur detection cpbd 1. edge detection 2. dividing image block 3. process block criterion 4. computation contrast 5. computation blur classification blur lucy-richardsons blind deconvolution motion blur deblurring pict-information -2016-2017 27 blur removal no-reference image cpbd 5.1.1 cumulative blur detection cpbd edge detection thing edge detection canny edge detection function simplify code snippet edge detection pict-information -2016-2017 28 blur removal no-reference image cpbd dividing image block thing divide image block divide image 64*64 block reducing amount time complexity code snippet dividing image block pict-information -2016-2017 29 blur removal no-reference image cpbd process image criterion image block processed non-processed block decided criterion block 0.2 edge block processed processed code snippet processing image pict-information -2016-2017 30 blur removal no-reference image cpbd computation contrast contrast computed computation wjnb noticeable blur code snippet computation contrast pict-information -2016-2017 31 blur removal no-reference image cpbd computation pblur blur final stage cpbd compute pblur image blur computation code snippet computation pblur pict-information -2016-2017 32 blur removal no-reference image cpbd 5.1.2 classification blur implemented classification blur image focused gaussian blur gaussian noise block pixel intensity 0 white 255 black gaussian blur image block code snippet classification blur pict-information -2016-2017 33 blur removal no-reference image cpbd 5.1.3 lucy-richardsons image block blur noise best adjust standard deviation code snippet lucy-richardson 5.1.4 blind-deconvolution image block blur blind-deconvolution best adjust standard deviation pict-information -2016-2017 34 blur removal no-reference image cpbd 5.1.5 motion blur deblurring motion blur apparent streaking rapidly moving object image image movie animation rapid movement long exposure code snippet motion blur deblurring pict-information -2016-2017 35 blur removal no-reference image cpbd 6 pict-information -2016-2017 36 blur removal no-reference image cpbd evaluation ____________________________________________ 6.1 experimental setup experimental setup described simple array store divided image block opencv platform 1gb ram cpu speed 1.8 ghz window 7 opencv 2.4.13. function easy firstly select blur image unblur image blur unblurring image selects blur image deblurring purpose remove blur noise image 6.2 strategy unit strategy unit process development small individually tested unit individually tested integrating help unit amount error removed good built unit designed tested separately find bug bug error corrected main advantage unit individually unit thing sure tested separately multiple tested simultaneously unit input individual check output output correct tested output bug error change correct bug error unit applied process continues correct error free output unit strategy amount bug error minimized built efficient unit strategy pict-information -2016-2017 37 blur removal no-reference image cpbd 6.3 6.3.1 check image converted grayscale checked image selected properly converted grayscale image tested image input check image grayscale 6.3.2 check edge detected checked edge detected grayscale image tested image changing kernel canny edge detection function 6.3.3 confirm image divided block stored local array tested image divided 64*64 image block block local array 6.3.4 check block processed tested image block processed computation blur 6.3.5 check image block classified criterion tested image block classified criterion block intensity 255 0 gaussian blur 6.3.6 check classified block merge tested divided block merged final array series wise image merge proper pict-information -2016-2017 38 blur removal no-reference image cpbd 6.3.7 check final image deblurred resultant image deblurred unit 6.4 6.4.1 check image converted grayscale 6.4.2 check edge detected pict-information -2016-2017 39 blur removal no-reference image cpbd 6.4.3 confirm image divided block stored local array int 0 imgs.length i++ imageio.write imgs `` jpg '' file `` img '' `` .jpg '' 6.4.4 check block processed pict-information -2016-2017 40 blur removal no-reference image cpbd 6.4.5 check image block classified criterion 6.4.6 check classified block merge pict-information -2016-2017 41 blur removal no-reference image cpbd 6.4.7 check final image deblurred final output image pict-information -2016-2017 42 blur removal no-reference image cpbd 7 pict-information -2016-2017 43 blur removal no-reference image cpbd ____________________________________________ implemented blur removal detecting blur noise image applies detect image gaussian blur noise image de-blurred lucy richardson blur blind deconvolution original image pict-information -2016-2017 44 blur removal no-reference image cpbd ____________________________________________ 1 niranjan d. narvekar lina j. karam no-reference image blur metric based cumulative blur detection cpbd trans image process 20 9 2678-2683 sep. 2011 2 suresh zadge g. u. kharat image blur detection cpbp metric deblurring gaussian blurred image lucy-richardson ijisme volume-2 issue-9 2014 3 r. ferzli l.j karam no-reference image sharpness based notion noticeable blur jnb trans image process 18 4 717-728 apr.2010 4 f. moschetti no-reference metric measuring image blur seventh international symposium signal processing 2003 1 469-472 5 l.j karam t. ebrahimi s.s. hemami t. n. pappa r. j. safranek z. wang a.b waston issue visual medium assessment trans signal process 3 2 189-192 apr 2009 6 n. d. narvekar l. j. karam no-reference perceptual metric based cumulative blur detection international workshop multimedia experience-09 87-91 2009 7 blur detection opencv online www.pyimagesearch.com/2015/09/07/blur-detection-with-opencv/ accessed 12 8 opencv platform online http //www.opencv.org/ accessed 13 9 lucy richardson blind deconvolution online www.efg2.com/lab/library/imageprocessing/algorithms.htm access 14 10 rafael c. gonzalez book book- digital image processing 3rd edition accessed 15 pict-information -2016-2017 45 blur removal no-reference image cpbd", "keywords": ["assessment metric", "based cumulative", "based cumulative blur", "bhimashankar kothawale", "bhimashankar kothawale pradip", "blind deconvolution", "blind deconvolution image", "block blur", "blur blind", "blur blind deconvolution", "blur detection", "blur detection cpbd", "blur gaussian", "blur image", "blur jnb", "blur lucy", "blur lucy richardson", "blur lucyrichardsons", "blur noise", "blur noise image", "blur pictinformation", "blur removal", "blur removal noreference", "blur sensitivity", "blurred image", "bug error", "canny edge", "canny edge detection", "check image", "classification blur", "classified criterion", "code snippet", "cpbd method", "cpbd metric", "cumulative blur", "cumulative blur detection", "deconvolution image", "detection blur", "detection cpbd", "detection removal", "divided block", "edge block", "edge detection", "ferzli lj", "ferzli lj karam", "gaussian blur", "gaussian blur noise", "gaussian noise", "image block", "image block blur", "image blur", "image cpbd", "image cpbd metric", "image gaussian", "image gaussian blur", "image noise", "image noreference", "image paper", "image pictinformation", "image processing", "image sharpness", "kandegale susmita", "kandegale susmita ganpati", "karam noreference", "kothawale pradip", "kothawale pradip sambhaji", "lina karam", "lj karam", "lucy richardson", "lucy richardson blind", "metric based", "metric based cumulative", "metric concept", "metric narule", "motion blur", "narvekar lina", "niranjan narvekar", "noise blur", "noise blur image", "noise image", "noreference image", "noreference image cpbd", "noticeable blur", "opencv platform", "original image", "pictinformation blur", "pictinformation blur removal", "pradip sambhaji", "pradip sambhaji kandegale", "prof nv", "removal blur", "removal noreference", "removal noreference image", "richardson blind", "richardson blind deconvolution", "sambhaji kandegale", "sambhaji kandegale susmita", "sharpness metric", "shinde dharma", "shivali bhimashankar", "shivali bhimashankar kothawale", "smooth block", "standard deviation", "suresh zadge", "susmita ganpati"], "libraries": ["opencv"], "languages": ["small", "java"], "frameworks": [], "dbs": []}, "./reports/31_final_report.pdf": {"title": "detect the location of key-points on face images using machine learning", "filename": "./reports/31_final_report.pdf", "data": "detect location key-points face image machine learning pict-information technology- 2016-17 2 detect location key-points face image machine learning fulfilment manoj joshi b120058552 sangram kamble b120058555 shubham khule b120058566 vivek patil b120058599 guidance mr. s. s. sr. 27 pune-satara road 43 2016-2017 detect location key-points face image machine learning pict-information technology- 2016-17 2 detect location key-points face image machine learning manoj joshi b120058552 sangram kamble b120058555 shubham khule b120058566 vivek patil b120058599 bonafide prof. s. s. earlier diploma prof. s. s. mr.s.b.deshmukh coordinator dr. p. t. examiner detect location key-points face image machine learning pict-information technology- 2016-17 2 sponsorship detect location key-points face image machine learning pict-information technology- 2016-17 2 completion detect location key-points face image machine learning pict-information technology- 2016-17 2 acknowledgement mr. s. s. constant support encouragement course coordinator mr. s. b. deshmukh valuable guidance encouragement dr. a. m. bagade hod co-operative helpful dr. p. t. support complete college providing excellent infrastructure facility grateful lab attendant help setting laboratory lastly friend family support encouragement propelled completion manoj joshi b120058552 sangram kamble b120058555 shubham khule vivek patil b120058566 b120058599 detect location key-points face image machine learning pict-information technology- 2016-17 2 title 2.1 15 facial key-points 9 3.1 11 3.2 12 detect location key-points face image machine learning pict-information technology- 2016-17 2 title 1.1 artificial neural network 3 1.2 neural network face key point detection 4 2.1 eigen face face recognition 7 2.2 modern face recognition deep learning 9 2.3 convolution neural network 10 4.1 3-level cascaded neural network 13 4.2 proposed solution 14 4.3 class proposed solution 15 4.4 proposed solution 16 4.5 proposed solution 17 4.6 deployment proposed solution 18 5.1 anaconda initialization 27 5.2 importing library 28 5.3 learning 29 5.4 training schema 30 5.5 schema 31 5.6 actual 32 5.7 face cropping code 33 5.8 image gray conversion 34 5.9 crop image storage 35 5.10 numpy array conversion 36 5.11.a real-time face detection 37 5.11.b real-time face detection 38 6.1.a key-points stored image 39 detect location key-points face image machine learning pict-information technology- 2016-17 2 6.1.b key-points stored image 39 6.1.c key-points stored image 40 6.2.a real-time face detection 40 6.2.b real-time face detection 41 6.3 rmse comparison graph 43 detect location key-points face image machine learning pict-information technology- 2016-17 2 acronym nn neural network cnn convolutional neural network csv comma separated file lfw labeled face wild ann artificial neural network algebra cnn-frs cnn based face recognition detect location key-points face image machine learning pict-information technology- 2016-17 2 title sponsorship industry ii completion industry iii acknowledgement iv vi acronym vii 1 1 2 1.1 introduction/background 2 1.2 5 2 review 6 2.1 existing 6 2.2 proposed 9 3 specification 11 3.1 major 11 3.2 11 3.3 12 4 25 4.1 3-level cascaded neural network 13 4.2 14 4.3 class 15 detect location key-points face image machine learning pict-information technology- 2016-17 2 4.4 16 4.5 17 4.6 deployment 18 5 19 5.1 19 5.2 dealt 20 5.3 anaconda 20 5.4 pseudo-codes 23 5.5 screen-shots 27 6 evaluation 39 6.1 39 6.2 42 6.2 evaluation 43 44 45 i. base paper ii plagiarism iii review sheet detect location key-points face image machine learning pict-information technology- 2016-17 2 detecting key-points face image challenging pose face image expression face occlusion extreme lighting facial characteristic vary single person amount difference face image size 3d pose illumination condition position viewing angle advance long addressing difficulty opportunity improvement main aim detect predict key point position face image building block numerous tracking facial characteristic image well video detecting facial expression analyzing facial key-points finding dysmorphic facial sign medical purpose biometrics facial recognition keywords neural network theano tensorflow convolutional neaural network detect location key-points face image machine learning pict-information technology- 2016-17 2 1 detect location key-points face image machine learning pict-information technology- 2016-17 2 1.1 facial key-point detection critical face recognition studied extensively year detecting facial key point challenging challenging face image extreme pose lighting expression occlusion facial characteristic vary single person amount difference face image size 3d pose illumination condition position viewing angle advance long addressing difficulty opportunity improvement main aim detect predict key point position face image building block numerous tracking facial characteristic image well video detecting facial expression analyzing facial key-points finding dysmorphic facial sign medical purpose biometrics facial recognition technique today biometric recognition edge map eigen face wrong output factor brightness camera angle facial image depend lot condition face recognised ease proper landmark key-points identification unchanging ratio distance point point method 1.1.1 neural network machine learning ann kind network inspired biological neuron central nervous brain 're function depend numerous unknown input anns generally 3 thing defines kind variable network topological variable neural network weight connection neuron neuron well detect location key-points face image machine learning pict-information technology- 2016-17 3 rule majority neural le time-scale dynamic domestic rule neuron network change order respond generally rule weight network basis learning rule learning rule weight neural network change respect time learning viewed time scale compared time scale dynamic rule generally learning rule depends neuron 's depends final supplied teacher current weight neural network handwriting recognition defined input neuron provoked pixel input grayscale image weighing transforming function activation neuron passed neuron cycle repeated output neuron going determine character wa read activated machine learning approach learn neural network solve numerous number speech recognition vision hard solved ordinary rule-based programming 1.1 artificial neural network detect location key-points face image machine learning pict-information technology- 2016-17 4 1.1.2 neural network face key-points detection predict well analyze key-point position facial images.facial characteristic vary greatly person angle pose lighting condition difficult predict method solve kind neural network nns convolutional neural network cnns neural network node neighbouring layer connected fully convolutional neural network 're locally connected i.e input hidden unit layer subset unit layer m1 1.2 neural network facial key-points detection neural network considered 1 hidden layer consisting 100 node convolutional neural network consists 3-level cascade convolutional layer 's pooling layer network ultimately turn 2 hidden layer 're fully connected 2 chosen order reduce computation time decreasing hidden layer number lead exponential increase time cnns feed forward neural network share weight locally finally adjustment network order save time accurate well detect location key-points face image machine learning pict-information technology- 2016-17 6 1.2 motivaton facial key-points detection block numerous researcher working improving 's improvement real making wa basic building block numerous 1. tracking facial characteristic image well video 2. detecting facial expression analyzing facial key-points 3. finding dysmorphic facial sign medical purpose 4. biometrics facial recognition detect location key-points face image machine learning pict-information technology- 2016-17 6 2 detect location key-points face image machine learning pict-information technology- 2016-17 6 2.1 existing method recognition eigen face wa developed kirby sirovich 1987 wa alex pentland matthew turk face classification 1996 2nd conference approach wa proposed herpers wa detecting characteristic anatomical key point facial extracting edge face exploiting search well identify face basic method paper suggests reliable prominent eye region iris edge sequential search initiate detection left edge segment iris filter operation detected edge tracked upwards well filter operation intersection point reached approach needed detector precise edge flexible time neural network based deep learning approach wa developed 2005 perfect rapid improvement field increased numerous field technologyreview.com based article describes method closely based monkey brain human recognize interpret face wang x. tang sun y. 2013 presented method paper facial key-point detection deep convolutional neural network cascade 3-level cascaded cnn handle level extracted face image initialization stage help detect well locate high-accuracy key-points texture context entire face effectively detect well locate key-point geometric constraint ratio key-points considered carefully network trained well predict key-points simultaneously detect location key-points face image machine learning pict-information technology- 2016-17 7 eigen face face detection/recognition 2.1 face recognition eigen face face recognition primary source inspiration creation eigen face eigen face advantage compared technique 's efficiency speed eigen face dimension-reduction approach subject comparatively small detect location key-points face image machine learning pict-information technology- 2016-17 8 order recognize face gallery image saved collection weight contribution eigen face image face purpose classification weight making projection image eigen face weight calculated compared weight gallery order find closest match nearest neighbor approach simple method find euclidean distance vector minimum declared closest subject deep learning based neural network approach deep learning order convolutional neural network cnn achieved outstanding recognition face remains un-attended question cnns well compared precise existing focus reporting cnn well recognition face investigating reason method perform extensive evaluation face recognition based cnn cnn-frs order easily reproduce public database `` labeled face wild '' lfw train cnns opposite existing cnns trained private database 3 proposed cnn 1st reported trained lfw paper effectively compare cnn evaluates numerous choice property cnn-frs identified example dimensionality reduced scale bad accuracy face recognition addition traditional metric method exploit cnn learned implemented evaluated study fusion numerous cnns well metric learning 2 crucial factor better cnn-frs performance reproducibility purpose source code well publicly detect location key-points face image machine learning pict-information technology- 2016-17 9 2.2 modern face recognition deep learning 2.2 proposed facial key-point detection neural network proposed 2 considered order solve hand 1st method specifies simple neural network nn convolutional neural network cnn 1st created input layer 96*96 sized image hidden layer 100 node finally output layer 30 output coordinate 15 facial key-points 2.1 15 facial key-points 15 facial key-points eye center eye inner corner eye outer corner eye outer corner eyebrow inner eyebrow inner mouth corner mouth corner top lip center mouth bottom lip center mouth nose detect location key-points face image machine learning pict-information technology- 2016-17 11 trained 100 epoch training loss calculated validation 2nd consists convolutional neural network cnn 96*96 sized input layer convolutional layer 32 filter size 3*3 pooling layer 32 filter size 2*2 completion pooling process output size 47*47*32 produced continued 2 layer smaller filter size hidden layer 3rd pooling layer 100 node layer output layer 30 output node coordinate 15 key-points trained cnn 100 epoch input layer normalized coordinate vary 0 96 1 1 pixel vary 0255 01 non-linearity function hidden layer `` rectifier function '' wa sigmoidal tanh function help minimize 'vanishing gradient 2.3 convolution neural network cnn 2.3 comparative study existing approach facial key point detection technique performed proposed evaluated existing proposed effective achieving effective efficient precise facial key-points detection real imagery detect location key-points face image machine learning pict-information technology- 2016-17 11 3 detect location key-points face image machine learning pict-information technology- 2016-17 11 requiremnts 3.1. major identifying key-points input 96*96 grayscale image provided input output based prediction predict accurate position facial key-points 3.2. 3.1 operating ubuntu 14 64 bit source operating great compatibility source distributed great machine learning linux platform programming language python 2.7.x python handling collected python library manipulation machine learning 3.x.x environment language statistical computing well graphic extensible object object regression key detect location key-points face image machine learning pict-information technology- 2016-17 13 studio open-source integrated development environment programming language cuda toolkit cuda toolkit comprehensive development environment developer building gpu-accelerated library lasagne tensorflow theano 3.3. 3.2 machine memory 4 gb machine good memory better faster hard drive 10 gb machine good storage drive better storage storing history location key-points detect location key-points face image machine learning pict-information technology- 2016-17 13 4 detect location key-points face image machine learning pict-information technology- 2016-17 13 4.1 4.1 3-level cascaded neural network detect location key-points face image machine learning pict-information technology- 2016-17 14 4.2 proposed solution 4.2 proposed solution detect location key-points face image machine learning pict-information technology- 2016-17 15 4.3 class proposed solution 4.3 class proposed solution detect location key-points face image machine learning pict-information technology- 2016-17 16 4.4 proposed solution figure.4.4 proposed solution detect location key-points face image machine learning pict-information technology- 2016-17 17 4.5 proposed solution 4.5 proposed solution detect location key-points face image machine learning pict-information technology- 2016-17 19 4.5 deployment proposed solution 4.6 deployment proposed solution detect location key-points face image machine learning pict-information technology- 2016-17 19 5 detect location key-points face image machine learning pict-information technology- 2016-17 19 5.1. method solve simple neural network snn convolutional neural network cnn 5.1.1 simple neural network method image size 96*96 pixel image total 9216 pixel method training snn considering pixel intensity common pixel format byte image number stored 8-bit integer range 0 255. typically black 255 white 9216 pixel 0 255. reading image snn understand pixel distribution image train generated snn good evaluating second method cnn method 5.1.2 convolutional neural network method layer computation purpose 5 layer cnn method convolutional layer relu rectified linear unit layer hidden layer pooling layer fully connected layer network layer connected bias weight thing help cnn accurate initially weight bias poor calculated bias weight calculated cnn iteration epoch start doesnt good accuracy order good accuracy iterating cnn maximum 1000 epoch doe n't iterate epoch best accuracy epoch automatically good accuracy calculated bias weight facial keypoints plotted face image training optimization technique minimize operation faster computation basically detect location key-points face image machine learning pict-information technology- 2016-17 20 convolutional neural network cnn 96*96 sized input layer convolutional layer 32 filter size 3*3 pooling layer 32 filter size 2*2 completion pooling process output size 47*47*32 produced continued 2 layer smaller filter size hidden layer 3rd pooling layer 100 node layer output layer 30 output node coordinate 15 key-points trained cnn 100 epoch 5.2 dealt faced lot worst processing image image angle face image light intensity processing image consider noise image noise eliminated machine learning properly proper weight bias provided learning activation function neural convolutional neural network layer convolutional neural network layer properly creating cnn convolutional layer pooling layer eliminate noise image 5.3 anaconda anaconda free premium source distribution python programming language scale processing scientific computing predictive analytics aim simplifying package well deployment 'conda package advantage anaconda level install version python detect location key-points face image machine learning pict-information technology- 2016-17 21 install/update package completely independent library admin privilege conda installs binary package requiring compile pip handy limited privilege installing library le eliminates headache version/release package compatible version/release package install package z. full-meal-deal version numpy scipy pyqt spyder ide minimal alacarte version miniconda install messing library jupyter jupyter notebook web allows create share document live code equation visualization explanatory text include cleaning transformation numerical simulation statistical modeling machine learning advantage jupyter language choice share notebook interactive widget integration tensorflow tensorflow source library numerical computation graphs.nodes graph represent operation graph edge represent multidimensional array tensor communicated flexible allows deploy computation cpu gpus desktop server mobile device single api tensorflow wa originally developed researcher engineer working google brain google 's machine intelligence purpose conducting detect location key-points face image machine learning pict-information technology- 2016-17 22 machine learning deep neural network general applicable wide variety domain well theano theano python library define optimize evaluate expression multi-dimensional array numpy.ndarray theano attain speed rivaling hand-crafted involving amount surpass cpu order magnitude advantage gpus theano combine aspect algebra aspect optimizing compiler.it generate customized code operation combination optimizing compilation complicated expression evaluated repeatedly evaluation speed critical situation expression evaluated theano minimize amount compilation/analysis overhead provide symbolic automatic differentiation lasagne lasagne lightweight library build train neural network theano.lasagne library built top theano doe hide theano symbolic variable manipulate easily modify learning procedure detect location key-points face image machine learning pict-information technology- 2016-17 23 5.4 pseudo code cnn step 1 start step 2 intialize train validation dataset step 3 calculate train node train label node eval node step 4 assign weight convolutional layer fully connected layer step 5 assign bias convolutional layer fully connected layer step 6 assign filter convolution layer pooling layer hidden layer fully connected layer step 7 define convolution layer pooling layer hidden layer fully connected layer step 8 pas trained node step 9 define regularizer optimizer step 10 learning rate step 11 initialize session tensorflow step 12 current_epoch le max_epoch shuffle train dataset step range 0 train_size/batch_size batch_data train datasets 0 batch_size pas biased feed dictionary endwhile calculate loss accuracy display train loss validation loss learning rate accuracy accuracy good break endif endwhile step 13 dataset step 14 display graph loss versus accuracy step 15 detect location key-points face image machine learning pict-information technology- 2016-17 24 face detection step 1 start step 2 initialize parameter min_size haar_scale min_neighbors haar_flags step 3 pas parameter haardetectobjects function step 4 face null initialize coordinate detected coordinate face initialize detected face point1 point2 x+w y+h pas point2 point2 rectangle function endwhile endif step 5 return face step 6 detect location key-points face image machine learning pict-information technology- 2016-17 25 face cropping step 1 start step 2 initialize face-cascade step 3 image_path_list empty display `` file '' return image size 96*96 image 90 endif step 4 image empty read image convert image grey-scale pas converted image detect face face empty crop face store cropped face database display `` face '' endif endwhile step 5 detect location key-points face image machine learning pict-information technology- 2016-17 26 web-cam step 1 start step 2 initialize face-cascade step 3 initialize camera step 4 capture frame camera step 5 frame empty convert frame grey-scale pas frame detectmultiscale function face point1 coordinate coordinate point2 coordinate x+w y+h coordinate plot rectangle face point1 point2 plot key-points face image calculated key-points endwhile endif step 6 display frame step 7 detect location key-points face image machine learning pict-information technology- 2016-17 27 5.5 screenshots 5.5.1 anaconda initialization 5.1 anaconda intialization image start anaconda initializing conda environment coda environment tensorflow activated tensorflow activation jupyter started command `` jupyter notebook '' detect location key-points face image machine learning pict-information technology- 2016-17 28 5.5.2 importing library 5.2 importing library image library tensorflow creating neural network numpy panda library operation matplotlib image processing detect location key-points face image machine learning pict-information technology- 2016-17 29 5.5.3 learning 5.3 learning image iteration epoch epoch calculates loss accuracy learning rate learning rate decreasing epoch respect train loss validation loss detect location key-points face image machine learning pict-information technology- 2016-17 30 5.5.4 schema training 5.4 training schema schema training dataset 30 column key-points coordinate column image image pixel stored detect location key-points face image machine learning pict-information technology- 2016-17 31 5.5.5 schema 5.5 schema schema dataset 2 column image image image column image pixel stored detect location key-points face image machine learning pict-information technology- 2016-17 32 5.5.6 database 5.6 actual image stored database image column image pixel intensity accuracy detect location key-points face image machine learning pict-information technology- 2016-17 33 5.5.7 face cropped image 5.7 face cropping code running described code crop face image accept multiple image crop face simultaneously detect location key-points face image machine learning pict-information technology- 2016-17 34 5.5.8 pil gray-scale conversion 5.8 image gray conversion code converting cropped colored image gray-scale image support gray-scale image convert colored image gray-scale image detect location key-points face image machine learning pict-information technology- 2016-17 35 5.5.9 cropped stored image 5.9 cropped image storage running face crop pil2gray image stored local directory image converted numpy array i.e pixel intensity stored database detect location key-points face image machine learning pict-information technology- 2016-17 36 5.5.10 image numpy array conversion 5.10 numpy array conversion image converted numpy array array stored local csv file csv file stored database detect location key-points face image machine learning pict-information technology- 2016-17 37 5.5.11 real-time processing 5.11.a real-time face detection real-time facial keypoint detection real-time purpose local machine web camera frame captured processed processing frame facial keypoinrs plotted detect location key-points face image machine learning pict-information technology- 2016-17 39 5.5.12 real-time processing 5.11.b real-time face detection example real-time processing detect location key-points face image machine learning pict-information technology- 2016-17 39 6 detect location key-points face image machine learning pict-information technology- 2016-17 39 evaluation 6.1 locally stored image 6.1.a key-points stored image 6.1.b key-points stored image detect location key-points face image machine learning pict-information technology- 2016-17 40 6.1.c key-points stored image real-time image 6.2.a real-time face detection detect location key-points face image machine learning pict-information technology- 2016-17 41 6.2.b real-time face detection image final output 15 key-points plotted face image image final output tested locally stored image real-time image locally stored image wa promising output real-time image working good change detect location key-points face image machine learning pict-information technology- 2016-17 42 6.2 applies well integration technique input output tested validity tested final tested 6.2.1 unit 1 aim collection image conversion grey-scale image colored image expected proper conversion grey-scale image actual expected 2 aim detection face grey-scale image cropping grey-scale image expected proper detection cropping image actual expected 6.2.2 integration 1 aim converted grey-scale image detection cropping unit colored image expected cropped face image resolution actual expected 2 aim locating face key-points cropped image grey-scale cropped face image expected proper location key-points face image actual expected detect location key-points face image machine learning pict-information technology- 2016-17 43 6.3 evaluation 6.3 rmse comparison graph graph rmse i.e root squared error calculated validation train loss learning calculated epoch axis epoch axis learning rate start loss decreasing training dataset loss lot image image angle light intensity validation loss le le image training dataset time validation loss le train loss learning perfectly detect location key-points face image machine learning pict-information technology- 2016-17 44 facial key point detection implemented machine learning main contribution lie applying convolutional neural network facial key point detection main aim approach identify key point accurately efficiently optimal amount time approach amazon ec2 gpu instance performing complex computation fast python programming language writing code lasagne theano python library implementing couple neural augmentation overfitting network perform better purpose implementing regularization order improve neural network dropout order improve accuracy training single specialist trained predicting target supervised pre- training wa adopted order training specialist faster detect location key-points face image machine learning pict-information technology- 2016-17 44 deep convolutional network cascade facial point detection conference vision pattern recognition cvpr sun y. wang tang 2013 face alignment component-based discriminative search proc eccv l. liang r. xiao f. wen j. sun 2008. facial point detection boosted regression graph proc cvpr m. valstar b. martinez x. binefa m. pantic 2010. hierarchical face parsing deep learning proc cvpr p. luo x. wang x. tang 2012. locating facial extended active shape proc eccv s. milborrow f. nicolls 2008 `` facial key-points detection '' article blog http //www.kaggle.com/c/facial-keypoints-detection/data `` detect recognize face luxand facesdk '' article blog http //www.luxand.com/facesdk/ `` microsoft face sdk beta '' article blog http //research.microsoft.com/en-us/projects/facesdk/ detect location key-points face image machine learning 2016-17 base paper deep convolutional network cascade facial point detection yi sun1 xiaogang wang2 3 xiaoou tang1 3 1department chinese hong kong 2department electronic chinese hong kong 3shenzhen advanced chinese academy science sy011 ie.cuhk.edu.hk xgwang ee.cuhk.edu.hk xtang ie.cuhk.edu.hk propose approach estimation posi- tions facial keypoints three-level carefully designed convolutional network level output multi- ple network fused robust accurate estimation deep convolutional network global high-level extracted face region initialization stage help locate accuracy keypoints fold advantage texture context entire face utilized locate keypoint second network trained predict keypoints simulta- neously geometric constraint keypoints im- plicitly encoded method avoid local min- imum caused ambiguity corruption difcult image sample occlusion pose variation extreme lighting network level- trained locally rene initial prediction input limited small region initial pre- diction network critical accurate robust facial point detection investigated extensive experiment approach outperforms state-of- the-art method detection accuracy reliability1 1. facial keypoint detection critical face recognition studied extensively recen- year 3 4 5 8 9 11 20 21 23 25 26 27 28 challenging face image extreme pose lighting expression occlusion 1. existing approach general- ly divided category classifying search window 3 4 11 20 28 directly predicting keypoint position- shape parameter 5 8 9 21 25 26 rst 1the dataset code webpage http //mmlab.ie.cuhk.edu.hk/cnn facepoint.htm 1 example facial point detection row ini- tial detection rst level convolutional network achieves good estimation global context facial component invisible ambiguous appearance second row nely tuned second third level network accuracy im- proved third row 5 restricted shape template learned training accurate unusual pose expression category classier called component detector trained keypoint decision based local re- gions local ambiguous corrupt- multiple candidate region facial point suitable candidate region optimal conguration facial point estimated shape constraint 3 4 11 20 23 28 compared component detector directly predicting keypoint position- shape parameter efcient doe scanning regressors predictor based local patch facial point 9 26 image region 5 25 spatial constraint regressors 25 26 approach 5 8 11 20 21 23 25 26 update 1 position facial point iteratively good initialization critical shape shape sampled training initialization target position update local minimum addition approach face visual extracted discrim- inative reliable predict facial point context approach employ shape constraint weak desirable directly extract texture context face region rich requires powerful classiers regressors visual complexity increase exponentially size image region solve propose cascaded regres- sion approach facial point detection three level convolutional network existing approach roughly initial position facial point convolutional network accurate prediction rst level challenging 1. effectively avoids local minimum faced approach convolutional network full face input best texture con- text extract global high-level higher layer deep effectively predict keypoints low-level local region ambiguous corrupted challenging image example convolutional network trained pre- dict keypoints simultaneously constraint keypoints implicitly encoded remaining level convolutional network re- ne initial estimation keypoints ex- isting method 5 25 26 apply regressor cascade stage convolution- al network network level shallower low-level input limited small local region initial position level multiple convolutional network fused improve accuracy reliability estimation detailed empirical investigation factor network critical achieving good performance facial point detection detailed ex- perimental evaluation approach outperforms state-of-the-art method accuracy reliability 2. signicant progress facial keypoint detection achieved year adaboost 20 svm 4 28 random forest 3 classiers component detector detection wa based local image shape constraint rene component detec- tion focusing evidence local component detector shape constraint balanced optimizing designed function 4 28 liang al 20 trained direction classiers search good shape amberg vetter 3 employed branch bound algo- rithm efciently optimal congurations number candidate proposed component detector regression-based approach dantone al 9 valstar al 26 predicted facial point local patch random forest support vector regressors resolve uncertainty prediction valstar al 26 modelled spatial relation facial point markov random eld dantone al 9 fused prediction patch densely sampled with- face region patrick al 25 updated parameter active appearance regressors cao al 5 face region input random fern regressor shape predicted expressed linear combination training shape convolutional network deep vision face detection pose estimation 24 face parsing 22 image classi- cation 6 17 scene parsing 10 work- convolutional network focus aspect network learning coates al 7 analyzed performance single-layer network lter stride lter size number map jarrett al 14 introduced strong nonlin- earities convolution including absolute recti- cation local contrast normalization compared combination nonlinearities pooling strate- gy potential convolutional network discovered map layer deep con- volutional stage large-scale convolutional net- ciresan al 6 signicantly improved state-of- the-art standard datasets larger convolutional network wa introduced 17 sig- nicantly improved image accuracy imagenet example proposed learning include convolutional sparse coding 16 to- pographic independent component 18 3. cascaded convolutional network paper focus structural indi- vidual network combining strategy 2 approach facial point detected left eye center le eye center nose left mouth corner lm mouth corner r- cascade three level convolutional network coarse-to-ne prediction rst level em- ploy three deep convolutional network f1 en1 n- m1 input region cover face f1 eye nose en1 nose mouth nm1 network si- 2 three-level cascaded convolutional network input face region returned face detector three network level 1 denoted f1 en1 nm1 network level 2 denoted le21 le22 re21 re22 n21 n22 lm21 lm22 rm21 rm22 le21 le22 predict left eye center network level 3 denoted le31 le32 re31 re32 n31 n32 lm31 lm32 rm31 rm32 green square face bounding box face detector yellow shaded area input region network red dot nal prediction level dot color prediction individual network shallower low-level 3.1. network selection 3 deep convolutional network f1 size input convolution max pooling layer il- lustrated cuboid length width height denote number map size map local recep- tive eld neuron layer illustrated small square cuboid multaneously predicts multiple facial point facial point prediction multiple network averaged reduce variance 3 illustrates deep f1 convolutional layer max pooling fully connected layer en1 n- m1 deep size layer size input region dif- ferent network second third level local patch centered predicted position facial point previous level input allowed small change previous prediction size patch search range keep reducing cascade pre- diction level strictly restricted local appearance ambiguous unreliable predicted position point level average network patch size network rst level aim keypoint position robustly error network level designed achieve accura- cy network level share common analyze three factor choice net- discussion limited network rst level hardest train convo- lutional network rst level deep predict- ing keypoints input region high-level deeper help form high-level global extracted neuron lower lay- er local local receptive eld combining spatially nearby extracted lower layer neuron- higher layer extract larger region high-level highly non-linear adding additional layer increase non-linearity input output represent input output second neuron convolutional layer abso- lute rectication hyperbolic tangent activa- tion function 4 effectively im- prove performance modication traditional convolutional network wa proposed 14 im- provement caltech-101 wa observed empirical s- tudy effective third locally sharing weight neuron map improves performance traditional convolution- al network share weight neuron map based consideration assumes appear image lters second weight sharing help prevent gradient diffusion back-propagating layer gradi- ents shared weight aggregated super- vised learning deep easier globally sharing weight doe well image xed spatial layout face example eye mouth share low-level e.g edge high-level network input semantic region locally sharing weight layer effective learning high- level e.g eye nose mouth lo- cally sharing weight wa originally proposed convolu- tional deep belief net face recognition 12 3.2. multi-level regression effective combine multiple con- volutional network rst multi-level regression face bounding box prior knowledge network rst level relative position facial point bounding box vary range pose variation instability face detector input region network rst level order cover prediction input region major inaccuracy irrelevant area in- cluded degrade nal output network output network rst level provide strong prior detection i.e position facial point lie small region prediction rst level second level detection small region disruption area reduced signicantly process repeat context appearance local region ambiguous prediction unreliable avoid drift- ing cascade level trust fol- lowing level network allowed adjust initial prediction small range improve detection accuracy reliability propose jointly predict position point multiple network level network differ input region nal predicted position facial point formally expressed 1 1 1 l1 l1 1 li 1 i=2 li cid 88 n-level cascade li prediction level i. note prediction rst level absolute position prediction level adjustment 4. input layer denoted height width input region input 2d color convolutional layer denoted cr absolute rectication side length square convolution kernel lters number map convolutional layer weight sharing cid 33 cid 32 m1 cid 88 s1 cid 88 s1 cid 88 parameter map convolutional layer evenly divided region weight locally shared region traditional convolutional network viewed special setting 1. filter stride 1 pixel direction default size previous layer i.e map map size w. operation tanh i+k j+l r=0 k=0 l=0 1 v+w1 0 n1 hs+1 ws+1 0 1 0 1. output previous current layer weight bias map previous layer correlated kernel map bias accumulated passed tanh nonlinearity forming map convolutional layer output map region map kernel bias cr additional ab operation tanh pooling layer denoted side length square pooling region max pooling pool- ing region overlapped pooling multi- plied gain coefcient shifted bias tanh non-linearity gain bias coef- cients shared weight previous convolutional layer formulated tanh max 0k is+k js+l cid 111 cid 19 fully connected layer denoted function 0 1 yj tanh number neuron current layer previous layer i=0 xi wi bj network rst level deep convo- lutional network convolutional stage absolute rectication locally shared weight network- second third level share common shallower designed extract local deep locally sharing weight unnecessary network summarized 1. input range f1 face input out- position point en1 top middle face input output position eye center nose nm1 middle bottom face input output position nose t- wo mouth corner network second third level small square centered position predict- previous level input output incremental cid 18 cid 16 cid 80 m1 cid 110 cid 17 layer 0 layer 1 layer 2 s0 39 39 cr 4 20 2 2 2 s1 31 39 cr 4 20 1 1 2 s2 15 15 cr 4 20 1 1 2 s3 39 39 cr 4 20 2 2 2 s4 39 39 cr 4 20 2 2 2 s5 39 39 cr 4 20 2 2 2 s6 39 39 4 20 2 2 2 s7 39 39 cr 4 20 1 1 2 layer 4 layer 3 cr 3 40 2 2 2 cr 3 40 2 2 2 cr 3 40 1 1 2 cr 3 40 2 2 2 cr 3 40 2 2 2 10 120 3 40 2 2 2 cr 3 40 1 1 2 layer 6 layer 5 cr 3 60 3 3 2 cr 3 60 2 3 2 60 2 cr 3 60 3 3 2 10 120 layer 7 layer 8 cr 2 80 2 2 120 cr 2 80 1 2 100 layer 9 10 6 120 10 3 60 3 3 2 cr 3 60 1 1 2 2 80 2 2 120 cr 2 80 1 1 120 10 10 1 summary network f1 adopts s0 en1 nm1 adopt s1 network second third level share s2 investigate network compare s3-s7 f1 experiment l1 l2 l3 net f1 en1 nm1 *21 *22 *31 *32 left -0.05 -0.05 -0.05 -0.16 -0.18 -0.11 -0.12 +1.05 +1.05 +1.05 +0.16 +0.18 +0.11 +0.12 top -0.05 -0.04 +0.18 -0.16 -0.18 -0.11 -0.12 bottom +1.05 +0.84 +1.05 +0.16 +0.18 +0.11 +0.12 2 summary network input range de- scribed left top bottom boundary position network level 1 l1 boundary position relative normalized face bounding box boundary position 0 1 0 1 network level 2 l2 level 3 l3 boundary position relative pre- dicted facial point position prediction level region size predict point region third level smaller second level precise input range network listed 2. training rst level training patch ac- cording face bounding box augment small translation rotation level training patch centered position randomly shifted ground truth position maximum shift horizontal vertical direction 0.05 second level 0.02 third level distance normal- ized face bounding box network third level aim subtle adjustment previous prediction second level learnable network parameter in- clude weight gain bias ini- tialized small random number learned stochastic gradient descent levenberg-marquardt method 19 neuron learning rate individually training continues converge 5. experiment lected compare state-of-the- art method commercial public changing training training valida- tion overlap public 5.1. investigate network cascade created dataset 13 466 face image 5 590 image lfw 2 13 remain- ing 7 876 image downloaded web face labeled position keypoints randomly select 10 000 image training remaining 3 466 image validation performance measured average detection error failure rate facial point indicate accuracy reliability algo- rithm detection error measured err cid 112 cid 48 2 cid 48 2 2 cid 48 cid 48 ground truth de- tected position width bounding box re- turned face detector error larger 5 counted failure note bi-ocular distance commonly detection error normalizer face pose variation bi-ocular distance near-prole face shorter frontal face drawback noticed 28 width face bounding box validate 5.1 switch bi-ocular distance fair comparison 5.2. exemplar image validation detection 8a network network f1 example investigate network depth absolute rectica- tion weight sharing scheme inuence perfor- mance network summarized ta- ble 1 studied performance compared fig- ure 4. s0 s3-s5 absolute rectication lo- rst investigate network cas- cade training validation col- 2in lfw person image save annotation effort select image person removing image face detector failed 5590 image lfw 4 average detection error failure rate con- volutional network f1 cally shared weight depth performance signicantly improved including layer input face region size 39 39 network keep downsampling image going top layer s0 reached maximum number layer s6 s7 layer- s0 s6 doe adopt absolute rectication s7 globally share weight convolutional layer- s. observed absolute rectication lo- cally sharing weight effective facial point detection locally sharing weight higher layer- locally sharing weight lower layer deteriorates performance coincides conjecture high-level le shared low-level multi-level prediction detection error effec- tively reduced multi-level cascaded prediction fusion multiple prediction level 5 com- pares performance three network level 1 cascaded prediction number level de- tection error failure greatly reduced second level third level average detection error reduced failure rate remain 5.2. comparison method compare state-of-the-art method latest commercial public datasets bioid 15 lfpw 4 bioid face image collected lab con- ditions lfpw face image web trained dataset de- scribed 5.1. consistent previous bi-ocular distance normalize detec- tion error redene failure rate proportion normalized error larger 10 summarized 6. 5 average detection error failure rate three network f1 en1 nm1 level 1 com- bination denoted l1 rst cascaded level l2 three cascaded level l3 le predicted nm1 missed applies keypoints network bioid 1 521 image 23 subject face frontal moderate variation illumination expression compare component based discrimi- native search 20 boosted regression markov net- 26 latest commercial luxand face sdk 1 microsoft face sdk 2 microsoft face sdk doe detect eye center nose compare mouth corner method reduces detection error signicantly failure rate approach 8b detection bioid lfpw 1 432 face image web divided 1 132 training image 300 image dataset intended facial point detection un- constrained condition face variation pose illumination expression occlu- sion share image url image link longer valid download 781 training image 249 image overlap training/validation datasets lfpw lfp- training image image compare method mentioned method superior performance face wild condition 8c detection lfpw belhumeur al 4 cao al 5 reported lfpw image dened current state- of-the-art image 4 300 lfpw image 5 249 300 lfpw image disappearing image url evaluate 249 lfpw im- age order compare best method dataset 7 comparison average 6 comparison bioid lfpw failure rate approach bioid observable gure relative improvement average error method comparison achieved 50 accuracy improvement datasets reduced average error est commercial 1 http //www.luxand.com/facesdk/ 6 2 http //research.microsoft.com/en-us/ projects/facesdk/ 6 3 b. amberg t. vetter optimal landmark detection shape branch bound proc iccv 2011 1 2 4 p. n. belhumeur d. w. jacob d. j. kriegman n. ku- mar localizing face consensus exem- plars proc cvpr 2011 1 2 6 7 5 x. cao y. wei f. wen j. sun face alignment ex- plicit shape regression proc cvpr 2012 1 2 6 7 6 d. ciresan u. meier j. schmidhuber multi-column proc deep neural network image cvpr 2012 2 7 a. coates a. y. ng h. lee single- layer network unsupervised learning journal machine learning 2011 2 8 t. f. cootes g. j. edward c. j. taylor active appear- ance proc eccv 1998 1 9 m. dantone j. gall g. fanelli l. j. v. gool real-time facial detection conditional regression forest proc cvpr 2012 1 2 10 c. farabet c. couprie l. najman y. lecun learning hierarchical scene labeling pami 2013 2 11 l. gu t. kanade generative shape regularization robust face alignment proc eccv 2008 1 12 g. b. huang h. lee e. learned-miller learning hi- erarchical representation face verication convolu- tional deep belief network proc cvpr 2012 4 13 g. b. huang m. ramesh t. berg e. learned-miller labeled face wild database studying face recognition unconstrained environment re- port 07-49 massachusetts amherst 2007 5 7 compare belhumeur al 4 cao al 5 lfpw image error relative accuracy improvement method 4 5 competitive method per- form signicantly better contemporary improved margin 20 relative accuracy improvement achieved nose mouth corner c++ algo- rithm 0.12 second process image 3.30ghz cpu 3. easily parallelized convo- lutional network level independent 6. proposed effective convolutional network cascade facial point detection deep convolutional network rst level provide highly robust initial estimation shallower convolutional network lev- el nely tune initial prediction achieve accura- cy exploring key network achieve performance convolutional network small scale method signicantly improves prediction accuracy state-of-the-art method lat- 3the time preparing input face detection image resizing excluded validation image face vary greatly pose column 1 2 3 expression column 6 occlusion column 4 5 artifact column 7 blurring column 8 bioid lfpw face vary greatly pose column 1 2 expression column 5 6 illumination column 8 occlusion column 3 4 blurring column 7 8 validation image bioid lfpw 14 k. jarrett k. kavukcuoglu m. ranzato y. lecun best multi-stage object recog- nition proc iccv 2009 2 3 15 o. jesorsky k. j. kirchberg r. frischholz robust face detection hausdorff distance proc avb- pa 2001 6 16 k. kavukcuoglu p. sermanet y.-l. boureau k. gregor m. mathieu y. lecun learning convolutional hierarchy visual recognition proc nip 2010 2 17 a. krizhevsky i. sutskever g. hinton imagenet clas- sication deep convolutional neural network proc nip 2012 2 18 q. le m. ranzato r. monga m. devin k. chen g. cor- rado j. dean a. ng building high-level scale unsupervised learning proc icml 2012 2 19 y. lecun l. bottou g. orr k. muller efcient back- prop g. orr m. k. editor neural network trick trade springer 1998 5 20 l. liang r. xiao f. wen j. sun face alignment vi- component-based discriminative search proc eccv 2008 1 2 6 21 x. liu generic face alignment boosted appearance proc cvpr 2007 1 22 p. luo x. wang x. tang hierarchical face parsing deep learning proc cvpr 2012 2 23 s. milborrow f. nicolls locating facial extended active shape proc eccv 2008 1 24 m. osadchy y. l. cun m. l. miller synergistic face detection pose estimation energy-based journal machine learning 2007 2 25 p. sauer t. cootes c. taylor accurate regression pro- cedures active appearance proc bmvc 2011 1 2 26 m. valstar b. martinez x. binefa m. pantic facial point detection boosted regression graph proc cvpr 2010 1 2 6 27 h. wu x. liu g. doretto face alignment boosted ranking proc cvpr 2008 1 28 x. zhu d. ramanan face detection pose estimation landmark localization wild proc cvpr 2012 1 2 5 detect location key-points face image machine learning 2016-17 ii plagiarism 31-r3.docx originality 15 similarity 15 8 internet source publication paper primary source 1 2 3 4 5 6 7 8 9 en.wikipedia.org internet source 0561blue.tistory.com internet source www.reddit.com internet source www.datavizualization.com internet source www.cv-foundation.org internet source findarticles.com internet source www.zillman.us internet source lasagne.readthedocs.io internet source amslaurea.unibo.it internet source 4 2 2 2 1 1 1 1 1 10 11 12 13 14 15 16 www.collegeslist.net internet source '' handbook face recognition '' springer nature 2011 publication www.fisiocirurgiauerj.org internet source docs.hp.com internet source vinod durdi sudha `` cross layer approach joint optimization multimedia protection energy efficiency wireless multimedia sensor network '' 2016 international conference signal processing iccsp 2016 publication www.memoireonline.com internet source l. c. jiao `` image segmentation based fussing multi-feature spatial spectral clustering '' 2008 congress image signal processing 05/2008 publication 17 software.uark.edu internet source 1 1 1 1 1 1 1 1 18 19 20 antipov grigory sid-ahmed berrani jean-luc dugelay `` minimalistic cnn-based ensemble gender prediction face image '' pattern recognition letter 2016. publication www.studymode.com internet source mohamed dahmane `` efficient 3d pose inference video '' lecture note science 2010 publication 1 1 1 exclude quote exclude bibliography exclude match 1 word detect location key-points face image machine learning 2016-17 iii review sheet scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner scanned camscanner", "keywords": ["absolute rectication", "accuracy improvement", "accuracy reliability", "al cao", "al cao al", "algo rithm", "array conversion", "article blog", "artificial neural", "artificial neural network", "biocular distance", "bioid lfpw", "biometrics facial", "biometrics facial recognition", "bounding box", "cao al", "cnn st", "colored image", "component detector", "connected layer", "connected layer step", "convolutional layer", "convolutional network", "convolutional neural", "convolutional neural network", "crop face", "dantone al", "deep convolutional", "deep convolutional network", "deep learning", "detect location", "detect location keypoints", "detection error", "dysmorphic facial", "dysmorphic facial sign", "eigen face", "en nm", "existing approach", "eye center", "face detection", "face detector", "face image", "face recognition", "face region", "facial key", "facial key point", "facial keypoint", "facial keypoint detection", "facial keypoints", "facial point", "facial point detection", "facial recognition", "facial sign", "facial sign medical", "failure rate", "filter size", "fully connected", "fully connected layer", "grayscale image", "greyscale image", "hidden layer", "image image", "initial prediction", "input layer", "input output", "input range", "input region", "internet source", "joshi sangram", "joshi sangram kamble", "kamble shubham", "key point", "key point detection", "keypoint detection", "keypoint position", "layer network", "layer pooling", "layer pooling layer", "layer step", "le le", "learning rate", "level convolutional", "level convolutional network", "level network", "lfpw image", "local patch", "location keypoints", "loss learning", "manoj joshi", "map convolutional", "map convolutional layer", "medical purpose", "mouth corner", "network cascade", "network cnn", "network level", "network rst", "network rst level", "neural network", "neural network cnn", "neuron map", "nose mouth", "number map", "numpy array", "numpy array conversion", "pictinformation technology", "pixel intensity", "point detection", "pooling layer", "position facial", "position facial point", "position point", "prediction level", "previous layer", "proc eccv", "programming language", "proposed solution", "python library", "realtime face", "realtime face detection", "realtime image", "rst level", "sangram kamble", "sangram kamble shubham", "second level", "shubham khule", "sign medical", "sign medical purpose", "simple neural", "simple neural network", "step initialize", "stored image", "train loss", "unit layer", "validation loss", "vivek patil", "wang tang", "weight bias"], "libraries": ["spyder", "anaconda", "tensorflow", "panda", "scipy", "numpy"], "languages": ["python", "c++", "beta", "basic", "small"], "frameworks": [], "dbs": []}, "./reports/32_final_report.pdf": {"title": "invoker: a knowledge-based   question answering bot", "filename": "./reports/32_final_report.pdf", "data": "invoker knowledge-based question answering bot rishi khetan pratik barhate pateria anurag agrawal b120058564 b120058604 b120058596 b120058509 guidance prof. s. h. chandak sr. 27 satara road 411043 2016-2017 invoker knowledge-based question answering bot invoker knowledge-based question answering bot rishi khetan pratik barhate b120058564 b120058604 pateria b120058596 anurag agrawal b120058509 bonafide prof. s.h chandak fulfilment earlier diploma prof. s.h chandak prof. shyam deshmukh coordinator dr. p. t. examiner 2016-17 invoker knowledge-based question answering bot sponsorship 2016-17 ii invoker knowledge-based question answering bot completion 2016-17 iii invoker knowledge-based question answering bot acknowledgement great pleasure satisfaction presenting invoker knowledge-based question answering bot conceivable kind support help numerous people association extend sincere extremely indebted prof. s.h chandak steering constant superintendence addition providing concerning conjointly support prof. shyam deshmukh timely detailed conveyance notice clearing doubt dr. a.m. bagade hod-it in-charge providing complete opportunity front faculty gain valuable feedback express gratitude dr. p. t. kind co-operation encouragement helped completion providing infrastructure college facility complete express uncommon appreciation lab attendant consideration time likewise partner building individual eagerly bailed capacity appreciative family supporting permitting deal challenging khetan rishi rajendra b120058564 pratik narhar barhate b120058604 pateria pramodkumar b120058596 anurag agrawal b120058509 2016-17 iv invoker knowledge-based question answering bot title fig 3.1 3.2 3.3 3.4 3.5 class control state transition 4 5.1 5.2 5.3 5.4 question grammar rule matching parse tree generated question asked sparql query generated asked question display answer asked question 5.5 wikidata uri subject asked question 5.6 wikidata uri subject property asked question 5.7 5.8 5.9 question machine learning question processing machine learning dbpedia uri subject asked question 5.10 dbpedia uri subject property asked question 6.1 6.2 6.3 decomposition gantt-chart 14 16 18 19 19 23 28 28 29 29 30 30 31 31 33 33 38 39 40 2016-17 invoker knowledge-based question answering bot title comparative study existing qa cocomo 2.1 6.1 6.2 6.3 10 34 36 38 2016-17 vi invoker knowledge-based question answering bot nomenclature kb knowledge base qa question answering nlp natural language processing ir retrieval machine learning svm support vector machine fol order logic fmr formal meaning representation rdqa restricted domain question answering rdf description framework dc based combinational semantics 2016-17 vii invoker knowledge-based question answering bot sponsorship completion acknowledgement nomenclature ii iii iv vi vii title 1 1.1 1.2 2 2.1 2.2 3 3.1 background review existing proposed 3.1.1 3.1.2 3.1.3 context 3.2 usage scenario 3.2.1 profile 3.2.2 use-cases 3.2.3 specification 3.3 description 3.3.1 class 3.3.2 dictionary 3.4 description 3.4.1 description function finding relevant answer 1 2 3 4 5 6 9 11 12 12 12 13 13 13 14 14 16 16 16 17 17 2016-17 invoker knowledge-based question answering bot 3.4.2 control 3.5 behavioral description 3.6 5.1 5.2 5.3 6.1 3.5.1 description behavior 3.5.2 state transition proposed client-side server-side 5.2.1 parsing 5.2.2 support vector classification 5.2.3 sparql 5.2.4 stemming screenshots 6.1.1 6.1.2 6 6.2 6.2.1 6.2.2 6.3 6.3.1 6.3.2 decomposition 6.3.3 6.4 staff 6.4.1 6.4.2 reporting 4 5 18 18 18 19 20 21 24 26 26 26 26 27 27 28 33 34 34 35 35 35 36 37 37 38 38 40 40 41 2016-17 invoker knowledge-based question answering bot 7 7.1 7.2 8. evaluation validation criterion review sheet ii plagiarism 42 43 43 44 46 49 2016-17 invoker knowledge-based question answering bot question answering qa lack effective retrieval ir highly heterogeneous extensive document collection varied ontology answer natural language nl question invoker open-domain qa answer factoid question context-based text mining multiple knowledge base kb convert nl question parse tree understands context executes sparql query extract answer kb technique grammar rule matching constituency parse tree query wikidata kb machine learning classifies question 6 main class employing support vector machine svm classifier 82 accuracy performs syntactic parsing create annotated parse tree query dbpedia kb technique compared perspective query conversion source answer extracted grammar rule matching easier implement modify control matching difficult extend finite grammar rule requiring hand labelled sentence harder create query highly scalable generalized answer challenging question conjunction sophisticated deep-learning state art keywords natural language processing nlp retrieval ir knowledge base kb machine learning support vector machine svm question answering intelligent ontology context-based text mining parsing grammar parse tree sparql wikidata dbpedia 2016-17 1 invoker knowledge-based question answering bot 1 2016-17 2 invoker knowledge-based question answering bot paper verbal presentation engages audience concise preview includes background clarifies point examined explains includes definition key term comprises 1.1 background 1.2 1.1 background advancement collection exceeding increase amount enormous volume difficult manage main motive understand surroundings discerning insight collected obtaining relevant volume difficult database dbms developed people training practice efficiently complex retrieval invoker question answering bot smart retrieval aimed best answer query dbms query form natural language knowledge main build understand intention query intelligent provide fact provide relation previous query study volume needed help pre-process knowledge base provide small relevant form machine learning concept making machine learn provided neural network imitate action human machine deep neural 2016-17 3 invoker knowledge-based question answering bot network dnn artificial neural network ann multiple hidden layer unit input output layer extra layer enable composition lower layer potential modeling complex fewer unit performing shallow network help accurate answer natural language query 1.2 inspiration wa essentially enthusiasm undertaking challenging interesting area study pursuit specific query face seek solution form answer tend search internet question multiple answer search engine main drawback search engine link document extraneous effort order answer expecting time multiple answer best answer asked question question answering endeavor reduce difficulty providing medium question expected answer question answering single knowledge base retrieve extraction answer linguistic semantic based question answering multiple knowledge base expected answer felt question asked domain building restricted domain question answering reduce size improve accuracy precision answer finally 2016-17 4 invoker knowledge-based question answering bot 2 review 2016-17 5 invoker knowledge-based question answering bot review review text scholarly paper includes current knowledge including substantive finding well theoretical methodological contribution topic review secondary source original experimental comprises 2.1 existing 2.2 proposed 2.1 existing question answering remodeled increasingly par natural language processing classic qa book 1978 supported lehnerts thesis linguistics reasoning language peripheral info access restricted respective domain functioned translating nl query database query lunar baseball earliest question answering lunar answer question rock phoebus apollo satellite mission question baseball league answered baseball time elapse 1 year restricted domain worked chatting shrdlu question answering wa developed terry winograd mit answered question block instance typed pyramid wa blue block chat consequently asked question `` top blue block qa answer pyramid 2010 apple launched siri assistant io 4 worked speech recognizable question answering answer 's query updated customer apple launched better performance compared previous 2016-17 6 invoker knowledge-based question answering bot ibm watson 2011. advanced question answering pipelined better accuracy parallel compared previous private cloud hosting knowledge base association rule order find answer question production rule grammar semantically analyzing context question 2016 google launched clever chatter bot google allo mobile app includes smart virtual assistant reply question asked text message ai based qa profiling 'smart answer question answering approach qa include 1 linguistic approach e.g start 2 statistical approach e.g ibm statistical qa 3 pattern matching approach e.g ilqua 23 qa based method 1 web based e.g start 2 ir based e.g shrdlu 3 restricted domain e.g lunar 4 rule based e.g quarc 13 question answering knowledge base 1 formal meaning representation fmr based compositional semantics dc translate nl question find answer help structured sparql query qanta 6 based concept deep neural network answer factoid question paragraph tree recursive neural network dt-rnn robust sentence syntactically ideal question answer sentence meaning loganswer 9 qa answer nlp automated theorem proving atp fol working knowledge base kb derived 2016-17 7 invoker knowledge-based question answering bot german wikipedia wrong answer avoidance waa wikipedia 4 real time collaboratively edited extraction based wrapper allows addition wrapper extraction engine extend knowledge base online website community question answering 2 site direct question asked expert category best answer question community question answering 2 site direct question asked expert category best answer question start template based qa 7 extends pattern matching approach nl database match question annotation entry word level synchrobot 5 nl qa answer question rdf dataset rdfs ontology developed commercial domain mobile phone industry iqa intelligent question answering 3 functionality handle question abbreviation term consists 4 sub-systems question abbreviation document answer extraction proposed replaces traditional qa acquires answer single knowledge base assumes single kb cover question multiple heterogeneous kb great performance efficiency 11 adopts unified joint club alignment construction query construction step joint achieves better performance webclopedia par input natural language question contex semantic representation question contex identifies noun phrase noun verb phrase verb adjective phrase adjective embedded question webclopedia managing gigabyte search engine performs ranking query boolean query answer passage identified ranking sentence sentence parsed contex source answer collection 1 newspaper text 2016-17 8 invoker knowledge-based question answering bot 2.1.1 proposed traditional qa involve enormous irrelevant asks question search engine instance lot link cumbersome search answer major drawback term effort keyword based search find answer strategy based word matching efficient proposed ontology forming structural relation description framework rdf consists subject predicate object tuples formed asked question find answer question retrieving kb invoker question answering bot domain factoid question answering aim achieving greater area study domain qa single kb extract answer question invoker question answering bot multiple knowledge base retrieve finding relevant answer asked question based linguistic approach order logic compositional combinational grammar semantics rdf triplet understand meaning question find relevant answer invoker approach grammar rule matching approach based matching grammar rule machine learning approach performs svm classification question class subclass extract answer question asked comparative study approach explicably situation scenario applied dependent number factor 2016-17 9 invoker knowledge-based question answering bot characteristic start qanta ibm watson web based qa restricted domain rule based qa qa approach pattern matching factoid qa linguistic approach template based robust recursive rule neural network classifier knowledge base single web kb kb multiple kb fly fly hosted private cloud 2.1 comparative study existing qa 2016-17 10 invoker knowledge-based question answering bot 3 specification 2016-17 11 invoker knowledge-based question answering bot specification met planner cast term leaving developer price performance reliability fine aspect describe precisely realistically comprises 3.1 3.2 usage scenario 3.3 description 3.4 description 3.5 behavioral description 3.6 3.1 3.1.1 question automated bot answer suitable context asked 1. precisely understand meaning natural language question 2. translation natural language question formal meaning representation unambiguous adapted machine automated inference processing 3. discovering alignment predicate relation performing question conversion 3.1.2 1. constraining currently find answer restrictive grammar factoid question implement domain qa 2016-17 12 invoker knowledge-based question answering bot 2. domain factoid question general question find relevant answer extracting knowledge base 3.1.3 context people search solution solve answer variety source arrive relevant solution time internet source searching desired solution multiple answer question creates additional overhead select relevant answer aim answer factoid question asked 3.2 usage scenario 3.2.1. profile person find solution serf his/her purpose appropriately typically classified layman knowledge question finding answer posse knowledge subject 2016-17 13 invoker knowledge-based question answering bot 3.2.2. fig.3.1 3.2.3. specification finding specific answer question description invoker question answering bot relevant answer question asked aimed retrieving relevant answer domain factoid question extracting knowledge base primary actor precondition 1. interaction connected ir 2. knowledge base updated 2016-17 14 invoker knowledge-based question answering bot 1. question correct grammar english language basic 1. question generates query help interaction 2. interaction pass question nlp 3. nlp convert asked question parse tree identifies abbreviation passed ir 4. ir query knowledge base extract pass ranking 5. ranking rank answer preference previous search pass ir 6. finally ir forward relevant answer interaction condition ir offline sends offline moment post condition 1. expected answer 2. answer 3. exact answer answer 4. offline moment actor 1. included 1. extract answer 2. retrieving kb 3. relevant answer 2016-17 15 invoker knowledge-based question answering bot extended 1. rank answer 2. generate query 3.3 description 3.3.1. class fig.3.2 class 3.3.2. dictionary question question natural language form understand meaning question extract answer question consist relation predicate form basis formal meaning representation parse tree question classified general question domain specific question natural language processor natural language processor composition question parsing abbreviation question 2016-17 16 invoker knowledge-based question answering bot read nl question understand meaning parsing convert nl question parse tree abbreviation expands abbreviation respective long form included question asked parse tree parse tree intermediate representation based tree question serf understand basic meaning question query generated extract answer knowledge base consists noun phrase verb phrase relation predicate nl question retrieval retrieval associated generating query based parse tree extract knowledge base form multiple answer question knowledge base knowledge base source provide comprehensive corpus finding answer question multiple knowledge base enhance performance efficiency answer extraction answer extraction responsible extracting answer provided answer extraction ranked ranksanswers generate relevant answer question answer answer generated ranking multiple answer extracted answer extraction characteristic match expectation question 3.4 description 3.4.1 description function finding relevant answer read natural language question start concurrent processing abbreviation question parsing completed process answer extraction extract multiple answer ir multiple knowledge base relevant answer consequently displayed help ranking multiple answer 2016-17 17 invoker knowledge-based question answering bot 3.4.2 control fig.3.3 control 3.5. behavioral description 3.5.1 description behavior event event occur process includes major event questionasked converttofmr fmrformed querygenerated answersextracted bestanswerranked state state include processing intermediate retrieving extracting ranking 2016-17 18 invoker knowledge-based question answering bot 3.5.2 state transition fig.3.4 state transition fig.3.5 2016-17 19 invoker knowledge-based question answering bot 3.6. operating linux programming language python 2.7 library 1. nltk 2. corenlp 3. practnlptools 4. sparqlwrapper 5. sparqlquery 6. scikit-learn 7. cpickle 8. spicy 9. wikipedia 10. lango 11. pattern 12. wheel 13. arrow 14. grequests 15. flask 16. tornado 17. virtualenv 18. numpy 19. configobj ram 4 gb disk storage 2 gb speed internet connection web browser microphone speaker 2016-17 20 invoker knowledge-based question answering bot 4 2016-17 21 invoker knowledge-based question answering bot invoker client-server client side question input form text form voice input converted text employing restful web framework form web client pass asked question server request process question return answer server side process question nlp depending chosen grammar rule matching machine learning executes control appropriate extract context question generate sparql query targeted wikidata dbpedia knowledge base find answer asked question context-based text mining server return answer client communicates visually narratively grammar rule matching machine learning approach find answer asked question generating sparql query wikidata dbpedia knowledge base decoupled function continue exist independently invoker pipelined decoupled front-end back- approach separate control server-side process find answer question asked client side pipeline predefined existing natural language processing aid parsing speech tagging named recognition chunking stemming sparql query highly efficient querying language retrieval knowledge base kb wikidata dbpedia sparql endpoint connectivity fully leverage high-performance capability sparql knowledge base rdf ontology consisting subject predicate object tuples form hosted online redundant copy existing executing retrieval process fetching on-the-fly requires internet connectivity bandwidth 2016-17 22 invoker knowledge-based question answering bot fig.4 2016-17 23 invoker knowledge-based question answering bot 5 proposed 2016-17 24 invoker knowledge-based question answering bot proposed describes deployed installed transitioned comprises three 5.1 client-side 5.2 server-side 5.3 screenshots invoker qa bot client-server front-end flask back- written form python grammar rule matching machine learning stanford corenlp practnlptools natural language processing grammar rule matching generate sparql query question asked voice text input extract answer wikidata dbpedia knowledge base on-the-fly sparql end-point connectivity grammar rule matching convert nl question parse tree compare rule defined extract context generating sparql query wikidata kb fetch target extract answer displayed corenlps po tagging ner parsing performs support vector machine classification question trained 5500 trec factoid question dataset question classified 6 main class coarse classifier respective subclass fine classifier mentioned taxonomy http //cogcomp.cs.illinois.edu/data/qa/qc/ context extracted making conflation involves stemming fetch target generates sparql query dbpedia kb extract answer displayed practnlptools chunker po ner wordnet finding synonymic context 2016-17 25 invoker knowledge-based question answering bot 5.1 client-side html javascript cs creating basic ui proper layout javascript wait icon display google api voice text conversion question input source javascript library text voice conversion narration answer extracted flask python web framework establishing client-server front-end 5.2 server-side language chosen server-side python powerful natural language processing machine learning capability accommodative api support connectivity python nltk stanford corenlp practnlptools wordnet sparql wrapper wikidata kb dbpedia kb major source natural language processing retrieval knowledge base 5.2.1. parsing parsing technique utilized convert question natural language parse tree order extract technique speech tagging named recognition chunking stanford corenlp parser practnlptools grammar rule matching machine learning achieve corenlp parser high-level neural network parser practnlptools based corenlp parser functionality returning phrase chunk form 5.2.2. support vector classification support vector machine marginal classification machine learning classify textual question 6 class respective subclass 2016-17 26 invoker knowledge-based question answering bot find context target extraction machine learning trained 5500 trec factoid question tested 500 trec question python applying achieve question classification 5.2.3. sparql sparql ontology based rdf query language querying rdf knowledge base wikidata dbpedia high-performance retrieval capability extracting knowledge base knowledge base point connectivity sparql query language form sparql wrapper facilitating extracting kb on-the-fly physical existence redundant copy huge-sized knowledge base local disk basic template sparql query prefix declaration datasets select query pattern uris order query modifier 5.2.4. stemming stemming process extracting equivalent stem word find document representative document form word conflation extend machine learning retrieve context target extraction kb snowball stemmer implement stemmer porter stemmer internally 2016-17 27 invoker knowledge-based question answering bot 5.3 screenshots fig.5.1 question grammar rule matching fig.5.2 parse tree generated question asked 2016-17 28 invoker knowledge-based question answering bot fig.5.3 sparql query generated asked question fig.5.4 display answer asked question 2016-17 29 invoker knowledge-based question answering bot fig.5.5 wikidata uri subject asked question fig.5.6 wikidata uri subject property asked question 2016-17 30 invoker knowledge-based question answering bot fig.5.7 question machine learning fig.5.8 question processing machine learning 2016-17 31 invoker knowledge-based question answering bot fig.5.9 dbpedia uri subject asked question fig.5.10 dbpedia uri subject property asked question 2016-17 32 invoker knowledge-based question answering bot 6 2016-17 33 invoker knowledge-based question answering bot planning relates gantt subsequently progress environment comprises 7.1 7.2 7.3 7.4 staff 6.1 6.1.1 cocomo kloc effort duration staffing variable variable variable variable person/months month 3.6 1.2 2.5 0.32 4.5 21.8856 6.7111 3.2611 6.1 cocomo organic mode explanation coefficient mode boehm `` economics '' mode three organic small simple small good experience le rigid semi-detached intermediate size complexity mixed experience level meet mix rigid le rigid 2016-17 34 invoker knowledge-based question answering bot embedded developed tight operation constraint final determined manner effort a*klocb person/months kloc code duration c*effortd staffing effort/duration 6.1.2 man power completing mentioned 6.2 6.2.1 1. estimated size product number program file transaction vary 2. 3. deliver method appropriate building intelligent question answering bot 4. develop integrated 5. decided proper documentation 6. development needed difficult 7. developed method 2016-17 35 invoker knowledge-based question answering bot 6.2.2 category 1. vary time permit add functionality 2. size change depth definition intelligence dependent efficiency time changing priority priority change priority change help teaching overly- optimistic deadline migration current difficult process convert accurate member availability internship placement skill lacking skill 2016-17 6.2 36 invoker knowledge-based question answering bot 6.3 6.3.1 process framework selected listed 1. paper searching definition 2. planning domain class interaction 3. 4. development process building prototype prototype integration building platform 5. process framing accuracy evaluation error minimization 6. deployment 2016-17 37 invoker knowledge-based question answering bot 6.3.2 decomposition fig.6.1 decomposition 6.3.3 start predecessor 07-26-16 08-20-16 paper searching start 07-26-16 08-06-16 start 08-01-16 08-20-16 definition 08-18-16 08-20-16 planning 09-01-16 09-30-16 domain class 09-01-16 09-15-16 interaction 09-16-16 09-30-16 11-02-16 11-15-16 development process 01-12-16 02-28-17 2016-17 2 3 1 4 6 7 8 38 invoker knowledge-based question answering bot building prototype 12-01-16 02-04-17 8 prototype integration 02-05-17 02-18-17 10 building platform process 02-19-17 02-28-17 11 03-01-17 03-25-17 12 framing 03-01-17 03-04-17 12 accuracy evaluation 03-05-17 03-10-17 14 error minimization 03-11-17 03-25-17 15 deployment 03-26-17 03-31-17 16 6.3 39 2016-17 invoker knowledge-based question answering bot fig.6.2 gantt-chart 6.4 staff 6.4.1 fig.6.3 2016-17 40 invoker knowledge-based question answering bot 6.4.2 reporting 1. intra group update tracked recorded shared spreadsheet document sharing google group ii git code member github account 2. face-to-face conversion submission hard copy 3. reviewer presentation progress development explanation scheduled semester 4 time academic year 4. coordinator college informs scheduled meeting conducted office 2016-17 41 invoker knowledge-based question answering bot 7 evaluation 2016-17 42 invoker knowledge-based question answering bot evaluation evaluation systematic assessment ongoing completed comprises 7.1 validation criterion 7.2 7.1 validation criterion integration individual written checked conformance standard desired product control execution integration unit devised check proper functioning output individual procedure python unit apply integration expected response expected pas optimal proportion achieve acceptable measure accuracy modelled measure relevant answer generated total answer generated 7.2 svm classifier accuracy calculated number hits/total 500 trec question accuracy coarse classifier 89.8 449/500 fine classifier 82.2 411/500 grammar easier implement modify control matching difficult extend finite grammar rule requiring hand labelled sentence harder create query highly scalable generalized answer challenging question conjunction sophisticated deep-learning state art 2016-17 43 invoker knowledge-based question answering bot 8 2016-17 44 invoker knowledge-based question answering bot question answering people helpful year accuracy conciseness answer question felt expectation met ensure satisfaction invoker qa bot domain factoid qa invoker qa approach knowledge base retrieve relevant answer extraction pattern matching based approach qa invoker qa bot semantic syntactic parsing involving natural language processing efficient better comparative study approach allows analyze applicability scenario approach effectively designing closed domain question answering public private organizations/ enterprise knowledge base established appropriate approach deployed public include bank branch government office post office municipal corporation office simple query solved private enterprise confidential hosted publicly internally employee ease example simple faq designed company specific product employee licensed customer query solved easily grammar rule scenario question le complex fast easier implement felt answer complex contextual question scaled deployed 2016-17 45 invoker knowledge-based question answering bot 1 k. liu j. zhao s. y. zhang `` question answering knowledge base '' intell syst 30 5 26-35 2015 2 d. elalfy w. gad r. ismail `` predicting best answer community question based sentiment '' 2015 seventh international conference intelligent computing icicis 2015 3 z. gong m. chan `` iqa intelligent question answering '' digital library implementing strategy sharing experience 332-341 2005 4 x. huang b. wei y. zhang `` automatic question-answering based wikipedia extraction '' 2015 10th international conference intelligent knowledge iske 2015 5 e. cabrio c. zucker f. gandon a. hallili a. tettamanzi `` answering n-relation natural language question commercial domain '' 2015 ieee/wic/acm international conference web intelligence intelligent agent wi-iat 2015 6 m. iyyer j. boyd-graber l. claudino r. socher h. daum iii `` neural network factoid question answering paragraph '' proceeding 2014 conference onempirical method natural language processing emnlp 2014 7 a. andrenucci e. sneiders `` automated question answering review main approach '' third international conference icita'05 8 j. tomljanovic m. pavlic m. katic `` intelligent question 2014 answering review '' 2014 37th international convention electronics microelectronics mipro 2014 9 tiansi dong ulrich furbach ingo glckner bjrn pelzer natural language question answering participant human portal proceeding twenty-second international joint conference artificial intelligence p.2430-2435 16-22 2011 barcelona catalonia spain doi 10.5591/978-1-57735-516-8/ijcai11-405 2016-17 46 invoker knowledge-based question answering bot 10 g. ingersoll t. morton a. farris taming text shelter island ny manning 2013 11 yuanzhe zhang shizhu kang liu jun zhao joint question answering multiple knowledge base proceeding aaai 2016 phoenix usa phoenix 12-17 12 ittycheriah franz zhu wj ratnaparkhi mammone rj ibms statistical question answering proceeding text retrieval conference trec-9 2000 13 e. riloff m. thelen `` rule-based question answering reading comprehension '' anlp/naacl 2000 workshop reading comprehension evaluation computer-based language understanding 2000 14 d. jurafsky j. martin speech language processing 28 question answering upper saddle river n.j. pearson prentice hall 2009 15 park seonyeong soonchoul kown byungsoo kim gary geunbae lee isoft qald-5 hybrid question answering linked text clef 2015 16 j. yin x. jiang l. shang z. lu h. li x. li neural generative question answering proceeding ijcai16 2016 17 p. yin n. duan b. kao j. bao m. zhou `` answering question complex semantic constraint knowledge base '' proceeding 24th acm international conference knowledge cikm '15 2015 18 z. zheng `` question answering web news knowledge base '' proceeding tenth conference european association computational linguistics eacl '03 2003 19 bordes a. chopra s. weston j. question answering subgraph embedding proc empirical method natural language processing 20 a. fader l. zettlemoyer o. etzioni `` question answering curated 2016-17 47 invoker knowledge-based question answering bot extracted knowledge base '' proceeding 20th acm sigkdd international conference knowledge discovery mining kdd '14 2014 21 fabio rinaldi james dowdall michael hess diego moll rolf schwitter kaarel kaljurand knowledge-based question answering kes-2003 knowledge-based intelligent oxford 2003 22 `` start natural language question answering '' online start.csail.mit.edu 23 question answering pattern matching web-proofing semantic form proofing min wu xiaoyu zheng michelle duan ting liu tomek strzalkowski 2016-17 48 32.pdf originality 17 similarity 12 11 internet source publication paper primary source chang emily fan miao zheng thomas fang zhou qiang `` transition-based knowledge graph embedding relational mapping property '' linguistics faculty art chulalongkorn 2015. publication www.engin.umd.umich.edu internet source dl.acm.org internet source www.philosophe.com internet source liu kang jun zhao shizhu yuanzhe zhang `` question answering knowledge base '' intelligent 2015. publication www.slideshare.net internet source erp.techmaxbooks.com 1 2 3 4 5 6 7 2 1 1 1 1 1 8 9 10 11 12 13 14 15 16 internet source elearning.nic.in internet source www.isi.edu internet source www.cs.iit.edu internet source www.ijorcs.org internet source nats-www.informatik.uni-hamburg.de internet source tomasz jurczyk michael zhai jinho d. choi `` selqa benchmark selection- based question answering '' 2016 28th international conference artificial intelligence ictai 2016 publication '' handbook '' springer nature 2017 publication www.mace.ac.in internet source '' question answering knowledge base web '' proceeding 39th international acm sigir conference development 1 1 1 1 1 1 1 1 1 1 retrieval sigir 16 2016. publication dblp.dagstuhl.de internet source attempto.ifi.uzh.ch internet source crossref.org internet source www.ijcaonline.org internet source en.wikipedia.org internet source kulik sergey `` factographic retrieval competence forming '' 2016 third international conference digital processing mining wireless dipdmwc 2016. publication dste.puducherry.gov.in internet source '' deep learning retrieval '' proceeding 39th international acm sigir conference development retrieval sigir 16 2016. publication shin-ying huang hsinchun chen `` exploring 17 18 19 20 21 22 23 24 25 1 1 1 1 1 1 1 1 online underground marketplace topic-based social network clustering '' 2016 conference intelligence security informatics isi 2016 publication nlp.postech.ac.kr internet source trec.nist.gov internet source eriks sneiders `` automated faq answering question-specific knowledge representation web self-service '' 2009 2nd conference human interaction 05/2009 publication i3s.unice.fr internet source lecun yann bengio yoshua hinton geoff `` deep learning '' nature 28 2015 issue publication theory natural language processing 2014. publication gefweb.org internet source www.studymode.com 1 1 1 1 1 1 1 1 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 internet source www.sftw.umac.mo internet source '' semantic question answering '' proceeding international workshop semantic sbd 16 2016. publication lecture note science 2007. publication kola.opus.hbz-nrw.de internet source ethesis.nitrkl.ac.in internet source dse13.dtemaharashtra.org internet source www.csee.wvu.edu internet source www.coursehero.com internet source lecture note science 2015. publication cfsites1.uts.edu.au internet source luca benini `` hardware/software ip 1 1 1 1 1 1 1 1 1 1 1 1 45 46 47 48 protection '' proceeding 37th conference automation dac 00 dac 00 2000 publication e. sneiders `` automated question answering review main approach '' third international conference icita 05 2005 publication mara-dolores olvera-lobo `` question- answering efficient source terminological evaluation qa terminological source '' health library journal 06/29/2010 publication babak loni `` question classification weighted combination lexical syntactic semantic '' lecture note science 2011 publication vinod durdi sudha `` cross layer approach joint optimization multimedia protection energy efficiency wireless multimedia sensor network '' 2016 international conference signal processing iccsp 2016 publication 1 1 1 1 49 50 51 52 53 54 55 56 57 58 stdb.mruni.eu internet source aptnk.in internet source www.icjia.state.il.us internet source job.factumpress.com internet source www.acm.org internet source eprints.usq.edu.au internet source www.cse.iitb.ac.in internet source jovita linda andrei hartawan derwin suhartono `` vector space question answering '' procedia science 2015. publication '' advance domain question answering '' springer nature 2008 publication zhiguo gong `` iqa intelligent question answering '' lecture note science 2005 publication 1 1 1 1 1 1 1 1 1 1 exclude quote exclude bibliography exclude match 1 word", "keywords": ["answer extraction", "answer question", "best answer", "bot fig", "bot invoker", "commercial domain", "comparative study", "contextbased text", "contextbased text mining", "dbpedia kb", "domain question", "extract answer", "extract answer question", "factoid question", "grammar rule", "grammar rule matching", "intelligent question", "intelligent question answering", "international conference", "internet source", "invoker knowledgebased", "invoker knowledgebased question", "iqa intelligent", "iqa intelligent question", "jun zhao", "knowledge base", "knowledgebased question", "language processing", "language question", "machine learning", "matching approach", "meaning question", "multiple answer", "multiple knowledge", "multiple knowledge base", "natural language", "natural language processing", "natural language question", "neural network", "nl question", "nl question parse", "note science", "parse tree", "pattern matching", "proceeding th", "processing machine", "qa answer", "qa invoker", "question answer", "question answering", "question natural", "question natural language", "question parse", "question parse tree", "relevant answer", "restricted domain", "rule matching", "search engine", "sparql query", "state transition", "subject property", "support vector", "support vector machine", "text mining", "th international", "uri subject", "usage scenario", "validation criterion", "vector machine", "wikidata dbpedia", "wikidata uri", "wikidata uri subject"], "libraries": ["numpy", "tornado", "scikit-learn", "nltk"], "languages": ["python", "html", "cs", "io", "javascript", "basic", "small"], "frameworks": ["flask"], "dbs": []}, "./reports/33_final_report.pdf": {"title": "smart component for geo-location   based assignments", "filename": "./reports/33_final_report.pdf", "data": "smart component geo-location based assignment savitrabhai complete fullfilment amit gupta b120058506 mayank gupta b120058540 piyush kothari b120058568 guidance dr. a.m. bagade sr. no.27 pune-satara road pune-43 smart component geo-location based assignment amit gupta mayank gupta piyush kothari b120058506 b120058540 b120058568 bonafide prof. dr. a.m. bagade complete earlier diploma prof. s.b deshmukh coordinator dr. p.t dr. a.m. bagade examiner sponsorship letter ii completion letter iii acknowledgement opportunity express deep sense gratitude in-charge dr. a.m. bagade valuable time effort currently working constant guidance willingness share vast knowledge understand extend gratitude coordinator mr. s.b deshmukh guiding semester timely assistance dr. p.t consistent support help thankful mr. amol lachake mr. mangesh shegokar providing facility support meet convey sponsor bmc mentor mr. manoj sharma mr. vinay gaonkor continued support assistance express indebtedness parent well family member blessing support helped face challenge ahead express sincere friend helped directly indirectly period remain unacknowledged humble note gratitude remained unappreciated amit gupta b120058506 mayank gupta b120058540 piyush kothari b120058568 iv smart component geo-location based assignment topic sponsorship completion acknowledgement abbreviation 1 1.1 aim 1.2 1.3 2 3 background review 2.1 existing 2.2 proposed specification 3.1 definition 3.2 3.3 3.4 context 3.5 persona involved 3.6 use-case 3.7 ii iii iv vi vii viii 1 6 13 iniormation 2016-17 smart component geo-location based assignment 3.8 context 4.1 ar server 4.2 4.3 innovation suite 4.4 ticketing 4.5 ticketing 4.6 ticketing 4.7 pert 4.8 deployment ticketing 5.1 angular component 5.2 assignment evaluation function point ii plagiarism iii review sheet 20 32 38 60 62 64 66 69 iniormation 2016-17 4 5 6 7 smart component geo-location based assignment title 2.1 2.2 2.3 3.1 3.2 4.1 4.2 4.3 example event based ticketing example routing incident example ar server smart ticketing 4.4 skill ticketing 4.4 ticketing 4.5 4.6 4.7 4.8 ticketing ticketing pert deployment ticketing 8 10 11 17 19 21 22 23 25 26 27 28 29 31 iniormation 2016-17 smart component geo-location based assignment title 3.1 6.1 use-case description 18 40 iniormation 2016-17 vi api gps sla ci bppm ar sdk tr smart component geo-location based assignment abbreviation programing global positioning service-level agreement creating inventory bmc proactivenet performance action request development kit ticket resolver iniormation 2016-17 vii smart component geo-location based assignment bmc action request server ar server responsible current ticket allocation ar server currently forward ticket helpdesk executive forward respective manager handling ticket process utilizes human well time concentrate automating process creating efficient traditional well add functionality geo-location component newly developed innovation suite innovation suite platform bmc developer develop drag drop component minimal knowledge programming parameter resolver load skill location priority sla assigning resolver ticket '' smart ticketing '' unique depending persona logged keywords bmc innovation suite ticket assignment ar server geo-location iniormation 2016-17 viii smart component geo-location based assignment 1 2016-17 1 smart component geo-location based assignment growing automation necessity option automation efficient alternative human labor machine 24x7 stopping second well removing possibility human error concerned automating ticket assignment process well adding parameter current processing parameter easily visualized imaging fortune 500 company facing minor glitch generates ticket resolver assigned human error fortune 500 company deal loss number overcome round-robin applied resolver ticket generated manager fails assign ticket respective resolver action request server ar assigns ticket resolver turn ticket unattended ignored method drawback assigning ticket round robin method time happen ticket irrelevant domain resolver assigned prove difficult him/her resolve ticket working focus automating ticket assignment process removing human touch completely avoiding chance failure sponsored bmc performed provided laptop server 1.1 aim aim learn platform provided bmc innovation suite requires completely understand performangularjs integrated registry requires learn apply rest api jax html google geo-location api intention 2016-17 2 smart component geo-location based assignment learn mentioned well platform innovation suite bmc 1.2 create geo-location component innovation suite allow developer add functionality geo-location his/her develop fully working demonstrates geo-location component develop ticket assignment i.e action remedy server automate process ticket assignment adding parameter 1.3 aim developing smart geo-location based component bmc sdk introduces geo-location functionality sdk developer bmc innovation studio geo-location identification real-world geographic location object radar source mobile phone internet-connected terminal geo-location prove helpful allocation fetch location component involved geo-location find help gps chip installed device ip device assignment purpose traditional order improve efficiency selection ticket resolver based parameter expertise current load location availability order prioritize ticket database slas ticket generated mandatory check skill well parameter availability current load resolution ticket depends completely resolver guarantee exact time solve ticket resolution ticket skill resolver updating skill 2016-17 3 smart component geo-location based assignment proposed aim optimized allocating depict effectiveness showing ticket allocation enterprise addition geo-location functionality background based intelligent ticket currently enterprise current detailed categorization ticket allocation detailed read categorized allocation ticket manually checking location ticket resolver currently incident assigned based parameter 1. ci location 2. supported group causal service ci 3. resolution product category 4. product 5. category add parameter geo-location well automate step parameter deal process involved lifecycle ticket allocation benefit resolvers evenly distributing workload reducing travel time reach ticket judgment priority ticket help enterprise follow commitment resolve ticket time develop optimizing cost allocation enterprise help geo- location main purpose develop generalized geo-location based assignment component ticket allocation enterprise automate assignment currently enterprise effectively decrease cost involved 2016-17 4 smart component geo-location based assignment provide alternate solution traditional assignment round-robin overcome disadvantage ideology include latest geo-location provide advantage current help understand keyword abstraction routing help understand step involved developing efficient real time sponsored bmc acquainted culture top mncs help understand mixing latest existing industry process reduce man-power increase speed process lifecycle 2016-17 5 smart component geo-location based assignment 2 2016-17 6 smart component geo-location based assignment background review 2.1 existing currently bmc intelligent ticketing solution ticket allocation bmc itsm enables optimum interaction collaboration event incident bmc intelligent ticketing solution doe focus creating incident event transforms infrastructure event causal incident incident routed managed closure bmc category ticket level based maturity event currently 3 level categorization 1. event based ticketing 2. infrastructure based ticketing 3. based ticketing 2.1.1 event based ticketing event-based ticketing level bmc intelligent ticketing solution incident created event event based ticketing optional category field routing event 2016-17 7 smart component geo-location based assignment 2.1 example event based ticketing courtesy bmc documentation 1.a detects degradation response time router 2. alert triggered routed bppm 3. event recorded category event create event incident bmc remedy service desk 4. incident assigned appropriate support group based category 5. router issue resolved appropriate note updated resetting router 6. bppm event alert cleared 7. incident status updated resolved incident step incident based based routing ticket 2.1.2 incident routing issue reported incident created assigned person assignment resolve issue incident routing deal assignment incident correct group routing incident appropriate 2016-17 8 smart component geo-location based assignment group reduces total time resolving issue inefficient process routing issue delay customer unknown period time causing delay intelligent ticketing solution route reported issue appropriate group skilled resolve ticket typically customer issue service desk agent creates incident based discretion service desk agent provided customer incident routed out-of-the-box event triggered event incident routed ci characteristic assigned appropriate group automated incident incident created service desk agent automated incident leverage ci based characteristic routing rule ensure reported issue routed skilled best suited resolve ticket automated incident routing rule assign group based relevant ci characteristic example location ci relevant characteristic routing ticket appropriate location consider customer italy memory issue server located canada ci location considered ticket created assigned group based italy wa reported customer italy faster resolution appropriate assign ticket supported group impacted location canada 2016-17 9 smart component geo-location based assignment 2.2 example routingincidents courtesy bmc documentation existing help service desk technician order resolve ticket ticket allocation process time consuming requires amount man power human intervention 2.2 proposed geo-location identification geographic location device variety collection mechanism geo-location help determine exact meaningful location geographic coordinate existing geo-location service provider network routing address gps device determine location device gps satellite transmit signal gps receiver gps receiver find satellite distance distance calculated subtracting time signal wa transmitted time wa received exact position gps receiver gps receiver easily determine signal generated 2016-17 10 smart component geo-location based assignment position three dimension called trilateration gps acquire exact location aspect allocation currently allocation technique fifo round robin analytics based inefficient physically dispersed devise technique gps efficient allocation proposed extract location geo-location api processed processing generated efficient allocate proposed optimize cost ticket allocation enterprise increase efficiency automate existing allocation help provide better service enterprise globe increase functionality current bmc innovation studio 2.1example 2016-17 11 smart component geo-location based assignment 2.1 allocation scenario region covered tower server room ticket generated tower region request server room resolving issue receiving request server room allocate issue collecting resolver issue considers parameter distance source ticket generated skill issue generated current load max time resolve generated ticket approx time resolve issue considering factor find optimal solution allocate issue generated tower geo- location brick efficient cost optimal 2016-17 12 smart component geo-location based assignment 3 2016-17 13 smart component geo-location based assignment 3.1 definition current allocation bmc based round robin client bmc current cost incurred method optimal failure company client amount time failure scaled loss company method fixed company save time utilize saved time efficiently occurs ticket generated resolver ticket assigned resolver causing time loss wastage order resolve inclusion geo-location current help improve allocation criterion help company save time well allocating resolver nearest ticket generated consider parameter assigning ticket resolver skill workload distance ticket generated approximate time resolve ticket priority help stakeholder efficiently resolve issue allocation add functionality bmc innovation suite provide better platform bmc developer 3.2 develop programming java angularjs smart geo-location based assignment bmc ar server aim including geo-location functionality better allocation developing smart location based ticket assignment 2016-17 14 smart component geo-location based assignment bmcmarketplace api provide developer bmc sdk component geo-position functionality purpose provide efficient allocating based geo-location category priority skill 3.3 innovation suite implement smart component geo-location based assignment functionality major input ticket allocated resolver resolvers availability input process ticket analyze field ticket database categorize ticket geo- location component location resolver well ticket generator nearest resolver ticket optimally form 3.4 context business property bmc developer bmc innovation studio enterprise vast cost involved appropriate allocation enterprise require efficiency require real time processing allocation accuracy play role proper ticket allocated appropriate resolver generalized innovation suite well 2016-17 15 smart component geo-location based assignment 3.5 persona invloved manager manages employee ticket creator create view ticket ticket resolver view edit allocated ticket 2016-17 16 smart component geo-location based assignment 3.6 3.1. 2016-17 17 smart component geo-location based assignment 3.1 description description uc_01 fetch ticket fetch registered ticket uc_02 categorize categorize ticket uc_03 update ticket status update status resolver uc_04 fetch resolver ticket resolvers change uc_05 change ticket category category ticket based uc_06 location fetch current location sla geo-location resolver assign uc_07 assignment ticket ticket considering uc_08 update skill factor update resolvers skill completion 3.7 2016-17 18 smart component geo-location based assignment 3.2 3.8 intel dual core i7 processor 2.4-3.4 ghz minimum 4gb ram hard disk 50gb space wi-fi connectivity window 2007 microsoft windowsg server 2012 bmc ar server 9.5.0 bmc innovation suite java 7 angular v1.0 maven v3.3.9 gruntv1.0.1 rest 2016-17 19 smart component geo-location based assignment 4 2016-17 20 smart component geo-location based assignment 4.1 ar server 4.1. ar server bmc action request ar server client-server comprise three environment presentation business processing storage environment composition component help provide flexibility power scalability 2016-17 21 smart component geo-location based assignment 4.2 4.2. client tier ar client client receive input migration development client mid-tier component add-in service web server enabling web server tier bmc remedy ar server control workflow process access database source tier tier server-side approval server email engine bmc remedy flashboard server oracle java plug-in server plug-in tier database server source accessed bmc remedy ar server database server storage retrieval engine ar support microsoft sql server db2 oracle sybase database 2016-17 22 smart component geo-location based assignment custom view-components geo-location component enhances functionality providing location service foundation library foundation manage business rule process people element wa consumed represent employee 4.3 innovation suite 4.3 smart ticketing service based standard service java code rest-style http calling service client consume service http element discussed smart bundle smart library bundle 2016-17 23 smart component geo-location based assignment library building block bundle consists library defined library collection component record definition view component rule field smart bundle package deploy install smart platform smart platform framework service smart platform support enterprise java platform including rest/http creating custom service process orchestration engine configurable definition based object rest apis custom service custom action defined define process process definition created update rest api call designer designer innovation studio allow defining customizing definition smart 2016-17 24 smart component geo-location based assignment 4.4 4.4.1 skill 4.4.1 skill skill update monitored maintain skill resolvers keep updated 2016-17 25 smart component geo-location based assignment 4.4.2 4.4.2. 2016-17 26 smart component geo-location based assignment 4.5 4.6. 2016-17 27 smart component geo-location based assignment 4.6 4.7 2016-17 28 smart component geo-location based assignment 4.7 pert 4.7 pert 2016-17 29 smart component geo-location based assignment 4.7 pert 2016-17 30 smart component geo-location based assignment 4.8 deployment 4.8 deployment 2016-17 31 smart component geo-location based assignment 5 2016-17 32 smart component geo-location based assignment aim developing geo-location based assignment bmc action-request server developed top innovation suite help developer create entire simple drag drop innovation suite help develop entire front- back-end database aim introducing geo-location functionality innovation suite basically aim developing drag drop component innovation suite geo-location functionality view suite aim demonstrating geo-location component developing automate process ticket assignment firm innovation suite developed angularjs java maven jersey grunt relational-database rest endpoint apis innovation studio develop 5.1 angularjs component firstly angularjs component wa developed google geo-location service provide location geo-location view component consist file 1. geo-definition-designer-manager.service.js 2. geo-design-directive.js 3. geo-locator.service.js 4. geo-config.js 5. geo-directive.js 6. geo-module.js 7. geo-directive.html 8. geo-design-directive.html 1. manager service manager service define basic manager manage developed view-component inherits record editor 2016-17 33 smart component geo-location based assignment manager base rxrecordeditorfieldcomponentdefaultdesignmanager defines geodesignmanager top responsible interaction database update record 2. directive file define view-component developer developer drag component view directive decide component developer directive deign-directive.html file front-end component 3. locator service file consist google geo-location api location creates angularjs factory called geolocation injected directive geo-location ofthe navigator rootscope window component angularjs locator service return object consisting latitude longitude 4. directive consist actual call injection service factory view-component defines interaction component directive.html file provide end-user injects locator service factory geolocation function defined object consisting geo-location merges latitude longitude separated field sends updating record 5. config consist configuration component appear side-pallet drag drop ui logo category 2016-17 34 smart component geo-location based assignment defined file parameter field 5.2 assignment smart ticket assignment geo-location fetched developed view-component consist 1. geo location service 2. sort skill service 3. load priority service 4. assignment 5. update skill service 6. association service service 1. geo location service service basically resolvers proximity ticket input service ticketid instance threshold consist logic ticket_latitude =tickect- latitude ticket_longitude=ticket- longitude resolver resolvers distance ticket- location resolver- location distance threshold resolver_list.append resolver distance calculated haversine formula bellow 2016-17 35 smart component geo-location based assignment sin /2 1 2 sin /2 2 tan2 1a latitude longitude earth radius radius 6 371km note angle radian pas trig function 2. category sort service purpose service find capable solve generated ticket based category ticket skill input service category current ticket generated geo location service basic logic service resolver resolvers skillset match category resolver_list.append resolver 3. load filter service service finally find resolver assign ticket check load resolver considers priority ticket find resolver appropriate solve current ticket considers starvation well assign ticket resolver basic service current_ticket- priority==critical resolver- tickets- priority=critical skip resolver resolver- tickets- priority=high 2016-17 36 smart component geo-location based assignment skip resolver current_ticket- priority==high resolver- tickets- priority=critical skip resolver resolver- tickets- priority=high skip resolver current_ticket- priority==medium number ticktes 3 assign ticket current_ticket- priority==medium number ticktes 5 assign ticket pseudo code ticket load filter considers parameter assigning ticket 4. skill service ticket resolved skill resolver updated skill service ticket resolver capable solve ticket based skill basic logic skill service category exist skill skillset.append category 2016-17 37 smart component geo-location based assignment 6 2016-17 38 smart component geo-location based assignment evaluation proposed wa embedding geo-location functionality innovation studio component worked efficiently ticket assignment wa created component component accurately captured latitude longitude order exact location ticket assignment appropriately assignment ticket resolvers based criterias geo-location workload priority skill care starvation ticket priority ticket correctly demonstrated geo- location component wa location ticket well resolvers experimental setup consist ticket assignment bundle deployed innovation studio ticket generator well resolver hosted innovation studio web browser location permission resolver ticket generator wa help provided qa engineer bmc general boundary condition validation checked innovation studio 2016-17 39 smart component geo-location based assignment example priority critical medium critical medium critical medium 6.1 status distance category 100 matched 100 matched 100 matched 100 matched 1000 matched 1000 matched 1000 matched 1000 matched 1000 matched 1000 matched 1000 matched 1000 matched critical progress 100 matched progress 100 matched medium progress 100 matched progress 100 matched 2016-17 40 smart component geo-location based assignment snapshot workspace 2016-17 41 smart component geo-location based assignment snapshot record 2016-17 42 smart component geo-location based assignment snapshot employee record 2016-17 43 smart component geo-location based assignment snapshot view 2016-17 44 smart component geo-location based assignment snapshot manager view 2016-17 45 smart component geo-location based assignment snapshot process 2016-17 46 smart component geo-location based assignment snapshot assignment process 2016-17 47 smart component geo-location based assignment snapshot rule 2016-17 48 smart component geo-location based assignment snapshot assignment rule 2016-17 49 smart component geo-location based assignment snapshot named 2016-17 50 smart component geo-location based assignment snapshot category named 2016-17 51 smart component geo-location based assignment snapshot creator logged 2016-17 52 smart component geo-location based assignment snapshot ticket creation form 2016-17 53 smart component geo-location based assignment snapshot ticket created 2016-17 54 smart component geo-location based assignment snapshot resolver view 2016-17 55 smart component geo-location based assignment snapshot ticket assigned resolver 2016-17 56 smart component geo-location based assignment snapshot ticket viewed ticket resolver 2016-17 57 smart component geo-location based assignment snapshot manager view 2016-17 58 smart component geo-location based assignment snapshot resolver viewed manager 2016-17 59 smart component geo-location based assignment chapte improved performance existing ticket assignment enterprise geo-location functionality innovation suite automating ticket assignment considering geo-location property number resolvers geography geo-location play role deciding resolver nearest generated ticket considered skillset workload priority slas availability resolver assigning ticket starvation wa appropriately addressed meant good development strategy bmc worked provided engineer bmc resolve traditional ticket assignment involved human intervention load service person manager completely automated process ticket assignment manager insight ticket assigned category ticket assigned manually automated development 2016-17 60 smart component geo-location based assignment 2016-17 61 smart component geo-location based assignment 1 innovation suite documentation 2016 online http //docs.bmc.com/docs/innovationsuite/cloud 2 bmc action request 9.1 2017 online http //docs.bmc.com/docs/display/public/ars91/home 3 google api documentation 2017 online http //developers.google.com/maps/documentation/geolocation/intro 4 angularjs documentation 2016 online http //docs.angularjs.org/guide/concepts 5 haversine formula 2016 online http //en.wikipedia.org/wiki/haversine_formula 2016-17 62 smart component geo-location based assignment bibliography herbert schildt complete java 7thed 1996 y.daniel liang java programming 9th 1997 2016-17 63 smart component geo-location based assignment 2016-17 64 smart component geo-location based assignment functionpoint 2016-17 65 smart component geo-location based assignment ii 2016-17 66 smart component geo-location based assignment plagiarism 2016-17 67 smart component geo-location based assignment 2016-17 68 smart component geo-location based assignment iii 2016-17 69", "keywords": ["action request", "allocation enterprise", "ar server", "assign ticket", "assignment snapshot", "automated incident", "based assignment", "based assignment snapshot", "bmc action", "bmc developer", "bmc innovation", "bmc innovation studio", "bmc innovation suite", "bmc remedy", "bmc sdk", "category ticket", "ci location", "component geolocation", "component geolocation based", "current load", "current ticket", "developer bmc", "event incident", "functionality innovation", "generated ticket", "geo location", "geo location service", "geolocation api", "geolocation based", "geolocation based assignment", "geolocation component", "geolocation functionality", "geolocation functionality innovation", "google geolocation", "innovation studio", "innovation suite", "intelligent ticketing", "intelligent ticketing solution", "location service", "locator service", "piyush kothari", "platform bmc", "priority ticket", "process ticket", "process ticket assignment", "request server", "resolver ticket", "round robin", "service desk", "service service", "skill service", "smart component", "smart component geolocation", "ticket allocation", "ticket allocation enterprise", "ticket assignment", "ticket generator", "ticket resolver", "ticketing solution"], "libraries": [], "languages": ["basic", "html", "java"], "frameworks": ["angularjs", "angular"], "dbs": []}, "./reports/34_Final_Report.pdf": {"title": "virtual stock market game application", "filename": "./reports/34_Final_Report.pdf", "data": "virtual stock market game virtual stock market game complete leena deore prafful pawar komal pharate madhura rathi guidance d. d. londhe b120058574 b120058601 b120058603 b120058607 mr. saharsh bhatia sr.no.27 satara road 411043 india 2016-2017 2016-17 virtual stock market game virtual stock market game leena deore prafful pawar komal pharate madhura rathi b120058574 b120058601 b120058603 b120058607 bonafide prof. d.d londhe complete fulfilment earlier diploma prof. d. d. londhe prof. s. b. deshmukh co-ordinator dr. p. t. examiner 2016-17 virtual stock market game sponsorship letter 2016-17 ii virtual stock market game completion 2016-17 iii virtual stock market game acknowledgement opportunity express deep sense gratitude prof. d. d. londhe valuable time effort currently working constant guidance willingness share vast knowledge understand extend gratitude coordinator mr. s.b deskmukh guiding semester timely assistance dr. p.t consistent support help thankful mr. amol lachake mr. mangesh shegokar providing facility support meet convey sponsor valuenotes mentor mr. saharsh bhatia mr. tushar continued support assistance express indebtedness parent well family member blessing support helped face challenge ahead express sincere friend helped directly indirectly period remain unacknowledged humble note gratitude remained unappreciated leena deore b120058574 prafful pawar b120058601 komal pharate b120058603 madhura rathi b120058607 2016-17 iv virtual stock market game title 1.1 3.1 4.1 4.2 4.3 4.4 basic pillar stock market proposed vsmg modular class vsmg vsmg 4.5 buying stock 4.6 4.7 selling stock feed generation 4.8 package vsmg 4.9 deployment 4.9 cloud deployment 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 registration form gamer profile form portfolio- sell stock company portfolio side menu bar feedback form logout 2 19 22 24 25 28 29 29 30 31 32 33 49 49 50 50 51 51 51 51 2016-17 2.1 3.1 6.1 6.2 6.3 6.4 6.5 virtual stock market game title comparative study existing simulator vsmg specification unit 1 unit 2 unit 3 unit 4 integration 11 20 44 45 46 47 48 2016-17 vi virtual stock market game abbrevations api bse nse programming bombay stock exchange national stock exchange vsmg virtual stock market game 2016-17 vii virtual stock market game sponsorship completion industry acknowledgement abbreviation ii iii iv vi vii title 1. 1.1 basic 1.2 background 1.3 undertaken 2. background 2.1 existing 2.2 comparative study 2.3 proposed 3. specification 3.1 3.2 3.3 3.4 3.5 area 3.6 client 3.7 usage scenario 3.8 description viii 2 4 4 7 11 11 17 17 17 18 18 18 18 20 2016-17 virtual stock market game 4. 4.1 proposed 4.2 class 4.3 dictionary 4.4 4.5 4.6 package 4.7 deployment 5. 5.1 5.2 execution 5.3 5.4 6. evaluation 6.1 6.2 item 6.3 6.4 procedure 6.5 snapshot 7. 7.1 7.2 ii 22 25 26 28 29 31 32 35 35 36 37 42 42 42 44 49 53 53 54 56 61 2016-17 virtual stock market game investment stock market area vast interest profit trading stock stock market general opinion stock market is- return number potential investor invest stock market main reason inability aim bridge gap investment infotainment help naive person learn trading investing stock market serf learning platform incorporates downfall associated stock market gamification uplift interest appealing easy keywords gamification human interaction incentive smartphone stock market fintech 2016-17 viii virtual stock market game 1 2016-17 1 1 virtual stock market game 1.1 basic aim developing virtual stock market game employ concept gamification financial domain machine learning recommendation engine fig 1.1 basic pillar stock market basic pillar stock market 1. history traditional trading stock issued acknowledgement stock equity asset bought owned investor trade encash involved lot physical transaction investor visit exchange platform transaction conventional trading online transaction picture trading happen anytime amount stock broker investor communicate easy efficient 2016-17 2 2 virtual stock market game quick manner created great hype stock market investment 2. stock stock/share share asset company share company ownership profit loss 3. company company broadly classified belong public sector belong private sector belong sector market oil industry industry agro-based industry company listed listed exchange platform 4. exchange platform company sell stock marketplace trading bse nse 5. investor investor shareholder hold share/stock company broadly classified short term long term investor a. short term investor invest hour day week month max year interested quick gain dont rely company status b. long term investor invest span year connected company company owner fall 2016-17 3 3 virtual stock market game gamification implemented smartphone engage people slight background financial market familiar market crucial step investing gamification offered business replace loyalty program offer benefit offer customer possibility development eventually combination social benefit gamified stock market aimed help potential trade real environment real experience enter invest market addition offer investor article stock invested stock trading portfolio completely virtual 1.2 background virtualization creation virtual -- actual -- version operating server storage device network concept employed virtualize stock market environment real-time trading 1.3 undertaken 1.3.1 aim developing virtual stock market game employ concept gamification financial domain machine learning recommendation engine 2016-17 4 4 virtual stock market game 1.3.2 train nave stock market investment causing social imbalance factor stock market simulation virtualization virtualization creating virtual version existing platform service stock market virtualized actual trading money trader virtual currency transaction advantage virtualization 1. reduced cost 2. platform independence 3. easy 4. better experience 5. better recovery virtualization concept gamification intuitive gamification employing gaming concept leader board reward badge ranking area gamification prime motivator strives addressing natural desire competition social involvement learning ranking achievement status recommendation facilitates customized friendly experience aim hands-on experience trading light toll stock market assisting tutorial article news feed practically perform transaction 2016-17 5 5 virtual stock market game 2 background 2016-17 6 6 virtual stock market game 2.1 existing concept short term trading investor invest day week month short term trading experience trading lucrative risky minute long day succeed strategy trader understand reward trade spot good short-term opportunity protect unforeseen event involves factor unstable nature stock market guarantee profit short term trading difficult naive 6 solution helping people learn stock market involves 1. actual investment 2. stock market simulator 3. video tutorial 4. tutorial 5. news 6. blog 7. article 8. website trending stock investor stock market directly invest stock market learn trading practically skill common beneficial knowledge video tutorial informative tutorial investor terminology stock market help news blog investor event stock price website predict stock price help investor 2016-17 7 7 virtual stock market game simulator stock market simulator platform trading simulated stock market informative fail learning interesting 6 comparative study good simulator 14 existing 1. informative 2. practical delivery knowledge 3. poor 4. improper gamification 2.1.1 existing recommendation engine recommendation engine basis selected individually collectively satisfy main broadly classified 1. collaborative filtering 2. based filtering 3. hybrid recommender 4. personality based recommender 6 2.1.1.1 collaborative filtering collaborative filtering method based collecting analyzing amount behavior preference predicting based similarity key advantage collaborative filtering approach doe rely machine analysable capable accurately 2016-17 8 8 virtual stock market game recommending complex item movie requiring '' understanding '' item acquiring collaborative filtering explicit collection implicit collection explicit collection involves rate product create item he/she implicit collection involves analyzing 's social network discovering dislike keeping record item purchase online machine learning measuring item similarity k-nearest neighbour approach pearson correlation coefficient website amazon facebook linkedin collaborative filtering 6 2.1.1.2 based filtering content-based filtering method based description item profile preference content-based recommender keywords describe item profile built indicate item word recommend item candidate item compared item rated best-matching item recommended approach root retrieval filtering extract item item presentation applied vector space representation create profile focus 1. 's preference 2. history 's interaction recommender 2016-17 9 9 virtual stock market game basically method item profile i.e discrete characterizing item creates content-based profile based weighted vector item weight denote computed individually rated vector variety technique going machine learning technique bayesian classifier cluster decision tree artificial neural network pandora radio music recommender method include rotten tomato jinni jaman 6 2.1.1.3 hybrid recommender hybrid approach combine collaborative filtering content-based filtering effective hybrid approach implemented making content-based collaborative- based prediction separately combining adding content- based capability collaborative-based approach vice versa unifying approach website netflix suggests movie episode collaborative based filtering 6 2.1.1.4 personality based recommender personality-based product recommender framework analyzes social medium order predict 's personality subsequently derive personality-based product preference aim identify key personality characteristic based linguistic cue collected user- generated text order create personality-based profile approach recommendation rely factor independent 2016-17 10 10 virtual stock market game 's pre-existing attitude avoids subjective step explicit preference 6 2.2 comparative study 2.1 comparative study existing simulator vsmg 5 6 7 8 9 10 11 12 13 14. explains functionality provided respective simulator stock trainer good company portfolio social community news feed top mover informative serve unique selling point 2.3 proposed proposed focus gamification concept financial domain recommendation engine implemented machine learning 2016-17 11 11 virtual stock market game involves designing virtual stock market game focus developing infotainment game involving trading investing stock market aim provide light stock market focus educational learning phase concept involves social competitive element prime factor driving engagement learning 15 key concept 1. gamification 2. virtualization 3. stock market simulation 4. recommendation engine machine learning 2.3.1 gamification gamification turning game help create effective learning enables rehearse real-life scenario challenge stock market safe environment gamification financial domain help interesting 15 2.3.2 virtualization virtualization creating virtual version actual environment virtualization stock market real time 15 2.3.3 stock market simulation stock market simulation imitation stock market opportunity trade basis real time virtual currency consists buy sell 15 2016-17 12 12 virtual stock market game 2.3.4 recommendation engine machine learning recommendation engine recommender analyzes suggestion basis recommender engine analyzes search history suggests stock news article help personalized interesting object space option 6 recommendation engine implement based discussed satisfies properly based filtering focus property item wa choice basis profile generated 5 aim stock search history profile based filtering selected 2.3.4.1 collaborative filtering collaborative filtering method produce specific recommendation item based pattern rating usage exogenous item 5 collaborative predict opinion opinion collaborative filtering 1. user-based collaborative filtering 2. item-based collaborative filtering 1. user-based collaborative filtering people agreed agree predict gamer buy stock transaction log similarity gamers 2016-17 13 13 virtual stock market game decided log history checking overlap purchase history stock 2. item-based collaborative filtering gamer shared opinion liking item stock kind similarity item stock decided observing purchase record preference a. advantage collaborative filtering analyse item indexing serendipity- luck form finding valuable pleasant thing looked b. collaborative filtering 1. cold start occurs item item explored recommended 2. sparsity sparse occur- product gain highest rating explored limited rate product leave rest untouched 3. scalability explained le popular product lot rating adding product equal acknowledgment hand increase product increase complexity 2016-17 14 14 virtual stock market game similarity calculation combination permutation increase 4. grey sheep occurs reveal liking product i.e rate product hard discover inclination revealed le social site cant effectively analyse liking recommend 2016-17 15 15 virtual stock market game 3 specification 2016-17 16 16 virtual stock market game 3.1 create virtual stock market game android web platform real stock price player trade virtual currency 3.2 game implement complete virtual stock market based real time stock market including stock price increase decrease company stock news expert 's article prime input fetched real stock market include podcasts presented expert field prediction company stock market recommendation engine analyze search history stock company help enhancing experience providing recommendation search query buy virtual currency paying real currency provided google apis 3.3 1. gnome kde desktop 2 64-bit distribution capable running 32-bit 3 8 gb ram recommended 4 12 gb disk space ~500 mb virtual environment 1.5 gb android sdk 700 mb android image script database 5. android phone emulation 6.0.1 2016-17 17 17 virtual stock market game 3.4 1. linux distribution- ubuntu 16.04 2. python-django 1.6 virtualenv 3. pycharm editor professional 2016.3 4. android studio 2.3.1 5. studio 3.3.3 3.5 area 1. category financial gamification 2. sub-category virtualized game 3.6 client 1. android version 2. smart phone 3. internet connectivity 4. ram rom spec 3.7 usage scenario 3.7.1 profile android learn trading stock market gamified trade virtual market virtual currency provided sign-in bonus help buy stock purchase virtual currency needed game developer sponsor include functionality 2016-17 18 18 virtual stock market game 3.7.2 3.1 use-case proposed credential view feed news article company search stock company price sector buy desired stock sell stock browsing portfolio feedback game view notification perform action bug malfunction occurs manage group/clan social community admin create podcasts social community accessible social group admin trigger event drive perform action admin view bug carry change admin view feedback admin block fig 3.1 vsmg 2016-17 19 19 virtual stock market game specification playing virtual stock market game description play virtual stock market game learn trading aimed teaching trade stock market consists addition gamification financial domain primary actor admin precondition 1.network 2. game installed basic a. 1. credential 2. view feed news article company 3. search stock company stock price sector 4. buy sell stock portfolio 5. feedback bug 6. manage profile 7. view notification b. admin 1. admin view bug 2. admin create podcast 3. admin ban/block 4. admin view feedback 3.1 specification 3.8 description fetched field raw provided sponsor 's vendor previous search well train stock recommendation 2016-17 20 20 virtual stock market game 4 2016-17 21 21 virtual stock market game 4.1 proposed fig 4.1 proposed vsmg proposed involves phase extraction storage processing retrieval major controller segment game controller facilitates registration profile portfolio explains functionality provided gamer major component 4.1.1 game controller game controller chief working component proposed 2016-17 22 22 virtual stock market game crucial functionality 1. 2. profile 3. portfolio 4. transaction 5. virtual currency 6. feed 7. social community 8. feedback game controller turn responsible experience calculation level upgradation 4.1.2 adapt virtual stock market environment learn trading disposal article news tutorial recommendation feed assist making informed transaction create join/leave group feedback 4.1.3 administrator administrator i.e developer functionality 1. trigger event 2. review feedback 3. review bug 4. block/ban 5. podcast 2016-17 23 23 virtual stock market game 4.1.4 recommendation engine recommendation engine employed collaborative based recommender basic operation employ process 1. profile learner 2. similarity calculation 3. filtering component fig 4.2 modular courtesy valuenotes proposed 1. admin 2. login/sign 3. search company sector price 4. stock trending company recommendation 5. profile dynamic referral code generation- signing bonus 6. notification 7. feed 8. trading portfolio generation dynamic pulling- top gainers/losers 9. virtual currency 2016-17 24 24 virtual stock market game 4.2 class class static describes showing 's class operation method object fig 4.3 class vsmg 2016-17 25 25 virtual stock market game 4.3 dictionary 4.3.1 class 1. gamer handle profile account 2. industrymaster industry 3. exchangemaster exchange platform 4. companymaster conatins company 5. securitymaster security listed company 6. trading buying selling 7. virtualcurrency currency currency operation 8. userportfolio valuation stock security currently owned gamer 9. companyportfolio current price stock intra-day evaluation 2016-17 26 26 virtual stock market game 10. userlog transaction till company 11. recommendationengine user-based recommendation engine 12. notification notification 13. feedback feedback developer 14. admin admin funtions 15. achievementrewards reward achievement 2016-17 27 27 virtual stock market game 4.4 represents business step-by-step workflow component control 4.4 fig 4.4 vsmg 2016-17 28 28 virtual stock market game 4.5 parallel vertical process object live simultaneously horizontal arrow message exchanged order occur allows specification simple runtime scenario graphical manner 4.5 4.6 4.7. fig 4.5 buying stock fig 4.6 selling stock 2016-17 29 29 virtual stock market game fig 4.7 feed generation 2016-17 30 30 virtual stock market game 4.6 package fig 4.8 package vsmg 2016-17 31 31 virtual stock market game 4.7 deployment 4.7.1 deployment fig 4.9 deployment 2016-17 32 32 virtual stock market game 4.7.2 deployment cloud fig 4.9 cloud deployment 2016-17 33 33 virtual stock market game 5 2016-17 34 34 virtual stock market game 5.1 1. a. develop android game android stack web processing stock market received vendor django free open-source framework written python stored mongodb 2. a. aim enhancing learning experience person minimal knowledge trading stock stock market b. provide depth view stock market efficient trading real scenario 5.2 execution 1. identification searching identifying finalizing 2. conceptualization concept building studied level designing stage preliminary presentation clarification 3. detailed stage low-level designing designed better visualization 4. coding actual start stage coding coding 10 12 week 5. unit initially tested number gui scenario involving tested separately 2016-17 35 35 virtual stock market game 6. integration integrated integrated component performed includes evaluation 7. product wa tested context entire window os platform performance monitored 8. documentation detailed document prepared stage 5.2.1 gathering initial wa 1. understanding definition 2. understanding current scenario enterprise 3. gathering 4. gathering 5. preparing preliminary workflow 6. deciding execution 7. execution actual 5.3 possibility loss injury definition environment exposure harm loss includes possibility well technique alleviate harm loss .all avoided performing attempt ensure time essential progress failure key learning involves identification prioritization 2016-17 36 36 virtual stock market game 5.3.1 analyzed individually classification basis rated 1. catastrophic 2. critical 3. marginal 4. negligible reviewed consensus wa reached 5.3.2 prioritization analyzing prioritized based review consensus developer 5.4 basic provide platform nave acquainted concept stock transaction virtual environment le assistance gamified acknowledge effort provide reward achievement badge progress process recommendation applied recommends stock based collaborative filtering concept 5.4.1 functionality provided 5.4.1.1 registration process registration includes collecting gamer 's preferred username email password choice 2016-17 37 37 virtual stock market game gamer enters store credential logging app direct portfolio gamer edit profile registering registration process creates profile attache separate portfolio virtual currency account registration buy stock recommended manage portfolio i.e sell owned stock manage subscription view follower 5.4.1.2 buy stock recommended company portfolio company stock sale current price recommended stock company recommended logged based based collaborative filtering process buying process one-click action check authenticity total amount needed purchase amount account purchase error raised buying stock action occur 1. virtual currency deducted virtual currency virtual currency total amount purchase 2. add bought stock entry portfolio stock_entry exists add quantity stock bought existing quantity quantity quantity qty bought entry portfolio 3. entry log file add current transaction attached time stamp store log 2016-17 38 38 virtual stock market game 5.4.1.3 manage portfolio- sell owned stock gamer sell stock owns gain profit selling process one-click action gamer sell stock stock company stock company limited amount stock company check gamer authorised sell stock owns stock sell sell amount stock selling stock action occur 1. virtual currency credited virtual currency virtual currency total selling price 2. check entry quantity stock sell stock_entry exists subtract quantity stock sold existing quantity quantity quantity qty sold raise error 3. entry log file add current transaction attached time stamp store log 5.4.1.4 manage subscription view follower allows gamer subscribe expert choice subscribe 5 expert view portfolio expert benefit follower gamer gain awarded experience point gamer subscribe follower 2016-17 39 39 virtual stock market game 5.4.1.5 notification gamer notified transaction expert stay updated 5.4.1.6 feedback gamers feedback owner improvement 5.4.2 functionality 5.4.2.1 experience point calculation employ gamification purpose gamer 's performance measured quantifiably experience point gamer gain experience time transaction profit experience point calculated a. transaction stock bought sold add 10 point experience point experience point 10 b. rupee profit selling stock add 1 point experience point experience point 1 5.4.2.2 level upgradation upgrading game level-wise current level game depicts level expertise game measure progress level upgradation game employ gain 100 experience point level gamer increased 2016-17 40 40 virtual stock market game 6 evaluation 2016-17 41 41 6.1 virtual stock market game aim provide platform familiar stock market donts accustomed buying selling process aim android gamers web server admin provide real stock market price fetched bse virtual currency trading gamified recommendation engine receive time time notification admin feedback 6.2 item applies well integration input output tested validity tested final tested 6.3 6.3.1 item pass/fail criterion 1. unit level a. completed function return expected output input b. boundary pass boundary condition input function tested validity 2. integration level a. unit level completed including boundary condition b. gamer portfolio profile virtual currency account functionality executed functioning smoothly consistently 2016-17 42 42 virtual stock market game 3. performance level a. buying-selling occurs b. respective server function failure c. transaction performed bound acid property d. level upgradation consistent player experience 6.3.2 suspension criterion failure occur outlier normal runtime condition halted development occur 2016-17 43 43 virtual stock market game 6.4 procedure 6.4.1 unit i. 1 aim gamer registration 6.1 unit 1 expected actual 1. username null gamer expected email null incomplete password null gamer registered 2. username abc incorrect email expected email abc.123 format password passwd gamer confirm password registered passwd 3. username abc email incorrect password expected abc gmail.com confirmation password passwd gamer confirm password registered passwd1 4. username abc correct expected email registered abc gmail.com gamer profile password passwd confirm password passwd created 2016-17 44 44 virtual stock market game ii 2 aim gamer 6.2 unit 2 expected actual 1. username null gamer expected email null incomplete password null cant 2. username abc incorrect expected password passwd1 password entered cant 3. username abc expected password passwd username password logged 4. email expected abc gmail.com username password passwd password logged 5. username abc expected email username abc gmail.com email password passwd logged 2016-17 45 45 virtual stock market game iii 3 aim download csv file ftp link store database 6.3 unit 3 expected actual 1. ftp credential cant access ftp expected incorrect link cant download file 2. ftp credential file expected correct improper downloaded connectivity stored database database 3. ftp credential file expected correct improper downloaded definition master error storing respective master 4. ftp credential file expected correct proper downloaded connectivity stored database database 2016-17 46 46 virtual stock market game iv 4 aim cron job fetch current price 6.4 unit 4 expected actual 1. ftp credential cant access ftp expected incorrect link cant cron code download file database 2. ftp credential file expected correct downloaded cron code non- specific interval database 3. ftp credential file expected correct cron downloaded code specific interval database not- unable store accessible 4. ftp credential file expected correct cron downloaded code specific interval database stored accessible database 2016-17 47 47 virtual stock market game 6.4.2 integration 6.5 integration sr. expected actual 1. gamer registration create gamer success profile link portfolio virtual currency account profile 2. buy sell consistency buy success account sell stock virtual currency consistent transaction portfolio updated 3. updating portfolio success log file simultaneously transaction portfolio general log file updated 4. level up-gradation depending success experience point level upgraded 2016-17 48 48 virtual stock market game 5. recommendation stock depending success log history user-based recommendation recommend stock bought progressing 6.5 snapshot fig 6.1 registration form fig 6.2 gamer profile 2016-17 49 49 virtual stock market game fig 6.3 form fig 6.4 portfolio- sell stock 2016-17 50 50 virtual stock market game fig 6.5 company portfolio fig 6.6 side menu bar fig 6.7 feedback form fig 6.8 logout 2016-17 51 51 virtual stock market game 7 2016-17 52 52 virtual stock market game 7.1 virtual stock market game suggests stock market simulator employed concept gamification leader board badge achievement rank employ virtualization concept gamification virtualization gamification help fulfil making thought-provoking recommendation engine opts based collaborative filtering discussed satisfies 7.2 focus making friendlier informative aim refining recommendation making relevant precise aim include expert advice guidance article newsletter enlighten socialism factor improved concept creating chat group conducting podcasts constraint affect real stock market considered trading level complex increasing level competition built aim attract people investment stock market progressive 2016-17 53 53 virtual stock market game 1 zenon chaczko robin braun arman jizan virtual stock exchange simulator education training based higher education training ithet 10-12 oct. 2013 2 armando m. toda roberto s. carmo ana lucia silva jacques d. brancher sigma online aid math lesson gamication concept 2014 33rd international conference chilean science society sccc 8-14 nov. 2014 3 dr. ernesto a. pacheco velzquez business simulator teaching logistics- teaching logistics 2015 international conference interactive collaborative blended learning icbl 9-11 dec. 2015 4 thanarat h. chalidabhongse chayaporn kaensart personalized stock recommendation adaptive modeling 2006 international symposium iscit '06 18-20 oct. 2006 5 francesco ricci lior rokach bracha shapira paul b. kantor recommender handbook publisher springer copyright holder springer- science+business medium llc 73-100 6 wikipedia http //en.wikipedia.org/wiki/recommender_system 7 tom pender 2 bible cover version 1.4 2.0 publisher wiley publishing inc. 8 monica tirea viorel negru stock market strongest performing stock influence evolutionary market proceeding iti 2013 35th international conference iti 24-27 2013. 2016-17 54 54 virtual stock market game 9 kah wai cheah noor atinah ahmad stock market identification estimation based reduced fuzzy recursive least-squares approach 2015 conference development scored 13-14 dec. 2015 10 mingze xu yaning lan danjin jiang unsupervised learning part-based representation stock market prediction 2015 8th international symposium computational intelligence 12-13 dec. 2015 11 chang sim vui gan kim chin kim rayner alfred patricia anthony review stock market prediction artificial neural network ann 2013 international conference control computing 29 nov.-1 dec. 2013 13 girija attigeri manohara pai radhika pai aparna nayak stock market prediction approach tencon 2015 2015 region 10 conference 1-4 nov. 2015 14 google playstore http //play.google.com/store 15 saharsh bhatia valuenotes documentation valuenotes strategic intelligence pvt ltd. 10 aug. 2016. 2016-17 55 55 virtual stock market game 2016-17 56 56 virtual stock market game 2016-17 57 57 virtual stock market game 2016-17 58 58 virtual stock market game 2016-17 59 59 virtual stock market game 2016-17 60 60 virtual stock market game ii 2016-17 61 61 virtual stock market game 2016-17 62 62 virtual stock market game 2016-17 63 63 virtual stock market game 2016-17 64 64 virtual stock market game 2016-17 65 65 virtual stock market game 2016-17 66 66 virtual stock market game 2016-17 67 67 virtual stock market game 2016-17 68 68 virtual stock market game 2016-17 69 69", "keywords": ["abc gmailcom", "admin view", "collaborative filtering", "company portfolio", "company stock", "comparative study", "concept gamification", "currency account", "current price", "exchange platform", "experience point", "financial domain", "game controller", "gamer profile", "gamification financial", "gamification financial domain", "international conference", "item profile", "level upgradation", "madhura rathi", "market game", "market prediction", "market simulation", "password passwd", "pawar komal", "quantity stock", "real stock", "recommendation engine", "saharsh bhatia", "sell stock", "short term", "short term trading", "social community", "stock company", "stock exchange", "stock market", "stock market game", "stock market prediction", "stock market simulation", "stock price", "stock sell", "stock stock", "term trading", "trading stock", "virtual currency", "virtual currency account", "virtual stock", "virtual stock market"], "libraries": [], "languages": ["basic", "python"], "frameworks": ["django"], "dbs": ["mongodb"]}, "./reports/35 final report.pdf": {"title": "aggregation of technical stock calls", "filename": "./reports/35 final report.pdf", "data": "aggregation stock call b120058510 b120058532 b120058533 anushree gulati shital dixit sayali durgude rajat tawargeri b120058606 guidance prof. m.r khodaskar sr.no.27 satara road 411043 2016 2017 aggregation stock call ms. anushree gulati b120058510 ms. shital dixit b120058532 ms. sayali durgude b120058533 mr. rajat tawargeri b120058606 bonafide prof. m.r khodaskar earlier diploma _______________________ prof. m. r. khodaskar _______________________ ______________________ examiner _______________ _______________ _______________________ prof. s.b deshmukh coordinator _______________________ dr. p.t acknowledgement great pleasure presenting aggregation stock call prof. m.r khodaskar help guidance grateful valuable support valuable suggestion helpful prof. s.b deshmukh help support guidance reviewer prof. t.a rane prof. n.v. buradkar constant support suggestion thankful mentor valuenotes strategic intelligence mr. saharsh bhatia assistance express gratitude appreciation opportunity completing directly indirectly helped anushree gulati shital dixit sayali durgude rajat tawargeri title abbreviation 1. 1.1 1.2 1.3 1.4 relevance 1.5 development 1.6 2. review 2.1 existing 2.2 proposed 3. specification 3.1 definition 3.2 specification 3.2.1 staff 3.2.2 sofrware function 3.2.3 constraint 3.2.4 cocomo 3.2.5 staff 3.2.6 3.2.7 gantt 3.3 3.3.1 3.3.2 3.3.3 3.3.4 4. 4.1 ii iii iv 2 2 3 3 3 4 7 7 10 10 10 11 11 11 12 13 13 14 14 14 14 14 16 4.1.1 4.1.2 4.2 description 4.3 functonal description 4.4 description 4.5 class 4.6 4.7 behavioral description 4.7.1 event 4.7.2 state 4.7.3 state transition 4.8 deployment 4.9 restriction 5. 5.1 implemented 5.1.1 contributor 5.1.2 6. evaluation 6.1 experimental setup 6.2 strategy 6.3 6.4 evaluation 6.5 6.6 7. 7.1 7.2 a. base paper b. plagiarism c. review sheet ii iii iv 16 17 19 21 22 23 24 24 24 25 26 27 28 30 30 32 35 35 36 39 40 42 44 44 45 nomenclature uat acceptance cocomo constructive cost kloc kilo code rmmm cgi common gateway html hypertext markup language er ui 2016-17 iii ____________________________________________ 4 12 13 16 17 19 22 23 24 24 26 27 27 1.1 3.1 3.2 4.1 4.2 4.3 4.4 4.5 4.6 4.6 4.7 4.7 4.8 title waterfall gantt e-r class contributor contributor state transition state transition deployment 2016-17 ____________________________________________ 3.1 3.2 3.3 4.1 4.1 4.1 4.2 4.3 4.3 title co-efficient semidetached contributor dictionary dictionary admin dictionary description contributor state description state description 12 13 14 20 20 20 23 25 25 2016-17 ii aggregation stock call ____________________________________________ proposed app enable systematic aggregation stock call enable choose app display call company commodity currency call sourced in-house receive contributor reach call tagged company commodity currency author wise help sort contributor analyst input call directly real time contributor uploads call admin admin validates call arrive call stored database extracted indexed date- time author unique identifier scrip/stock/currency/commodity keywords aggregation prediction stock market analytics 2016-17 iv aggregation stock call 1 pict- 2016-17 1 aggregation stock call _____________________________________________ 1.1 bridge gap stockholder trader investor analyst stock watch closely identify trend help trader trade efficiently.financial analyst invest stock market aware stock market behavior reason analyze news appears newspaper magazine textual cumbersome help automatically extract compare review trading decision based knowledge textual find commonplace thata trader investor requires trading includes 1. real-time call notification 2. analyze parameter 3. stipulated 1.2 main find commonplace trader investor requires trading real-time call notification analyze parameter stipulated pict- 2016-17 2 aggregation stock call 1.3 current allows contributor call format tedious sort call them.calls stored intelligent form analytics.users multiple site subscription view call daily.it consumes 4 5 hour company employee analyze call upload format save time bridge gap stockholder trader investor analyst stock watch closely identify trend help trader trade efficiently help automatically extract compare review trading decision based knowledge textual well-defined provided stockholder stock exchange current market trend 1.4 relevance financial analyst invest stock market aware stock market behavior reason analyze news appears newspaper magazine textual cumbersome help automatically extract compare review trading decision based knowledge textual 1.5 development waterfall 1. documented well fixed clear 2. definition product stable 3. well understood 4. ambiguous pict- 2016-17 3 aggregation stock call 1.1 waterfall benefit waterfall allows control departmentalization time developmental stage product process waterfall development step framework 1. gather analyze 2. 3. 4. integrate 5. deployment 6. support 1.6 organized 1 background relevance 1.1 explains background 1.2 explains 1.3 explains 1.4 explains 2 background pict- 2016-17 4 aggregation stock call 2.1 explains background 2.2 explains review 3 specification 3.1 explains definition 3.2 explains specification 3.3 explains description 3.4 explains 4 4.1 explains proposed 4.2 explains description 4.3 explains description 5 5.1 explains implemented 6 evaluation 6.1 explains experimental setup 6.2 explains strategy 6.3 explains 6.4 7 7.1 explains 7.2 explains evaluation 7.3 explains 7.4 explains explains solution 7.5 explains 7.6 explains pict- 2016-17 5 aggregation stock call 2 pict- 2016-17 6 aggregation stock call review _____________________________________________ 2.1 existing current solution suffer 1. real time i.e generally allow call morning individual analyst intra-day call send sm subscriber group 2. organized comparison viewing i.e reader text time knowing call stock/scrip 3. current creation upload cumbersome analyst editor limit scalability 4. call stored intelligent form app analytics 5. multiple site subscription view call daily 6. analyst struggle visibility service 2.2 proposed develop technique reaction stock market news article predict reaction investor foresee behavior stock relevant news released input real-time news article intra- day stock price company bombay stock exchange order investigate news stock trend movement prediction 1. proposed technique reaction stock market news article predict reaction investor foresee behavior stock relevant news released input real-time news article intra-day stock price company bombay stock exchange 1 pict- 2016-17 7 aggregation stock call 2. order investigate news stock trend movement prediction 1 proposed app enable systematic aggregation call enable choose app display call company commodity currency call sourced in-house receive contributor reach call tagged company commodity currency author wise help sort outcome proposed 1. web contributor input call directly 2. android top grossing commodity share enables compare effectively 3. aggregated stock call format pict- 2016-17 8 aggregation stock call 3 pict- 2016-17 9 aggregation stock call specification _____________________________________________ 3.1 definition designing android enable systematic aggregation stock call presenting stock market daily basis help investor trader clear vision stock market trend scenario 2-way obtains writer analyst update stock market status daily basis analyzing trader investor require perform trading investment help automatically extract compare review trading decision based knowledge textual 3.2 specification specification 3.2.1 staff 1. android designer android designer order decide 2. android developer android developer order develop android 3. web designer web designer order decide 4. web developer web developer order develop web 5. database handler database handler order handle database change database 6. documentation handler pict- 2016-17 10 aggregation stock call documentation handler order create document change document 7. tester tester order developed applying appropriate developing strategy 3.2.2 function major function 1. admin function 2. contributor function 3. function 3.2.3 constraint requires waterfall waterfall linear approach development event 1. gather document 2. 3. code unit 4. perform 5. perform acceptance uat 6. issue 7. deliver finished product 3.2.4 cocomo cocomo stand constructive cost cost effort complete depending calculated number person complete semi- detached kilo code 8.5 semi- detached pict- 2016-17 11 aggregation stock call 3.1 co-efficient semidetached co-efficient ab co-efficient bb co-efficient cb co-efficient db semi-detached 3.0 1.12 2.5 0.35 effort applied ab kloc 3.0 8.5 1.12 effort applied 32.966 persons/month develo pment time cb effort applied 2.5 32.966 0.35 development time 8.497 month people effort applied/ development time 32.966/8.497people 3.88 4. people complete 4 3.2.5 staff consists finalized change 3.1 pict- 2016-17 12 aggregation stock call 3.2.6 3.2 3.2.7 gantt 3.2 gantt pict- 2016-17 13 aggregation stock call 3.3 3.3.1 front-end python django back-end mongodb 3.3.2 linux-ubuntu 14.04 browser support cgi html javascript 3.3.3 3.3 operating database python-django description chosen linux ubuntu 14.04 operating best support save record chosen mongodb database implement chosen python-django language interactive support 3.3.4 support web browser pict- 2016-17 14 aggregation stock call 4 pict- 2016-17 15 aggregation stock call _____________________________________________ 4.1 consists 4.1.1 4.1 pict- 2016-17 16 aggregation stock call 4.1.2 4.2 call app consists describing operation 1. menu enables view app navigate describes commodity market currency describing currency comparison provision update portfolio access subscription 2. access restricted access dividing free paid free restricted visibility premium call pict- 2016-17 17 aggregation stock call display paid liberty portfolio creation company alert display access expert chat advice 3. admin admin responsibility conduct operation key decide operation moderation admin power segregate classify admin decides update decision moderate expert chat advice responsibility moderate 4. contributor module- real analyst stock market stock watcher send stock market form call decision based 5. subscription module- enables company expert author subscribe access post call relevant 6. advanced search module- searching call enabled author expert 7. notification module- notification call time time depending paid notified relevant stock free notified daily weekly basis pict- 2016-17 18 aggregation stock call 4.2 description 4.3 er pict- 2016-17 19 4.2.2 dictionary aggregation stock call 4.1 contributor dictionary p/f field caption field size description contributor contributor contributor password description category sebi number email phone number address cname c_name varchar varchar c_password varchar2 desp category varchar varchar sebi_reg_no number cmail_id cph_no caddress varchar2 number varchar2 call tech_id varchar2 4.1 dictionary 10 10 30 20 10 10 30 15 30 15 contributor password contributor category contributor unique sebi_reg_no email phone_no address contributor call p/f field uname password address email phone number trend graph graph caption uname u_name u_password uaddress uemail_id uph_no f_id g_name g_id varchar varchar varchar2 varchar2 varchar2 number varchar2 varchar varchar2 field size description 10 10 30 password address email phone_no trend graph graph 30 30 15 15 30 15 4.1 admin dictionary p/f field aname admin caption aname a_name varchar varchar admin password a_password varchar2 field size description admin 10 10 admin password admin 30 pict- 2016-17 20 aggregation stock call 4.3 description 1. menu module- enables view app navigate describes commodity market currency describing currency comparison provision update portfolio access subscription 2. module- access restricted access dividing free paid free restricted visibility premium call display paid liberty portfolio creation company alert display access expert chat advice 3. admin module- admin responsibility conduct operation key decide operation moderation admin power segregate classify admin decides update decision moderate expert chat advice responsibility moderate 4. contributor module-they real analyst stock market stock watcher send stock market form call decision based 5. subscription module- enables company expert author subscribe access post call relevant 6. advanced search module- searching call enabled author expert pict- 2016-17 21 aggregation stock call 7. notification module- notification call time time depending paid notified relevant stock free notified daily weekly basis 4.4 description 1. contributors- contributor webapp upload view stock call 2. user- latest selection criterion premium analyst call app premium select scrip and/or analyst view screen premium receive alert choose option 3. admin- admin control i.e contributor well 4.4 pict- 2016-17 22 aggregation stock call 4.2 description description contributor upload profile web-apps contributor profile verified admin contributor add call web app call verified uploaded android app admin create portfolio android app app viewed actor include call currency rate trend option receiving notification view market graph view stock rate feedback app admin moderate chat contributor admin activate notification use-cases upload profile validate cont_profile upload stock call verify call create portfolio view app view graph view stock feedback moderation chat activate notification 4.5 class 4.5 class pict- 2016-17 23 aggregation stock call 4.6 contributor 4.6 4.6 contributor 4.7 behavioral description 4.7.1 event 2 event 1. signal event signal event basically providing signup contributor admin verification call contributor adding state viewing state providing admin pict- 2016-17 24 aggregation stock call 2. time event 4.7.2 state state signing verification logged uploading call time event notification condition time event satisfied notification android app 4.3 contributor state description state description contributor sign contributor verified checked valid contributor log web app call uploaded signal event pas call state viewing call uploaded call viewed contributor chat chat deleting call call uploaded contributor deleted admin log contributor log 4.3 state description state log viewing portfolio viewing call viewing graph viewing trend pict- 2016-17 state description log android app portfolio viewed call uploaded contributor viewed current stock trend graph viewed trend possibility viewed 25 aggregation stock call feedback activating notification receiving notification chat logout 4.7.3 state transition contributor feedback app notification event activated notification received time event applicable chat contributor log 4.7 contributor state transition pict- 2016-17 26 aggregation stock call 4.7 state transition 4.8 deployment 4.8 deployment pict- 2016-17 27 aggregation stock call 4.9 restriction contributor require high-speed internet connection view upload call android handheld device install app pict- 2016-17 28 aggregation stock call 5 pict- 2016-17 29 aggregation stock call _____________________________________________ 5.1 implemented consists web android web serf input contributor enter call android output processed i.e graph web implemented python django bootstrap ui android web developed django imported android studio viewed web view stored database postgresql sentiment understand sentiment call predict bearish bullish neutral main implemented 1. contributor 2. 5.1.1 contributor contributor real analyst stock market stock watcher send stock market form call decision based log facility existing contributor sign facility three call option provided selected generates 3 form call pict- 2016-17 30 aggregation stock call code snapshot code snapshot pict- 2016-17 31 aggregation stock call code snapshot 5.1.2 access facility sign log logging view call uploaded contributor graph judge specific call graphically view live nse bse pict- 2016-17 32 aggregation stock call code snapshot code snapshot code snapshot pict- 2016-17 33 aggregation stock call 6 pict- 2016-17 34 aggregation stock call evaluation _____________________________________________ 6.1 experimental setup web hosted local server company contributor contributor web enter call stock entered android web stored database postgresql android released google playstore company download app making decision stock 6.2 strategy unit strategy unit process development small individually tested unit individually tested integrating help unit amount error removed good built unit designed tested separately find bug bug error corrected main advantage unit individually unit thing sure tested separately multiple tested simultaneously unit input individual check output output correct tested output bug error change correct bug error unit applied process continues correct error free output unit strategy amount bug error minimized built efficient unit strategy selenium pict- 2016-17 35 aggregation stock call 6.3 button snapshot check alert box pass assertalertnotpresent fails aasertalertpresent snapshot snapshot pict- 2016-17 36 aggregation stock call checking presence cooky created cooky assertcookienotpresent return snapshot check element webpage editable username field editable editable snapshot snapshot pict- 2016-17 37 aggregation stock call check whther element username phone snapshot snapshot check snapshot pict- 2016-17 38 aggregation stock call check element visible snapshot 6.4 evaluation wa completely implement met completely graphical view stock market easily understand stock condition view expert opinion stock help best decision stock correctly met correctly pict- 2016-17 39 aggregation stock call 6.5 snapshot snapshot snapshot pict- 2016-17 40 aggregation stock call snapshot snapshot pict- 2016-17 41 aggregation stock call snapshot 6.6 web android app requires speed internet connection fetching live app process pict- 2016-17 42 aggregation stock call 7 pict- 2016-17 43 aggregation stock call 7.1 analyse call relating stock market based real time stock watch trading provide enables decision trading opening closing bid market enables aware current market situation provision access advice top expert trading community businessmen top grossing commodity share enables compare effectively analytical technique accurate reliable prediction consumer better solution invest valuable money 7.2 cover wide range consists 1. intra-day stock 2. notification stock market 3. snapshot key global 4. expert advice current situation market 5. status opening closing bell 6. top gainer loser 7. currency watchlist pict- 2016-17 44 aggregation stock call 1 ruchi desai prof.snehal gandhi stock market prediction vol.2 2014. varunesh nichante prof. sulabha patil review stock market 2 analytic vol.4 2016 3 chunwei tsai1 chinfeng lai2 hanchieh chao1 athanasios v. vasilakos analytics 2015 4 kavitha s1 raja vadhana analytics financial market 2015 5 6 k. senthamarai kannan p. sailapathi sekar m. mohamed sathik p. arumugam financial stock market forecast mining technique 2015. krishna kumar singh priti dimri krishna nand rastogi implication indian stock market vol.99 2014 7 marc-andr mittermayer forecasting intraday stock price trend text mining technique 2014 8 naga elegendy analytics review 2014 9 marc-andr mittermayer gerhard f. knolmayer text mining marketresponse news 2006 10 karthik kambatla giorgos kollias trend analytics 2014. pict- 2016-17 45 aggregation stock call pict- 2016-17 46 aggregation stock call pict- 2016-17 47 aggregation stock call pict- 2016-17 48 aggregation stock call pict- 2016-17 49 aggregation stock call pict- 2016-17 50 aggregation stock call pict- 2016-17 51 aggregation stock call pict- 2016-17 52 aggregation stock call pict- 2016-17 53 aggregation stock call pict- 2016-17 54 aggregation stock call pict- 2016-17 55", "keywords": ["admin password", "aggregation stock", "android app", "android web", "app admin", "bug error", "contributor contributor", "contributor state", "description contributor", "description state", "field size", "field size description", "news article", "pict aggregation", "pict aggregation stock", "rajat tawargeri", "size description", "snapshot check", "state description", "state description state", "state transition", "stock exchange", "stock market", "stored database", "trader investor", "varchar varchar", "view stock", "web android"], "libraries": [], "languages": ["html", "small", "python", "javascript"], "frameworks": ["django"], "dbs": ["postgresql", "mongodb"]}, "./reports/36_final_report.pdf": {"title": "feature learning and autotagging of music  using deep convolutional neural network", "filename": "./reports/36_final_report.pdf", "data": "learning autotagging music deep convolutional neural network fulfilment rasika pawar sushmita nair amruta lolage b120058602 b120058587 b120058575 rashmeet nayyar b120058591 guidance mr. s. b. deshmukh sr. 27 pune-satara road 43 2016-2017 learning autotagging music deep convolutional neural network rasika pawar sushmita nair amruta lolage rashmeet nayyar b120058602 b120058587 b120058575 b120058591 bonafide prof. s. b. deshmukh fulfilment earlier diploma prof. s. b. deshmukh prof. s. b. deshmukh co-ordinator examiner _______________ dr. p. t. sponsorship completion letter 31-05-2017 whomsoever concern rashmeet nayyar sushmita nair rasika pawar amruta lolage group maverick group 36 completed group learning auto-tagging music deep convolutional neural network innobytes pvt ltd. group wa guided ceo mr. sachin deshpande provided guidance support course year sincerely innobytes pvt mr. sachin deshpande founder ceo acknowledgement express deep sincere gratitude prof. s. b. deshmukh unflagging support continuous encouragement guidance persistent help express deepest gratitude in-charge hod-it dr. a. m. bagade opportunity express heartfelt gratitude dr. p. t. providing infrastructure complete warm faculty helped view encouraging mr. sachin deshpande innobytes supported guided continuously directly indirectly helped completion rasika pawar b120058602 sushmita nair b120058587 amruta lolage b120058575 rashmeet nayyar b120058591 learning autotagging music deep convolutional neural network topic abbreviation 1.1.1 deep learning 1.1.2 convolutional neural network 1.1.3 convolutional recurrent neural network 1.1.4 1.1.5 learning 1.1.6 auto-tagging review existing proposed specification definition concept 3.5.1 datasets 3.5.2 3.5.3 non-functional 3.5.4 3.5.5 1.1 1.2 2.1 2.2 3.1 3.2 3.3 3.4 3.5 3.6 specification 3.7 3.8 3.9 4.1 4.2 3.6.1 member role description 3.9.1 profile phase machine learning -2016-2017 1 2 3 4 iii iv 1 2 3 3 4 7 7 8 8 9 11 12 13 15 16 16 16 17 17 17 17 17 17 17 18 18 19 20 21 21 23 24 27 learning autotagging music deep convolutional neural 28 29 30 32 33 33 35 36 39 40 44 48 50 51 51 51 52 5 6 7 4.3 4.4 4.5 5.1 6.1 6.2 6.3 7.1 7.2 7.3 network deployment stage 5.1.1 pre-processing dataset 5.1.2 splitting dataset train valid 5.1.3 training neural network evaluation evaluation cnn evaluation crnn prediction unknown song base paper plagiarism review sheet ii iii iv -2016-2017 learning auto-tagging music deep convolutional neural network title deep neural network typical cnn local receptive field shared weight pooling/sampling map top mid low-level classification 1.1 1.2 1.3 1.4 3.1 3.2 3.3 4.1 level 4.2 fully convolutional neural network fcn-5 4.3 convolutional recurrent neural network 4.4 auc-roc curve courtesy wikipedia 4.5 class 4.6 4.7 sequential 4.8 deployment 5.1 histogram 188 tag 5.2 histogram 135 tag 3 5 6 9 19 20 21 24 24 25 27 28 29 30 31 33 34 pict-information -2016-2017 learning auto-tagging music deep convolutional neural network 5.3 histogram 40 tag 5.4 configuration fcnn-5 5.5 configuration crnn-4 6.1 roc curve 12 epoch 6.2 auc epoch 12 epoch 6.3 train valid loss 12 epoch 6.4 roc curve 25 epoch 6.5 auc epoch 25 epoch 6.6 train valid loss 25 epoch 6.7 roc curve 15 epoch 6.8 auc epoch 15 epoch 6.9 train valid loss 15 epoch 6.10 roc curve 30 epoch 6.11 auc epoch 30 epoch 6.12 train valid loss 30 epoch 35 37 38 40 41 41 42 43 43 43 45 45 46 47 47 pict-information -2016-2017 ii learning auto-tagging music deep convolutional neural network title use-case description 3.1 3.2 20 22 pict-information -2016-2017 iii learning auto-tagging music deep convolutional neural network abbreviation abbreviation description cnn convolutional neural network crnn convolutional recurrent neural network ismir international society music retrieval dnn deep neural network pict-information -2016-2017 iv learning autotagging music deep convolutional neural network deep learning learning drawn attention field music mir inspired good speech recognition vision tackle content-based automatic tagging audio multi-label classification deep neural network cnn crnn learn hierarchical musical audio signal experiment performed magnatagatune mtt dataset focus achieve state-of-the-art performance mel-spectrogram input tag genre instrument emotion automatically predicted newer track song accurately classified tag convey high-level listener 's perspective music library efficient music browsing creating personalized recommendation playlist generation keywords music multi-label classification cnn crnn automatic tagging pict-information -2016-2017 1 learning autotagging music deep convolutional neural network 1 pict-information -2016-2017 2 learning autotagging music deep convolutional neural network 1.1 1.1.1 deep learning fig 1.1 deep neural network deep leaning branch machine learning based attempt move field closer artificial intelligence deep structured leaning deep machine learning hierarchical learning machine learning technique learn hierarchical artificial neural network deep learning based learning input representation highlight replaces handcrafted efficient learning hierarchical extraction conventionally signal processing extract machine learning classification purpose scientist spend lot time creativity effort working good spending time running actual machine learning deep learning eliminates signal processing introducing learning functionality allows relevant learnt automatically attempt better input representation create learn inspired advance field neuroscience loosely based pattern nervous pict-information -2016-2017 3 learning autotagging music deep convolutional neural network interpreted automated learning representation reason hype deep learning strong deep learning industry began early 2000s deep learning recurrent neural network deep neural network deep belief network convolutional deep neural network applied great utility numerous field observed produce state-of-the-art numerous varying number layer size layer produce generate deep learning obviates supervised learning neural network impressive domain speech recognition 2009 vision 2012 natural language processing 2014. paired computing power complex unlocking benefit deep learning graphic processing unit gpus 2009 helped comeback neural net sufficed computational power astonishing attracted mir researcher deep music-related well 1.1.2 convolutional neural network cnn convolutional neural network cnn convnet field machine learning feed-forward artificial neural network animal visual cortex inspires connectivity pattern neuron traditional neural network neuron convolutional network fully connected network fact biologically-inspired variant multilayer perceptrons mlps designed minimal pre-processing field image speech video recognition vision recommendation natural language processing nlp cnns preferred choice processing 2-d visual cnn consists 1 1 convolutional layer sub-sampling pooling layer fully connected layer concept shared weight bias max-pooling convolutional layer help cnns advantage input 2d standard pict-information -2016-2017 4 learning autotagging music deep convolutional neural network propagation train easier train neural network feed-forward regular deep reduction number parameter train faster traditional neural network making preferred fig 1.2 typical cnn pict-information -2016-2017 5 learning autotagging music deep convolutional neural network fig 1.3 local receptive field shared weight pooling/sampling map 2828 input image 55 local receptive field 2424 neuron hidden layer neuron hidden layer bias 55 weight connected local receptive field weight bias 2424 hidden neuron number map developed hidden neuron detect exactly location input image apply detector image translation invariance image shared weight bias define kernel filter pict-information -2016-2017 6 learning autotagging music deep convolutional 1.1.3 convolutional recurrent neural network neural network convolutional neural network performs convolution separate region contextual region image convolutional recurrent neural network spatial represent spatial formation image crnn recurrent feedback connection enhance discriminative power increase classification accuracy year crnn achieved great success natural language processing image processing modelling sequential combining cnn rnn achieve network memory allow connection previous current state crnn retain input discover correlation input limited number neuron network fast convolutional recurrent neural network hybrid neural network recurrent neural network rnn layer integrated fully convolutional neural network fcn layer modified cnn recurrent layer stacked series cnn layer fcn layer extract local rnn layer aggregate extracted recurrent layer account global working temporal summarizer extracted cnn expects fixed size rnn expects variable length audio signal 1.1.4 art extracting relevant pattern allow machine learning distinguish class easily called achieve accurate prediction datasets approach complex dataset relevance dataset automatically engineer pict-information -2016-2017 7 learning autotagging music deep convolutional neural network capable easily finding learning relevant dataset eliminate 1.1.5 learning machine learning learning called representation learning technique learn learning transforming raw input representation effectively exploited machine learning obviates manual learning thought automatically help machine learn i.e learn learn learning eliminates selection manually machine learning trained learn attempt find pattern common purpose distinguishing class extraction pattern help classification regression deep learning convolutional layer exceptionally proficient finding relevant input image hierarchy nonlinear learnt 1.1.6 auto-tagging music tag descriptive keywords convey high-level music clip emotion sad anger happy genre jazz classical instrumentation guitar string vocal instrumental tag provide high-level listener perspective music discovery recommendation automatic tagging classification aim predict music tag audio signal clip tagged multiple tag requires extracting acoustic good estimator tag interested single multi-label classification regression stage auto-tagging audio classification genre classification formalized single-label classification number label output space multi-label classification exponentially increase compared single-label classification multi-label pict-information -2016-2017 8 learning autotagging music deep convolutional neural network classification require larger capacity efficient optimization method solve fig 1.4 top mid low-level classification 1.2 conventionally signal processing extract machine learning classification purpose deep learning eliminates signal processing introducing learning functionality allows relevant learnt automatically motivates implement deeper neural network increase performance pict-information -2016-2017 9 learning autotagging music deep convolutional neural network commonly datasets mnist image classification constantly improved deep learning convolutional neural network breakthrough speech recognition vision field promising solution field music retrieval mir well deep convolution neural network trained learn hierarchical acoustic multilayer help recognizing genre emotion instrument trained auto-tagging i.e predict multiple tag music clip song-level unknown reason justify motivate cnns automatic tagging music tag considered topmost high-level representing song-level intermediate level chord beat tonality temporal envelope change time frequency hierarchy fit well cnns rnns designed learn hierarchical multilayer second property rnns translation distortion local invariance learn musical target musical event relevant tag appear time frequency range pict-information -2016-2017 10 learning autotagging music deep convolutional neural network 2 pict-information -2016-2017 11 learning autotagging music deep convolutional neural network review 2.1 existing deep bag-of-features music auto-tagging kyogu lee juhan nam jorge herrera attempted clarify learned audio learning stage bag-of-features 2015. 1st stage learned local acoustic pattern audio signal high-dimensional space unsupervised manner summarized audio track bag-of-features 2nd stage mapped bag-of-features semantic tag supervised manner deep neural network proposed extended typical cnn popularly vision learning deep depend mid-level representation music audio mfcc spectrogram raw audio signal end-to-end learning music audio 2014 benjamin schrauwen sander dieleman investigated learning directly applied raw audio signal approach train convolutional neural network compared performance auto- tagging network learn raw audio performance level spectrogram- based approach wa reached temporal pooling multi-scale learning automatic annotation ranking music audio 2011 international society music retrieval analysed challenge performing automatic annotation ranking music audio proposed improvement mtsl proposed presented simple hierarchical concluded improved deeper time scale smaller pooling window allow learn better representation music audio transfer learning supervised pre-training audio-based music classification ismir 2014 proposed method song dataset pict-information -2016-2017 12 learning autotagging music deep convolutional neural network msd perform supervised learning trained prediction tag listening preference learned manner well audio datasets consistently perform better purely unsupervised learning approach concluded better linear regression learn desirable considering complex supervised pre-training vision domain sander dieleman benjamin schrauwen published paper multi-scale approach music audio learning proceeding 14th international society music retrieval conference ismir 2013. three approach building multi-scale learning music audio proposed paper auto-tagging experiment magnatagatune dataset wa performed multilayer perceptron included raw multi-resolution spectrogram gaussian pyramid 1 2 4 frame laplacian pyramid 1 2 4 frame suggested improve learning pipeline learning multiple layer timescale investigating encoding scheme evaluation proposed extended range including content-based music recommendation artist recognition multiple datasets wa suggested 2.2 proposed content-based automatic tagging based deep fully convolutional network fcn implemented fcns deep convolutional network consists convolutional layer sub-sampling fully-connected layer fully connected layer account majority parameter prone over-fitting maximizes advantage convolutional network reduction number parameter sharing weight learned invariant location time-frequency plane spectrogram i.e allows network temporal harmonic audio signal convolutional layer employed combined sub-sampling layer reducing size map pict-information -2016-2017 13 learning autotagging music deep convolutional neural network 11 making procedure fully convolutional 2d convolutional kernel adopted local harmonic account second experiment mtt dataset crnn hybrid neural network recurrent neural network rnn layer integrated fully convolutional neural network fcn layer modified cnn recurrent layer stacked series cnn layer fcn layer extract local rnn layer aggregate extracted recurrent layer account global working temporal summarizer extracted cnn expects fixed size rnn expects variable length audio signal factor depends loss function number layer kernel size number fully-connected layer regularised extended learning train crnn compared cnn crnn pict-information -2016-2017 14 learning autotagging music deep convolutional neural network 3 pict-information -2016-2017 15 learning autotagging music deep convolutional neural network specification 3.1 definition train deep convnet acoustic learning i.e emotion genre instrument recognition automatic prediction tag achieve better multi-label classification accuracy field music retrieval mir 3.2 concept entire scenario consists phase 3.2.1 training includes pre-processing audio clip i.e conversion spectrogram constructing neural network learning computing middle-level high-level layer minimizing error backpropagation correct output 3.2.2 trained trained predict tag audio clip song-level unknown capable recognizing genre emotion identifying instrument 3.3 solve multi-label classification music improving final auc score help accurately predicting tag song restrict fixed 40 tag pict-information -2016-2017 16 learning autotagging music deep convolutional neural network 3.4 learning train convolutional convolutional recurrent neural network learn hierarchical multilayer recognizing genre emotion instrument auto-tagging predict classify multiple tag music clip 3.5 3.5.1 dataset magnatagatune mtt 26 000 29 second audio track mp3 annotated 188 category 3.5.2 conversion audio file spectrogram i.e preprocessing audio training 3.5.3 non-functional faster training accuracy prediction 3.5.4 gpu 4+ gb preferably nvidia 4 gb ram 3.5.5 python 3.5.2 cuda toolkit 8.0.44 nvidia driver 367.57 cudnn 5.1.5 tensorflow 0.12.1 kera 1.2.1 librosa 0.4.3 audioread 2.1.4 h5py 2.6.0 pict-information -2016-2017 17 learning autotagging music deep convolutional 3.6 specification neural network 3.6.1 3.6.1.1 staff database handler database handler order handle database change database documentation handler documentation handler order create document change document web developer web developer order website decide developer machine learning developer built neural network tune parameter train perform prediction tester tester order developed applying appropriate developing strategy 3.6.1.2 consists extenal specifies provide finalized change pict-information -2016-2017 18 learning autotagging music deep convolutional neural network fig 3.1 3.7 member role specifies outcome monitor keep track well involves developing neural network tuning parameter documentation pict-information -2016-2017 19 learning autotagging music deep convolutional neural network 3.8 start discussion topic finalization 15th 1st 1st 15th 15th 21st coding 21st 5th 5th documentation 5th 5th 5th 3.1 day 16 11 35 deciding domain interest sponsor paper deciding studying actual 157 debugging 30 alternative 15 creating 7 2016 2017 jun aug sept oct nov dec jan feb mar apr 28 15/06 13/07 14/07 01/08 03/08- 14/08 17/08 21/09 22/09 fig 3.2 27/02 01/03- 30/03 01/04- 15/04 16/04 23/05 pict-information -2016-2017 20 learning autotagging music deep convolutional neural network 3.9 description 3.9.1 profile include neural network refers behaviour perform profile upload file auto-tag view final song tag neural network trained predicts song uploaded display tag fig 3.3 use-case pict-information -2016-2017 21 learning autotagging music deep convolutional neural network use-case use-case description browse file upload song auto-tag song input neural network tagging auto-tag file trained doe audio processing song uploaded predicts tag view song tag view song predicted tag 3.2 description pict-information -2016-2017 22 learning autotagging music deep convolutional neural network 4 pict-information -2016-2017 23 learning autotagging music deep convolutional neural network 4.1 fig 4.1 level fig 4.2 fully convolutional neural network fcn-5 pict-information -2016-2017 24 learning autotagging music deep convolutional neural network proposed 5-layer fcn fcn-5 consists 5 convolutional layer 5 max-pooling layer network log-amplitude mel- spectrogram input predicts 40 dimensional tag vector number map fcn-5 adjusted making hierarchy learned deeper proposed described fully fcn convolutional network fcn consist convolutional subsampling layer conventional cnns equipped fully-connected layer convolutional layer expecting perform extractor classier block proposed 5-layer fcn-5 number indicate number map i.e channel layer kth hidden neuron output neural activation function shared bias 55 array shared weight denote input activation position fig 4.3 convolutional recurrent neural network pict-information -2016-2017 25 learning autotagging music deep convolutional neural network convolutional recurrent neural network convolution pooling performed local image region separately contextual region convolutional recurrent neural network contextual sequential recurrent feedback connection represent spatial image crnn learns spatial image region enhance discriminative power crnn achieved great success natural language processing image learning network memory allow connection previous state current retain input hidden layer limited neuron network fast auc area roc-curve evaluate auc-score measure find performance accuracy neural layer area 1 represents perfect area 0.5 represents worthless three roc curve represent excellent good worthless plotted graph .90-1 excellent .80-.90 good .70-.80 fair .60-.70 poor .50-.60 fail pict-information -2016-2017 26 learning autotagging music deep convolutional neural network fig 4.4 auc-roc curve 4.2 phase machine learning 1. analyse understand develop 2. prepare discover expose dataset carry pre- processing understand format input neural network 3. evaluate develop robust harness baseline accuracy improve spot check learn best-fit definition 4. improve leverage develop accurate changing tuning parameter 5. describe solution understood third party pict-information -2016-2017 27 learning autotagging music deep convolutional neural network 4.3 fig 4.5 class pict-information -2016-2017 28 learning autotagging music deep convolutional neural network 4.4 fig 4.6 pict-information -2016-2017 29 learning autotagging music deep convolutional neural network fig 4.7 pict-information -2016-2017 30 learning autotagging music deep convolutional neural network 4.5 deployment fig 4.8 deployment pict-information -2016-2017 31 learning autotagging music deep convolutional neural network 5 pict-information -2016-2017 32 learning autotagging music deep convolutional neural network 5.1 stage 5.1.1 pre-processing dataset tag selection magnatagatune dataset collection sound clip human annotation collected edith law tagatune game track encoded 16 khz 32kbps mono mp3 format detailed track musical including rhythm pitch timbre harmonic included echo nest 25863 music clip 29 long excerpt 5405 mp3 song provided magnatune.com audio clip annotated combination 188 tag dataset weakly labeled tag associated song applicable reality annotation file consists song dataset tag song associated pict-information -2016-2017 33 learning autotagging music deep convolutional neural network fig 5.1 histogram count tag 188 tag 188 tag contained synonym tag merged chord choral voice vocal 135 tag merging fig 5.2 histogram 135 tag pict-information -2016-2017 34 learning autotagging music deep convolutional neural network fig 5.3 histogram 40 tag 135 tag lot tag le frequency order increase classification accuracy non-frequent tag removed top 40 frequent tag 40 tag form label classification 5.1.2 pre-processing splitting dataset train valid dataset 16 dataset unbalanced using12 1 3 training validation created single split percentage 75 15 15 shuffling split dataset 18105 3879 3879 clip training validation obtaining 3 hdf5 format file mel-spectrogram input representation time-frequency representation colour intensity indicating amplitude detailed accurate image audio trim mp3 audio file 29.12s clip shortest signal dataset sample 12 khz sampling rate librosa fft window size 512 sample 42 hop size 256 sample 21 50 overlap 1366 frame pict-information -2016-2017 35 learning autotagging music deep convolutional neural network total fourier transforms short overlapping window computed transform constitutes frame successive frame concatenated matrix form spectrogram dimensionality reduction frequency axis changed linear axis mel scale spectrogram computed mapping 512 linear frequency bin fft 96 mel-frequency bin mapping reduces input dimensionality multiple frame input local learning preserving distinct pattern spectrogram example harmonic distribution musical sound log-scaling amplitude axis amplitude axis logarithmically scaled log-amplitude mel-spectrogram size 961366 mel-bins time frame 5.1.3 training neural network cnn convolutional neural network consists layer input network mel-spectrogram output 40 tag layer convolution max-pooling layer sigmoid function output layer network total learnable 867 584 parameter network displayed pict-information -2016-2017 36 learning autotagging music deep convolutional neural network fig 5.4 configuration fcn crnn convolutional recurrent neural network consists convolutional layer 2 recurrent layer network pict-information -2016-2017 37 learning autotagging music deep convolutional neural network fig 5.5 configuration crnn pict-information -2016-2017 38 learning autotagging music deep convolutional neural network 6 pict-information -2016-2017 39 learning autotagging music deep convolutional neural network evaluation 6.1 evaluation cnn 6.1.1 12 epoch network wa trained 12 epoch resultant auc score wa 0.855361. auc score epoch variant wa decent difference train valid loss fig 6.1 roc curve 12 epoch pict-information -2016-2017 40 learning autotagging music deep convolutional neural network fig 6.2 auc vs. epoch 12 epoch fig 6.3 train valid loss 12 epoch pict-information -2016-2017 41 learning autotagging music deep convolutional neural network 6.1.2 25 epoch network wa trained 25 epoch resultant auc score wa 0.830162. auc score epoch variant wa noticeable difference train valid loss fig 6.4 roc curve 25 epoch pict-information -2016-2017 42 learning autotagging music deep convolutional neural network fig 6.5 auc vs. epoch 25 epoch fig 6.6 train valid loss 25 epoch pict-information -2016-2017 43 learning autotagging music deep convolutional neural network 6.2 evaluation crnn 6.2.1 15 epoch network wa trained 15 epoch resultant auc score wa 0.885648. auc score epoch increasing wa slight difference train valid loss fig 6.7 roc curve 15 epoch pict-information -2016-2017 44 learning autotagging music deep convolutional neural network fig 6.8 auc epoch 15 epoch fig 6.9 train valid loss 15 epoch pict-information -2016-2017 45 learning autotagging music deep convolutional neural network 6.2.2 30 epoch network wa trained 30 epoch resultant auc score wa 0.883352. auc score epoch increasing initially remained constant difference train valid loss started increasing point fig 6.10 roc curve 30 epoch pict-information -2016-2017 46 learning autotagging music deep convolutional neural network fig 6.11 auc vs. epoch 30 epoch fig 6.12 train valid loss 30 epoch pict-information -2016-2017 47 learning autotagging music deep convolutional neural network wa obvious crnn outperformed cnn wa point training 15 epoch auc score increase 15 epoch optimal crnn 15 epoch best 7.3 prediction unknown song prediction example 1 pict-information -2016-2017 48 learning autotagging music deep convolutional neural network prediction example 2 prediction example 3 pict-information -2016-2017 49 learning autotagging music deep convolutional neural network 7 pict-information -2016-2017 50 learning autotagging music deep convolutional 7.1 neural network lot mir learn contribute music recording classification ground truth annotation procedure collection dealing challenge deep learning convolutional neural network helped obtaining breakthrough field vision speech recognition convolutional recurrent neural network showing great mir great advantage modifying hyper parameter multi-label classification music help increase accuracy tag prediction lead better easy searching playlist music library 7.2 selected fixed tag label classification classify audio clip category doe involve recommendation audio basis tag extension focus recognition genre instrument mood audio track 7.3 modifying layer parameter cnn crnn help music bigger datasets transfer learning datasets music library recommendation extension pict-information -2016-2017 51 learning autotagging music deep convolutional neural network 1. juhan nam jorge herrera kyogu lee deep bag-of-features music auto-tagging 2015 2. sander dieleman benjamin schrauwen end-to-end learning music audio acoustic speech signal processing icassp 2014 international conference 2014 3. philippe hamel simon lemieux yoshua bengio douglas eck temporal pooling multiscale learning automatic annotation ranking music audio proceeding 12th international society music retrieval conference ismir2011 miami florida usa october24-28 2011 2011 4. aaron van den oord sander dieleman benjamin schrauwen transfer learning supervised pretraining audio-based music proceeding 15th international society music retrieval conference ismir 2014 taipei taiwan 27-31 2014 2014 5. sander dieleman benjamin schrauwen multiscale approach music audio learning proceeding 14th international society music retrieval conference ismir 2013 curitiba brazil 4-8 2013 2013 6. mugdha magare1 prof. ranjana dahake2 audio based music classification based genre emotion gaussian process international journal advanced 2016 7. jordi pons thomas lidy xavier serra experimenting musically motivated convolutional neural network 2016 8. arjun raj rajanna kamelia aryafar ali shokoufandeh raymond ptucha deep neural network study music genre 2015 14th international conference machine learning 9. goncalo marques1 marcos aurelio domingues2 thibault langlois3 fabien gouyon three current issue music auto-tagging 12th international pict-information -2016-2017 52 learning autotagging music deep convolutional neural network society music retrieval conference ismir 2011 10. keunwoo choi gyorgy fazekas mark sandler.convolutional recurrent neural network music classification 2016. pict-information -2016-2017 53 learning autotagging music deep convolutional neural network -2016-2017 805 automatictaggingusingdeepconvolutionalneuralnetworkskeunwoochoi gyorgyfazekas marksandlerqueenmaryuniversityoflondon keunwoo.choi g.fazekas mark.sandler qmul.ac.ukabstractwepresentacontent-basedautomaticmusictaggingalgo-rithmusingfullyconvolutionalneuralnetworks fcns .weevaluatedifferentarchitecturesconsistingof2dcon-volutionallayersandsubsamplinglayersonly.intheex-periments wemeasuretheauc-rocscoresofthearchi-tectureswithdifferentcomplexitiesandinputtypesusingthemagnatagatunedataset wherea4-layerarchitectureshowsstate-of-the-artperformancewithmel-spectrograminput.furthermore weevaluatedtheperformancesofthearchitectureswithvaryingthenumberoflayersonalargerdataset millionsongdataset andfoundthatdeepermod-elsoutperformedthe4-layerarchitecture.theexperimentsshowthatmel-spectrogramisaneffectivetime-frequencyrepresentationforautomatictaggingandthatmorecom-plexmodelsbenetfrommoretrainingdata.1.introductionmusictagsareasetofdescriptivekeywordsthatconveyhigh-levelinformationaboutamusicclip suchasemo-tion sad anger happy genre jazz classical andinstru-mentation guitar string vocal instrumental .sincetagsprovidehigh-levelinformationfromthelistenersperspec-tives theycanbeusedformusicdiscoveryandrecommen-dation.automatictaggingisaclassicationtaskthataimstopredictmusictagsusingtheaudiosignal.thisrequiresextractingacousticfeaturesthataregoodestimatorsofthetypeoftagsweareinterestedin followedbyasingleormulti-labelclassicationorinsomecases regressionstage.fromtheperspectiveoffeatureextraction therehavebeentwomaintypesofsystemsproposedintheliterature.con-ventionally featureextractionreliesonasignalprocessingfront-endinordertocomputerelevantfeaturesfromtimeorfrequencydomainaudiorepresentation.thefeaturesarethenusedasinputtothemachinelearningstage.however itisdifculttoknowwhatfeaturesarerelevanttothetaskathand.althoughfeatureselectionhavebeenwidelyusedtosolvethisproblem 29 clearrecommendationswhichc cid 13 keunwoochoi gyorgyfazekas marksandler.licensedunderacreativecommonsattribution4.0internationalli-cense ccby4.0 .attribution keunwoochoi gyorgyfazekas marksandler.automatictaggingusingdeepconvolutionalneuralnet-works 17thinternationalsocietyformusicinformationretrievalcon-ference 2016.providegoodassociationoffeatureswithtagcategoriesareyettoemerge.amorerecentapproachuniesfeatureex-tractionwithmachinelearningtoallowrelevantfeaturestobelearntautomatically.thisapproachisknownasfeaturelearningandrequiresdeepneuralnetworks dnns .aggregatinghand-craftedfeaturesformusictaggingwasintroducedin 25 .severalsubsequentworksrelyonabagofframesapproach-whereacollectionoffeaturesarecomputedforeachframeandthenstatisticallyaggre-gated.typicalfeaturesaredesignedtorepresentphys-icalorperceivedaspectsofsoundandincludemfccs mfccderivatives andspectralfeatures e.g.spectralroll-offandcentroids .sincetheseareframe-levelfeatures theirstatisticssuchasmeanandvariancearecomputed 25 ortheyareclusteredandvectorquantised 15 toob-tainclip-levelfeatures.finally classierssuchask-nnorsupportvectormachinesareappliedtopredicttags.asalternativetotheabovesystems dnnshavere-centlybecomewidelyusedinaudioanalysis followingtheirsuccessincomputervision speechrecognition 19 andauto-tagging 6 8 18 28 .fromanengineeringper-spective dnnssidesteptheproblemofcreatingorndingaudiofeaturesrelevanttoatask.theirgeneralstructureincludesmultiplehiddenlayerswithhiddenunitstrainedtorepresentsomeunderlyingstructureindata.incomputervision deepconvolutionalneuralnetworks cnns havebeenintroducedbecausetheycansimulatethebehaviourofthehumanvisionsystemandlearnhier-archicalfeatures allowingobjectlocalinvarianceandro-bustnesstotranslationanddistortioninthemodel 14 .cnnshavebeenintroducedinaudio-basedproblemsforsimilarreasons showingstate-of-the-artperformanceinspeechrecognition 19 andmusicsegmentation 26 .severaldnn-relatedalgorithmshavebeenproposedforautomaticmusictaggingtoo.in 5 28 sphericalk-meansandmulti-layerperceptronsareusedasfeatureex-tractorandclassierrespectively.multi-resolutionspec-trogramsareusedin 5 toleveragetheinformationintheaudiosignalondifferenttimescales.in 28 pre-trainedweightsofmultilayerperceptronsaretransferredinordertopredicttagsforotherdatasets.atwo-layercon-volutionalnetworkisusedin 6 withmel-spectrogramsaswellasrawaudiosignalsasinputfeatures.in 18 bag-of-featuresareextractedandinputtostackedrestrictedboltzmannmachines rbm .inthispaper weproposeanautomatictaggingalgo-rithmbasedondeepfullyconvolutionalnetworks fcn 806 proceeding 17th ismir conference york city usa 7-11 2016 fcnsaredeepconvolutionalnetworksthatonlyconsistsofconvolutionallayers andsubsampling withoutanyfully-connectedlayer.anfcnmaximisestheadvantagesofconvolutionalnetworks.itreducesthenumberofparame-tersbysharingweightsandmakesthelearnedfeaturesin-varianttothelocationonthetime-frequencyplaneofspec-trograms i.e itprovidesadvantagesoverhand-craftedandstatisticallyaggregatedfeaturesbyallowingthenetworkstomodelthetemporalandharmonicstructureofaudiosig-nals.intheproposedarchitecture threetosevenconvo-lutionallayersareemployedcombinedwithsubsamplinglayers resultinginreducingthesizeoffeaturemapsto11andmakingthewholeprocedurefullyconvolutional.2dconvolutionalkernelsarethenadoptedtotakethelocalharmonicrelationshipsintoaccount.weintroducecnnsindetailinsection2anddenetheprobleminsection3.ourarchitecturesareexplainedinsection4 andtheirevaluationispresentedinsection5 followedbyconclusioninsection6.2.cnnsformusicsignalanalysis2.1motivationforusingcnnsforaudioanalysisinthissection wereviewthepropertiesofcnnswithre-specttomusicsignals.thedevelopmentofcnnswasmo-tivatedbybiologicalvisionsystemswhereinformationoflocalregionsarerepeatedlycapturedbymanysensorycellsandusedtocapturehigher-levelinformation 14 .cnnsarethereforedesignedtoprovideawayoflearningrobustfeaturesthatrespondtocertainvisualobjectswithlocal translation anddistortioninvariances.theseadvantagesoftenworkwellwithaudiosignalstoo althoughthetopol-ogyofaudiosignals ortheir2drepresentations isnotthesameasthatofavisualimage.cnnshavebeenappliedtovariousaudioanalysistasks mostlyassumingthatauditoryeventscanbedetectedorrecognisedbyseeingtheirtime-frequencyrepresentations.althoughtheadvantageofdeeplearningistolearnthefea-tures oneshouldcarefullydesignthearchitectureofthenetworks consideringtowhatextenttheproperties e.g.invariances aredesired.thereareseveralreasonswhichjustifytheusecnnsinautomatictagging.first musictagsareoftenconsideredamongthetopmosthigh-levelfeaturesrepresentingsong-levelinformationaboveintermediatelevelfeaturessuchaschords beat tonalityandtemporalenvelopeswhichchangeovertimeandfrequency.thishierarchytswellwithcnnsasitisdesignedtolearnhierarchicalfeaturesovermultilayerstructures.second thepropertiesofcnnssuchastranslation distortion andlocalinvariancescanbeusefultolearnmusicalfeatureswhenthetargetmusicaleventsthatarerelevanttotagscanappearatanytimeorfrequencyrange.2.2designofcnnsarchitecturestherehavebeenmanyvariantsofapplyingcnnstoaudiosignals.theydifferbythetypesofinputrepresentations convolutionaxes sizesandnumbersofconvolutionalker-nelsorsubsamplingsandthenumberofhiddenlayers.2.2.1tf-representationmel-spectrogramshavebeenoneofthewidespreadfea-turesfortagging 5 boundarydetection 26 onsetde-tection 21 andlatentfeaturelearning 27 .theuseofthemel-scaleissupportedbydomainknowledgeaboutthehu-manauditorysystem 17 andhasbeenempiricallyprovenbyperformancegainsinvarioustasks 6 18 21 26 27 .theconstant-qtransform cqt hasbeenusedpredomi-nantlywherethefundamentalfrequenciesofnotesshouldbepreciselyidentied e.g.chordrecognition 10 andtranscription 22 .thedirectuseofshort-timefouriertransform stft coefcientsispreferredwhenaninversetransformationisnecessary 3 23 .ithasbeenusedinboundarydetec-tion 7 forexample butitislesspopularincomparisontoitsubiquitoususeindigitalsignalprocessing.com-paredtocqt thefrequencyresolutionofstftisinade-quateinthelowfrequencyrangetoidentifythefundamen-talfrequency.onthecontrary stftprovidesnerres-olutionsthanmel-spectrogramsinfrequencybands 2khzgiventhesamenumberofspectralbandswhichmaybede-sirableforsometasks.sofar ithasnotbeenthemostfavouredchoice.mostrecently therehavebeenstudiesfocusingonlearn-inganoptimisedtransformationfromrawaudiogivenatask.thesearecalledend-to-endmodelsandappliedbothformusic 6 andspeech 20 .theperformanceiscompa-rabletothemel-spectrograminspeechrecognition 20 .itisalsonoteworthythatthelearnedlterbanksinboth 6 20 showsimilaritiestothemel-scale supportingtheuseoftheknownnonlinearityofthehumanauditorysys-tem.2.2.2convolution-kernelsizesandaxeseachconvolutionlayerofsizehwdlearnsdfea-turesofhw wherehandwrefertotheheightandthewidthofthelearnedkernelsrespectively.thekernelsizedeterminesthemaximumsizeofacomponentitcanpreciselycapture.ifthekernelsizeistoosmall thelayerwouldfailtolearnameaningfulrepresentationofshape ordistribution ofthedata.forthisreason relativelylarge-sizedkernelssuchas175areproposedin 10 .thisisalsojustiedbythetask chordrecognition whereasmallchangeinthedistributionalongthefrequencyaxisshouldyielddifferentresultsandthereforefrequencyinvarianceshouldntbeallowed.theuseoflargekernelsmayhavetwodrawbackshow-ever.first itisknownthatthenumberofparametersperrepresentationcapacityincreasesasthesizeofkernelin-creases.forexample 55convolutioncanbereplacedwithtwostacked33convolutions resultinginafewernumberofparameters.second largekernelsdonotallowinvariancewithinitsrange.theconvolutionaxesareanotherimportantaspectofconvolutionlayers.fortagging 1dconvolutionalongthetimeaxisisusedin 6 tolearnthetemporaldistribution assumingthatdifferentspectralbandhavedifferentdistri-butionsandthereforefeaturesshouldbelearnedperfre- proceeding 17th ismir conference york city usa 7-11 2016 807 quencyband.inthiscase theglobalharmonicrelation-shipisconsideredattheendoftheconvolutionlayersandfully-connectedlayersfollowtocaptureit.incontrast 2dconvolutioncanlearnbothtemporalandspectralstruc-turesandhasalreadybeenusedinmusictranscription 22 onsetdetection 21 boundarydetection 26 andchordrecognition 10 .2.2.3pooling-sizesandaxespoolingreducesthesizeoffeaturemapwithanoperation usuallyamaxfunction.ithasbeenadoptedbythemajorityofworksthatarerelyingoncnnstructures.essentially poolingemployssubsamplingtoreducethesizeoffeaturemapwhilepreservingtheinformationofanactivationintheregion ratherthaninformationaboutthewholeinputsignal.thisnon-linearbehaviourofsubsamplingalsoprovidesdistortionandtranslationinvariancesbydiscardingtheorig-inallocationoftheselectedvalues.asaresult pool-ingsizedeterminesthetoleranceofthelocationvariancewithineachlayerandpresentsatrade-offbetweentwoas-pectsthataffectnetworkperformance.ifthepoolingsizeistoosmall thenetworkdoesnothaveenoughdistortioninvariance ifitistoolarge thelocationoffeaturesmaybemissedwhentheyareneeded.ingeneral thepoolingaxesmatchtheconvolutionaxes althoughitisnotnecessarilythecase.whatismoreimportanttoconsideristheaxisinwhichweneedinvariance.forexample time-axispool-ingcanbehelpfulforchordrecognition butitwouldhurttime-resolutioninboundarydetectionmethods.3.problemdefinitionautomatictaggingisamulti-labelclassicationtask i.e aclipcanbetaggedwithmultipletags.itisdifferentfromotheraudioclassicationproblemssuchasgenreclassi-cation whichareoftenformalisedasasingle-labelclas-sicationproblem.giventhesamenumberoflabels theoutputspaceofmulti-labelclassicationcanexponentiallyincreasecomparedtosingle-labelclassication.accord-ingly multi-labelclassicationtasksrequiremoredata amodelwithlargercapacityandefcientoptimisationmeth-odstosolve.iftherearekexclusivelabels theclassieronlyneedstobeabletopredictoneamongkdifferentvectors whichareone-hotvectors.withmultiplelabelshowever thenumberofcasesincreasesupto2k.incrowd-sourcedmusictagdatasets 2 13 mostofthetagsarefalse 0 formostoftheclips whichmakesac-curacyormeansquareerrorinappropriateasameasure.thereforeweusetheareaunderanroc receiveroper-atingcharacteristic curveabbreviatedasauc.thismea-surehastwoadvantages.itisrobusttounbalanceddatasetsanditprovidesasimplestatisticalsummaryoftheperfor-manceinasinglevalue.itisworthnotingthatarandomguessisexpectedtoscoreanaucof0.5whileaperfectclassication1.0 i.e theeffectiverangeofaucspansbetween 0.5 1.0 .fcn-4mel-spectrogram input 9613661 conv33128mp 2 4 output 48341128 conv33384mp 4 5 output 2485384 conv33768mp 3 8 output 1221768 conv332048mp 4 8 output 112048 output501 sigmoid table1.thecongurationoffcn-44.proposedarchitecturetable1andfigure1showoneoftheproposedarchitec-tures a4-layerfcn fcn-4 whichconsistsof4convolu-tionallayersand4max-poolinglayers.thisnetworktakesalog-amplitudemel-spectrogramsized961366asinputandpredictsa50dimensionaltagvector.theinputshapefollowsthesizeofthemel-spectrogramsasexplainedinsection5.1.thearchitectureisextendedtodeeperoneswith5 6and7layers fcn- 5 6 7 .thenumberoffeaturemapsandsubsamplingsizesaresummarisedintable2.thenumberoffeaturemapsoffcn-5areadjustedbasedonfcn-4 makingthehierarchyofthelearnedfeaturesdeeper.fcn-6andfcn-7howeverhaveadditional11convolu-tionallayers onthetopoffcn-5.here themotivationof11istotakeadvantageofincreasednonlinearity 16 inthenallayer assumingthatthevelayersoffcn-5aresufcienttolearnhierarchicalfeatures.anarchitec-turewith3layers fcn-3 isalsotestedasabaselinewithapoolingstrategyof 3 5 4 16 8 17 256 768 2048 featuremaps.thenumberoffeaturemapsaread-justedbasedonfcn-4whilethepoolingsizesaresettoincreaseineachlayersothatlow-levelfeaturescanhavesufcientresolutions.figure1.ablockdiagramoftheproposed4-layerarchi-tecture fcn-4.thenumbersindicatethenumberoffea-turemaps i.e.channels ineachlayer.thesubsamplinglayersdecreasethesizeoffeaturemapsto11whiletheconvolutionallayersincreasethedepthto2048 808 proceeding 17th ismir conference york city usa 7-11 2016 othercongurationsfollowthecurrentgenericoptimi-sationmethodsincnns.rectiedlinearunit relu isusedasanactivationfunctionineveryconvolutionallayerexcepttheoutputlayer whichusessigmoidtosqueezetheoutputwithin 0 1 .batchnormalisationisaddedafterev-eryconvolutionandbeforeactivation 11 .dropoutof0.5isaddedaftereverymax-poolinglayer 24 .thisacceler-atestheconvergencewhiledropoutpreventsthenetworkfromovertting.homogeneous2d 33 convolutionalkernelsareusedineveryconvolutionallayersexceptthenal11convolu-tion.2dkernelsareadoptedinordertoencouragethesys-temtolearnthelocalspectralstructures.thekernelsattherstconvolutionallayercover64ms72hz.thecover-ageincreasesto7s692hzatthenal33convolutionallayerwhenthekernelisatthelow-frequency.thetimeandfrequencyresolutionsoffeaturemapsbecomecoarserasthemax-poolinglayerreducestheirsizes andnallyasinglevalue ina11featuremap representsafeatureofthewholesignal.severalfeaturesintheproposedarchitecturearedistinctfrompreviousstudies.comparedto 28 18 thepro-posedsystemtakesadvantagesofconvolutionalnetworks whichdonotrequireanypre-trainingbutfullytrainedinasupervisedfashion.thearchitectureof 6 maybethemostsimilartoours.ittakesmel-spectrogramasinput usestwo1dconvolutionallayersandtwo 1d max-poolinglayersasfeatureextractor andemploysonefully-connectedlayerasclassier.theproposedarchitectureshoweverconsistof2dconvolutionandpoolinglayers totakethepotentiallocalharmonicstructureintoaccount.resultsfrommany3sclipsareaveragedin 6 toobtainthenalprediction.theproposedmodelhowevertakesthewhole29.1ssignalasinput incorporatingatemporalnonlinearaggregationintothemodel.theproposedarchitecturescanbedescribedasfully-fcn-5fcn-6fcn-7mel-spectrogram input 9613661 conv33128mp 2 4 output 48341128 conv33256mp 2 4 output 2485256 conv33512mp 2 4 output 1221512 conv331024mp 3 5 output 441024 conv332048mp 4 4 output 112048 conv111024conv111024conv111024output501 sigmoid table2.thecongurationsof5 6 and7-layerarchitec-tures.theonlydifferencesarethenumberofadditional11convolutionlayers.convolutionalnetworks fcn sincetheyonlyconsistofconvolutionalandsubsamplinglayers.conventionalcnnshavebeenequippedwithfully-connectedlayersattheendofconvolutionallayers expectingeachofthemtoperformasafeatureextractorandclassierrespectively.ingeneralhowever thefullyconnectedlayersaccountforthemajor-ityofparametersandthereforemakethesystempronetoovertting.thisproblemcanberesolvedbyusingfcnswithaverage-poolingatthenalconvolutionallayer.forinstancein 16 theauthorsassumethatthetargetvisualobjectsmayshowlargeactivationsgloballyinthecorre-spondingimages.oursystemsresemblethearchitecturein 16 exceptthepoolingmethod whereweonlyusemax-poolingbecausesomeofthefeaturesarefoundtobelocal e.g.thevoicemaybeactiveonlyforthelastfewsecondsofaclip.5.experimentsanddiscussion5.1overviewtwodatasetswereusedtoevaluatetheproposedsystem themagnatagatunedataset 13 andthemillionsongdataset msd 2 .themagnatagatunedatasethasbeenrelativelypopularforcontent-basedtagging butsimilarperformancesfromrecentworks 5 6 18 28 seemtosug-gestthatperformancesaresaturated i.e.aglass-ceilinghasbeenreachedduetonoiseintheannotation.themsdcontainsmoresongsthanmagnatagatune ithasvarioustypesofannotationsupto1msongs.therehavenotbeenmanyworkstocompareourapproachwith partlybecauseaudiosignalsdonotcomewiththedataset.consequently weusethemagnatagatunedatasettocomparethepro-posedsystemwithpreviousmethodsandevaluatethevari-antsofthesystemusingthemsd.inexperimenti weevaluatethreearchitectures fcn- 3 4 5 withmel-spectrograminputasproposedinsec-tion4.furthermore weevaluatedstft mfcc andmel-spectrogramrepresentationsasinputoffcn-4.thearchi-tectureofstftinputisequivalenttothatofmel-spectrogramswithsmalldifferencesinpoolingsizesinthefrequencyaxisduetothedifferentnumberofspectralbands.forthearchitectureofmfccs weproposeaframe-based4-layerfeed-forwardnetworkswithtime-axispooling insteadof2dconvolutionsandpoolings becauserelevantinforma-tionisrepresentedbyeachmfccratherthanitslocalrela-tionships.inexperimentii weevaluatevearchitectures fcn- 3 4 5 6 7 withmel-spectrograminput.computationalcostisheavilyaffectedbythesizeoftheinputlayerswhichdependsonbasicsignalparametersoftheinputdata.apilotexperimentdemonstratedsimilarperformanceswith12and16khzsamplingratesandmel-binsof96and128respectively.asaresult theaudioinbothdatasetswastrimmedas29.1sclips theshortestsig-nalinthedataset andwasdownsampledto12khz.thehopsizewasxedat256samples 21ms duringtime-frequencytransformation yielding1 366framesintotal.stftwasperformedusing256-pointfftwhilethenum-berofmel-bandswassetas96.foreachframe 30mfccs proceeding 17th ismir conference york city usa 7-11 2016 809 andtheirrstandsecondderivativeswerecomputedandconcatenated.weusedadamadaptiveoptimisation 12 onkeras 4 andtheano 1 frameworkduringtheexperiments.bi-narycross-entropyfunctionisusedsinceitshowsfasterconvergenceandbetterperformancethandistance-basedfunctionssuchasmeansquarederrorandmeanabsoluteerror.5.2experimenti magnatagatunethemagnatagatunedatasetconsistsof25 856clipsof29.1-s 16khz-sampledmp3leswith188tags.weonlyusestop-50tags whichincludesgenres classical rock instrument piano guitar vocal drum mood soft am-bient andotherdescriptions slow indian .thedatasetisnotbalanced themostfrequenttagisused4 851timeswhilethe50-thmostfrequentoneused490timesinthetrainingset.thelabelsofthedatasetconsistof7 644uniquevectorsina50-dimensionalbinaryvectorspace.theresultsoftheproposedarchitectureanditsvariantsaresummarisedintable3.thereislittleperformancedifferencebetweenfcn-4andfcn-5.itisacommonphenomenonthatanadditionallayerdoesnotnecessarilyleadtoanimprovedperformanceif thegradientmaynotowwellthroughthelayersorii theadditionallayerissimplynotnecessaryinthetaskbutonlyaddsmorepa-rameters.thisresultsinoverttingorhinderingtheopti-misation.inourcase themostlikelyreasonisthelatterofthetwo.first thescoresareonlyslightlydifferent sec-ond bothfcn-4andfcn-5showedsimilarperformancescomparedtopreviousresearchasshownintable4.simi-larresultswerefoundinthecomparisonoffcn-5 fcn-6 andfcn-7inexperimentii.thesearediscussedinsec-tion5.3.methodsaucfcn-3 mel-spectrogram.852fcn-4 mel-spectrogram.894fcn-5 mel-spectrogram.890fcn-4 stft.846fcn-4 mfcc.862table3.theresultsoftheproposedarchitecturesandin-puttypesonthemagnatagatunedatasetfigure2.thenumbersofbinsper1khzbandwidthinmel-spectrogramsandstfts.methodsauctheproposedsystem fcn-4.8942015 bagoffeaturesandrbm 18 .8882014 1dconvolutions 6 .8822014 transferredlearning 28 .882012 multi-scaleapproach 5 .8982011 poolingmfcc 8 .861table4.thecomparisonofresultsfromtheproposedandtheprevioussystemsonthemagnatagatunedatasetthedegradationswithothertypesofinputsignalsstftandmfccarerathersignicant.thisresultisalignedwiththepreferencesofmel-spectrogramsoverstftonautomatictagging 5 6 18 27 .however thisclaimislim-itedtothisorverysimilartaskswherethesystemistrainedonlabelssuchasgenres instrument andmoods.fig-ure2showshow96frequencybinsareallocatedbymel-spectrogramsandstftinevery1khzbandwidth.thisgure combinedwiththeresultintable3showsthathigh-resolutioninthelow-frequencyrangehelpsautomatictag-ging.italsosupportstheuseofdownsamplingforauto-matictagging.focusingonlow-frequencycanbemoreefcient.table4showstheperformanceoffcn-4incomparisontothepreviousalgorithms.theproposedalgorithmper-formscompetitivelyagainsttheotherapproaches.how-ever manydifferentalgorithmsonlyshowsmalldiffer-encesintherangeofanaucscoreof0.880.89 makingtheirperformancesdifculttocompare.thisinspiredtheauthorstoexecuteasecondexperimentdiscussedinthenextsection.insummary themel-spectrogramsshowedbetterperformancethanothertypesofinputswhilefcn-4andfcn-5outperformedmanypreviouslyreportedarchi-tecturesandcongurations.5.3experimentii millionsongdatasetwefurtherevaluatedtheproposedstructuresusingthemil-lionsongdataset msd withlast.fmtags.weselectthetop50tagswhichincludegenres rock pop jazz funk era 60s00s andmoods sad happy chill .214 284 201 680fortrainingand12 605forvalidation and25 940clipsareselectedfromtheprovidedtraining/testsetsbylteringoutitemswithoutanytop-50tags.thenumberoftagsrangesfrom52 944 rock to1 257 happy andthereare12 348uniquetagvectors.notethatthesizeofthemsdismorethan9timeslargerthanthemagnatagatunedataset.theresultsoftheproposedarchitectureswithdiffer-entnumbersoflayersaresummarisedintable5.unliketheresultfromexperimenti wherefcn-4andfcn-5showedaslightdifferenceoftheperformance aucdiffer-enceof0.008 fcn-5 6 7resultedinsignicantimprove-mentscomparedtofcn-4 showingthatdeeperstructuresbenetmorefromsufcientdata.however fcn-6out-performedfcn-5onlybyauc0.003whilefcn-7even 810 proceeding 17th ismir conference york city usa 7-11 2016 methodsaucfcn-3 mel-spectrogram.786fcn-4 .808fcn-5 .848fcn-6 .851fcn-7 .845table5.theresultsfromdifferentarchitecturesoftheproposedsystemonthemillionsongdatasetfigure3.thelearningcurvesoftheaucscoresmeasuredonthevalidationset onthemillionsongdataset showedaslightlyworseperformancethanfcn-6.thisresultagreeswithaknowninsightinusingdeepneuralnetworks.thestructuresofdnnsneedtobedesignedforeasiertrainingwhentherearealargernumberoflay-ers 9 .intheory morecomplexstructurescanperformatleastequaltosimpleonesbylearninganidentitymap-ping.ourresultssupportsthis.intheexperiment theper-formancesoffcn-6andfcn-7werestillmakingsmallimprovementsattheendofthetraining implyingitmayperformequaltoorevenoutperformfcn-5.inpractice thisapproachislimitedbycomputationalresourcesandthereforeverydeepstructuresmayneedtobedesignedtomotivateefcienttraining forinstance usingdeepresid-ualnetworks 9 .figure3illustratesthelearningcurvesoftheaucscoresonthevalidationset.atthebeginningofthetraining thereisatendencythatsimplernetworksshowbetterperfor-mancebecausethereisafewernumberofparameterstolearn.fcn-4andfcn-5showsimilarperformancebe-tweenaround2040epochs.basedonthis itcanbeas-sumedthatlearningonthemagnatagatunedatasetstayedwithinthisregionandfailedtomakemoreprogressduetothescarcityoftrainingdata.tosummarise fcn-5 fcn-6 andfcn-7signicantlyoutperformedfcn-3andfcn-4.theresultsimplythatmorecomplexmodelsbenetfrommoretrainingdata.thesimilarresultsobtainedus-ingfcn-5 fcn-6andfcn-7indicatetheneedformoreadvanceddesignmethodologiesandtrainingofdeepneu-ralnetworks.6.conclusionwepresentedanautomatictaggingalgorithmbasedondeepfullyconvolutionalneuralnetworks fcn .itwasshownthatdeepfcnwith2dconvolutionscanbeeffectivelyusedforautomaticmusictaggingandclassicationtasks.inexperimenti section5.2 theproposedarchitectureswithdifferentinputrepresentationsandnumbersoflayerswerecomparedusingthemagnatagatunedatasetagainsttheresultsreportedinpreviousworksshowingcompeti-tiveperformance.withrespecttoaudioinputrepresen-tations usingmel-spectrogramsresultedinbetterperfor-mancecomparedtostftsandmfccs.inexperimentsii section5.3 differentnumberoflayerswereevaluatedusingthemillionsongdatasetwhichcontainsninetimesasmanymusicclips.theoptimalnumberoflayerswerefoundtobedifferentinthisexperimentindicatingdeepernetworksbenetmostfromtheavailabilityoflargetrain-ingdata.inthefuture automatictaggingalgorithmswithvariableinputlengthswillbeinvestigated.7.acknowledgementsthisworkwaspartfundedbythefastimpactepsrcgrantep/l019981/1andtheeuropeancommissionh2020researchandinnovationgrantaudiocommons 688382 .sandleracknowledgesthesupportoftheroyalsocietyasarecipientofawolfsonresearchmeritaward.8.references 1 fredericbastien pascallamblin razvanpascanu jamesbergstra iangoodfellow arnaudbergeron nicolasbouchard davidwarde-farley andyoshuabengio.theano newfeaturesandspeedimprove-ments.arxivpreprintarxiv 1211.5590 2012 2 thierrybertin-mahieux danielpwellis brianwhit-man andpaullamere.themillionsongdataset.inproceedingsofthe12thinternationalsocietyformu-sicinformationretrievalconference ismir2011 mi-ami florida usa october24-28 2011 pages591596 2011 3 keunwoochoi georgefazekas marksandler andjeongheekim.auralisationofdeepconvolutionalneu-ralnetworks listeningtolearnedfeatures.inproceed-ingsofthe16thinternationalsocietyformusicin-formationretrievalconference ismir2015 malaga spain october26-30 2015 2015 4 francoischollet.keras deeplearn-inglibraryfortheanoandtensorow.https //github.com/fchollet/keras 2015 5 sanderdielemanandbenjaminschrauwen.multi-scaleapproachestomusicaudiofeaturelearning.inproceedingsofthe14thinternationalsocietyformu-sicinformationretrievalconference ismir2013 curitiba brazil november4-8 2013 2013. proceeding 17th ismir conference york city usa 7-11 2016 811 6 sanderdielemanandbenjaminschrauwen.end-to-endlearningformusicaudio.inacoustics speechandsignalprocessing icassp 2014ieeeinternationalconferenceon pages69646968.ieee 2014 7 thomasgrillandjanschluter.musicboundarydetec-tionusingneuralnetworksonspectrogramsandself-similaritylagmatrices.inproceedingsofthe23rdeuropeansignalprocessingconference euspico2015 nice france 2015 8 philippehamel simonlemieux yoshuabengio anddouglaseck.temporalpoolingandmultiscalelearn-ingforautomaticannotationandrankingofmusicau-dio.inproceedingsofthe12thinternationalsoci-etyformusicinformationretrievalconference is-mir2011 miami florida usa october24-28 2011 pages729734 2011 9 kaiminghe xiangyuzhang shaoqingren andjiansun.deepresiduallearningforimagerecognition.arxivpreprintarxiv 1512.03385 2015 10 ericjhumphreyandjuanpbello.rethinkingauto-maticchordrecognitionwithconvolutionalneuralnet-works.inmachinelearningandapplications 11thin-ternationalconferenceon volume2 pages357362.ieee 2012 11 sergeyioffeandchristianszegedy.batchnor-malization acceleratingdeepnetworktrainingbyreducinginternalcovariateshift.arxivpreprintarxiv 1502.03167 2015 12 diederikp.kingmaandjimmyba.adam amethodforstochasticoptimization.corr abs/1412.6980 2014 13 edithlaw kriswest michaelimandel mertbay andjstephendownie.evaluationofalgorithmsusinggames thecaseofmusictagging.inproceedingsofthe10thinternationalsocietyformusicinformationretrievalconference ismir2009 kobe japan oc-tober26-30 2009 pages387392.ismir 2009 14 yannlecunandyoshuabengio.convolutionalnet-worksforimages speech andtimeseries.thehand-bookofbraintheoryandneuralnetworks 3361 10 1995 15 dawenliang minshuzhan anddanielpwellis.content-awarecollaborativemusicrecommendationusingpre-trainedneuralnetworks.inproceedingsofthe16thinternationalsocietyformusicinformationretrievalconference ismir2015 malaga spain october26-30 2015 2015 16 minlin qiangchen andshuichengyan.networkinnetwork.corr abs/1312.4400 2013 17 briancjmoore.anintroductiontothepsychologyofhearing.brill 2012 18 juhannam jorgeherrera andkyogulee.adeepbag-of-featuresmodelformusicauto-tagging.arxivpreprintarxiv 1508.04999 2015 19 taransainath abdel-rahmanmohamed briankingsbury andbhuvanaramabhadran.deepconvo-lutionalneuralnetworksforlvcsr.inacoustics speechandsignalprocessing icassp 2013ieeeinterna-tionalconferenceon pages86148618.ieee 2013 20 taransainath ronjweiss andrewsenior kevinwwilson andoriolvinyals.learningthespeechfront-endwithrawwaveformcldnns.inproc.interspeech 2015 21 janschluterandsebastianbock.improvedmusicalonsetdetectionwithconvolutionalneuralnetworks.inacoustics speechandsignalprocessing icassp ieeeinternationalconferenceon.ieee 2014 22 siddharthsigtia emmanouilbenetos andsimondixon.anend-to-endneuralnetworkforpolyphonicmusictranscription.arxivpreprintarxiv 1508.01774 2015 23 andrewjrsimpson gerardroma andmarkdplumbley.deepkaraoke extractingvocalsfrommu-sicalmixturesusingaconvolutionaldeepneuralnet-work.arxivpreprintarxiv 1504.04658 2015 24 nitishsrivastava geoffreyhinton alexkrizhevsky ilyasutskever andruslansalakhutdinov.dropout asimplewaytopreventneuralnetworksfromover-tting.thejournalofmachinelearningresearch 15 1 19291958 2014 25 georgetzanetakisandperrycook.musicalgenreclassicationofaudiosignals.speechandaudiopro-cessing ieeetransactionson 10 5 293302 2002 26 karenullrich janschluter andthomasgrill.bound-arydetectioninmusicstructureanalysisusingconvo-lutionalneuralnetworks.inproceedingsofthe15thinternationalsocietyformusicinformationretrievalconference ismir2014 taipei taiwan 2014 27 aaronvandenoord sanderdieleman andbenjaminschrauwen.deepcontent-basedmusicrecommenda-tion.inadvancesinneuralinformationprocessingsystems pages26432651 2013 28 aaronvandenoord sanderdieleman andben-jaminschrauwen.transferlearningbysupervisedpre-trainingforaudio-basedmusicclassication.inpro-ceedingsofthe15thinternationalsocietyformusicinformationretrievalconference ismir2014 taipei taiwan october27-31 2014 2014 29 yusufyaslanandzehracataltepe.audiomusicgenreclassicationusingdifferentclassiersandfeaturese-lectionmethods.in18thicpr2006 volume2 pages573576.ieee 2006. review sheet ii iii iv", "keywords": ["amruta lolage", "auc epoch", "auc epoch epoch", "auc score", "auc score epoch", "audio clip", "audio signal", "automatic tagging", "autotagging music", "autotagging music deep", "benjamin schrauwen", "city usa", "classification accuracy", "cnn convolutional", "cnn convolutional neural", "conference york", "conference york city", "convmp output", "convolutional layer", "convolutional network", "convolutional neural", "convolutional neural network", "convolutional recurrent", "convolutional recurrent neural", "crnn convolutional", "crnn convolutional recurrent", "deep convolutional", "deep convolutional neural", "deep learning", "deep neural", "deep neural network", "dieleman benjamin", "dieleman benjamin schrauwen", "epoch auc", "epoch epoch", "epoch epoch fig", "epoch fig", "epoch variant", "fcn layer", "field music", "fully connected", "fully convolutional", "fully convolutional neural", "fullyconnected layer", "genre emotion", "hidden neuron", "input representation", "international society", "international society music", "ismir conference", "ismir conference york", "language processing", "learning autotagging", "learning autotagging music", "local receptive", "local receptive field", "lolage rashmeet", "machine learning", "magnatagatune mtt", "mr sachin", "mr sachin deshpande", "multilabel classification", "music audio", "music classification", "music clip", "music deep", "music deep convolutional", "music retrieval", "music retrieval conference", "music tag", "natural language", "natural language processing", "network cnn", "network fcn", "neural network", "neural network cnn", "number map", "pawar sushmita", "proceeding th", "proceeding th ismir", "rasika pawar", "receptive field", "recognition vision", "recurrent neural", "recurrent neural network", "retrieval conference", "rnn layer", "sachin deshpande", "sander dieleman", "sander dieleman benjamin", "score epoch", "signal processing", "society music", "society music retrieval", "speech recognition", "speech recognition vision", "tag tag", "th international", "th international society", "th ismir", "th ismir conference", "th th", "train valid", "train valid loss", "typical cnn", "valid loss", "weight bias", "york city", "york city usa"], "libraries": ["h5py", "kera", "tensorflow"], "languages": ["python"], "frameworks": [], "dbs": []}, "./reports/37_finalReport_Revised.pdf": {"title": "analysis of agricultural data \u2013 an ensemble based hybrid approach", "filename": "./reports/37_finalReport_Revised.pdf", "data": "agricultural ensemble based hybrid approach agricultural ensemble based hybrid approach savatribai fullfilment atharva jaiswal aditya rukadikar nishant jadhav piyush gaikwad b120058511 b120058612 b120058543 b120058534 guidance prof. j.b jagdale 2016-2017 pict- 2016-17 1 agricultural ensemble based hybrid approach agricultural ensemble based hybrid approach nishant jadhav be120058543 atharva jaiswal be120058511 aditya rukadikar be120058612 piyush gaikwad be120058534 bonafide prof. j.b. jagdale earlier diploma j.b. jagdale prof. s.b deshmukh coordinator dr. s.c. dharmadhikari hodit dr. p.t p.i.c.t examiner pict- 2016-17 2 agricultural ensemble based hybrid approach pict- 2016-17 3 agricultural ensemble based hybrid approach sponsorship pict- 2016-17 4 agricultural ensemble based hybrid approach completion industry pict- 2016-17 5 agricultural ensemble based hybrid approach acknowledgement prof. j. b. jagdale mr. vikash khetan guiding phase providing support time dr. emmanuel m. providing facility dr. p. t. providing leverage pressure lab attendant providing lab lab facility time needed supporting completion friend family member supporting thick thin keeping motivated complete time nishant jadhav be120058543 atharva jaiswal be120058511 aditya rukadikar be120058612 piyush gaikwad be120058534 pict- 2016-17 6 agricultural ensemble based hybrid approach figure.no title 4.1 4.2 4.3 4.4 4.5 4.6 5.1 6.1 6.2 6.3 er contributor contributor state transition state transition process gantt pict- 2016-17 7 agricultural ensemble based hybrid approach table.no title 4.1 4.2 4.3 4.4 4.5 4.6 4.7 6.1 6.2 description contributor dictionary dictionary admin dictionary contributor state description state description function decomposition pict- 2016-17 8 agricultural ensemble based hybrid approach nomenclature api gui bse nse kde ram ide sdk programming graphical bombay stock exchange national stock exchange desktop environment random access memory integrated development environment development kit cocomo constructive cost uat er acceptance pict- 2016-17 9 agricultural ensemble based hybrid approach sponsorship industry completion industry acknowledge ment nomenclature ii iii iv vi vii 1 2 3 4 1.1 1.2 2.1 2.2 4.1 title background review existing mining agricultural based decision tree study rainfall india mining mining technique agricultural yield proposed existing mining based purpose 2.1.1 2.1.2 2.1.3 2.2.1 2.2.2 4.1.1 4.1.2 4.1.3 pict- 2016-17 10 agricultural ensemble based hybrid approach 4.2 4.3 4.4 4.5 4.6 4.7 6.1 6.2 6.3 6.4 6.5 4.2.1 4.2.2 4.3.1 4.3.2 4.4.1 4.4.2 4.5.1 4.5.2 4.5.3 4.5.4 4.6.1 4.6.2 usage scenario profile description dictionary description function description behavioral description state state transition restriction proposed staff refrences 5 6 7 8 pict- 2016-17 11 agricultural ensemble based hybrid approach proposed comparative prediction rainfall nashik district help improving accuracy rainfall prediction prediction based factor example temperature vapour pressure humidity collected nashik region year 1965-2015. select number year factor graphical representation correlation consist precision accuracy recall keywords precision accuracy prediction vapour pressure correlation pict- 2016-17 12 agricultural ensemble based hybrid approach 1 pict- 2016-17 13 agricultural ensemble based hybrid approach 1.1 background analytics method infering discovered knowledge component provided logical reasoning step conducting science experiment source gathered reviewed analysed form sort finding variety specific method include mining text analytics business intelligence basic step collection preparation 1. collect 2. prepare codebook 3. 4. enter 5. screen error exploration 1. descriptive statistic 2. graph 1. explore variable 2. compare graph analytics finding crop yield production rainfall year comparative study decision tree adaboost method lstm pict- 2016-17 14 agricultural ensemble based hybrid approach 1.2 increase number suicide farmer india undoubtedly prevailing social menace dealing matter fact 3228 farmer committed suicide 2015 maharashtra country agricultural produce current scenario disparaged global image reason suicide poor crop production farmer unable repay loan factor poor crop production unpredictable rainfall soil condition poor fertilizer socio condition political condition rainfall factor agricultural production digital india initiative rainfall crop production accessible descriptive predictive limited government agency publicly converted thought contributing solve analysing predicting rainfall help better crop yield pict- 2016-17 15 agricultural ensemble based hybrid approach 2 pict- 2016-17 16 agricultural ensemble based hybrid approach review 2.1 existing 2.1.1 study rainfall india mining mining technique employed efficient real time weather climate paper author studied rainfall pattern period 53 year imd classified bayesian classifier clustering unearthing source temporal spatial domain critical climate study vertical health water energy advancement availability global geo graphical miner opportunity paper better understanding weather climate spatial temporal mining author conclude attempt mining basically study considered analyze parameter temperature rainfall wind cyclone indian region author suggested well studied perceive consequence climate change sector water heath energy industry disaster better sustainability future.the difference matrix decade indicated variation rainfall rain event country 2.2 proposed 2.2.1 existing mining propose mining k-means svm knn comparative study dataset comparative factor efficiency precision scalability help check nature dataset best suit 2.2.2 based pict- 2016-17 17 agricultural ensemble based hybrid approach collection propose dataset order arrive precise implement focus visualize create help facilitate prediction aspect rainfall crop yield crop production proposed enable systematic publicly agricultural farmer industrialist pict- 2016-17 18 agricultural ensemble based hybrid approach 3 pict- 2016-17 19 agricultural ensemble based hybrid approach designing unearths hidden aspect agriculture rainfall crop yield crop production finding factor affect rainfall region subjective availability dataset making ensemble based hybrid approach error predict rainfall nashik district depending influencing factor industrialist farmer pict- 2016-17 20 agricultural ensemble based hybrid approach 4 pict- 2016-17 21 agricultural ensemble based hybrid approach 4.1 4.1.1 find trite industrialist farmer requires making decision providing farmer prediction probable crop yield based prevailing weather condition rainfall purpose help farmer industrialist 4.1.2 cover wide range consists catalog expert advice current situation market prediction rainfall 4.1.3 purpose main purpose create analyze publicly agricultural convert news appears farmer industrialist analyze newspaper magazine textual cumbersome help automatically extract compare review decision based knowledge textual pict- 2016-17 22 agricultural ensemble based hybrid approach 4.2 usage scenario 4.2.1 profile 1. admin admin control i.e admin control process 4.2.2 use-cases fig 4.1 use-cases add catalog add query update catalog visualize generate prediction view dataset description admin add catalog admin add query catalog admin update existing catalog admin visualize admin generate prediction admin dataset 4.1 description pict- 2016-17 23 agricultural ensemble based hybrid approach 4.3 description 4.3.1 fig 4.2 er 4.3.2 dictionary dictionary 4.2 dictionary p/f field admin admin catalog caption adminname adminid catalogid varchar integer integer field size 10 10 15 description admin catalog pict- 2016-17 24 agricultural ensemble based hybrid approach catalog dictionary p/f p/f field catalog catalog number query noq caption nameofcatalog catlogid varchar varchar number 4.3 catalog dictionary dataset dictionary field datasetid database location databaseloc catalog caption datasetid catlogid varchar varchar varchar 4.4 dataset dictionary field size description 50 10 15 catalog catalog number query field size description dataset 10 location dataset 10 10 catalog 4.4 4.4.1 description function 1. pre-processing dataset duplicate entry remove duplicate element clean help arrive precise increase efficiency 2. responsible unearthing parameter affect rainfall crop yield crop production area 3. predictive analytics accepts parameter doe predictive analytics depending choice 4. depending predictive analytics generates visual representation analysed help insightful pict- 2016-17 25 agricultural ensemble based hybrid approach 4.4.2 fig 4.3 4.5 description 4.5.1 front-end back-end python python panda library pict- 2016-17 26 agricultural ensemble based hybrid approach 4.5.2 linux-ubuntu 14.04 browser support cgi html javascript 4.5.3 operating database python description chosen linux ubuntu 14.04 operating best support save record chosen mongodb database implement chosen python language interactive support 4.5 4.5.4 support web browser 4.6 behavioral description 4.6.1 state state catalog query catalog updated request query generated state description admin add catalog admin add query catalog admin update catalog admin add query catalog admin generates 4.6 contributor state description pict- 2016-17 27 agricultural ensemble based hybrid approach 4.6.2 state transition fig 4.4 state transition 4.7 restriction admin dataset appropriate field admin proper knowledge dataset pict- 2016-17 28 agricultural ensemble based hybrid approach 5 pict- 2016-17 29 agricultural ensemble based hybrid approach proposed 5.1 11 consists 1. consists datasets wa government platform indian meteorological rainfall nashik region period 1969-2015 2. pre-processing dataset duplicate entry remove duplicate element clean help arrive precise increase efficiency 3. responsible unearthing parameter affect rainfall crop yield crop production area 4. predictive analytics accepts parameter doe predictive analytics depending choice ensemble based hybrid designed efficient prediction pict- 2016-17 30 agricultural ensemble based hybrid approach 5. depending predictive analytics generates visual representation analysed help insightful pict- 2016-17 31 agricultural ensemble based hybrid approach 6 pict- 2016-17 32 agricultural ensemble based hybrid approach 6.1 6.1.1 cover wide range consists catalog expert advice current situation market prediction crop yield rainfall 6.1.2 major function major function admin function 6.1.3 constraint requires waterfall waterfall linear approach development event 1. gathering 2. 3. coding unit 4. performing 5. performing acceptance uat 6. fixing issue 7. delivering finished product 6.2project 6.2.1 estimation technique applied constructive cost cocomo semi-detached reason lie middle difficulty spectrum complex experienced dealing pict- 2016-17 33 agricultural ensemble based hybrid approach managing domain composed experienced inexperienced people massive simple compact equation find person month pm 3.0 8 month 1.12 30.8 30 person-months duration 2.5 pm 0.35=8.3 8 calendar month staffing pm/d =3.71 3 4 people needed 6.2.2 staff python programmer programmer documentation/librarian beta tester minimum gnome kde desktop 64-bit distribution capable running 32-bit 2 gb ram minimum 8 gb ram recommended 20 gb disk space 500 mb ide 10 gb dataset minimum linux operating python 6.3 6.3.1 major determined equipment failure late delivery pict- 2016-17 34 agricultural ensemble based hybrid approach meet expectation change deviation standard poor commenting source code 6.3.2 equipment failure late delivery meet expectation resist change deviation standard le reuse planned poor comment code category ti bu te bu pi ti 70 30 25 20 20 10 60 20 1 1 1 1 2 3 3 4 6.1 6.4 6.4.1 process pict- 2016-17 35 agricultural ensemble based hybrid approach 6.1 process waterfall well documented clear fixed product definition stable understood dynamic ambiguous advantage waterfall development allows departmentalization control deadline stage development product proceed development process phase development move concept installation troubleshooting operation maintenance phase development proceeds strict order framework gathering pict- 2016-17 36 agricultural ensemble based hybrid approach integration deployment maintenance 6.4.2 decomposition 6.2 decomposition pict- 2016-17 37 agricultural ensemble based hybrid approach 6.3 gantt 6.5 staff 6.5.1 chief programmer manager engineer 6.4 pict- 2016-17 38 agricultural ensemble based hybrid approach role engineer gathering designing coding maintaining engineer role performed 6.5.2.1 reporting mechanism progress reporting progress communicated e-mail file and/or member email informally special documentation progress log error tracking pict- 2016-17 39 agricultural ensemble based hybrid approach 7 pict- 2016-17 40 agricultural ensemble based hybrid approach 7.1 consists three 1. preprocessing collected wa raw wa process desired format dataset contained 32 10 selected selection extraction technique python panda library wa preprocessing 2. visualization wa visualized r. visualize query graph wa plotted tab primari visualization logic 3. prediction ensemble based hybrid designed fficient prediction ensemble created adaboost sklearn library decision tree basic ensemble refined long short-term memory network 7.2 python 3.5 programming sklearn machine learning visualization ui 7.3 methodologies/algorithm 7.3.1 algorithm1 /pseudo code decsion tree learning decision tree performs top-down recursive greedy search best decision tree pseudo code decision tree build tree recursively return root tree-learning tr target attr tr training example target target pict- 2016-17 41 agricultural ensemble based hybrid approach attr descriptive create root node tree tr target ti return single-node tree i.e root target ti attr empty i.e descriptive return single-node tree i.e root common target tr select attr best classify tr based entropy- based measure root legal vi add branch root vi trvi subset tr vi trvi empty add leaf node branch target mosy common target tr branch add subtree learned tree-learning trvi target attr- return root pict- 2016-17 42 agricultural ensemble based hybrid approach 8 pict- 2016-17 43 agricultural ensemble based hybrid approach evaluation 8.1 8.1.1 graph query 8.1 visualization results-1 8.2 visualization results-2 pict- 2016-17 44 agricultural ensemble based hybrid approach 8.1.2 prediction 8.3 prediction 8.2 evaluation/testing 8.2.1 unit gui web tested selenium ide firefox screenshots 8.4 selenium 1 pict- 2016-17 45 agricultural ensemble based hybrid approach 8.5 selenium 2 8.2.2 entire checked performance final satisfactory observed performance pf good average delay execute query le second pict- 2016-17 46 agricultural ensemble based hybrid approach 8.2.3 8.6 gui 8.7 performance pict- 2016-17 47 agricultural ensemble based hybrid approach 9 pict- 2016-17 48 agricultural ensemble based hybrid approach planned modeled implemented ensemble based hybrid approach efficiently predict rainfall region find relevance parameter rainfall displayed easily visualize query prediction displayed properly efficient comparison help improving efficiency rainfall prediction parameter rainfall accurate rainfall prediction factor social economical aim making accurate rainfall prediction ensemble based hybrid machine learning method improved ensemble refining genetic field pict- 2016-17 49 agricultural ensemble based hybrid approach ruchi desai prof.snehal gandhi stock market prediction 1 vol.2 2014 2 3 4 5 6 7 varuneshnichante prof. sulabhapatil review stock market analytic vol.4 2016 chunwei tsai1 chinfeng lai2 hanchieh chao1 athanasios vasilakos analytics 2015 kavitha s1 raja vadhana analytics financial market 2015 k. senthamarai kannan p. sailapathisekar m. mohamed sathik p. arumugam financial stock market forecast mining technique 2015 krishna kumar singh pritidimri krishna nandrastogi implication indian stock market vol.99 2014 marc-andr mittermayer forecasting intraday stock price trend text mining technique 2014 8 naga elegendy analytics review 2014 9 marc-andr mittermayer gerhard f. knolmayer text mining marketresponse news 2006 10 karthikkambatla giorgoskollias trend analytics 2014 11 valuenotes strategic intelligence pvt ltd. pict- 2016-17 50 agricultural ensemble based hybrid approach pict- 2016-17 51", "keywords": ["admin admin", "agricultural ensemble", "agricultural ensemble based", "based hybrid", "based hybrid approach", "catalog admin", "crop production", "crop yield", "crop yield crop", "decision tree", "description function", "ensemble based", "ensemble based hybrid", "field size", "hybrid approach", "market prediction", "mining technique", "panda library", "pict agricultural", "pict agricultural ensemble", "python panda", "python panda library", "query catalog", "rainfall crop", "rainfall crop yield", "rainfall prediction", "state transition", "stock market", "visualize query", "yield crop", "yield crop production"], "libraries": ["panda"], "languages": ["clean", "python", "beta", "javascript", "basic", "html"], "frameworks": [], "dbs": ["mongodb"]}, "./reports/7_final_report.pdf": {"title": "real estate consulting using   user profiling and behavioral tracking", "filename": "./reports/7_final_report.pdf", "data": "real estate consulting profiling behavioral tracking fulfilment pooja s. mali b120058578 alimuhammad h. shafi b120058623 gauri a. shelke b120058627 moeej y. tamboli b120058640 guidance mr. t.a rane sr. 27 pune-satara road 43 2016-2017 real estate consulting profiling behavioral tracking pooja s. mali b120058578 alimuhammad h. shafi b120058623 gauri a. shelke b120058627 moeej y. tamboli b120058640 bonafide prof. t.a rane fulfilment mrs. s. c. dharmadhikari earlier diploma mr. t.a rane mr. shyam deshmukh dr. p. t. cordinator examiner sponsorship completion acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting great pleasure satisfaction presenting real estate consulting customer profiling behavioral tracking express sincere gratitude dr. s. c. dharmadhikari invaluable support express deep sense gratitude prof. t. a. rane constant support encouragement express sincere gratitude coordinator prof. s. b. deshmukh acknowledge valuable criticism well timely appreciation humbling experience express sincere gratitude reviewer prof. n. v. buradkar prof. k. nandedkar invaluable support guidance sincerely making enriching experience pooja s. mali b120058578 alimuhammad h. shafi b120058623 gauri a. shelke b120058627 moeej y. tamboli b120058640 real estate consulting profiling behavioral tracking sr. 1 1.1 1.2 1.3 1.4 1.5 1.6 1.7 2 3 4 2.1 2.2 2.3 3.1 4.1 4.2 4.3 4.4 4.5 4.6 topic synopsis title option sponsorship background relevance undertaken 2.3.1 2.3.2 background 3.1.1 existing 3.2.1 proposed specification definition outcome 1 2 2 2 2 2 2 3 4 5 5 6 6 6 7 8 8 8 10 11 11 11 11 11 12 2016-17 real estate consulting profiling behavioral tracking 5 4.7 4.8 4.9 area client side 4.9.1 4.9.2 execution 4.9.3 4.9.4 4.9.5 4.10 5.1 5.2 4.10.1 4.10.2 architectural database 5.2.1 profiling parameter 5.3 component 5.3.1 acquisition 5.3.2 processing 5.3.3 cluster mapping 5.3.4 hybrid recommendation 5.3.5 front 5.4 usage scenario 5.4.1 profile 5.4.2 5.4.3 5.5 description 5.5.1 object 5.5.2 class 5.6 description 5.61 12 12 12 13 14 14 14 14 2016-17 real estate consulting profiling behavioral tracking 5.6.2 5.7 5.8 6 7 8 9 6.1 6.2 6.3 7.1 7.2 7.3 7.4 7.5 8.1 8.2 8.3 9.1 description deign constraint 6.2.1 6.2.2 methodologies/algorithm evaluation screenshots item procedure deployment maintenance installation un-installation help deployment 2016-17 real estate consulting profiling behavioral tracking 5.1 5.2 5.3 5.1 5.2 7.3 title architectural class screenshots 2016-17 real estate consulting profiling behavioral tracking title 4.1 4.2 5.1 cluster configuration 2016-17 real estate consulting profiling behavioral tracking abbreviation cocomo constructive cost mode icp ideal customer profiling 2016-17 real estate consulting profiling behavioral tracking internet house hunter digital support buying decision people going online current real estate website property based filtering customer requires exact time properly require keep searching till meet lot precious time solve drawback recommend property based profiling behavioral tracking profiling easy create profile help decision classified group group characteristic portrait decision e.g help achieve easily behavioral tracking online technique gathering interpreting customer browsing session reach targeted customer pattern employed homebuyer recorded browsing website number location screen fixate time spent fixation point serf indicator homebuyer preference search process seller buyer real estate property including residential well commercial property prove efficient real estate website keywords real estate profiling customer profiling behavioral tracking 2016-17 real estate consulting profiling behavioral tracking 1 synopsis 2016-17 real estate consulting profiling behavioral tracking 1.1 title real estate consulting profiling behavioral tracking 1.2 option industry sponsored 1.3 prof. t.r rane 1.4 sponsorship gcaptor solution pvt ltd. raghvendra 1.5 create profiling behavioral tracking recommend residential commercial property suit 1.6 internet house hunter digital support buying decision people going online current real estate website property based filtering customer requires exact time properly require keep searching till meet lot precious time solve drawback recommend property based profiling behavioral tracking user/customer profiling easy create profile help decision classified group group characteristic portrait decision e.g help achieve easily behavioral tracking online technique gathering interpreting customer browsing session reach targeted customer pattern employed homebuyer recorded browsing website 2016-17 real estate consulting profiling behavioral tracking number location screen fixate time spent fixation point serf indicator homebuyer preference search process seller buyer real estate property including residential well commercial property prove efficient real estate website 1.7 existing real estate website filter filtered property customer 's search filtered find perfect matching property profile keep searching property match buying property customer aspect area location parking nearby market area peaceful area property job location community wise property customer going investment property consider property satisfy recommend property match maximum profile main provide platform seller post property sell cluster machine learning create profile assign profile cluster property machine learning create property profile assign profile property recommend property matching property profile track searching pattern recommend property based property view combine recommendation profiling behavioral tracking 2016-17 real estate consulting profiling behavioral tracking 2 2016-17 real estate consulting profiling behavioral tracking recommendation machine learning everyday life recommender innovation going better focus recommendation real estate property based behavioral tracking user/customer profiling behavioral tracking online technique gathering interpreting customer browsing session reach targeted customer customer profiling gather process customer -- age income gender education buying pattern collect customer better fulfill recommendation output customer benefit indirectly reduces burden searching property 2.1 background artificial intelligence interested field machine learning behavioral tracking day internet adapting machine learning behavioral tracking understand searching behavior led interest field opportunity explore artificial intelligence find answer question company profile mapping technique customizing service customer order increase revenue intent behavioral tracking track customer internet build profile characteristic interest age gender living standard customization provide customer relevant interest help appropriate decision 2.2 relevance basic ease process searching real estate property online proposed enters based includes behavioral tracking customer profiling basis including website access social medium view email view based 2016-17 real estate consulting profiling behavioral tracking profile created machine learning profile match existing profile categorized category profile match existing profile profile created profiling recommendation based search history previous profile match 2.3 undertaken 2.3.1 aim build interactive website helpful invest profitable real estate matter considered parameter collect customer 's parameter property 2.3.2 real estate website magicbricks.com housing.com 99acres.com enter city locality society property select budget number room entered filtered buy rent property basically existing property filtering search his/her doesnt recommend property recognizing effort searching suitable property save 's searching effort valuable time build customer profile based including website access social medium view email view comparing customer 's profile recommends suitable relevent property buy 2016-17 real estate consulting profiling behavioral tracking 3 background 2016-17 real estate consulting profiling behavioral tracking 3.1 3.1.1 existing decade house seeker increasingly internet dependent consumer depending internet buying decision 10 seeker depend internet preference searching search real estate increased 22 year year quarter search real estate happen mobile phone website real estate consulting magicbrics.com 99acres.com enter location society select budget bhk entered filtered buy rent property basically existing property filtering search his/her doesnt recommend property recognizing effort searching suitable property 3.1.2 proposed reduce 's searching effort proposed build customer profile based including website access social medium view email view comparing customer profile recommends suitable property buy 3.1.2.1 user/customer profiling customer profiling portrait customer created help decision service firstly characteristic customer identified customer sharing characteristic classified group group identification photo description group called 'personas decision customer profile group formed represent kind customer behavior helpful customer centric decision 2016-17 real estate consulting profiling behavioral tracking profile persona understanding studied understood situation customer find interacting website shop floor thing needed creating customer profile touch point website shop floor seller reach icp easily 3.1.2.2 behavioral tracking range technique advertiser online publisher increasing efficiency effectiveness advertisement web browsing behavior customer called behavioral tracking behavioral tracking select advertisement display collected web browsing behavior individual includes individual visited searched individual visit amount time stay link click thing search thing collected site profile created behavior site publisher classify profile individual return specific site series site browser created profile helpful allow advertiser advertiser screen front advertiser reaching perfect interested customer customer find advertisement relevant marketing profitable behavioral tracking 2016-17 real estate consulting profiling behavioral tracking 4 specification 2016-17 real estate consulting profiling behavioral tracking 4.1 definition create customer profiling behavioral tracking recommend residential/commercial property suit 4.2 website allows search property residential commercial search option provided search property locality searching option city locality property budget click search website property based search criterion asked fill extra form understand collected input customer profiling categorizes category recommend property behavioral tracking viewed property website seller well buyer kind residential commercial property seller post advertisement property ranging apartment flat bungalow villa penthouse commercial shop 4.3 outcome recommend property suitable profile 4.4 seller post property kind buyer search property kind 4.5 sr. parameter minimum 1 2 3. cpu speed ram storage space 1.8 ghz 1 gb 1 gb 2016-17 real estate consulting profiling behavioral tracking 4.6 resourcs sr. parameter minimum 1 2 3 4. operating linux ubuntu 14.04 higher programming language python php javascript ide database php myadmin mysql 4.7 area category recommendation sub-category web based online 4.8 client side window xp sp2+ mac 10.8+ ubuntu 12.04+ steamos+ 32 bit/64-bit operating web browser firefox chrome 4.9 4.9.1 4.9.1.1 major function major function function recommendation function function 4.9.1.2 constraint requires waterfall requires linear approach provided waterfall event gathering 2016-17 real estate consulting profiling behavioral tracking designing implemented deployment maintenance 4.9.2 execution a. identification searching identifying finalizing b. conceptualization concept building studied level designing stage preliminary presentation clarification c. detailed stage low-level designing designed better visualization d. coding actual start stage coding coding 10 12 week e. unit initially tested number gui scenario involving tested separately f. integration integrated integrated component performed includes evaluation g. product wa tested context entire window os platform performance monitored h. documentation detailed document prepared stage gathering initial wa a. understanding definition b. understanding current scenario enterprise c. gathering 2016-17 real estate consulting profiling behavioral tracking d. gathering e. preparing preliminary workflow f. deciding execution g. execution actual 4.9.3 estimation technique three point based estimation based estimation process based estimation applied 4.9.3.1 based estimation provide insight estimation level structural hierarchy established average length determined defined rough considered characteristic established empirical establish loc historical compute effort based estimation decomposition wa performed major identified 1. evaluating 2. customer property profile creation behavioral tracking 3. profile matching 4. validating recommendation total loc 10 000 4.9.3.2 process based estimation common technique estimating base process process decomposed small effort accomplish estimated problem-based technique process based estimation delineation function series framework 2016-17 real estate consulting profiling behavioral tracking performed function function process melded planner effort e.g person-months accomplish process function constitute central matrix process estimation average labor rate applied effort estimated process labor rate vary cost effort function computed step process based estimation decomposition wa performed major function identified function 1. input creating property profile 2. tracking browsing behavior 3. mapping profile property profile 4. recommending property 4.9.3.3. final time reconciliation 3.5 month 4.9.4 4.9.4.1 decomposition critical determined 6 leading development breakdown major t1 initial a. setting apache server php mysql database b. checking connection t2 database schema creation store a. designing database schema 2016-17 real estate consulting profiling behavioral tracking b. implementing database schema t3 creating front ui input a. studying front creation web b. creating ui gathering registration form form c. connecting front t4 input gathering property a. developing code collect property b. organizing property t5 developing search property a. providing filter search b. fetching property based filtering t6 selecting parameter recommendation a. studying property b. selecting c. checking validity parameter t7 developing code recommendation a. writing machine learning property b. developing mapping function property c. designing implementing schema m/c t8 developing code fetch property specific a. developing code fetch property b. code organize fetched property ranking c. displaying property webpage t9 a. checking validity m/c 2016-17 real estate consulting profiling behavioral tracking b. checking recommendation profile c. throughput web d. integration fig 5.1 network 4.9.4.2 sr softwares/technologies period week 1 2. initial apache2 php mysql database schema creation mysql store 3. creating front input html cs javascript 4 5 6 7. input gathering developing search html cs php selecting parameter developing code python php mysql recommendation 8. developing code fetch html javascript property 1 1 2 2 2 2 3 1 2016-17 real estate consulting profiling behavioral tracking 3 9. 4.9.5 fig 6.1 4.10 managment 4.10.1 failing equipment delay delivery reliable continuous change standard meet expectation 4.10.2 equipment failure 65 2 2016-17 real estate consulting profiling behavioral tracking delay delivery reliable continuous change standard meet expectation 35 20 25 15 2 2 3 2 2016-17 real estate consulting profiling behavioral tracking 5 2016-17 real estate consulting profiling behavioral tracking 5.1 architectural basic workflow browser asked provide extra include profession preferred lifestyle preferred surrounding parking preference community preference searching viewing pattern logged based clustered k-means clustering property recommended based profile generated search history update preference change profile depending property recommended based search history recommended property search history 5.2 database property stored mysql database description 5.2.1 profiling parameter 2016-17 real estate consulting profiling behavioral tracking profiling parameter parameter based customer property clustered includes 1. profession enter profession industry automobile industry education small business 2. family enter family small size 1-4 medium size 5-8 size 8 3. parking preference enter parking preference wheeler wheeler 4. lifestyle enter lifestyle career oriented family oriented 5. surrounding preference enter surrounding preference market area theatre mall peaceful area 2016-17 real estate consulting profiling behavioral tracking 6. community enter community gujrati jain bhramin muslim christian 7. carpet area preference enter carpet area preference 0-500 sq ft. 500-1000 sq ft. 100-1500 sq ft. 1500-2000 sq ft. 2000 sq ft. 8. floor number enter floor number 0-5 5-10 10-15 15 5.3 component 5.3.1 acquisition asked enter preference based preference clustered 5.3.2 processing involves clustering clustered 5.3.2 cluster mapping cluster mapped property cluster find matching property cluster 2016-17 real estate consulting profiling behavioral tracking comparing centroid cluster centroid property cluster property cluster arranged decreasing order similarity cluster 5.3.4 hybrid recommendation property recommended combining profiling behavioral tracking behavioral tracking recommend property based search 5.3.5 front property screen property best suited customer/user based preference 5.4 usage scenario 5.4.1 profile 1. buyer buyer person searching property rent/sell 2. owner owner person sell property provide property rental basis 3. admin person business financial admin authorized person manages buyer owner 5.4.2 5.4.3 2016-17 real estate consulting profiling behavioral tracking 5.5 description 5.5.1 object image label stored di erent pickle le csv le sample eld lename image lename training le train.zip title title painting string style style painting string 5.5.2 class 2016-17 real estate consulting profiling behavioral tracking 5.6 description 5.6.1 5.6.1.1 buyer 2016-17 real estate consulting profiling behavioral tracking .5.6.1.2 seller 2016-17 real estate consulting profiling behavioral tracking 5.6.1.3 admin 2016-17 real estate consulting profiling behavioral tracking 5.6.2 5.6.2.1 buyer 2016-17 real estate consulting profiling behavioral tracking fig 5.7. buyer 2016-17 real estate consulting profiling behavioral tracking 5.6.2.2 buyer fig 5.8. owner 2016-17 real estate consulting profiling behavioral tracking 5.6.2.3. buyer 5.7 description web based allow search property fill extra preference form owner property post property entering property .the developed html cs dependent language 5.8 constraint 2016-17 real estate consulting profiling behavioral tracking constraint people provide asked limit capability good recommendation preference change time time dont update making recommendation le accurate 2016-17 real estate consulting profiling behavioral tracking 6 2016-17 real estate consulting profiling behavioral tracking 6.1 browser asked provide extra include profession preferred lifestyle preferred surrounding parking preference community preference searching viewing pattern logged based clustered k-means clustering property recommended based profile generated search history update preference change profile depending property recommended based search history recommended property search history 6.2 6.2.1 phpmyadmin phpmyadmin free source administration mysql mariadb mysqlii mysqli extension mysql improved relational database driver php programming language provide mysql database mysql connector/python self-contained python driver communicating mysql 6.2.2 front html php javascript mysql programming php python 2016-17 real estate consulting profiling behavioral tracking 6.3 6.3.1 k-means clustering k-means clustering method vector quantization originally signal processing popular cluster mining k-means clustering aim partition observation cluster observation belongs cluster nearest serving prototype cluster partitioning space voronoi cell clustering property string1= '' select propertyextra order asc '' import mysql.connector mysql.connector import error sklearn.cluster import kmeans import numpy np def connect `` '' '' connect mysql database `` '' '' conn mysql.connector.connect host='localhost database='property4u user='root password='mysql cursor conn.cursor cursor.execute `` select profession family_size lifestyle vehicle surrounding propertyextra order asc '' row cursor.fetchall print 'total row cursor.rowcount row row print row kmeans kmeans n_clusters=15 random_state=0 .fit row var kmeans.labels_ cursor.execute string1 rows2 cursor.fetchall print rows2 print row var2 kmeans.cluster_centers_ print var2 range 0 5 print var 2016-17 real estate consulting profiling behavioral tracking print var2 print var2 query `` update propertyextra cluster= int var i+=1 cursor.execute query conn.commit string1= '' select cluster propertyextra '' cursor.execute string1 rows2 cursor.fetchall print rows2 i=0 j=0 row rows2 row 0 row 1 row 2 row 3 row 4 query `` update propertyextra cluster= profession= family_size= lifestyle= vehicle= surrounding= '' id= '' 4 profession= family_size= lifestyle= vehicle= surroundin g= value= '' float float float float float error print finally conn.close range 0 15 a=var2 0 b=var2 1 c=var2 2 d=var2 3 e=var2 4 cursor.execute query conn.commit print var2 0 var2 1 var2 2 var2 3 var2 query `` update propertycluster 2016-17 real estate consulting profiling behavioral tracking __name__ == '__main__ connect clustering string1= '' select userextra order asc '' cursor.execute string1 rows2 cursor.fetchall print rows2 print row import mysql.connector mysql.connector import error sklearn.cluster import kmeans import numpy np def connect `` '' '' connect mysql database `` '' '' conn mysql.connector.connect host='localhost database='property4u user='root password='mysql cursor conn.cursor cursor.execute `` select profession family_size lifestyle vehicle surrounding userextra order asc '' row cursor.fetchall print 'total row cursor.rowcount row row print row kmeans kmeans n_clusters=15 random_state=0 .fit row var kmeans.labels_ query `` update propertyextra cluster= profession= family_size= lifestyle= vehicle= surrounding= '' var2 kmeans.cluster_centers_ print var2 i=0 j=0 row rows2 row 0 row 1 row 2 row 3 row 4 query `` update userextra cluster= id= '' int var print var 2016-17 real estate consulting profiling behavioral tracking query `` update usercluster a=var2 0 b=var2 1 c=var2 2 d=var2 3 e=var2 4 i+=1 cursor.execute query conn.commit range 0 15 string1= '' select cluster userextra '' cursor.execute string1 rows2 cursor.fetchall print rows2 profession= family_size= lifestyle= vehicle= surroundin g= value= '' float float float float float error print finally conn.close __name__ == '__main__ connect cursor.execute query conn.commit 2016-17 real estate consulting profiling behavioral tracking 7 evaluation 2016-17 real estate consulting profiling behavioral tracking 7.1 aim provide online real-estate property search website enable view property recommended based profile browsing behavior website search property request create profile better log creates profile submits website completion profile creation recommends property based profile previous browsing behavior 7.2 screenshots 2016-17 real estate consulting profiling behavioral tracking 2016-17 real estate consulting profiling behavioral tracking 2016-17 real estate consulting profiling behavioral tracking 2016-17 real estate consulting profiling behavioral tracking 2016-17 real estate consulting profiling behavioral tracking 7.3 item applies well integration input output tested validity tested final tested 7.4 unit boundary function executed integration 7.4.1 unit unit focus verification effort smallest unit component occur running 2016-17 real estate consulting profiling behavioral tracking selected unit ensure detailed unit correctly implemented 7.4.2 integration integration systematic technique constructing time conducting uncover error associated combine major main tested involves basic procedure invocation execution 7.4.3 item pas /fail criterion unit level unit level satisfies condition completed function return expected output input boundary pass boundary condition input function tested validity integration level unit level completed including boundary condition gesture implemented valid performance display acceptable limit 7.4.4 suspension criterion failure occur outlier normal runtime condition halted development occur 2016-17 real estate consulting profiling behavioral tracking 7.5 procedure apart function major tested described unit applied integrated 7.5.1 unit 1 aim validate function input blank username password expected error actual error 2 aim verify search functionality parameter searching property expected property based parameter actual expected 3 aim clustering property expected cluster property actual cluster formation outlier 4 aim mapping expected property cluster nearest centroid assigned cluster 2016-17 real estate consulting profiling behavioral tracking actual expected 7.5.2 integration 1 aim integrate property website parameter search filter expected property matching provided filter actual expected 2 aim integrate clustering mapping profile expected recommendation matching profile actual expected 7.5.3 black box black-box method examines functionality peering working typical black-box technique include decision all-pairs equivalence partitioning boundary causeeffect graph error guessing 7.5.4 white box 2016-17 real estate consulting profiling behavioral tracking white-box clear box glass box transparent box structural method working opposed functionality i.e black-box white-box perspective well programming skill white-box method level source code derived technique mentioned control branch coverage decision coverage modified condition/decision coverage prime path path 2016-17 real estate consulting profiling behavioral tracking 8 deployment maintenance 2016-17 real estate consulting profiling behavioral tracking 8.1 installation un-installation web site usage site simply site browser installation un-installation 8.2 help website require documentation help designed easily 2016-17 real estate consulting profiling behavioral tracking 9 2016-17 real estate consulting profiling behavioral tracking 9.1 proposed main customer profiling behavioral tracking customer profiling easy create profile customer help decision customer grow mature customer profile continually time condition warrant behavioral tracking online technique gathering interpreting customer browsing session reach targeted customer comparing parameter age salary family status community current accommodation existing tracking online behavior generates suitable profitable flat bungalow buy kind domain online real estate business recommendation great today web based customer behave internet i.e nature searching pattern biggest advantage collecting customer making decision up-to-date engaged site personalized product recommendation prove efficient existing 2016-17 real estate consulting profiling behavioral tracking 1. riccardo guidotti michele coscia dino pedreschi diego pennacchioli '' behavioral entropy profitability retail '' science advanced analytics dsaa 2015 36678 2015. international conference 1- 10 2015 2. short-term load forecasting profile identification customer segmentation based periodic time series transaction power volume 20 issue 3 aug. 2015 3. customer characterization option improving tariff offer transaction power volume 18 issue 1 feb 2013 4. third-party web tracking policy security privacy sp 2012 symposium security privacy volume 9 issue 3 2013 5. sparse real estate ranking online review offline moving behavior 14th international conference mining 6. x. li k. wang w. wang y. li `` multiple object tracking method kalman filter '' proc 2010 international conference automation 7. b. alexander smart meter real time pricing demand response program implication income electric customer 2012 8. g. chicco r. napoli f. piglione `` comparison clustering technique electricity customer classification '' trans power syst 21 2 933-940 2011ss 9. a. mutanen m. ruska s. repo p. jarventausta `` customer classification load profiling method distribution '' trans power del 26 3 1755-1763 jul 2011 10. y. zhang z. liu `` irregular behavior recognition based treading track '' proc int conf wavelet anal pattern recog 1322-1326 07 2014 2016-17", "keywords": ["alimuhammad shafi", "based estimation", "behavioral tracking", "buying decision", "classified group", "classified group group", "cluster property", "commercial property", "create profile", "cursorexecute query", "cursorexecute query conncommit", "cursorfetchall print", "cursorfetchall print rows", "customer classification", "customer profile", "database schema", "deployment maintenance", "developing code", "easy create", "easy create profile", "estate consulting", "estate property", "estate website", "group group", "int var", "international conference", "matching property", "mysql database", "parking preference", "php javascript", "php mysql", "pooja mali", "post property", "print rows", "print var", "profession familysize", "property based", "property cluster", "property profile", "propertyextra cluster", "python php", "query conncommit", "real estate", "real estate consulting", "real estate property", "real estate website", "recommend property", "residential commercial", "residential commercial property", "search history", "search property", "seller post", "string rows", "ta rane", "targeted customer", "trans power"], "libraries": ["numpy"], "languages": ["php", "python", "html", "cs", "sr", "javascript", "basic", "small"], "frameworks": [], "dbs": ["mariadb", "mysql"]}, "./reports/9_final_report.pdf.pdf": {"title": "eventnote \u2013 event based reminder system", "filename": "./reports/9_final_report.pdf.pdf", "data": "eventnote event based reminder khomane pradip kasabe nikhil padwal dipali padwal rupali b120058565 b120058561 b120058593 b120058594 guidance prof. s.s. pande s. 27 satara road 411043 2016-2017 eventnote event based reminder khomane pradip kasabe nikhil padwal dipali b120058565 b120058561 b120058593 padwal rupali b120058594 bonafide prof. s. s. pande earlier diploma prof. s.s. pande examiner prof. s. b. deshmukh coordinator dr. p. t. 2017 sponsorship letter completion letter acknowledgement compromise theoretical consideration practical involves non-technical experience source express feeling gratitude number people instrumental supportive completion assessment express sincere regard prof. s. s. pande coordinator prof. s. b. deshmukh valuable suggestion help undertaken complete kind assistance encouragement express profound dr. a. m. bagade charge h.o.d cheerful encouragement valuable suggestion support vital helped complete thankful mentor avaya india pvt ltd. mr. sriram viswanathan constant assistance provided forget express immense sense thankfulness dr. p. t. staff college extended co- operation needed completion help received staff thankful friend offered helping hand needed family supporting spiritually life khomane pradip kasabe nikhil padwal dipali padwal rupali title 2.1 3.1 3.2 comparison existing description 9 14 18 ii fig title 3.1 3.2 4.1 4.2 4.3 4.5 architectural proposed class event_note 16 17 21 24 26 27 iii jdk api jre gps abbreviation java development kit programming java runtime environment global positioning iv title acknowledgement abbreviation 1 1.1 1.2 1.3 relevance 2 background review chapter-2 2.1 2.2 background review 2.2.1 existing 2.2.2 proposed 2.3 comparative study 3 specification 3.1 3.1.1 3.1.2 3.1.3 3.2 major constraint 3.2.1 usage scenario ii iii iv 1 2 3 4 4 6 7 7 7 9 9 10 11 11 11 12 12 12 3.3 specification 13 3.3.1 13 3.3.2 cocomo 13 3.3.3 14 3.3.4 gantt 15 3.3.5 staff 3.4 description 16 16 3.5 19 4 20 4.1 21 4.2 main component 22 4.2.1 android 22 23 23 23 24 24 4.2.2 desktop 4.2.3 database 4.3 description 4.3.1 description 23 4.4 description 4.4.1 description function 4.4.2 description 25 4.5 control description 5 5.1 5.1.1 manifest file 5.1.2 incoming call 5.1.3 outgoing call 5.1.4 time based reminder 5.1.5 location based reminder 5.1.6 internet connected 6 evaluation 26 28 29 29 30 31 31 33 34 35 6.1 experimental setup 36 6.2 strategy 36 6.3 6.4 7 1. base paper 2. plagiarism 3. review sheet ii iii iv 37 39 48 50 eventnote event based reminder existing kind reminder service handheld device restricted calendar based time combination decides activation reminder reminder service context based doe allow utilization event occurrence calendar utilized reminder service scenario alerted event perform action based event time-bound event-based reminder setting prompt active instance specific device installed pertains handheld device example contemporary mobile phone reminder calendar based remove rigidity associating time event keywords cloud computing android reminder gps pict-information technology-2016-2017 1 eventnote event based reminder 1 pict-information technology-2016-2017 2 eventnote event based reminder ____________________________________________ 1.1 mobile industry experiencing rapid innovation fast paced smart device industry deluge people adapting device innovation increasing day day lack context awareness feel stale throw enormous strong challenge developer creating innovative contemporary society people overwhelmed number accomplished ranging day based meeting non-daily based buying grocery paying bill help remember basic practice note paper based day planner post-it and/or smartphones reminder crucial mobile device help memorize remind specific occasion traditional reminder time based reminder i.e enters reminder message reminder time time periodically repeated time display reminder message screen setting time alert year witnessed rapid development smart device 2 ability sense location aspect smart phone separate conventional term benefit utility smart phone easily smart phone accessing location based google map driving direction location sensing well recognized accepted fame gps based navigation today smart phone built-in location sensing capability people rely smart phone on-the-go office apps influence location based service add real 4 event based remainder method performing alerting basis occurrence event achieve aforementioned implementing event-based reminder handheld pict-information technology-2016-2017 3 eventnote event based reminder android device comprising plurality input receive stage setting reminder storage unit store processing configd wait stored event activate reminder stated manner plurality output alert event occurs example joe hope remembers mother recipe christmas cake time call call situation mother call call mother on-screen reminder `` remember recipe '' message situation evaluated term precise time context based time based context event based alert service 1.2 general location based reminder location he/she reminded doe time unknown location he/she reminded difficult reminder situation location based reminder generated approaching location context generated he/ driving road location reminder app alert normal text based notification distract concentration driving accident difficulty motivated development eliminate effort bringing functionality single enhance people reminder 1.3 relevance reminder busy people remember writing good keep track piece paper current scenario reminder remembering thing based time based location time based reminder allow forget reminded specific time location based reminder reminded one-two kilometer range location pict-information technology-2016-2017 4 eventnote event based reminder hand multiple remember daily special reminder based event incoming outgoing call launching help reminder event well time location overhead keeping multiple remind thing help remember easily pict-information technology-2016-2017 5 eventnote event based reminder 2 pict-information technology-2016-2017 6 eventnote event based reminder background review ____________________________________________ 2.1 background event based remainder method performing alerting basis occurrence event achieve aforementioned implementing event-based reminder handheld android device comprising plurality input receive stage setting reminder storage unit store processing configd wait stored event activate reminder stated manner plurality output alert event occurs example joe hope remembers mother recipe christmas cake time call call situation mother call call mother on-screen reminder '' remember recipe '' message situation evaluated term precise time context based time based context event based alert service 2.2 review 2.2.1 existing existing kind reminder service handheld device restricted calendar based time combination decides activation reminder reminder service context based doe allow utilization event occurrence calendar utilized reminder service scenario alerted event perform action based event time-bound paper authored ali mert ertugrul itir onal 1 location based reminder enhanced location tagging option help social networking apis main aim allow create location based reminder advance time based reminder alert automatically pict-information technology-2016-2017 7 eventnote event based reminder consisting component location tagging tag location help google map api embedded sensor foursquare creates reminder tagged location alert closer tagged location advanced social reminder usability presented indicating effective reminder paper authored damio r. de almeida cludio de souza baptista elvis r. da silva cludio e. campelo 3 service-oriented context- aware proposed accessed device browser based web service location based proposed opengeospacial consortium paper omnipresent context-aware based push pull service pull mode demand service push mode doe control deliver point interest poi automatically based context profile main purpose help finding friend service point interest context paper authored vishal gaurav virendra kumar shrivastava 4 novel innovative approach offline context awareness computing smart phone develops android computing engine analyze defined context smartphones intelligent help context engine help reminding his/her analyzes offline smartphones help context engine add parameter existing time location based reminder help reminding 4 paper authored yanshuai zhang hong 5 context-aware computing obtains store context scenario sensor analyzes context personalized intelligently paper distributed assistant obtaining context grid computing environment proposes learning mechanism process context enhances robustness scalability server storing context saas server pict-information technology-2016-2017 8 eventnote event based reminder 2.2.2 proposed event based remainder method performing alerting basis occurrence event addition proposed reminder based location time achieve aforementioned implementing event-based reminder handheld android device storage unit cloud store processing configd wait stored event activate reminder stated manner 2.3 comparative study existing proposed 2.1 comparison existing develop remind based event occurs device allow perform action based location time help manage efficiently effectively pict-information technology-2016-2017 9 eventnote event based reminder 3 pict-information technology-2016-2017 10 eventnote event based reminder specification 3.1 today manage daily life moving faster difficult manage current scenario manage efficiently calendar based reminder service market based location calendar proposed combination time location event occurs device enable reminder based time location event reminder prompt criterion fulfilled help scenario manage efficiently platform independent device allow device specific reminder specific event perform action 3.1.1 main enhance innovate people reminder allow note reminder based time location event help remind thing easily 3.1.2 main 1. main proposed enhance innovate people reminder 2. innovation proposed achieved helping people create event based location based time based reminder 3. allows synchronize note event mobile desktop desktop mobile share note 4. allows people create note reminder event i.e incoming outgoing call message launch alert pict-information technology-2016-2017 11 eventnote event based reminder functionality regular pop-up notification allows perform based event 3.1.3 initial stage focus allows people create note reminder event i.e incoming outgoing call message launch alert functionality regular pop-up notification performing speech text note ongoing call situation meaningful performed event incoming/outgoing call reminder activated event occurs history event stored cloud database avail service sync event note his/her smart phone 's mobile wi-fi switched note event mobile desktop vice-versa avail internet allow reminder event occurs smartphone event desktop smartphone smartphone desktop app offline 3.2 major constraint 3.2.1 usage scenario occupation age 13 experience basic understanding mobile device experience internet connection pict-information technology-2016-2017 12 eventnote event based reminder 3.3 specification 3.3.1 3.3.1.1 staff android designer android designer order decide android developer android developer order develop android database handler database handler order handle database change database documentation handler documentation handler order create document change document tester tester order developed applying appropriate developing strategy 3.3.2 cocomo cocomo stand constructive cost cost effort complete depending calculated number person complete semi- detached kilo code 10 semi- detached co-efficient ab co-efficient bb co-efficient cb co-efficient db semi-detached 3.0 1.12 2.5 0.35 pict-information technology-2016-2017 13 eventnote event based reminder effort applied ab kloc 3.0 8 1.12 effort applied 32.966 persons/month development time cb effort applied 2.5 32.966 0.35 development time 8.497 month people effort applied/ development time 32.966/8.497 people 3.88 4. people complete 4 3.3.3 3.1 start discussion 15/06/2016 topic finalization 16/07/2016 21/07/2016 coding 2/9/2016 documentation 16/03/2017 26/03/2017 15/07/2016 20/07/2016 1/09/2016 15/03/2017 26/03/2017 04/04/2017 pict-information technology-2016-2017 14 eventnote event based reminder 3.3.4 gantt order food eatery time wait placing order collecting order recommendation based order best proper food easy dynamic menu dynamic listing eatery recommendation save time provide food option pict-information technology-2016-2017 15 eventnote event based reminder 3.3.5 staff 3.3.5.1 consists finalized change fig 3.1 3.3.5.2 member role monitor keep track preparing involves coding documentation guidance 3.4 description gather view describe behavior event note running main actor second db server reminder based time location event edit update delete search reminder pict-information technology-2016-2017 16 eventnote event based reminder profile 1. primary actor install log note based time location event incoming/outgoing call wi-fi launch 2. administrator administrator monitor handle database keep track note online offline current note previous note pict-information technology-2016-2017 17 eventnote event based reminder fig 3.2 use-case description 3.2 use-case description use-case use-case description customer order registered verification view category icon time location event displayed reminder select reminder time location event option selected customer title note note remind thing title note select alert notification select alert notification alert pop-up silent vibrate edit note edit note modify note search note search note title update note update note view note view note monitor database admin monitor handle database specification add note description add note reminding specific primary actor precondition menu connected pict-information technology-2016-2017 18 eventnote event based reminder event predefine post condition 1. expected reminder 2. event 3. event stored database 3.5 mobile ram 1024 mb cpu speed 1.8 ghz 500mb disk desktop ram 1024 mb cpu speed 1.8 ghz 500mb disk gb disk space 500 mb ide 1.5 gb android sdk emulator image operating linux programming language java version 7 onwards javascript library android api java api infrastructure iaa cloud platform android studio pict-information technology-2016-2017 19 eventnote event based reminder 4 pict-information technology-2016-2017 20 eventnote event based reminder _________________________________________ 4.1 fig 4.1 proposed mobile help event mobile well desktop event mobile store local database internet connected connected internet transfer local database cloud database backup event desktop mobile event store local database well cloud retrieved cloud desktop synchronization manager pict-information technology-2016-17 21 eventnote event based reminder desktop help event mobile well desktop event desktop store local database internet connected connected internet event store local database well cloud database backup event mobile desktop event store local database cloud retrieved cloud mobile synchronization manager 4.2 main component main component android desktop database 4.2.1 android component requires reminder time location event incoming/outgoing call wifi excel sheet browser reminder based event install order three main option setting reminder time location event select note reminder receive call call receive call call note alert notification select alert notification alert pop-up silent vibrate reminder event wifi internet connected launch pict-information technology-2016-17 22 eventnote event based reminder 4.2.2 desktop help event mobile well desktop event desktop store local database internet connected connected internet event store local database well cloud database backup event mobile desktop event store local database cloud retrieved cloud mobile synchronization manager 4.2.3 database local database local database store event internet connection transfer event note cloud syncing multiple device cloud database cloud online storage stored accessible multiple client transfer event note local syncing multiple device 4.3 description 4.3.1 description kind input 4.3.1.1 time based reminder title note selected selected time 4.3.1.2 location based reminder selected location alert notification pict-information technology-2016-17 23 eventnote event based reminder 4.3.1.3 event based reminder title note selected event contact alert notification output generated thing pop-up class fig 4.2 class event_note pict-information technology-2016-17 24 eventnote event based reminder 4.4 description 4.4.1 description function function performed basic functionality registration phase includes uploading basic username email_id mobile number selection reminder includes selection reminder reminder includes time location event based .after selection alert notification note setting phase phase write note title note selection phase includes selection time time based reminder selection location location based reminder selection contact number incoming /outgoing call event phase phase alert notification based note 4.4.2 description described reminder time location event selecting predefine event listed selecting event provide contact number incoming/outgoing call time timer based reminder location location based reminder alert notification displayed click save button note saved edit search option edit note search note pict-information technology-2016-17 25 eventnote event based reminder 4.5 control description pict-information technology-2016-17 26 eventnote event based reminder fig 4.3 fig 4.4 pict-information technology-2016-17 27 eventnote event based reminder 5 pict-information technology-2016-17 28 eventnote event based reminder _________________________________________ 5.1 consists android desktop android studio android swing desktop database sqlite java connectivity android java location based reminder google map apis functionality time based reminder timechooser class main implemented incoming/outgoing call time based reminder location based reminder internet connected launch 5.1.1 manifest file androidmanifest.xml file root directory manifest file essential app android app 's code core element service broadcast receiver activated intent intent bundle describing desired action including acted category component perform action pertinent instruction android locates appropriate component respond intent launch instance component pass intent object pict-information technology-2016-17 29 eventnote event based reminder 5.1.2 incoming call helpful event play call instance display pop-up send call server incoming call utilize telephonymanager class method listen listener receive call state connection sim event telephony call state notification requires android.permission.read_phone_state permission create listener class derived phonestatelistener override oncallstatechanged method argument state call state call_state_ringing call_state_offhook call_state_idle ringing state calling hook active hold call idle calling active call interested ringing state second argument incoming number 's number calling code listener `` toast '' message phone number incoming call ringing pict-information technology-2016-17 30 eventnote event based reminder 5.1.3 outgoing call outgoing call sends broadcast action android.intent action.new_outgoing_call broadcast receiver receive intent action receive broadcast android.permission.process_outgoing_calls permission 5.1.4 time base reminder android time picker allows select time day 24 hour am/pm mode time consists hour minute clock format android functionality timepicker class utilize timepicker class characterize timepicker segment activity.xml characterize beneath android picker allows select consisting day month year custom functionality android datepicker pict-information technology-2016-17 31 eventnote event based reminder datepickerdialog component order datepickerdialog pas datepickerdialog showdialog id_of_dialog method syntax pict-information technology-2016-17 32 eventnote event based reminder 5.1.5 location based reminder location object represents geographic location consist latitude longitude time stamp bearing altitude velocity method location object location specific item ordered count item decrement count reach item displayed pict-information technology-2016-17 33 eventnote event based reminder 5.1.6 internet connected create class named connectivityreceiver.java extend broadcastreceiver receiver class notified change network internet connection pict-information technology-2016-17 34 eventnote event based reminder 6 pict-information technology-2016-17 35 eventnote event based reminder evaluation _________________________________________ 6.1 experimental setup experimental setup described hosted server aws free tier mysql cloud database synchronization android desktop local database sqlite database local database android desktop android studio front java coding firstly text note reminder event invocation time location .this stored local database well cloud database reminder android applicaton desktop vice-versa pop-up retrieve mysql cloud database retrieve local database based pop-up invocation event pop reminder remembering thing code executed emulator change converted .apk format android studio .apk file imported android phone installed executed 6.2 strategy unit strategy unit process development small individually tested unit individually tested integrating help unit amount error removed good built unit designed tested separately find bug bug error corrected main advantage unit individually unit thing sure tested separately multiple tested simultaneously unit input individual check output pict-information technology-2016-17 36 eventnote event based reminder output correct tested output bug error change correct bug error unit applied process continues correct error free output unit strategy amount bug error minimized built efficient unit strategy 6.3 6.3.1 check credential entered correct checked credential entered correct customer enters correct credential wrong credential entered customer allowed asked enter correct credential customer logged enters correct credential tested wrong credential correct credential customer enters wrong asked enter customer enters correct credential logged 6.3.2 check note check text note text based note reminder based time location event occurrence event instance time note displayed 6.3.3 check accuracy location event note correct check location event accurately working execution accurate runtime location entering location event occurred pict-information technology-2016-17 37 eventnote event based reminder radius location check accuracy location correct 6.3.4 check nearby location displayed correctly checked reminder location located nearby kilometer displayed correctly latitude longitude location stored database location reminder located one-two kilometer range displayed nearby location located one-two kilometer range displayed 6.3.5 check incoming outgoing call event detected correctly tested state incoming outgoing call recognised call state matched text note displayed reminder contact number contact check display message .and display message wa 6.3.6 check update delete reminder update delete reminder wa reminder fixed time updated timing reminder executing pop-up updated time timing wa 6.3.7 check time event pict-information technology-2016-17 38 eventnote event based reminder time event device validation applied event current time implemented time event validation 6.3.8 check alert exact time predicted rating item rated customer rating food item item left unrated applying item-item collaborative filtering rating predicted unrated item 6.4 6.4.1 adding note pict-information technology-2016-17 39 eventnote event based reminder pict-information technology-2016-17 40 eventnote event based reminder 6.4.2 accuracy location pict-information technology-2016-17 41 eventnote event based reminder 6.4.3 nearby location pict-information technology-2016-17 42 eventnote event based reminder pict-information technology-2016-17 43 eventnote event based reminder 6.4.4 detecting incoming outgoing call pict-information technology-2016-17 44 eventnote event based reminder pict-information technology-2016-17 45 eventnote event based reminder 6.4.7 time based reminder pict-information technology-2016-17 46 eventnote event based reminder pict-information technology-2016-17 47 eventnote event based reminder 7 pict-information technology-2016-17 48 eventnote event based reminder help people organize effectively burden remembering thing reminding specific event time location alert popup event incoming call outgoing call wi-fi connection internet connection mobile device note contact number write note link selected contact number incoming call event triggered alert popup nice thing storing online automatically backed time log device mobile phone desktop laptop etc. device add multiple event event compatible window mac linux platform pict-information technology-2016-17 49 eventnote event based reminder _________________________________________ 1 ali mert ertugrul itir onal remindme enhanced mobile location- based reminder international conference internet thing cloud 2014 2 xinxin zhao lingjun li guoliang xue remindu secure efficient location based reminder security symposium 1-4 2014 3 damio r. de almeida cludio de souza baptista elvis r. da silva cludio e. c. campelo context-aware based service-oriented 2015 4 vishal gaurav virendra kumar shrivastava offline context-aware computing insmart device intelligent reminder 2015 5 yanshuai zhang hong intelligent business assistant based context- awarecomputing platform 2010 6 manjusha kakirde arjun roychowdhury us20100103779 2008 event- based reminder 7 r. pressman b. maxim 1st york mcgraw- hill 2015 8 m. priestley practical object-oriented 1st york mcgraw-hill 2003 9 c. larman applying pattern 1st chennai pearson 2016 10 k. virrantaus j. markkula a. garmash v. terziyan j. veijalaien a. katanosov h. tirri developing gi supported location based service web 2001 pp.66-75 11 sugandha sharma sumandeep kaur synchronization syncml cse chandigarh group college 2013 pict-information technology-2016-17 50", "keywords": ["accuracy location", "action based", "alert notification", "alert popup", "ali mert", "android desktop", "android device", "android studio", "background review", "based context", "based event", "based reminder", "based reminder location", "based time", "based time location", "bug error", "cloud database", "cludio campelo", "contact number", "da silva", "desktop event", "event based", "event based reminder", "event desktop", "event incomingoutgoing", "eventbased reminder", "eventbased reminder handheld", "eventnote event", "format android", "ghz mb", "ghz mb disk", "incoming outgoing", "internet connection", "kasabe nikhil", "kasabe nikhil padwal", "khomane pradip", "khomane pradip kasabe", "local database", "location based", "location based reminder", "location event", "mb disk", "mobile device", "nikhil padwal", "nikhil padwal dipali", "note reminder", "occurrence event", "padwal dipali", "pictinformation technology", "pictinformation technology eventnote", "pradip kasabe", "pradip kasabe nikhil", "reminder event", "reminder handheld", "reminder khomane", "reminder location", "reminder pictinformation", "reminder service", "reminder time", "reminder time location", "smart phone", "st york", "synchronization manager", "technology eventnote", "technology eventnote event", "text note", "time based", "time based reminder", "time event", "time location", "time location event", "title note", "unit strategy"], "libraries": [], "languages": ["basic", "small", "java", "javascript"], "frameworks": [], "dbs": ["sqlite", "mysql"]}, "./reports/AUDIO SIGNAL PROCESSING FOR MUSIC ANALYSIS.pdf": {"title": "audio signal processing for music analysis", "filename": "./reports/AUDIO SIGNAL PROCESSING FOR MUSIC ANALYSIS.pdf", "data": "audio signal processing music rahul agnihotri examination seat b120058504 sujith sajeev examination seat b120058642 guidance prof. m.r khodaskar 2015-2016 audio signal processing music audio signal processing music completed mr. rahul agnihotri b120058504 mr. sujith sajeev b120058642 bonafide prof. m. r. khodaskar earlier diploma m. r. khodaskar dr. emmanuel m. examiner dr. p. t. audio signal processing music ii acknowledgement express deep sense gratitude college dr. p.t allowing opportunity professor m.r khodaskar guidance solid advice provided allowed compile prepare thankful staff member valuable time support suggestion directly indirectly helped completion rahul agnihotri b120058504 sujith sajeev b120058642 audio signal processing music iii 2.1.1.1 bispectrum monophonic signal 4 2.1.1.2 onset detection procedure 5 2.1.3.1 guitar transcription 10 4.1.1 21 4.2.1 class 22 4.3.1 23 4.3.2 frequency splitting identification 23 4.3.3 mapping graphical representation 24 4.4.1 split 25 4.5.1 pert 26 4.5.2 pert 27 5.1.1 workflow 28 6.1.1 sample audio file waveform 32 6.1.2 fundamental frequency identified 32 6.1.3 notation mapping 33 6.1.4 chromagram chord recognition 33 6.1.5 chord recognition 34 audio signal processing music iv abbreviation dft discrete fourier transform fft fast fourier transform stft short time fourier transform mir music retrieval isa independent subspace nmf non-negative matrix factorisation rwc real computing pcm pulse code modulation acknowledgement ii iii abbreviation iv 1. 1 1.1 background 1.2 relevance 1.3 undertaken 1.4 organisation 2. background 3 2.1 2.1.1 constant-q bispectral 2.1.2 polyphonic music transcription 2.1.3 real-time audio transcription 2.2 framework 2.3 programming language 3. specification 15 3.1 3.1.1 purpose 3.1.2 3.1.3 3.2 general description 3.2.1 product function 3.2.2 general constraint 3.2.3 3.3 specific 3.3.1 3.3.2 3.4 3.5 non-functional 3.6 constraint 3.7 logical database 4. 21 4.1 4.2 class 4.3 based 4.4 split-up 4.5 pert 4.6 pert 5. 28 5.1 5.2 5.2.1 recording 5.2.2 analytic 5.2.3 frequency identification 5.2.4 notation mapping 5.2.5 graphical representation 5.3 implemented features/tools 5.3.1 yin 5.3.2 aubio 5.3.3 numpy 6. evaluation 32 6.1 status 6.2 strategy 6.2.1 white-box 6.2.2 black-box 6.2.3 regression 7. 36 8. 38 audio signal processing music techonology 2015-16 1 1. 1.1. background number people learning play musical instrument growing exponentially ease multiple teaching channel learn youtube channel website dedicated teaching people issue obstacle discovering step involved learning play instrument practising step proper guidance thatll enable understand tutorial correctly exercise performing completed note chord play satisfactorily correct note talk amateur musician collaborate aficionado live location separate meet regularly compose music step involved tedious kill fun involved creating music effectively transcribe music compose receiver doesnt tedious job sitting identifying individual note chord duration lengthening amount time musician compose entire song 1.2. relevance aforementioned job conveniently focus working obstacle upload recording save recording recording included product chord and/or note played duration played output graphical format fails play chord correctly indicated output port output share saved portable document format easy sharing collaboration easier tedious involved earlier eliminated audio signal processing music techonology 2015-16 2 1.3 undertaken view website access individually independently time convenient access recording/uploading pre-processed second concerned cleaning input audio file audio file noise basic filtering process pas filter pas filter normalization performed better processing processed audio file analysed broken tiny chunk window window subject process allow identify note chord chords/notes displayed graphical format 1.4 organized 2 background 3 4 state 5 describes description 6 7 summarizes achieved audio signal processing music techonology 2015-16 3 2. background review 2.1 2.1.1 fabrizio argenti senior member paolo nesi member gianni pantaleo automatic transcription polyphonic music based constant-q bispectral transaction audio speech language processing 19 6 2011 2 automatic music transcription process converting musical audio recording symbolic notation musical score sheet equivalent representation concerning event associated pitch note onset time duration equivalently offset time intensity accomplished well ear-trained person challenging experienced musician well difficult realized completely automated fact human knowledge musicological harmonic rule solve skill easy coded wrapped algorithmic procedure audio signal composed single mixture periodic locally stationary acoustic wave acoustic wave ideally frequency single harmonic component integer multiple called fundamental frequency perceived pitch harmonic component called simply harmonic fundamental frequency sound denoted defined greatest common divisor harmonic spectral component missing music transcription i.e tracking concurrent sound practically reduced time periodicity search equivalent energy maximum frequency domain audio signal processing music techonology 2015-16 4 fig 2.1.1.1 bispectrum monophonic signal note c3 synthesized t=7 t=8 audio signal processing music techonology 2015-16 5 fig 2.1.1.2 onset detection procedure 7 second extracted mozart string quartet n. 19 k465 30 second mozart movement sonata piano major k331 audio signal processing music techonology 2015-16 6 2.1.2 nancy bertin member roland badeau member emmanuel vincent member enforcing harmonicity smoothness bayesian non-negative matrix factorization applied polyphonic music transcription transaction audio speech language processing 18 3 2010 3 non-negative matrix factorization nmf powerful unsupervised decomposition technique allowing representation two-dimensional non-negative linear combination meaningful element basis nmf process audio signal including monaural sound source separation audio stream separation audio-to-score alignment drum transcription efficiently separate note polyphonic music transcribe symbolic format midi timefrequency representation signal factored product basis dictionary pseudo-spectra matrix decomposition time-varying gain harmonic instrument sound basis partially retain harmonic component pitched interpreted musical note decomposition onset offset time associated note meaningful key word expect basis formed interpretable element exhibiting semantics non-negativity constraint step interpretability compared well-known technique singular decomposition svd instance basis learnt nmf image database expected meaningful image so-called part-based representation interpretability observed practice reason nmfs popularity satisfying expected instance facial image expected retain facial eye nose mouth exactly desirable characteristic decomposition observed side-effect enforced controlled audio signal processing music techonology 2015-16 7 alleviate lack control decomposition proper-ties author proposed constrained variant nmf ensuring enhancing side-effects baseline nmf sparsity spatial localization temporal continuity instance typical approach constrained variant add penalty term usual cost function reconstruction error minimize sum hand author imported non-negative constraint framework nmf statistical framework cite non-negative variant independent component ica non-negative sparse coding bayesian framework offer strong theoretical framework possibility manage constraint prior paper proposed original including harmonicity temporal smoothness constraint non-negative matrix factorization timefrequency representation unified framework propose hs-nmf derived bayesian framework out-performs benchmarked nmf approach polyphonic music transcription evaluated realistic music database bayesian framework offer theoretical convergence generally usual multiplicative approach nmf proposed novel multiplicative nmf harmonicity constraint minimizing itakurasaito divergence link exposed statistical approach wa suit well representation audio signal context contribution paper theoretical algorithmic experimental time active domain music transcription nmf study nmf-based method remain le performant finely tuned state-of-the-art method method implying training phase learning musicologically inspired post-processing nmf totally data-driven requires training adapts avoiding mismatch training semantically meaningful mid-level representation potential assessed clear letting hope good performance better tuning improvement temporal smoothness constraint doe bring improvement expect term robustness detection threshold efficiency note duration audio signal processing music techonology 2015-16 8 estimation compensate tendency nmf harmonicity constraint produce non-smooth decomposition lead better transcription performance constraint common nmf framework nmf core detection threshold based post-processing appears 100 recall rate reached threshold tested statistical relies course fact ground truth performance hope le adequation investigated choice shape parameter in-verse-gamma prior temporal envelope discussed learning well nmf factor learned considered improvement include refinement temporal prior suit modeling sustain decay note disfavor attack silence option alleviate mismatch switching state row explicitly possibility vary attack strictly absence note em-based hs-nmf re-mains slow compared multiplicative gradient descent approach alternative direct minimization criterion optimizes usual multiplicative heuristic losing proof convergence reducing computational time audio signal processing music techonology 2015-16 9 2.1.3 xander fiss andres kwasinski automatic real-time electric guitar audio transcription rochester rochester ny 2011 4 learning play instrument challenging endeavor development musician intuition cause-effect inherent producing sound essential mastering instrument addition learner prior musical education find concept theory musical key scale notation difficult grasp apply study transcribes audio musical score real-time potential solution development pose challenge guitar class instrument produce multiple note time chord note generated playing string positioning finger identifying note played polyphonic pitch detection challenging area pitch detection focused single pitch tracking speech recognition compression polyphonic pitch detection received comparatively attention detecting multiple fundamental frequency difficult clear peak frequency fundamental harmonic challenge exacerbated musical signal note chord chosen harmony caused harmonic overlap klapuri field polyphonic pitch detection presenting variety technique insight transcription instrument piano polyphonic pitch detection note played single key guitar differs note played fret-board guitar audio transcription tablature identifies note note played variety method attempt guitar audio transcription klapuri excellent state-of-the-art regard automatic transcription vision assist transcribing guitar audio understanding hand fret-board audio signal processing music techonology 2015-16 10 paper investigate guitar audio transcription interactive e.g provide feedback require real time approach presented scheme iteratively process frequency peak in-stead removing harmonic method mark fundamental frequency demonstrate analyzing instrument played polyphonic pitch detection accuracy potential improve polyphonic pitch detection produce score based pitch detection considering special property guitar focus rich polyphony 4 5 6 simultaneous note correct rank top 33 rest multiple solution practically coincide correct solution ranked top fig 2.1.3.1 guitar transcription block proposed real-time guitar transcription implemented performs guitar audio transcription real-time maximize portability extensibility performance wa written java major desktop platform processor-bound meaning responsive experience achievable number configuration modern guitar string plucked strummed finger pick standard tuning 6-string guitar frequency correspondingly thick thin string e2 a2 d3 g3 b3 e4 string fret-board enabling guitarist play pitch accurately consistently vibration string captured electric guitar pickup electronics electric guitar pickup superimpose vibration signal guitar pickup produce individual audio signal string effectively sidestepping challenge presented paper pickup audio signal processing music techonology 2015-16 11 recording hexaphonic signal tend expensive difficult signal electric guitar pickup electronics construction pickup electric component guitar clear purpose setup robust noise direct feed guitar opposed microphone presented scheme perform automatic guitar transcription real-time challenge resides fact guitar generate note simultaneously guitar add ambiguity transcription note played presented scheme based combining polyphonic pitch detection fundamental frequency detection classification scoring scheme consideration physical limit sound production guitar human biomechanically constraint scheme achieves perfect transcription 33 rank correct solution top rest solution coincide door rapid transcription allow correct transcription mistake providing answer audio signal processing music techonology 2015-16 12 2.2 framework django django free open-source web framework written python modelviewcontroller mvc architectural pattern.it maintained django foundation dsf independent established non-profit django 's primary ease creation complex database-driven website django emphasizes reusability `` pluggability '' component rapid development principle n't repeat python setting file django optional administrative create read update delete generated dynamically introspection configured admin well-known site django include pinterest instagram mozilla washington time disqus public broadcasting service bitbucket 2.3 programming language 2.3.1 python python high-level general-purpose interpreted dynamic programming language compile step write code python file simply explicitly compiling file memory n't explicitly allocate memory variable n't explicitly free memory 're interpreter allocate memory free 's safe high-level native string tuples dictionary file object built-in example `` '' `` '' defines dictionary hash string `` '' key string `` '' audio signal processing music techonology 2015-16 13 clean straight-forward syntax major python language programmer familiar c++ find syntax familiar simpler brace semicolon duck typing object support .quack ahead call .quack worrying object 's specific standard library pick random example python ship xml parser csv zip file reader writer library pretty internet protocol support web apps ruby javascript python popular web development community mature framework supportive community started 2.1.2 javascript javascript simple versatile effective language extend functionality website range screen visual processing calculating web ease well extended functionality website third party script advantage javascript executed client side code executed 's processor web server saving bandwidth strain web server javascript fast code executed 's processing completed instantly depending javascript web audio signal processing music techonology 2015-16 14 simple prevent memory hog doe processed site 's web server consuming local well server bandwidth javascript easy language javascript language easy learn comprises syntax english dom plenty prewritten functionality object making breeze develop script solve custom purpose extended functionality web third party add-on grease monkey enable javascript developer write snippet javascript execute desired web extend functionality website require included write add-on grease monkey implement web disadvantage security issue javascript snippet appended web execute client server exploit 's restriction modern web standard browser malicious code executed complying restriction javascript rendering varies layout engine render javascript differently inconsistency term functionality latest version javascript rendering geared universal standard variation exist website usability consultant living difference enrages developer daily basis audio signal processing music techonology 2015-16 15 3. specification 3.1 number people learning play musical instrument growing exponentially ease multiple teaching channel learn youtube channel website dedicated teaching people issue obstacle discovering step involved learning play instrument practising step proper guidance enable understand tutorial correctly exercise performing completed note chord play satisfactorily correct note talk amateur musician collaborate aficionado live location separate meet regularly compose music step involved tedious kill fun involved creating music effectively transcribe music compose receiver doesnt tedious job sitting identifying individual note chord duration lengthening amount time musician compose entire song 3.1.1 purpose aforementioned job conveniently focus working obstacle upload recording save recording recording included product chord and/or note played duration played output graphical format fails play chord correctly indicated output port output share saved portable document format easy audio signal processing music techonology 2015-16 16 sharing collaboration easier tedious involved earlier eliminated intended audience guitar enthusiast guitar students/learners guitarist wishing collaborate 3.1.2 music transcription guitar enthusiast designed minimize effort analyse music designed allow upload record audio process cleaner chord note played graphical format 3.1.3 understand product clear sr help view understand proposed purpose analyzed focus non-functional general description document functionality product describes informal establish context specification third specific document written developer describes term functionality product document describe product entirety intended audience language audio signal processing music techonology 2015-16 17 3.2 general description 3.2.1 product function recording recording allow upload prerecorded file record audio file processing processing processing process file implementing yin fft identify key frequency chromagrams identify chord played display graphical format chord note correctly played 3.2.2 general constraint audio file noise artist dont correct environment record file extraneous noise add filter keeping consideration responding human error person difficulty learning lot mistake chord played chord correctly played wa recognized percentage accuracy chord played responsive ui today tablet smart phone computing power mobile phone tablet capable handle load wa early responsive browser compatibility browser responds differently cs cs key rich ui provide browser browser compatibility tackle carefully 3.2.3 2g network bandwidth 16 kb/s 250 mb ram internet access device browser support recording audio signal processing music techonology 2015-16 18 3.3 specific 3.3.1 single website main independently direct inheritance device supporting laptop mobile phone tablet browser support hypertext transfer protocol http layer protocol logical link hyperlink process 3.3.2 device supporting laptop mobile phone tablet browser support hypertext transfer protocol http layer protocol logical link hyperlink node audio processing audio signal processing music techonology 2015-16 19 3.4 describes specific desired use-case format listed 1 description file processed transcription primary actor secondary actor precondition 1. hit website url main 1. enters recording 2. server display recording upload option 3. records/uploads 4. chords/notes displayed graphically post condition 1. website alternative audio signal processing music techonology 2015-16 20 3.5 non-functional music transcription server speed internet capability physical machine significance developed assumes external/internal mic record file upload speed connection depend characteristic website pc tablet mobile device browser access web performance performance website depending internet connection device reliability server doesnt require database store file main process requires path file file availability 24 7 updating server refresh 10 minute 3.6 constraint robot.txt parsing news website website file located folder server robot.txt file rule regulation access webpage file allows bot parser code scraping request 2000ms bot multiple input file server website denial service bot multiple multiple time disturbing amount latency introduced multiple instrument built guitar enthusiast mind doe wind instrument multiple instrument played hard isolate instrument individually 3.7 logical database quick access designed minimum latency sqlite3 function easily django reduces access time respectably audio signal processing music techonology 2015-16 21 4. 4.1 fig.4.1.1 4.1.1 term block sound capture represents recording raw sound includes performs preprocessing frequency splitting break sound file window frequency identification key frequency identified notation matching notation mapped key frequency identified database sqlite3 graphical representation final note chord displayed audio signal processing music techonology 2015-16 22 4.2 class fig 4.2.1 class server audio signal processing music techonology 2015-16 23 4.3 based fig 4.3.1 aspma fig 4.3.2 frequency spliting identification audio signal processing music techonology 2015-16 24 fig 4.3.3 final graphical representation audio signal processing music techonology 2015-16 25 4.4 split-up fig 4.4.1 developed audio signal processing music techonology 2015-16 26 4.5 pert fig 4.5.1 pert signifying total time development audio signal processing music techonology 2015-16 27 4.6 pert fig 4.6.1 pert audio signal processing music techonology 2015-16 28 5. 5.1 fig 5.1.1 workflow 5.1.1 size better small provide small punctual deliverable short period time order build gradually final product good complex customer difficulty define subject change frequently audio signal processing music techonology 2015-16 29 change frequently flexible approach prototype customer fixed time-scale allowing modification deliverable iteration estimation planning iteration planning unit iteration deliverable completed deliverable iteration totally correct refine iteration planned deliverable completed iteration functionality reduced rescheduled 5.2 5.2.1 recording recording allows record audio file upload allow upload pre-recorded file facility audio file graphically amplitude time graph 5.2.2 analytic audio recording rarely free noise environment consideration reduce eliminate noise file filter normalization pas filter pas filter applied 5.2.3 frequency identification fundamental fundamental frequency wave isolated superimposed wave harmonic 5.2.4 notation mapping fundamental frequency identified mapped correct notation representation form midi 5.2.5 graphical representation notes/ chord identified graphical form audio signal processing music techonology 2015-16 30 5.3 implemented features/tools 5.3.1 yin autocorrelation autocorrelation serial correlation cross-autocorrelation cross-correlation signal point time cross stand informally similarity observation function time lag finding repeating pattern presence periodic signal obscured noise identifying missing fundamental frequency signal implied harmonic frequency signal processing analyzing function series time domain signal 5.3.2 aubio aubio designed extraction annotation audio signal include segmenting sound file attack performing pitch detection tapping beat producing midi stream live audio aubio currently digital filter phase vocoder onset detection method pitch tracking method beat tempo tracking mel frequency cepstrum coefficient mfcc transient steady-state separation aubio written modern platform python written aubio array viewed directly python numpy array aubio efficient fast audio signal processing music techonology 2015-16 31 5.3.3 numpy numpy extension python programming language adding support multi-dimensional array matrix library high-level function operate array ancestor numpy numeric wa originally created jim hugunin contribution developer 2005 travis oliphant created numpy incorporating competing numarray numeric extensive modification numpy source contributor numpy target cpython python non-optimizing bytecode interpreter written version python slower compiled equivalent numpy address slowness partly providing multidimensional array function operator operate efficiently array requiring writing code inner loop numpy expressed operation array matrix equivalent code numpy python functionality comparable matlab interpreted allow write fast program long operation array matrix scalar comparison matlab boast number additional toolbox notably simulink numpy intrinsically integrated python modern complete source programming language complementary python package scipy library add matlab-like functionality matplotlib plotting package matlab-like plotting functionality audio signal processing music techonology 2015-16 32 6 evaluation 6.1 status completed mark developed decided phase built functionality fig 6.1.1 sample audio file fig 6.1.2 fundamental frequency identified audio signal processing music techonology 2015-16 33 fig 6.1.3 notation mapping midi fig 6.1.4 chromagram chord recognition audio signal processing music techonology 2015-16 34 fig 6.1.5 chord recognition 6.2 strategy 6.2.1 white box white-box clear box glass box transparent box structural method working opposed functionality i.e black-box white-box perspective well programming skill tester chooses input exercise path code determine appropriate output analogous node circuit e.g in-circuit ict .white-box applied unit integration level process white box checked parser checked parameter news location news body title wa retrieved correctly checked empty field repetition field checked correctly inputted database audio signal processing music techonology 2015-16 35 6.2.2 black box black-box method examines functionality peering working method applied virtually level unit integration acceptance typically comprises higher level dominate unit well specific knowledge 's code/internal programming knowledge general tester aware supposed aware doe checked basic working naive bayes classifier comparing actual category news wa satisfactory level 80 accuracy wa achieved 6.2.3 regression regression seek uncover bug regression existing non-functional area change enhancement patch configuration change purpose regression ensure change mentioned introduced fault main reason regression determine change affect website parsed regression check code desired output middle layer code wa tested phase checked news database wa correctly fetched classification correctly displayed browser window audio signal processing music techonology 2015-16 36 7. focus transcribing audio file correct musical notation notation stave/staff notation yin viterbi study fft chromagram audio file broken window input form pre-recorded file uploaded file recorded recording filtering file minimize anomalous noise yin alongside fft identify fundamental frequency compared midi identify note played note note chromagram analysed find exact number note highest intensity stored compare dictionary chord stored database output chord correctly identified confidence parameter state correctness chord stored pdf file share transcription collaborate compose music basic audio editing option stft minimized latency minimum viably showing potential live well extend functionality instrument piano wind instrument adding utility easier input direct feed midi designed efficient isolating monophonic frequency recording polyphonic sound file guitar mainstream instrument creates music polyphonic sound mapped easily extensible instrument monophonic includes wind instrument flute trumpet clarinet include percussion instrument drum find popularity usage modern band xylophone instrument keyboard easy create functionally input directly midi audio signal processing music techonology 2015-16 37 planned web client platform io android window leading mobile operating artist easily record directly upload raw sound file mobile combination powerful mobile device connective potential cloud-based computing changing people longer physically tethered embedded mobile phone tablet freely roam daily life alongside human persistently connected network 5 philosophy allow incorporate audio transcription mobile platform promoting portability sit record upload simple small ge wangs stage accomplish stage massively social game-like musical experience leveraging ubiquitous nature mobile device human computation platform create musical perform mobile phone-based instrument performance greater community 5 audio signal processing music techonology 2015-16 38 8. 1 a. taylan cemgil member hilbert j. kappen senior member david barber generative music transcription transaction audio speech language processing 14 2 2006 2 fabrizio argenti senior member paolo nesi member gianni pantaleo automatic transcription polyphonic music based constant-q bispectral transaction audio speech language processing 19 6 2011 3 nancy bertin member roland badeau member emmanuel vincent member enforcing harmonicity smoothness bayesian non-negative matrix factorization applied polyphonic music transcription transaction audio speech language processing 18 3 2010 4 xander fiss andres kwasinski automatic real-time electric guitar audio transcription rochester rochester ny 2011 5 ge wang spencer salazar jieun robert hamilton stage crowdsourcing paradigm expressive social mobile music journal music 2015", "keywords": ["array matrix", "audio file", "audio signal", "audio signal processing", "audio transcription", "chord note", "chromagram chord", "electric guitar", "electric guitar pickup", "fourier transform", "fundamental frequency", "general description", "graphical format", "graphical representation", "guitar audio", "guitar audio transcription", "guitar enthusiast", "guitar pickup", "guitar pickup electronics", "guitar transcription", "matrix factorization", "mobile device", "mobile phone", "mobile phone tablet", "music transcription", "nonnegative matrix", "nonnegative matrix factorization", "note chord", "onset detection", "phone tablet", "pickup electronics", "pitch detection", "polyphonic music", "polyphonic music transcription", "polyphonic pitch", "polyphonic pitch detection", "prerecorded file", "processing music", "programming language", "rahul agnihotri", "record audio", "record file", "recording recording", "signal processing", "signal processing music", "sound file"], "libraries": ["numpy", "scipy"], "languages": ["clean", "python", "cs", "ruby", "xml", "c++", "io", "sr", "javascript", "basic", "small", "matlab", "java"], "frameworks": ["django"], "dbs": []}, "./reports/Automated_XFS_backup_application.pdf": {"title": "automatic backup implementation   for xfs on kernel level", "filename": "./reports/Automated_XFS_backup_application.pdf", "data": "automatic backup xfs kernel level shradha gupta shreya darak tanmayee takalkar b-80058511 b-80058529 b-80058648 guidance prof. s. a. jakhete b.e.information 2014-15 411043 affiliated 2014-2015 411043 dissertation automatic backup xfs kernel level shradha gupta shreya darak tanmayee takalkar b-80058511 b-80058529 b-80058648 record bonafide year 2014-2015 guidance prof. s.a. jakhete dr. emmanuel m. dr. p. t. hod examination examiner acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy endeavor blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting opportunity humbly s. a. jakhete emmanuel m. valuable guidance providing facility indispensable completion thankful staff member valuable time support comment suggestion persuasion providing facility internet access book p. dhange ryussi support guidance realizing shradha gupta shreya darak tanmayee takalkar comprehensive backup strategy vital security historically file backup strategy focused logical backup file written entirely backup medium alternatively physical backup concentrate individual block file backup restore strategy combing requires fewer higher throughput storing representation xfs file kernel level command trigger daemon process continuous file residing file background file subjected modification backup file scalable help backup restore efficiently kind keywords backup restore xfs daemon process scalable 1 1.1 1.2 1.3 basic concept 1.4 2 2.1 comparative study existing backup strategy 3 proposed 3.1 3.2 3.3 3.4 4 4.1 step acquire process 4.2 approach 4.3 4.3.1 1 client 4.3.2 2 utility 4.3.3 3 daemon 4.3.4 4 -device driver.. 1 2 2 2 3 4 6 8 9 9 9 10 11 12 13 13 13 13 14 5 5.1 5.2 16 5.3 17 5.3.1 5.4 18 6 6.1 33 6.1.1 6.2 screen shot 35 6.3 38 6.3.1 unit 38 6.3.2 integration 7 scheduling 8 8.1 8.2 15 16 sy stem 17 32 code sn ippets 33 39 42 44 45 46 47 18 18 19 20 21 22 23 24 25 27 28 28 29 29 30 30 31 31 38 5.1 1 5.2 2 5.3 3 5.4 dfd level 0 5.5 dfd level 1 5.6 dfd level 2.. 5.7 5.8 diagram.. 5.9 diagram.. 6.1 xfs modification.. 6.2 utility code ... 6.3 daemon code 6.4 utility terminal ... 6.5 trace command 6.6 mount xfs 6.7 daemon process 6.8 physical representation 6.9 log file generation 7.1 gannt 2.1 6 6.1 ... 36 1 1 automated xfs backup 1 1 1.1 backup strategy today revolve concept backup file copying file modifying backed modifies file involve changing concept copying entire including file file configuration physical level backup method provide backup storing kernel level le adding kernel modifying kernel backup intended file file 's doe n't install care targeting file high-performance journaling file wa initially created silicon graphic inc. parallel i/o performance xfs scalability i/o thread file file size file span storage device backing xfs partition hard disk cloud reproduced node node fails 1.2 backup explained reason 1. machine fail weve stride reliance perfect bound issue expensive company eliminate single point failure infrastructure sure failure interrupt service loss best option regularly ideally leading highly secure managed hosting provider help eliminate interruption infrastructure failure 2. human error hardest mistake prevent correct ensuring regularly backed restore error-free state people perfect easily overlook step process accidentally delete enter wrong making sure efficient process good assurance program best bet online backup solution equally automated xfs backup 2 3. nature unpredictable business dont backup disaster recovery impossible resume operation major disaster hit 1.3 basic concept initially command utility linux track inodes block target file built creating process monitor target file xfs going physical level modification target file block number modified retrieved interpreting i/o transfer signal leading modification backup file product chain log file consisting block number facilitating rollback function time modification backed partition hard drive extension strategy backup file distributed environment 1.4 utility distributed cloud efficient rollback easily create chain undo restore previous state file reduction redundancy utility excellently scalable environment strategy scalable providing efficient backup method cloud based client server automated xfs backup 3 2 2 automated xfs backup 4 2 2.1 comparative study existing backup strategy comprehensive backup strategy vital security 1 comparison logical physical backup stating backup restore strategy file centric proposed extensively xfs 2 xfs xfs high-performance 64-bit journaling file created silicon graphic linux platform default file xfs excels execution parallel input/output i/o operation based allocation group subdivision physical volume xfs used- shortened ag xfs enables extreme scalability i/o thread file bandwidth size file file spanning multiple physical storage device xfs ensures consistency employing metadata journaling supporting write barber space allocation performed extent stored b+ tree improving performance file handling file detailed description backup strategy 3 4 embodiment method backing restoring disclosed embodiment physical backup segment storage performed copying segment storage backup storage device segment storage store plurality logical element method continues logically restoring logical element stored segment storage logical element level file segment storage correspond partition virtual disk segment storage stored plurality storage element hyper-volumes primary storage device embodiment method backing restoring primary primary storage device backup storage device disclosed embodiment includes step backup storage device control backing segment storage copying physical level segment storage primary storage device backup storage device automated xfs backup 5 2 embodiment backup storage disclosed backing storage device .41pnrnary embodiment includes controlling physical backup segment stored storage device logically restoring logical element segment storage embodiment physical backup performed direct connection backup storage lot suited backup restore proposed point backup strategy implement efficient scheme basis dump tar full incremental hybrid full incremental file ibm adsm incremental legato networker incremental umtree incremental file file file petal frangipani full incremental file tar amanda full incremental file 9 permanent file storage n/a spiralog full incremental device 2.1 comparison existing strategy automated xfs backup 6 3 3 proposed automated xfs backup proposed 7 3 proposed 3.1 backup strategy today revolve concept backup file copying file modifying backed modifies file involve changing concept copying entire including file file configuration physical level backup method provide backup storing kernel level file adding kernel modifying kernel backup intended file file 's doe n't install care `` automating backup entire file kernel level storing representation file facilitating efficient restore targeting file high-performance journaling file wa initially created silicon graphic inc. parallel i/o performance xfs scalability i/o thread file file size file span storage device backing xfs partition hard disk cloud reproduced node node fails 3.2 majorly backup strategy cloud based security widened ad automatic approach vision ensure change file monitored manual effort backup order sustain unfortunate loss product aim counter existing backup strategy screenshot loss configuration quick service automated xfs backup 8 3 proposed 1. interactive command prompt choose service product daemon process continuous device driver backup 2. backup kind file residing xfs file 3. extraneous backed 3.3 technique based physical interpretation featuring automation backup easy restore embedded xfs source code generation 3.4 main modify concept copying file copying entire physical level backup facilitating easy restore storing physical level representation daemon process constant surveillance customized device driver automated xfs backup 9 4 4 automated xfs backup 10 4 automatic backup effective backup configuration file example configuration file three virtual machine operating environment wa precisely aim utility began study existing strategy effective file time wa studying file representation kernel effective wa written actual coding product 4.1 step acquire process mounting modifying xfs connecting implementing intuitive ui input 4.2 approach process creating copy referred backing creating backup copy creating backup copy stored network factor considered backup copy logically consistent logically consistent backup copy logical inconsistency file corrupt terminated improperly time backup determines staleness backup copy short backup needed network store financial transaction backup week useless frequent backup needed frequent backup copy function factor backup normal business operation time backup copy order create backup copy approach approach advantage disadvantage simplest approach creating backup copy critical copy critical mass storage magnetic storage utilized network second archival mass storage device automated xfs backup 11 4 approach adapted implementing wa care efficiency block-level write tracking implemented adding block-level filter driver device mapper device mapper kernel component transform block i/o bio request based policy transforming bio request device mapper device remap request address block device simply perform bookkeeping pas request underlying device device mapper device block device stacking allowed 4.3 automated xfs backup 4.3.1 1 client supposed determine file xfs partition backed inform daemon process command utility request previous version backed file utility removing file 4.3.2 2 utility command utility responsible interacting collecting request daemon process facility adding file global file removing file restoring previous version file utility responsible backup file newly tracking 's inode number respective kernel 4.3.3 3 daemon process brings co-ordination utility device driver collect organizes arranges properly automated xfs backup 12 4 utility collect file monitored version file restored maintains global file backed coordinating utility hand interacts device driver acquiring change respective block file obtaining level log respective modification achieves segregating modified block device driver respective file providing incremental file 4.3.4 4 device driver device driver monitor modification respective block device xfs partition block-level write tracking implemented adding block- level filter driver device mapper.. modified block pertaining file daemon process generates log respective file automated xfs backup 13 5 5 automated xfs backup 14 5 5.1 1. ide compiler 2. hard drive mounted xfs 3. vim editor 4. ctags 5.cscope automated xfs backup 15 5 5.2 1. processor intel generations/ celeron/ amd 2. higher 512 mb ram 3. 20 gb hdd automated xfs backup 16 5 5.3 basically collaboration 4 client utility daemon process device driver interdependent interact collaborative manner interactive operating linux terminal selects option respective communication/ action done/taken utility simple tcp/ip protocol socket daemon constantly running background checking modification file listed file associated daemon device driver turn daemon process modified respective block daemon segregate file listed filetable automated xfs backup 17 5 5.3.1 5.1 1 5.2 2 5 5.3 3 automated xfs backup 19 5 5.4 5.4.1. dfd level automated xfs backup 5.4 dfd level 0 20 5 5.4.1.1 dfd level-1 automated xfs backup 5.5 dfd level 1 21 5 5.4.1.2 dfd level-2 automated xfs backup 5.6 dfd level 2 22 5 5.4.2 5.7 automated xfs backup 23 5 5.4.3. automated xfs backup 5.8 24 5 5.4.4. 5.9 automated xfs backup 25 6 6 automated xfs backup 26 6 6.1 utility distributed cloud efficient rollback easily create chain undo restore previous state file reduction redundancy utility excellently scalable environment strategy scalable providing efficient backup method cloud based client server coded language help vim editor source code xfs modified compiled 6.1.1 code snippet interactive client developed c. keeping consistency interactive utility xfs xfs-db alive supposed command execute option help utility 6.1 xfs modification automated xfs backup 27 6 6.2 utility code daemon process daemon process coded program start boot i.e start program daemon process simple socket protocol establish connection utility device driver 6.3 daemon process code automated xfs backup 28 6 6.2 screen shot utility terminal enters xfs_backup command prompt occur waiting command 6.4 utility terminal trace command file file traced asked message automated xfs backup 6.5 trace command 29 6 mounting xfs drive formatted xfs file loaded command 6.6 mount xfs daemon process running background daemon process start running background 6.7 daemon process automated xfs backup 30 6 physical representation utility physical representation location wise text hexadecimal form 6.8 physical representation created log file log file exact copy file created utility location 6.9 log file generation automated xfs backup 31 6 6.3 phase form development life cycle .any product tested thoroughly delivered customer document general strategy adopted product 6.3.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine unit entire function procedure tested 1 1 aim check selects invalid option menu selection option menu expected error invalid option selected actual expected 2 aim check utility root current expected error called permission denied actual expected 2 1 aim check filename argument passed utility valid file expected prompt select file resides xfs partition actual expected automated xfs backup 32 6 2 2 aim check xfs partition xfs mounted expected error xfs actual expected 3 aim checking daemon process running daemon process connection port number expected error connection refused actual expected 3 1 aim file file passed daemon utility tcp connection expected file doe n't backup utility actual expected 2 aim file requested removal file file utility expected error displayed -invalid file requested actual expected automated xfs backup 33 6 6.3.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision major carrying integration called bottom-up method top-down method bottom procedure expected actual pass/f ail utility 1 daemon utility pas working utility process expected running option call utility filename daemon process error 2 running 3 utility file daemon process running xfs mounted utility connection refused error- expected pas xfs mounted expected pas terminal file interacting 1 selects error- pas utility utility interacts invalid invalid expected option option selects 2 trace option pas error expected connection message daemon displayed- tcp tcp fails connection selects failed trace option 3 enters error invalid file message displayed- invalid file expected pas backup checking 1 trace file pas generation correct backup file option invalid inode expected selected number file file invalid inode number file abort backup trace file 2 option selected file generated expected pas file exact file valid inode number file daemon checking 1 pas file pas working file updated expected daemon process properly utility file valid 6.1 automated xfs backup 36 7 7 scheduling automated xfs backup scheduling 37 scheduling 7.1 gantt 7 automated xfs backup 38 8 8 automated xfs backup 39 8 8.1 product backup designed continuous backup configuration file kind node fail cloud distributed entire node recreated machine counter shortcoming existing extend 1. coding device driver 2. making utility cross platform 3. database storing entry file 4. merging redundant optimize storage automated xfs backup 40 8 8.2 security vital storing product proposed counter shortcoming existing backup embodied source code file additional plugins installed product product single backup partition extension .log daemon process running background continuously monitor file modification device driver completely finalized automated xfs backup 41 1 jianfeng lu huazhong wuhan role-based access control p2p file- sharing primary/backup strategy journal 25-26 2009 2 jing nie nanning desktop backup based cloud computing journal 17-18 nov. 2011 3 dongming chen xiaodong chen zhenhua tan file synchronization backup based security policy journal 27-29 2012 4 matsuura h. morita murakami takami kazumasa hierarchically distributed pce backup strategy optical network 10-11 oct. 2013 5 linux forum http //www.linux.org automated xfs backup 42", "keywords": ["aim check", "automated xfs", "automated xfs backup", "automatic backup", "backup copy", "backup file", "backup storage", "backup storage device", "backup strategy", "backup utility", "block device", "daemon process", "device driver", "device mapper", "dfd level", "existing backup", "file file", "file utility", "file xfs", "inode number", "invalid file", "kernel level", "log file", "logical element", "mapper device", "mount xfs", "physical backup", "physical level", "respective block", "segment storage", "source code", "storage device", "target file", "trace command", "xfs backup", "xfs file", "xfs partition"], "libraries": [], "languages": ["basic"], "frameworks": [], "dbs": []}, "./reports/AutoTechQ.pdf": {"title": "automatic multiple choice question generation from   english text", "filename": "./reports/AutoTechQ.pdf", "data": "automatic multiple choice question generation english text priyanka kavade abhijit ghate reva newalkar vallari gokhale b-80058572 b-80058548 b-80058606 b-80058552 guidance prof. shantanu pathak b.e 2015 411043 affiliated 2014-2015 411043 automatic multiple choice question generation dissertation english text priyanka kavade abhijit ghate reva newalkar vallari gokhale b-80058572 b-80058548 b-80058606 b-80058552 record bonafide year 2014-2015 guidance prof. shantanu pathak dr. emmanuel m. hod dr. p. t. examination examiner _______________________ acknowledgement profoundly grateful prof. shantanu pathak expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing express sincere heartfelt gratitude staff member helped directly indirectly course abhijit ghate reva newalkar vallari gokhale priyanka kavade multiple choice question examination gaining competitive great examine access gained conceptual knowledge individual domain easily forming question challenging tedious job address generate automatic mcq generation ease question generation evaluation person knowledge understanding traditionally conducting examination nowadays evaluating skill person examination prominent assessment quick easy path adapted pattern examination year proposed accepts english language text input generates educationally relevant cloze question based input keywords mcq generation wordnet dbpedia distracter self-learning database retrieval questionnaire answer key figures.. ... ... ... 1. 2 3 1.1 1.2 1.3 1.4 ... .. idea.. application.. ... ... proposed work.. 3.1 3.2 3.3 3.4 3.5 3.6 definition features.. scope.. goals.. constraint 4. methodology.. 4.1 4.2 4.3 step acquire process.. approach autotechq 5. 5.1 5.2 5.3 5.4 5.5 5.3.1 diagram.. database design.. 6. implementation.. 6.1 6.2 6.3 6.1.1 code snippets.. screen shot 6.3.1 unit ii 1 2 2 3 3 4 9 10 10 10 11 11 12 13 14 14 15 16 17 17 17 18 19 28 30 31 31 34 34 35 scheduling ... ... ... ... ... ... 8.1 8.2 ... 39 40 36 38 39 7 8. 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9 block prototype 1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 18 block prototype 2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 18 prototype 1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 19 prototype 2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 20 parsing input prototype 1 21 question generation prototype 1 22 distracter generation prototype 1 23 prototype 2 24 prototype 1 25 5.10 prototype 2 26 5.11 deployment prototype 1 27 5.12 deployment prototype 2 27 6.1 6.2 6.3 6.4 6.5 development code 31 process code 32 distraction generation 33 file chooser option displaying question 34 34 7.1 gantt 37 input ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 28 multiple choice question ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 28 keywords ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 28 knowledge-base level 1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 28 knowledge-base level 2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 29 5.1 5.2 5.3 5.4 5.5 1 1 automatic multiple choice question generation english text 1 1 1.1 constantly changing today tech-age competent survive cut throat competition dragon competition entered sector life admission nursery school job razor sharp concept excellent time pas multiple choice question play mcqs testifying strategy recognised mcqs question paper format mcqs answered single multiple alphabet/number eventually selected answer compared expected answer judged accuracy process selected match expected usp mcqs question display store ass record mcqs advantage conductor reduces effort conducting conducting human habit manage great extent question fed manually 1.2 address issue proposed job creating feeding mcqs select question pool mcqs display examinee tedious capable job capable matter proposed generates pool question referencing english text appropriate option distract examinee correct answer serf great minimising manual effort creating feeding question conducted regular basis creates number question proposed solution minimal manual effort automatic multiple choice question generation english text 2 1 1.3 input english text prose input english text processed relevant mcqs generated input english text option distracters generated confuse examinee correct answer stored ass performance examinee integrated display mcqs increase usability 1.4 proposed institutional level carry mcq format self-evaluation automatic multiple choice question generation english text 3 2 2 automatic multiple choice question generation english text 4 2 number purpose question generation classified syntax-based template-based semantic-based majority utilize natural language question generated general domain-specific purpose question automatically generated include assessment revision study question exercise question look-back strategy question problem-solving question general question specific domain tourism domain question syntax-based approach syntax natural language sentence considered semantics main characteristic heavy reliance natural language processing nlp earliest question generation syntax based natural language parser analyze sentence syntax identify major component form question question generated aid revision study major drawback approach existence syntactically ambiguous language sentence parse sentence correctly understand meaning sentence drawback language dependent main advantage approach domain independent natural language sentence domain formulate question language wordnet question generation brown al 4 describe generating question vocabulary assessment wordnet mcq generation based lexical relation wordnet vocabulary question defined definition synonym antonym hyponym cloze question natural language text parsed tagged part-of-speech po word selected text wordnet extracted category example definition question requires definition word retrieved wordnet gloss selects definition doe include target word exploit domain wordnet question generation question generated limited vocabulary-type question automatic multiple choice question generation english text 5 2 described gate 5 nlp generate look-back strategy question wh-questions derived natural language text text parsed analyzed nlp parser generate parse tree forthe declarative sentence human-defined tree transformation rule nlp transform sentence wh-question designed wh-fact question relies human defined rule transform sentence question mcq generation based nlp textual similarity measure language lexicon wordnet computational provide similarity measure word example template-based approach question generation described stanescu al 6 number predefined tag template instructor create question text displayed window instructor selects concept suitable question template template par selected text generates question example template-based approach question generation mcq item described 7 author describe template automatic generation assessment item item generate igor generates allowing enter text stem identify variable constraint response choice order generate wide range mcq item semantic-based approach domain dependent depend semantic domain order generate question ontaware 9 ontology generates question based knowledge class-subclass class-instance functionality educational authoring semiautomatic generation learning object including question subsumption class order generate question item example concept ontological domain doe fully exploit constraint ontology automatic multiple choice question generation english text 6 2 silveira 11 describes work-in-progress developing general framework question generation input free text parsed annotated metadata annotated appropriate question selected question formulated natural language presented 12 generates cloze question assessing comprehension reading text enables creation answering scoring text comprehension question cloze question generated parsing natural language sentence random word deleted three random distracters difficulty chosen text 12 query template analyzed question pattern predicted domain ontology generate question pattern predicted asked question specific domain natural language text specific domain tourism wa internet semantically annotated metadata derived ontology create triple-based description framework rdf triple format class property range generated analyzing triple randomly selected query question identified involves querying property class instance property constraint second entail querying property class instance property constraint utilizes ontological doe exploit ontological construct relies query pattern specific domain presented 13 describes automatic generation mcq item domain ontology semantic ontology assert true/false sentence generating distracters question item author describe three main strategy question generation class- property- terminology-based strategy automatic multiple choice question generation english text 7 2 described 14 ontology generate mcq item semcq developed plug-in protege ontology editor semcq item stem word form language wording question stem variable correct option single item framed membership frame example y.items based class membership exploit semantics domain object property ontological domain question generation focus generating mcq doe consider question style presented 15 owl ontology source domain knowledge generates based number defined template question generate item educational assessment approach 16 utilizes ontology generate assessment item enable demonstrate knowledge understanding concept creating ontology ontology assessment item generate item automatic multiple choice question generation english text 8 3 proposed 3 proposed automatic multiple choice question generation english text 9 3 proposed 3.1 definition build automatically generate mcq 's feeding input english text generate educationally relevant cloze question well relevant distracters question 3.2 friendly source easy generates educationally relevant cloze question relevant distracters mcq generation automatic easy feed input english text effective institutional level conduct mcq pattern effective self-assessment integrated conducting mcq based examination 3.3 autotechq generates educationally relevant cloze question input english text simplifies question generation distracter generation question text english language belonging science domain automatically generates educationally relevant cloze question input integrated conduct mcq pattern examination institution considering updated generate wh question numerical covering kind question-answer pattern automatic multiple choice question generation english text 10 3 3.4 proposed ease tedious mcq generation making automatic intelligent freely user-friendly generate educationally relevant mcq 's effective distracters 3.5 ease mcq generation making automatic intelligent nowadays mcq pattern examination adopted numerous advantage including quick evaluation examinee 's knowledge measured time correctness rapidity accuracy examinee delivering answer course fast checking answer sheet scenario generating mcq 's manually tedious job consuming lot human energy time drawback generation educationally relevant question dataset generation relevant intelligent distracters single question equal effectiveness thrives simplify tedious job making mcq generation automatic integration institution conducting mcq based increase usability user-friendly previous domain includes generation accessed grammatical knowledge person freely build automatic mcq generation accepts english text generate educationally relevant mcq 's freely effective institution generating mcq 's well assessment purpose individual automatic multiple choice question generation english text 11 3 proposed 3.6 constraint generates cloze question input text focus generating educationally relevant question distracters accepts english language text effective output domain input question science size input fed 50 kb automatic multiple choice question generation english text 12 4 4 automatic multiple choice question generation english text 13 4 autotechq proposed excellent assistance individual process assessment autotechq minimizes effort drawing feeding question order conduct generates question generates relevant option tedious job autotechq scan input provided keywords process keywords sentence occur generate question database cleverly generate option question challenge arose development planning recognizing keyword forming relevant distracters conquered course 4.1 step acquire process eclipse development java j2se designing database installing java implementing function intuitive gui input 4.2 approach numerous autotechq corner restricted not-open-sourced strategy heavy complicated aim wa keep autotechq simple highly effective autotechq aim understanding text input picking keywords relate word understand input thing forming hurdle accomplishing aim mentioned detecting keyword generate question wa understand word wa worth forming question firstly wordnet lexical database published princeton wordnet wa incapable detecting word identified target forming question wordnet helped aiming draw grammar question inn concern churning api helped detecting keywords needed challenge wa generate relevant option detected keyword wa accomplished intelligent database innovative nailed issue database called dictionary sorted word detected keywords speech automatic multiple choice question generation english text 14 4 speech usual cleverly customized classify keywords maximizes accuracy autotechq product prized usability autotechq gui directly usable preprocessing gui wa simple easy aim wa self-evaluation gui allows input paragraph text evaluation 4.3 autotechq 1. question generation semantic input dbpedias alchemy api keywords input question generation generates cloze question extracted keywords alchemy api question generation database storing tracking cloze question 2. distracter generation distracter generation generates domain based distracters keywords extracted alchemy api customized ranking knowledge base generating domain based distracters automatic multiple choice question generation english text 15 5 5 automatic multiple choice question generation english text 16 5 5.1 eclipse j2se prototype 1 j2ee wordnet lexical database dbpedia 5.2 machine p-iv configuration pc 32 bit/64 bit windows/linux/mac 5.3 consists component knowledge base database dbpedia automatic multiple choice question generation english text 17 5 5.3.1 5.1 block prototype 1 5.2 block prototype 2 automatic multiple choice question generation english text 18 5 5.4 5.3 prototype 1 automatic multiple choice question generation english text 19 5 5.4 prototype 2 automatic multiple choice question generation english text 20 5 5.5 parsing input prototype 1 automatic multiple choice question generation english text 21 5 5.6 question generation prototype 1 automatic multiple choice question generation english text 22 5 5.7 distracter generation prototype 1 automatic multiple choice question generation english text 23 5 5.8 prototype 2 automatic multiple choice question generation english text 24 5 5.9 prototype 1 automatic multiple choice question generation english text 25 5 5.10 prototype 2 automatic multiple choice question generation english text 26 5 deployment 5.11 deployment prototype 1 5.12 deployment prototype 2 automatic multiple choice question generation english text 27 5 5.5 database field description sentence sentence field store sentence input paragraph time datatype varchar2 4000 5.1 input field question answer distractor1 distractor2 distractor3 description datatype question field store resultant question varchar2 500 correct answer question generated varchar2 200 distracter answer distracter answer distracter answer varchar2 200 varchar2 200 varchar2 200 varchar2 20 answer_tag metadata answer 5.2 multiple choice question field word description datatype keyword retrieved dbpedia varchar2 50 relevance relevance keyword float 27 5.3 keywords description datatype probable answer distracter knowledge base varchar2 200 field word pos1 pos2 word property 1 word property 2 varchar2 80 varchar2 80 varchar2 80 subject context subject word 5.4 knowledge-base level 1 automatic multiple choice question generation english text 28 5 field word description probable answer distracter chosen domain subject domain word belongs datatype varchar2 50 float 27 5.5 knowledge-base level 2 automatic multiple choice question generation english text 29 6 6 automatic multiple choice question generation english text 30 6 6.1 autotechq teacher automatically generating educationally relevant cloze question english text self-assessment english text input dbpedias alchemy api extracting keywords cloze question consists main question generation distracter generation question generation generates cloze question extracted keywords distracter generation generates domain specific distracters customized ranking cloze question generation easier automatically generating question well relevant distracters 6.1.1. code snippet graphical development gui developed swing gui widget java standalone double clicking icon basic input modified customer 6.1 development code automatic multiple choice question generation english text 31 6 start class integration processing class call method perform question generation distracter generation synchronizes processing speed 6.2 process code automatic multiple choice question generation english text 32 6 distracter generation distracter generation implement distracter extraction step pure java code connection database established extraction extraction engine implemented code 6.3 distraction generation automatic multiple choice question generation english text 33 6 6.2 screen shot simple gui providing button accepting input choosing text file file chosen displayed area display mcqs generated fig 6.4 file chooser option fig 6.5 displaying question 6.3 phase form development life cycle product tested thoroughly delivered customer document general strategy adopted product automatic multiple choice question generation english text 34 6 6.3.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine unit entire function procedure tested 1 aim generate unique question input consisting word time expected unique question generated actual question generated word meaning 2 aim generate distinct distracters question generated question generation correct answer expected three distracters unique actual actual expected 3 aim display input text file chosen gui input file chosen expected file displayed gui automatic multiple choice question generation english text 35 7 scheduling 7 scheduling automatic multiple choice question generation english text 36 7 scheduling final database ui cloze question distrsacter generation candidate satetment input processing finalizing domain title duration 15/08/2014 04/10/2014 23/11/2014 12/01/2015 03/03/2015 fig 7.1 gantt automatic multiple choice question generation english text 37 8 8 automatic multiple choice question generation english text 38 8 8.1 autotechq automatically generates multiple choice question based english text fed mentioned prototype algorithmic approach address common question generation distracter generation prototype 1 wordnet lexical database select keywords english text fed generate question distracters prototype 2 hand utilizes alchemy api extract keywords generate educationally relevant question domain specific distracters extracted keywords english input text fed prototype focus generating cloze question fill blank question 8.2 upgraded address generating mcq 's wh numerical ease human effort generating educationally relevant question text efficient output text english domain science .in modified generate effective mcq 's irrespective domain text fed prove outstanding avoid tedious effort question generation collection making automatic intelligent automatic multiple choice question generation english text 39 1 maha al-yahya ontology-based multiple choice question generation article 2013 2 takuya goto tomoko kojiri toyohidevatanabe tomoharu iwate takeshi kamada automatic generation multiple-choice cloze question evaluation knowledge e-learning international journal vol.2 no.3 3 michaelheilman automatic factual generation question text thesis 2011 4 j. c. brown g. a. frishkoff m. eskenazi automatic question generation vocabulary assessment proceeding conference human language empirical method natural language processing 819826 stroudsburg pa usa 2005 5 d.gates generating look-back strategy question expository text proceeding workshop question generation shared evaluation challenge arlington va usa 2008 6 l. stanescu c. s. spahiu a. ion a. spahiu question generation learning evaluation proceeding international multiconference science imcsit 08 509513 wisla poland 2008 7 b. cecila alves j.markgierl lai hollis automated item generation promote principled development proceeding american educational association aera 10 denver colo usa 2010 8 m. j. gierl j. zhou c. alves developing taxonomy item promote assessment journal learning assessment 7 2 1 50 2008 9 e. holohan m. melia d. mcmullen c. pahl adaptive elearning generation based semantic web proceeding international workshop semantic web fore-learning amsterdam netherlands 2005. proceeding 10 a. corbett j. mostow automating comprehension question lesson reading tutor question generation shared evaluationchallenge arlington va usa 2008. theworkshopon automatic multiple choice question generation english text 40 11 n. silveira framework question generation inproceedings theworkshop question generation sharedtask evaluation challenge arlington va usa 2008 12 s. ou c. orasan d.mekhaldi l. hasler automatic question pattern generation ontology-based question answering proceeding 21th international florida artificial intelligence society conference flair 08 183188 menlo park calif usa 2008 13 a. papasalouros k. kanaris k. kotis automatic generation multiple choice question domain ontology inproceedings iadis e-learning conference 427434 amsterdam netherlands 2008.the scientificworld journal 9 14 m. tosic m. cubric semcqprotege plugin automatic ontology-driven multiple choice question generation proceeding 11th international protege conference amsterdam netherlands 2009 15 b. zitko s. stankov m. rosic a. grubisic dynamic generation ontology-based knowledge representation inauthoring shell expert 36 pp.81858196 2009 16 i. leshcheva d. gorovaya d. leshchev ontology-basedassessment technique proceeding 2nd internationalworkshop semantic web higher education semhe10 southampton uk 2010. automatic multiple choice question generation english text 41", "keywords": ["alchemy api", "answer distracter", "arlington va", "assessment item", "automatic generation", "automatic multiple", "automatic multiple choice", "choice question", "choice question generation", "cloze question", "correct answer", "dbpedias alchemy", "description datatype", "distracter generation", "educationally relevant", "educationally relevant question", "english text", "forming question", "generation automatic", "generation distracter", "generation distracter generation", "generation english", "generation english text", "input english", "input english text", "input text", "knowledge base", "language sentence", "language text", "lookback strategy", "lookback strategy question", "mcq generation", "mcq item", "mcq pattern", "multiple choice", "multiple choice question", "natural language", "natural language sentence", "newalkar vallari", "newalkar vallari gokhale", "prototype automatic", "prototype automatic multiple", "question generation", "question generation english", "question pattern", "relevant question", "specific domain", "strategy question", "tedious job", "text fed", "vallari gokhale"], "libraries": [], "languages": ["basic", "java"], "frameworks": [], "dbs": []}, "./reports/BE Project Report - 35_QuadCores.pdf": {"title": "content-based storage mode in btrfs", "filename": "./reports/BE Project Report - 35_QuadCores.pdf", "data": "content-based storage mode btrfs amar chandole examination seat b120058517 nitesh singh examination seat b120058599 rohan kadekodi examination seat b120058564 vedang joshi examination seat b120058563 guidance prof. j. b. jagdale 2015-2016 content-based storage mode btrfs amar chandole nitesh singh rohan kadekodi vedang joshi examination seat b120058517 examination seat b120058599 examination seat b120058564 examination seat b120058563 bonafide prof. j. b. jagdale fulfilment earlier diploma prof. j. b. jagdale dr. emmanuel m. examiner l3cube completion based storage mode btrfs amar chandole nitesh kumar singh rohan kadekodi vedang joshi bona fide sponsorship l3cube glad inform completed 100 17th 2016. happy timely completion worked defined completed rest library benchmarking addition forward publish paper usenix fast'16 conference submission 2016. recommended publish paper conference good chance achieve success submitting paper usenix fast'16 topmost conference field filesystems storage mr. gaurav suryagandh gaurav.suryagandh gmail.com group 35 quadcores acknowledgement great pleasure satisfaction presenting final year based storage mode btrfs express deep sense gratitude prof. j.b. jagdale guiding directed referring correct helped understanding faced kind appreciated initiative encouraged exploring concept thankful mr. gaurav suryagandh continuously helping supporting busy inspired choose topic choice sure spoon-fed point special prof. n. r. sodha prof. s. c. dharmadhikari suggesting change evaluating thoroughly phase evaluation co-ordinator prof. s.s. pande explaining properly entire process guiding properly hod dr. emmanuel m. support entire lastly directly indirectly helped completion amar chandole nitesh singh rohan kadekodi vedang joshi sr. 3.1 3.2 4.1 4.2 4.3 4.4 4.5 5.1 5.2 5.3 5.4 storing change base version file storing snapshot time btrfs on-disk btrfs leaf description based storage mode btrfs retrieval storage user-space kernel-space representation write operation representation read operation representation rest api working 9 10 13 16 17 18 19 21 22 23 24 sr. 4.1 4.2 4.3 btrfs header description btrfs key description btrfs item description 14 14 15 abbreviation btrfs btrfs vfs vcs cbs rest xia btree file virtual file version control based storage representational state transfer xpressive internet en industry acknowledgement abbreviation ii iii iv vi title 1 1.1 1.2 1.3 1.4 1.5 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. ... ... ... ... ... ... ... ... ... ... ... ... challenge ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... aim ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... organisation ... ... ... ... .. 2. 2.1 study btrfs filesystem ... ... ... ... ... 3 4 3.1 3.2 3.3 3.4 4.1 4.2 specification definition ... ... ... ... ... ... ... ... ... ... specification ... ... ... ... ... cache router ... ... ... ... ... ... ... mobile phone ... ... ... ... ... ... ... ... ... ... ... ... ... ... github ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. ... ... ... ... ... ... .. ... ... ... ... ... ... ... 3.3.1 3.3.2 3.3.3 3.4.1 3.4.2 ... ... ... ... ... ... ... ... 4.2.1 use-case ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 4.2.2 1 2 3 3 3 4 5 7 8 8 9 9 11 11 13 17 18 5 6 7 5.1 5.2 5.3 5.4 6.1 6.2 7.1 7.2 mount time operation ... ... ... ... ... ... ... ... write operation ... ... ... ... ... ... ... ... ... ... ... ... read operation ... ... ... ... ... ... ... ... ... ... ... ... .. rest apt integration ... ... ... ... ... ... ... ... ... .. evaluation benchmarking ... ... ... ... ... ... ... ... ... ... ... ... ... ... benchmarking ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 20 21 22 23 25 26 27 27 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 28 based storage mode btrfs btrfs actively developed file advanced moving major linux filesystem replacing current ext4 implement content-based-storage mode btrfs file fact wa mentioned todo-list btrfs internet content-caches read-only lookup time metric inefficient store conventional file-path based manner content-based-storage mode stored disk basis `` hash '' lookup hash based extremely quick advantage hash-based storage duplication b-tree named hash_inode tree tree tree root existiing btrfs source code hash sha-256 file calculated internally key pair hash key inode number file stored disk hash_inode_tree automatically duplication well file lookup quicker key pair searched file hash_inode tree complexity logn directly accessed inode number avoiding lengthy file-path based lookup 2015-16 1 based storage mode btrfs 1. 1.1 add content-based-storage mode fastly developing promising filesystem btrfs capitalizes considerably improving performance btrfs filesystem write- read-many-times vastly changing file-lookup presently file accessed searched long file path /home/xyz/my drive/studies backup/college/be related/quadcores/kernel codes/october/5/my_ioctl.c directory level inode level searched traversed searching finally inode file accessed my_ioctl.c maximum delay traditional filesystems imagine directly inode number file save effort time wise store filename inode number non-efficient searching time consuming offer exact solution efficient b-tree based btrfs store based conventional filepath manner content-based-storage implemented mode existing btrfs filesystem provide choice activating deactivating mkfs time 2015-16 2 based storage mode btrfs 1.2 challenge main challenge provide complete content- based-storage improvement performance challenge listed calculation hash sha-256 file handled intelligently delay scenario file demanded read-request stored hash calculated lookup b-tree reduction lookup time compared conventional filesystems kind deduplicating well file equal effectiveness handling access file effectively directory based storage 1.3 aim aim interest inclined explore filesystem internally learn efficient kernel programming experience contributing rapidly growing professional open-source community btrfs great oppurtunity learn level 1.4 completion fully working submit patch btrfs community accepted mainstream sure device btrfs filesystem access content-based-storage mode help btrfs community compete current mainstream linux filesystem ext4 note btrfs linux distribution main heavy development 2015-16 3 based storage mode btrfs 1.5 includes justified help understand complete comprehensively currently 1 2 background light primary mention key source programming language library code frame-works 3 detailed definition specification description software/hardware 4 talk i.e sytem includes efficiently explain 5 includes actual includes working mention faced 6 summarizes achieves realization concludes 7 entire 2015-16 4 based storage mode btrfs 2. 2.1 study btrfs filesystem paper btrfs linux b-tree filesystem rj10501 alm1207-004 9 2012 summary paper author ohad rodeh josef bacik chris mason proposed filesystem btrfs filesystem paper describes core filesystem light challenge posed defragmentation presence snapshot tradeoff maintain performance face wide spectrum workload explained b+ tree memory allocation explained concept copy-on-write filesystem paper describes main layout btrfs manner copy-on-write b- tree reference-counting extent defragmentation cow based filesystems presence snapshot method assessing performance common benchmark chosen btrfs performs comparably contemporary contemporary xfs ext4 current stable famous filesystems contribution filesystem supporting snapshot checksum providing reasonable performance workload storage configuration chosen hard disk ssd benchmark tio random sequential benchmark 2015-16 5 based storage mode btrfs performance plotted graph performance filesystem observed btrfs filesystem performs comparably current stable well-establised xfs ext4 filesystems comparable performance additional btrfs strong contender replacing ext4 default filesystem linux reaching stability 2015-16 6 based storage mode btrfs 3. specification 3.1 definition btrfs b-tree based filesystem currently development advanced extent based storage space efficient indexed directory replacing ext4 mainstream filesystem linux kernel implement content-based storage mode btrfs file mentioned todo btrfs community read-only look-up time matter filesystems support based storage look- time file accessed considerable depth directory hierarchy content-based storage mode file stored basis `` hash '' virtually remove look-up delay retrieval file look-up based file path manner '' hash '' inherently remove chance duplicate stored disk add hash_inode tree tree tree root btrfs based storage mode enabled filesystem hash stored disk usual file path manner search proposed hash_inode tree stored form hash inode pair b+tree hash inode stored divided create hash_inode tree tree store hash file provide option enable disable storage mode mount-time mkfs- time tbd intercept writes check written 2015-16 7 based storage mode btrfs tree intercept read hash file lookup inode hash_inode tree enhance debugging method btrfs support debugging content-trees 3.2 specification 256 bit checksum verifying block recording duplicate verifying equality block storing disk configurable checksum tree b+ tree tree tree root change mapping command vfs btrfs key item header btrfs inode_no object_id file passed userspace kernel space 3.3 3.3.1 cache router internet content-caches read-only lookup time metric inefficient store conventional file-path based manner content-based-storage mode stored disk basis `` hash '' lookup hash based extremely quick advantage hash-based storage duplication provide efficient cache router providing file allows storage mode 2015-16 8 based storage mode btrfs 3.3.2 mobile phones/ pc core operating file read-only doe n't modify file btrfs filesystem file stored hash retrieved hash making extremely quick presently file accessed searched long file path /usr/src/linux-headers-3.19.0-28/scripts/cleanfile directory level inode level searched traversed searching finally inode file accessed cleanfile pc btrfs filesystem storage mode directly access inode file turn reduce latency retrieving file 3.3.3 github major difference git vcs subversion friend included git conceptually store file-based change cv subversion perforce bazaar keep file change file time fig 3.1 storing change base version file 03 2015-16 9 based storage mode btrfs git doesnt store git snapshot miniature filesystem time commit save state git basically picture file moment store snapshot efficient file changed git doesnt store file link previous identical file stored git stream snapshot fig 3.2 storing snapshot time 03 distinction git vcss git reconsider aspect version control copied previous generation git mini filesystem incredibly powerful built top simply vcs git check-summed stored referred checksum impossible change file directory git knowing functionality built git lowest level integral philosophy cant lose transit file corruption git detect 2015-16 10 based storage mode btrfs implementing content-based storage btrfs github implemented filesystem reduce load github help focus core functionality 3.4 3.4.1 web caching server web caching server small memory store cached setting web server multicore cpu- 2 chip multicore optimal 2 ghz minimum x86_64 arhitecture memory 4 gb physical ram 1gb memory heap configured heap topology cache server single machine separate clustered server btrfs main basic configuration ext4 filesystem installed compare performance 3.4.2 latest kernel source code source code kernel version 4.4.x change btrfs filesystem directory kernel source code freely http //www.kernel.org/ appropriate change source code btrfs file 2015-16 11 based storage mode btrfs btrfs source code git btrfs developer latest btrfs code git latest linus kernel doe n't latest btrfs latest btrfs code git cloned git clone //git.kernel.org/pub/scm/linux/kernel/git/kdave/btrfs- progs.git change btrfs-progs folder source code emacs/sublime cscope ctags text editor emacs sublime kernel source code cscope linux interactively examines program browsing source code terminal environment ctags generates tag file variety language object file tag file allows item easily located text editor utility tag signfies language object entry text editor integrated cscope ctag language linux kernel programming complete linux shell script developed easy execution batch operation format btrfs partition mount cbs enabled create random file remount api rest integration wa developed python benchmarking space utility programming i.e btrfs_tools programming wa involved 2015-16 12 based storage mode btrfs 4. 4.1 btrfs three on-disk datastructures 1 header 2 key 3 item layout datastructure illustrated fig 4.1 btrfs on-disk 01 header header checksum owner level node bytenr actual location extent disk physical address block disk header generation number block wa updated 2015-16 13 based storage mode btrfs offset size description 20 csum checksum field 20 node 10 uuid uuid 8 uint logical address node 7 field flag 1 uint backref rev 1 mixed filesystems 0 indicates filesystem 10 uuid chunk tree uuid 8 uint generation 8 uint tree node 4 uint number item 1 uint level 0 leaf node 4.1 btrfs header description 01 0 20 30 38 3f 40 50 58 60 64 65 key btrfs_key item object_id item offset item block uniquely identify object filesystem offset size 8 1 8 0 8 9 11 description uint object tree object uint uint offset meaning depends item item 4.2 btrfs key description 01 2015-16 14 based storage mode btrfs item unique btrfs item item btrfs inode item extent item checksum item dir item size 11 4 4 offset 0 11 15 19 key uint uint description key offset relative header 65 size 4.3 btrfs item description 01 2015-16 15 based storage mode btrfs leaf da fig 4.2 btrfs leaf 02 tree node hold key block-pointer pair leaf store array item reverse sorted array array grow item variably sized filesystem defined item field key indicates stored item filesystem composed object 64bit object_id object_id bit key allowing item filesystem object logically grouped b-tree field describes kind held item object typically comprises item offset field describes held extent 2015-16 16 based storage mode btrfs 4.2 4.2.1 use-case fig 4.3 description based storage mode btrfs fig 4.3 based storage btrfs hash providing hash retieved based storage turn file facility require read/write/object_id_lookup/inode_lookup facility 2015-16 17 based storage mode btrfs 4.2.2 file retrieval fig 4.4 retrieval fig 4.4 file retrieval hash intended file hash looked-up inode number stored tree objectid target file searched file opened reading file 2015-16 18 based storage mode btrfs file storage fig 4.5 storage storage involves calculating hash file stored hash compared existing file stored disk file de-referenced hashing sha-256 2015-16 19 based storage mode btrfs 5. 5.1 mount time operation mount time operation include creation b+ tree addition tree tree root tree named cbs_tree empty creation tree on-disk persist filesystem unmounted mounted creation tree involve change btrfs_fs_info file ctree.h address root node tree macro file b-tree help recognize tree mount time operation calling user-space function called 'btrfs_cbs_enable wa btrfs_tools utility btrfs_tools package help activate filesystem command command 'btrfs cbs enable package command fired kernel space ioctl invoke function 'btrfs_cbs_enable responsible carrying mount time operation fig 5.1 tree root kernel space btrfs cbs enable function user-space invoked cbs_tree leaf node 1. hash complete file 2. inode number file 2015-16 20 based storage mode btrfs space space btrfs cbs enable btrfs_progs kernel kernel space space tree tree root cbs_tree fig 5.1 user-space kernel-space representation 5.2 write operation write time operation involve file write btrfs file written disk form extent extent arrives start block number extent remembered written disk subsequently extent written disk arrive written arrival extent block number extent remembered written disk remembering start logical address file hash digest calculated help standard sha256 hash inserted cbs_tree inode number file insertion cbs_tree 1. key tree involve 64 bit hash digest file object_id 2015-16 21 based storage mode btrfs 2. tree include remaining 192 bit hash digest inode number file file represented uniquely help hash accessible inode number stored cbs_tree file file sha256 1234ab 260 inode cbs_tree fig 5.2 write operation representation 5.3 read operation read time operation involve file read file read based storage read command involve hash digest file path hash digest enters btrfs virtual file cbs_tree searched hash exists tree operation based discovery 1 2. hash digest tree file doe exist read error reported hash digest tree inode number retrieved leaf hash digest inode number btrfs_key called 'btrfs_inode_item created 2015-16 22 based storage mode btrfs help inode number order inode file inode number retrieved inode point target file read sha256 1234ab cbs_tree filefile inode struct fig 5.3 read operation representation 5.4 rest api integration rest api integration target specific web server based storage rest call representational state transfer rest architectural style wide web rest ignores component protocol syntax order focus role component constraint interaction component interpretation element rest architectural constraint architectural property induced performance scalability simplicity modifiability visibility portability reliability rest api provided space library 2015-16 23 based storage mode btrfs operation rest categorized 1. call call userspace includes hash digest file retrieved call mapped read call rest library provided userspace read operation 5.3 file userspace helping retrieval file 2. call call userspace includes file stored call mapped write call rest library provided userspace write operation 5.4 file stored disk entry cbs_tree fig 5.4 rest api working 2015-16 24 based storage mode btrfs 6. evaluation 6.1 benchmarking cbs introduced btrfs performance evaluation content-based storage altogether day filesystem benchmarking support reading file based hash benchmarking wa developed cbsbench benchmarking wa read-time latency improvement operates 2 major mode path-based content-based read time latency measured cbs expected improve performance path-based mode basically creates file random directory hierarchy n-levels deep btrfs drive number provided path measure time traverse long path read operation file content-based mode hand principle cbs rule directory hierarchy number file random created number provided file stored flat-hierarchy btrfs drive hash file wa computed stored cbsbench program 's memory file opened read total time recorded compare performance 2 mode equal help comparable fair equal number directory file happen scenario 2015-16 25 based storage mode btrfs 6.2 benchmarking mode 2000. read performance improvement wa noteworthy cbs average 10 trial 1. time opening file 2000th directory path based lookup 78.97 2. time opening 2000 file content-based lookup 30.04 2015-16 26 based storage mode btrfs 7. 7.1 introduced content-based-storage cbs mode btrfs culminated benchmarking showing remarkable improvement search time file argument start search file based obviate traditional path based lookup improve read performance read-only storage corroborated subsequent desirable outcome included inherent deduplication mechanism granularity currently object level provide immense improvement space storage initial framework detect bit rot caused legacy storage enable cbs mode xpressive internet xia cloud storage intended provided rest based filesystem 7.2 notion addressability central ensure optimum deduplication special granularity deduplication block-level lead larger meta-data lead increased space compared object-level deduplication conducted decide trade-off basis framework bit-rot detection expanded provide appropriate working bit rot detection btrfs image deployed legacy cbs tested ssd device enable deployment ssd based storage conjunction ceph object storage 2015-16 27 based storage mode btrfs 01 btrfs wiki http //btrfs.wiki.kernel.org/index.php/main_page 02 btrfs linux b-tree filesystem ohad rodeh josef bacik chris mason rj10501 alm 1207-004 9 2012 03 github http //git-scm.com/book/en/v2/getting-started-git-basics 2015-16 28", "keywords": ["amar chandole", "based storage", "based storage mode", "btrfs amar", "btrfs amar chandole", "btrfs file", "btrfs filesystem", "cache router", "contentbased storage", "contentbased storage mode", "contentbasedstorage mode", "conventional filepath", "digest file", "examination seat", "file lookup", "file path", "hash digest", "hash digest file", "hash file", "hash sha", "hash sha file", "hashinode tree", "inode file", "inode number", "inode number file", "joshi examination", "kadekodi vedang", "kadekodi vedang joshi", "kernel source", "kernel source code", "kernel space", "lookup time", "manner contentbasedstorage", "mode btrfs", "mode btrfs amar", "mode btrfs file", "mount time", "mount time operation", "nitesh singh", "number file", "operation representation", "rest api", "rest library", "rohan kadekodi", "sha file", "source code", "storage mode", "storage mode btrfs", "stored disk", "time operation", "tree root", "tree tree", "tree tree root", "vedang joshi", "vedang joshi examination"], "libraries": [], "languages": ["basic", "small", "python"], "frameworks": [], "dbs": []}, "./reports/BE Project Report - Group ID 28.pdf": {"title": "eyeglasses-free display", "filename": "./reports/BE Project Report - Group ID 28.pdf", "data": "eyeglasses-free display eyeglasses-free display tushar dhadiwal hrishikesh kadam examination seat b120058528 examination seat b120058501 guidance prof. s. b. deshmukh institue 2015 16 2015-16 eyeglasses-free display eyeglasses-free display tushar dhadiwal hrishikesh kadam examination seat b120058528 examination seat b120058501 bonafide prof. s. b. deshmukh fulfilment earlier diploma prof. s. b. deshmukh examiner dr. emmanuel m. professor dr. p. t. professor 2015-16 ii eyeglasses-free display acknowledgement great pleasure satisfaction presenting eyeglasses-free display express deep sense gratitude prof. s. b. deshmukh mentor mr. yogesh dhongade continuously guiding process directed referring appropriate helped resolving kind faced helped making interesting easier prof. s. h. chandak prof. s. s. inspiring special hod dr. emmanuel valuable support directly indirectly helped completion obediently group 28 tushar dhadiwal hrishikesh kadam 2015-16 iii eyeglasses-free display 1.1 comparison conventional display multilayer display light field display proposed light field display 4.1 prototype display 4.2 class 4.3 4.4 4.5 cpm 6 9 10 11 12 13 2015-16 iv eyeglasses-free display ii iii 1 2 3 title 1.1 1.2 1.3 2.1 2.2 3.1 3.2 3.3 3.4 background relevance undertaken 1.3.1 1.3.2 aim 1.3.3 review light field display vision-correcting display definition 3.2.1 prefiltering 1 2 2 2 3 3 3 3 4 4 5 7 7 7 7 8 8 2015-16 eyeglasses-free display proposed proposed 4.2.1 class 4.2.2 4.2.3 proposed 9 9 10 10 11 12 13 14 15 16 4 4.1 4.2 4.3 5 6 2015-16 vi eyeglasses-free display people worldwide glass contact lens read properly introduce computational display predistorts presented observer target image perceived eyewear designing optic concert prefiltering pro- posed display achieves higher resolution contrast prior approach vision-correcting image dis- play demonstrate inexpensive light field display driven efficient 4d prefiltering produce desired vision-corrected imagery higher-order aberration difficult corrected glass proposed computational display evaluated simulation low-cost prototype device keywords computational ophthalmology display light field 2015-16 1 eyeglasses-free display 1. 1.1 background today estimated 41.6 population half population asia country suffer myopia eyeglass primary correct aberration 13th century decade contact lens refractive surgery supplement option correct refractive error approach intrusive observer eyewear undergo surgery uncomfortable dangerous 1.2 relevance year vision-correcting computational display introduced non-intrusive alternative pamplona al 3 proposed light field display enable display correct observer visual aberration correction relies 2d image observer focal range physical display enclosure light field display offering capability require extremely angular sampling rate reduce spatial image resolution high- resolution alternative huang al 4 proposed multilayer device relies prefiltered image prefiltering technique optical configuration drastically reduce image contrast explore combination viewer-adaptive prefiltering off-the-shelf lenslets parallax barrier demonstrate vision-correcting computational display facilitates higher contrast resolution compared previous solution 2015-16 2 eyeglasses-free display 1.3 undertaken 1.3.1 light field display conventionally glasses-free 3d image presentation correcting visual aberration observer promising direction direct benefit people approach display practical providing resolution contrastthe criterion driving display industry decade envision display integrated comprising flexible optical configuration combined sophisticated computing allow mode 2d glasses-free 3d vision-correcting image display 1.3.2 aim aim explore computational display correcting visual aberration human observer intend contribution 1.3.3 introduce novel vision-correcting computational display leverage component concert light field prefiltering analyze vision-correcting display frequency domain light field display provide fundamentally freedom approach demonstrate light field pre filtering offer benefit alternative vision- correcting display image resolution contrast enhanced parallax barrier brighter lenslet-based device thinner form factor evaluate proposed display wide range simulation build low-cost prototype device demonstrates correction myopia hyperopia practice 2015-16 3 eyeglasses-free display 2. background review light field computational ophthalmology graphic light field fundamental computational photography frequency instance help better understand theoretical foundation ray-based light transport range novel camera e.g levin al 5 aberration correction light field camera low-cost device allow diagnosis refractive error cataract human eye example computational ophthalmology interactive technique combined computational photography display medical 2.1 light field display glasses-free 3d light field display invented 20th century dominating lenslet array parallax barrier today wider range 3d display including volumetric display multifocal display super-multi-view display volumetric display create illusion virtual 3d object floating inside physical device enclosure observer accommodate volume multifocal display allow display imagery focal plane require multiple device form factor vary-focal glass worn super-multi-view display emit light field extremely angular resolution achieved employing spatial light modulators near-eye light field display 6 compressive light field display 6 introduced exception 6 demonstrated support accommodation computational display masia al building light field display support depth cue including binocular disparity motion parallax accommodation thin form factor challenging display today support accommodation allows observer focus virtual image float distance physical device capability allow correction low-order visual aberration myopia hyperopia maimone al 6 demonstrate single-device solution doe require glass 2015-16 4 eyeglasses-free display device form-factor isunlike suitable mobile display propose strategy aiming support depth cue single device employ simple parallax barrier lenslet array narrow field view support accommodation binocular disparity motion parallax glasses- free 3d display proposed device how- approach allows inexpensive add-on existing phone facilitating eyeglasses-free 2d image display observer visual aberration including myopia hyperopia astigmatism higher-order aberration 2.2 vision-correcting display device tailored correct visual aberration human observer introduced early approach attempt pre-sharpen 2d image presented conventional screen inverse point spread function psf observer eye 7 method improve image sharpness ill-posed fundamentally psf eye refractive error low-pass filterhigh image frequency irreversibly canceled optical path display retina overcome pamplona al 3 proposed 4d light field display lenslet array parallax barrier correct visual aberration emitted light field provide angular resolution multiple light ray emitted single lenslet enter pupil.this approach interpreted lifting higher-dimensional light field space inverse well-posed conventional light field display pamplona al 3 subject spatio-angular resolution trade- increased angular resolution decrease spatial resolution viewer sharp image lower resolution screen mitigate huang al 4 proposed multilayer dis- play prefiltering promising high-resolution approach combining prefiltering optical setup reduces image contrast pamplona al 3 explore resolution-limits build vision- correcting display huang al 4 computation overcome 2015-16 5 eyeglasses-free display resolution limit cost decreased contrast approach proposed combine method employing 4d light field prefiltering direct i.e screen pixel corresponds emitted light ray demonstrate allows higher resolution compared direct method angular resolution demand decreased time image contrast increased compared previous prefiltering approach graphical comparison discussed fig 1.1 comparison conventional display multilayer display light field display proposed light field display 1 2015-16 6 eyeglasses-free display 3. specification 3.1 definition implement working eyeglasses-free solution correcting visual aberration computational light field display image pre filtering 3.2 3.2.1 prefiltering enter eye prescription developer adjust parameter visual aberration eye viewer input image viewer asked provide select image intended undergo prefiltering process prefiltering adjustment image provided viewer processing performed developer help prefiltering view pre filtering adjustment viewer presented improved image personalized visual aberration eye viewer 2015-16 7 eyeglasses-free display 3.3 mathworks matlab 2015a lbfgsb 2 suitable image viewer application/video player platform 3.4 display device 200ppi pixel density thin pinhole mask building parallax barrier display 8 acrylic spacer 4mm 2015-16 8 eyeglasses-free display 4. 4.1 proposed pinhole-based parallax barrier mask printed 5080 dpi transparency heidelberg herkules imagesetter optimize light throughput avoid diffraction pinhole size 75 micron spaced 390 micron apart mask mounted offset 5.4 mm front conventional 2d screen clear acrylic spacer screen apple ipod touch 4th generation display pixel pitch 78 micron 326 ppi total resolution 960 640 pixel fig 4.1 prototype display 1 8 2015-16 9 eyeglasses-free display 4.2 proposed 4.2.1 class fig 4.2 class class includes major class representing precomputation class proposed pre computation matrix generation projection matrix visual aberration viewer standard non- negative linear solver employ lbfgsb 2 displayinput class refers parameter proposed display affect angular spatial frequency modified light field includes angular resolution screen pixel pitch padding screen pixel parameter 2015-16 10 eyeglasses-free display eyeinput class refers collection parameter directly visual aberration eye viewer anomaly number diopter distance pupil viewing distance parameter associated class 4.2.2 fig 4.3 interaction actor proposed 2015-16 11 eyeglasses-free display viewer parameter visual aberration eye pre filtering supply image modification input verified developer computation adjustment order perform appropriate pre filtering provided image finally processed image displayed viewer light field display enhanced resolution contrast 4.2.3 fig 4.4 sole includes 2 actor viewer developer developer adjust parameter visual aberration eye viewer viewer asked provide select image processing performed developer pre filtering adjustment viewer presented improved image 2015-16 12 eyeglasses-free display 4.3 proposed fig 4.5 cpm 2015-16 13 eyeglasses-free display 5. proposed approach aspect human eye working light field display exploited studied order achieve proposed outcome light field transport inversion retinal light field projection define lateral position retina pupil fig 3 light field describes radiance distribution inside eye photoreceptors retina aver- age radiance incident angle perceived intensity modeled projection angular dimension inverse light field projection aberration-correcting display 4d light field observer desired 2d retinal projection perceived assuming viewing distance pupil size parameter emitted light field optimizing function target image normalized power unit area constraint account physically feasible pixel state screen equation solved standard non-negative linear solver employ lbfgsb 2 equation ill-posed conventional 2d display invertible 4d light field display frequency domain equation allows optimal display pixel state determined natural question remains display best suited aberration-correction attempt answer question frequency conditioning projection matrix 2015-16 14 eyeglasses-free display 6. correcting visual aberration critical people today spend amount time screen daily basis computational display proposed transformative profound interact digital device suitable integration mobile device monitor television vision-correcting display integral diverse range device tailoring visual observer well turn light field display combined glasses-free 3d display mode proposed technique facilitate variety novel revolutionize experience 2015-16 15 eyeglasses-free display 1. f.-c. huang g. wetzstein b. a. barsky r. raskar eyeglasses- free display correcting visual aberration computational light field display acm transaction graphic tog 33 4 59 2014 2. byrd r. h. lu p. nocedal j. zhu c. 1995. limited memory bound constrained optimization siam j. sci comput 16 5 sept. 11901208 3. pamplona v. oliveira m. aliaga d. raskar r. 2012. tailored display compensate visual aberration acm trans graph siggraph 31 4. huang f.-c. lanman d. barsky b. a. raskar r. 2012. correcting optical aberration multilayer display acm trans graph siggraph asia 31 6 185 1 185 12 5. levin a. hasinoff s. w. green p. durand f. freeman w. t. 2009 4d frequency computational camera depth field extension acm trans graph siggraph 28 3 6. maimone a. wetzstein g. hirsch m. lanman d. raskar r. fuchs h. 2013. focus 3d compressive accommodation display acm trans graph 32 5 153 1 153 13 7. alonso jr. m. barreto a. 2003. pre-compensation high-order aberration human eye on-screen image deconvolution medicine biology society 1 556559 8. build parallax barrier display http //displayblocks.org/diycompressivedisplays/parallax-barrier-display/ 2015-16 16", "keywords": ["aberration eye", "aberration eye viewer", "angular resolution", "barsky raskar", "computational display", "computational ophthalmology", "dhadiwal hrishikesh", "dhadiwal hrishikesh kadam", "display device", "eye viewer", "eyeglassesfree display", "field display", "hrishikesh kadam", "huang al", "lenslet array", "light field", "light field display", "myopia hyperopia", "parallax barrier", "refractive error", "support accommodation", "th century", "tushar dhadiwal", "tushar dhadiwal hrishikesh", "visioncorrecting computational", "visioncorrecting computational display", "visioncorrecting display", "visual aberration", "visual aberration eye"], "libraries": [], "languages": ["matlab"], "frameworks": ["angular"], "dbs": []}, "./reports/BE Project Report_1.pdf": {"title": "embedded analytics engine for bmc release   process management (rpm)", "filename": "./reports/BE Project Report_1.pdf", "data": "embedded analytics engine bmc release process rpm embedded analytics engine bmc release process rpm fulfilment abhijeet bhute akshay shinde trupti bhamare b120058518 b120058617 b120058634 guidance dr. emmanuel sr. 27 pune-satara road maharashtra 411043 2017-2018 pict- technology- 2017-18 embedded analytics engine bmc release process rpm embedded analytics engine bmc release process rpm abhijeet bhute akshay shinde trupti bhamare b120058518 b120058617 b120058634 bonafide dr. emmanuel m. fulfilment earlier prof. d. d. londhe co-ordinator dr. p. t. kulakarni diploma dr. emmanuel dr. b. a. sonkamble examiner pict- technology- 2017-18 embedded analytics engine bmc release process rpm sponsorship letter pict- technology- 2017-18 embedded analytics engine bmc release process rpm acknowledgement opportunity express heart-felt gratitude dr. prahlad providing infrastructure complete express deepest gratitude dr. b. a. sonkamble thankful dr. emmanuel unflagging support continuous encouragement guidance persistent help warm faculty helped view encouraging thankful directly indirectly contributed helped complete abhijeet bhute akshay shinde trupti bhamare pict- technology- 2017-18 embedded analytics engine bmc release process rpm sr. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 level class use-case volume fusion time complete fusion trend fusion time fusion component version map property map application/environment server map component summary release calendar environment calendar deployment window calendar fusion role team/group/user split-up 8 14 15 16 17 18 19 20 21 22 23 24 24 25 26 27 28 29 pict- technology- 2017-18 embedded analytics engine bmc release process rpm sr. 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 gantt basic rail rail rest api screenshot formatting code volume code snippet volume template initialization newly generated volume screenshot formatting code time completion rest client response time completion query code snippet time completion template initialization newly generated time completion screenshot formatting code trend rest client response time completion query code snippet trend template initialization newly generated trend screenshot formatting code time rest client response time query code snippet time template initialization newly generated time code snippet template initialization 31 34 35 39 40 40 41 41 42 42 43 43 44 44 45 46 46 47 47 pict- technology- 2017-18 embedded analytics engine bmc release process rpm sr. 38 39 40 41 42 48 48 50 50 51 newly generated component version map newly generated server map change trend change time completion change time pict- technology- 2017-18 embedded analytics engine bmc release process rpm sr. 1 comparison legacy ui ui 37 pict- technology- 2017-18 embedded analytics engine bmc release process rpm abbreviation programming driven document api d3 devops development operation dom json mvc rest rpm document object javascript object notation view controller representational state transfer release process pict- technology- 2017-18 embedded analytics engine bmc release process rpm sponsorship industry acknowledgement abbreviation ii iii iv vi title 1 2 3 4 1.1 1.2 2.1 2.2 3.1 3.2 3.3 3.4 3.5 3.5.1 3.5.2 4.1 4.2 4.3 4.4 4.5 4.5.1 4.5.2 4.5.3 4.5.4 4.5.5 4.5.6 4.5.7 4.5.8 review existing proposed specification definition concept class volume time complete trend time component version map property map environment/application server map server map 1 1 3 4 4 8 10 10 10 11 11 12 12 12 13 14 15 16 17 18 18 19 20 21 22 23 24 24 pict- technology- 2017-18 embedded analytics engine bmc release process rpm 4.5.9 4.5.10 4.5.11 4.5.12 4.5.13 5.1 5.2 5 6 7 6.1 6.1.1 6.1.2 6.2 6.2.1 6.2.2 6.3 6.3.1 6.3.2 6.3.3 6.3.4 6.3.5 8 9 10 8.1 8.2 10.1 10.2 10.3 10.4 component summary release calendar environment calendar deployment window calendar role team/group/user split-up iv stage fetching processing generating technique ruby rail engine rest apis d3js elaborate technique volume time complete trend time miscellaneous comparitive evaluation context review sheet review ii sheet review iii sheet review iv sheet 24 25 26 27 28 29 29 31 32 32 32 32 33 33 36 39 39 41 43 45 47 49 52 52 53 54 55 55 57 59 61 pict- technology- 2017-18 embedded analytics engine bmc release process rpm bmc release process rpm devops solution bmc help manage release planning release coordination deployment automation process closely powerful embedded analytics engine product analytics engine developed graphic library d3js processing help rest apis implemented ruby rail help communicate clearly efficiently statistical graphic plot graphic numerical encoded dot bar visually communicate quantitative message apis flexible scalable proposed visualization library source library javascript library d3 script visualization library include existing rest keywords api analytics visualization devops pict- technology- 2017-18 embedded analytics engine bmc release process rpm 1 1.1 visualization viewed discipline modern equivalent visual involves creation study visual representation meaning '' abstracted schematic form including variable unit '' primary visualization communicate clearly efficiently statistical graphic plot graphic numerical encoded dot bar visually communicate quantitative message effective visualization help analyse reason evidence complex accessible understandable usable analytical making comparison understanding causality principle graphic i.e showing comparison showing causality generally specific measurement pattern variable visualization art science viewed branch descriptive statistic grounded theory development increased amount created internet expanding number sensor environment referred `` '' internet thing processing analysing communicating ethical analytical challenge visualization field science practitioner called scientist help address challenge growing amount accessibility visualisation increasingly doe visualised represent quantity coherently doesnt distort help discern pict- technology- 2017-18 1 embedded analytics engine bmc release process rpm general basic visualisation exploration help find story telling explanation story audience visualisation consider audience expectation fetch server route activated example rendering profile fetch 's server achieve 1. fetching navigation perform navigation fetch incoming component 's lifecycle hook display loading state fetched 2. fetching navigation fetch navigation route enter guard perform navigation fetched json javascript object notation lightweight interchange format profound efficient gathering collecting share json calling function key pair key variable variable parsed json api form object converted respective format acceptable restful api fetch server client knowing happening background api function procedure allow creation access operating service rest service fetch json csv xml format making http request server platform help developer provide automation apis people manage apis allow embedded site easily guarantee fluid delivery integrated experience providing integration apis company customize service helping personalize pict- technology- 2017-18 2 embedded analytics engine bmc release process rpm 1.2 bmc release process rpm devops solution bmc help manage release planning release coordination deployment automation process closely powerful embedded analytics engine product develop analytics engine currently bmc fusioncharts graphical representation free cost library constraint offer limited functionality bmc rpm product attempt engine manually library fusioncharts eliminated fusion render box accepts input parameter return output good choice lot going provided fusion provide parameter customized fusion customization extended charting capability fusion good choice dont customizations fusion good choice bmcs rpm requires dynamic fully customizable developer point view friendly represent accurately meaningful generated doe crash amount product generates robust needed better handling capacity provided newly generated remove fusion product completely pict- technology- 2017-18 3 embedded analytics engine bmc release process rpm 2 review 2.1 existing common visualization fall 2d area temporal multidimensional hierarchical network category 2d area 2d area visualization geospatial meaning relate relative position thing earth surface cartogram distorts geometry space map convey alternative variable population travel time main area distance cartograms choropleth map area patterned shaded represent measurement statistical variable visited website country population density state dot distribution dot density map dot symbol presence map relying visual scatter spatial pattern temporal temporal visualization one-dimensional linear visualization differ start finish time item overlap connected scatter plot scatter plot plot display variable connects series polar area traditional pie sector differ extend center circle size angle time series point typically consisting successive measurement time interval number website visit period month pict- technology- 2017-18 4 embedded analytics engine bmc release process rpm multidimensional multidimensional element dimension category common visualization pie circle divided sector illustrate numerical proportion arc length angle sector proportional quantity represents histogram visualization rectangle height proportional count width equal bin size range small interval scatter plot display variable collection point hierarchical hierarchical ordering group larger group encompass smaller group dendrogram tree illustrate arrangement cluster produced hierarchical clustering ring sunburst multilevel pie visualizes hierarchical concentric circle tree tree represents hierarchical nature graph form visually represented top bottom left network network visualization network alluvial represents change network time node-link represents node dot link segment connected performance web-based visualization scientific generate massive requires visualization example nevada solar energy-water-environmental nexus generating amount pict- technology- 2017-18 5 embedded analytics engine bmc release process rpm environmental textual format web web-based visualization desirable standalone analyzes processing mechanism popular web-based visualization google flex ofc d3 compare performance standalone visualization jfreechart comparison processing time divided three segment layout time transformation time rendering time separately measured actual temperature nevada nexus scale ranging 100 100 000 point visualization ideal environment bmc release process release process ensure sound deployment change business- critical bmc release process help deploy frequently lower cost fewer error lightweight web-based coordination execution productive intuitive web-based front execute release process push button theyll status release easily monitor measure unmanaged bmc release process deployment help analyze component moving stage deployment historical total number request completed state time complete request comparative view version deployed environment accelerate deployment reducing release cycle week hour increase business agility responding changing market condition competitive threat reduce cost eliminating labour-intensive manual script-based process ensure worry-free deployment leveraging strong collaboration pict- technology- 2017-18 6 embedded analytics engine bmc release process rpm rest api representational state transfer rest architectural style defines constraint property based http web service conform rest architectural style restful web service provide interoperability internet rest- compliant web service allow requesting access manipulate textual representation web uniform predefined stateless operation term representational state transfer wa introduced defined 2000 roy fielding doctoral dissertation fielding 's dissertation explained rest principle '' http object '' 1994 designing http 1.1 uniform identifier uri standard rest 's clientserver separation concern simplifies component reduces complexity connector semantics improves effectiveness performance tuning increase scalability pure server component layered constraint allow intermediary proxy gateway firewall introduced point changing component allowing assist translation improve performance large-scale shared caching rest enables intermediate processing constraining message self-descriptive interaction stateless request standard method medium indicate semantics exchange response explicitly indicate cache ability d3js d3 data-driven document d3.js javascript library visualizing web standard d3 help bring life svg canvas html d3 combine powerful visualization interaction technique data-driven approach dom manipulation full capability modern browser freedom visual pict- technology- 2017-18 7 embedded analytics engine bmc release process rpm d3.js website popular include creating interactive graphic online news website dashboard viewing producing map gi map making addition exportable nature svg enables graphic created d3 print publication 2.2 proposed proposed divided i.e backend fetching processing ruby rail rest apis frontend generating library d3js fig.1 represents high-level consists database bmc rpm rest apis embedded analytics engine requestor ui fig.1 pict- technology- 2017-18 8 embedded analytics engine bmc release process rpm fetching processing fetched making rest request server rest underlying architectural principle web client browser server interact complex client knowing server host key constraint server client agree medium web html api adheres principle rest doe require client api server provide client interact service rail best api service provider rest build ui logic presentation node combined framework choice ember react rail serve rest apis node heavy lifting ruby rail creating rest api fetching server processing generate json format generating library d3js d3.js d3 data-driven document javascript library producing dynamic interactive visualization web browser implemented svg html5 cs standard d3 allows bind arbitrary document object dom apply data-driven transformation document example d3 generate html array number create interactive svg bar smooth transition interaction d3 monolithic framework seek provide conceivable d3 solves crux efficient manipulation document based avoids proprietary representation affords extraordinary flexibility exposing full capability web standard html svg cs pict- technology- 2017-18 9 embedded analytics engine bmc release process rpm 3 specification 3.1 definition develop analytics engine making d3js rest apis embed engine bmc rpm product study existing business intelligence capability product developed fusion migrate analytics engine 3.2 concept bmc release process rpm devops solution bmc help manage release planning release coordination deployment automation process closely powerful embedded analytics engine product fetched making rest request server api adheres principle rest doe require client api server provide client interact service rail serve rest apis server heavy lifting ruby rail creating rest api fetching server processing generate json format d3 allows bind arbitrary document object dom apply data-driven transformation document minimal overhead d3 extremely fast supporting datasets dynamic behavior interaction animation d3 inbuilt function fully customize dom developer seamlessly existing web manipulate document object flexible client side web stack html cs svg pict- technology- 2017-18 10 embedded analytics engine bmc release process rpm 3.3 proposed visualization library source library javascript library d3 script visualization library include existing rest analytical engine restricted bmc rpm rpm product specific format specific bmcs standard apis restricted bmc rpm generated format easily incorporated analytics engine 3.4 currently bmc fusioncharts graphical representation free cost library constraint offer limited functionality bmc rpm product attempt engine manually library fusioncharts eliminated develop source visualization library replace fusion save cost fusioncharts license bmc rpm product aim building strong analytics engine gathered bmc rpm rest ruby rail strong graphic library i.e d3js supported angular 4 requestor ui rpm 1. improve experience 2. remove fusioncharts 3. remove royalty cost 4. provide rich dynamic 5. create generalized visualization library pict- technology- 2017-18 11 embedded analytics engine bmc release process rpm 3.5 phase 3.5.1 2008 window r2 server 4 gb ram processor- intel i5 3.5.2 nodejs npm angular 4 rest api postgresql d3js javascript brpm perforce winmerge visual studio code rubymine pg admin iii sublime text firefox rest client pict- technology- 2017-18 12 embedded analytics engine bmc release process rpm 4 method studying examining component interaction structured analyzing data-flow process defining component satisfy object-oriented approach business emphasizes modularity visual modeling service-oriented method service-oriented modeling business structured method converting program configuration structured method approach point considered implies order arrangement component help achieve predetermined interaction defined manner component operate interdependence component depend proper functioning component coordinated linked output subsystem subsystem input integration concerned component connected performs unique function central central real stated uncommon state operate achieve pict- technology- 2017-18 13 embedded analytics engine bmc release process rpm 4.1 architechture bmc rpm client database postgresql/oracle/sql fetched rest apis product webpage url processed json produced visualization engine d3js engine produce display product ui include rest ruby rail engine integrated brpm dynamic engine fig.2 level rest ruby rail engine fetch database help migration provided ruby rail framework extract brpm database easily manipulate database formatted specific template converted json format passed engine engine created d3js variable template provided rest engine filter api d3 library generates template integrated requestor ui brpm display pict- technology- 2017-18 14 embedded analytics engine bmc release process rpm 4.2 class fig 3. describes mvc view controller class ruby rail class implemented mvc decides mvc basically class controller creates object class fetched view responsible generation template chartgenerator class independent mvc developed d3js class input filter selection ui process fig.3 class pict- technology- 2017-18 15 embedded analytics engine bmc release process rpm 4.3 fig 4. action client request final response rpm product production person developer tester request ui request engine controller logic query handling controller fetch database returned forwarded view turn call generator process generates fig.4 pict- technology- 2017-18 16 embedded analytics engine bmc release process rpm 4.4 fig.5 interested developer tester production person request request processed formatted 4 view process view map view calendar view access library viewed requestor ui fig.5 use-case pict- technology- 2017-18 17 embedded analytics engine bmc release process rpm 4.5 existing fusion visualization fetch entire server fusion directly processing fetching ruby rail currently 13 requires 4.5.1 volume volume display horizontal stacked bar represents total number request completed hold canceled state period select generated automatically managing request created bar represents request colored bar represents request state completed hold canceled click color state bar display request state bottom fig.6 volume fusion pict- technology- 2017-18 18 embedded analytics engine bmc release process rpm 4.5.2 time complete time complete display candle represents time complete request time period select generated automatically managing request created started candlestick x-axis represents request height candlestick represents time request completion minute move pointer candlestick maximum minimum average time complete request click candlestick displayed view completed request bottom completed request serf environment associated step created request release click row display request tab export displayed .csv file save click export csv link top save format .png .jpg .pdf fig.7 time complete fusion pict- technology- 2017-18 19 embedded analytics engine bmc release process rpm 4.5.3 trend trend display stacked area represents aggregate number request hold cancelled state period work- task-wise team-wise component-wise trend request finish select generated automatically request created managing database x-axis month represented y-axis number request hold cancelled state point coloured circle view duration represented click circle view request hold cancelled state bottom click legend item filter filter export displayed .csv file save .png .jpg .pdf file click colored circle showing request hold cancelled state generated bottom export .csv file save clicking export csv link top fig.8 trend fusion pict- technology- 2017-18 20 embedded analytics engine bmc release process rpm 4.5.4 time generates column display time request remained state hold canceled status minimum maximum average time request state default display database request accessed current save .png .jpg .pdf file right-click select appropriate option fig.9 time fusion pict- technology- 2017-18 21 embedded analytics engine bmc release process rpm 4.5.5 component version map starting bmc release process 5.0.00.01 component version map visual representation component deployment component version deployment environment addition component view component level changed reordering component dimmed cell component appropriate environment component assigned version deployment status component version manually deployed fig.10 component version map pict- technology- 2017-18 22 embedded analytics engine bmc release process rpm 4.5.6 property map application/environment comparative tabular view version component deployed environment historical change component version property defined component deployed environment changed property change occurred time select historical item displayed environment column property property changed time default current option selected map current property selecting time item generated month default fig.11 property map application/environment pict- technology- 2017-18 23 embedded analytics engine bmc release process rpm 4.5.7 server map tree view server assigned accessible server including physical virtual machine 4.5.8 server map tree view server assigned environment fig.12 server map 4.5.9 component summary tree view associated component deployed environment fig.13 component summary pict- technology- 2017-18 24 embedded analytics engine bmc release process rpm 4.5.10 release calendar release calendar calendar view release active database environment assigned release essentially environment release determine environment assigned release associated release period environment view month default week day apply filter environment status assigned release help answer question environment release environment assigned release release environment assigned release release environment release fig.14 release calendar pict- technology- 2017-18 25 embedded analytics engine bmc release process rpm 4.5.11 environment calendar environment calendar calendar view environment created stage release essentially release environment determine calendar environment release release determine associated component environment assigned release period environment assigned release view month default week day apply filter environment status help answer question release associated environment environment assigned associated component release release environment involved release period environment assigned fig.15 environment calendar pict- technology- 2017-18 26 embedded analytics engine bmc release process rpm 4.5.12 deployment window calendar deployment window calendar calendar deployment window event environment release number request scheduled allow deployment window event deployment window event hover deployment window calendar deployment window calendar request allow deployment window event move suspend resume deployment window event environment based deployment policy current status deployment window event colour green allow deployment window event red prevent deployment window event yellow suspended deployment window event grey deployment window event fig.16 deployment window calendar pict- technology- 2017-18 27 embedded analytics engine bmc release process rpm 4.5.13 role team/group/user role group display role description group fig.17 role team/group/user pict- technology- 2017-18 28 embedded analytics engine bmc release process rpm 5 5.1 split-up fig.18 developed consists 3 major database rest api framework generator engine fig.18 split-up database bmcs rpm save client oracle database server sql database postgressql database saved tabular format fetched making sql query server app request recorded separately specific client fetched server ruby rail migration method migration convenient alter database schema time consistent easy ruby dsl n't write sql hand allowing schema change database independent migration 'version database schema start migration modifies add remove column entry active record update schema bringing point history latest version active record update db/schema.rb file match up-to-date database migration allow describe transformation ruby great thing active record functionality pict- technology- 2017-18 29 embedded analytics engine bmc release process rpm database independent dont worry precise syntax create worry variation select drop raw sql database specific example sqlite3 development mysql production migration support basic string text integer float datetime timestamp time binary boolean rest api framework rail development web developer framework providing code write rail framework help developer build website simplifies common repetitive key principle ruby rail development henceforth rail convention configuration programmer doe spend lot time configuring file setup rail convention help speed development characteristic rail emphasis restful rest representational state transfer style based client-server encourages logical easily exposed api programming rail api oriented easy create rest api rail rail mvc framework active access migration fetch formatted controller helper formatted rendered rail format json route file help bridge connection url mvc controller making restful request easy process generator engine generator engine basically developed d3js graphic library form front program engine rest request rpm responds pict- technology- 2017-18 30 embedded analytics engine bmc release process rpm json engine generate dynamically d3js library template easily manipulated template respond requestor ui 5.2 iv fig.19 gantt denotes performed phase fig.19 gantt phase -i focus understanding product learning phase-ii focus developing ruby rail d3js provided phase wa spent learning understanding existing phase i.e mid-december onward began actual pict- technology- 2017-18 31 embedded analytics engine bmc release process rpm 6 6.1 stage divided i.e backend fetching processing ruby rail rest apis frontend generating library d3js 6.1.1 fetching processing fetched making rest request server rest underlying architectural principle web client browser server interact complex client knowing server host key constraint server client agree medium web html api adheres principle rest doe require client api server provide client interact service ruby rail creating rest api fetching server processing generate json format 6.1.2 generating d3.js javascript library producing dynamic interactive visualization web browser implemented svg html5 cs standard d3 allows bind arbitrary document object dom apply data-driven transformation document d3 monolithic framework seek provide conceivable d3 solves crux efficient manipulation document based avoids proprietary representation affords extraordinary flexibility exposing full capability web standard html svg cs pict- technology- 2017-18 32 embedded analytics engine bmc release process rpm 6.2 technique mentioned earlier technological approach technique generalized concept rest apis extended ruby rail analytical engine filtered server database fetched provided library embedded angular framework ui side predefined template passed library json object link clicked 6.2.1 ruby rail engine rest apis ruby rail mvc i.e model-view-controller framework view controller principle divide three separate closely cooperative subsystem activerecord maintains object database handle validation association transaction subsystem implemented activerecord library binding relational database ruby program code manipulates database record ruby method automatically generated field database view actionview presentation format triggered controller 's decision script-based template jsp asp php easy integrate ajax subsystem implemented actionview library embedded ruby erb based defining presentation template presentation web connection rail displaying view pict- technology- 2017-18 33 embedded analytics engine bmc release process rpm controller actioncontroller facility directs traffic hand querying specific hand organizing searching sorting messaging form fit view subsystem implemented actioncontroller broker sitting activerecord database actionview presentation engine mvc routing pattern matching responsible mapping incoming browser request mvc controller action mvc launch pattern framework 's route routing engine request match pattern routing engine receives request runtime match request 's url url pattern registered response pattern match invoking controller perform fig.20 basic rail pict- technology- 2017-18 34 embedded analytics engine bmc release process rpm helper functionality provided view provide help class mvc provide method automatically view help controller pre-defined class helper helper provide shortcut display code programming view allow output view file le class written clear manner helper class provide functionality create rest apis deliver controller actioncontroller format rest client rest client advantage mvc framework direct route request url access controller query controller return format json client actionview fig.21 rail rest request pict- technology- 2017-18 35 embedded analytics engine bmc release process rpm 6.2.2 d3js d3js source powerful visualization library proper understanding d3 function provided library wa replace existing fusion bmc rpm purpose basic identified generalized created generalized specific product providing specific template define parameter generalized identified 5 types- barchart stacked barchart area tree 1. barchart simple barchart point plotted bar scaled min-max point bar plot well parameter template specific category title defines title width defines svg element width height defines svg element height xcolumn defines label x-axis plotted ycolumn defines label y-axis plotted defines label bar barpadding defines spacing adjacent bar barcolor define color bar pict- technology- 2017-18 36 embedded analytics engine bmc release process rpm legendone legendtwo object legend tooltipdata defines object tooltip xaxislabel defines axis label yaxislabel defines axis label colname specific label processing 2. stacked barchart stacked bar legend rescales layer hidden legend stack layer color legend parameter template specific category title defines title width defines svg element width height defines svg element height xcolumn defines label x-axis plotted xaxislabel defines axis label yaxislabel defines axis label key object filtering legendkey object legend colorkey object color stacked layer bar 3. area area point connected area plotted point parameter template specific category title defines title pict- technology- 2017-18 37 embedded analytics engine bmc release process rpm width defines svg element width height defines svg element height xcolumn defines label x-axis plotted ycolumn defines label nested xaxislabel defines axis label yaxislabel defines axis label outerx defines label nested processed legend outery defines label nested processed plotting y-axis colorkey object color area 4. simple column fixed scrollable parameter template specific category title defines title width defines svg element width height defines svg element height column defines column 5. tree tree click responsive expandable node parameter template specific category title defines title width defines svg element width height defines svg element height pict- technology- 2017-18 38 embedded analytics engine bmc release process rpm 6.3 elaborate technique generalized technique specific analytical engine process format template variable initialized template url rest api created fetch specific database template initialized general library created d3js 6.3.1 volume total number request completed hold cancelled state period matching filter criterion rest api v2 created ruby rail fig.22 screenshot formatting code volume method rest apis url match template object requested url volume pict- technology- 2017-18 39 embedded analytics engine bmc release process rpm fig.23 code snippet volume template initialization fetched template generated fig.24 newly generated volume pict- technology- 2017-18 40 embedded analytics engine bmc release process rpm 6.3.2 time complete time complete request period matching filter criterion statistical minimum maximum median average time request completed rest api v2 created ruby rail fig.25 screenshot formatting code time completion method rest apis url match fig.26 rest client response time complete query 41 pict- technology- 2017-18 embedded analytics engine bmc release process rpm template object requested url time complete fig.27 code snippet time completion template initialization fetched template generated fig.28 newly generated time completion pict- technology- 2017-18 42 embedded analytics engine bmc release process rpm 6.3.3 trend number request state completed period created request rest api v2 created ruby rail fig.29 screenshot formatting code trend method rest apis url match fig.30 rest client response trend query pict- technology- 2017-18 43 embedded analytics engine bmc release process rpm template object requested url trend fig.31 code snippet trend template initialization fetched template generated fig.32 newly generated trend pict- technology- 2017-18 44 embedded analytics engine bmc release process rpm 6.3.4 time time request remained state created request statistical minimum maximum median average time request step reporting entering state fixed entering completed state help determine request state fixed rest api v2 created ruby rail fig.33 screenshot formatting code time method rest apis url match pict- technology- 2017-18 45 embedded analytics engine bmc release process rpm fig.34 rest client response time query template object requested url time fig.35 code snippet time template initialization fetched template generated pict- technology- 2017-18 46 embedded analytics engine bmc release process rpm fig.36 newly generated time 6.3.5 miscellaneous remove fusion bmc rpm product 4 total 13 dependent fusion rest simple html element bmcs adapt framework library additional facility generating well remaining tree provided library example usage fig.37 code snippet template initialization pict- technology- 2017-18 47 embedded analytics engine bmc release process rpm fig.38 newly generated component version map example usage tree fig.39 newly generated server map pict- technology- 2017-18 48 embedded analytics engine bmc release process rpm 7 comparative evaluation support bmc rpm generation charting library built d3js analytics visualization rest product fetch lot flexible dynamic scalable comparative study visualization compared created bmc rpm legacy rpm ui proposed ui fusion visualization d3.js visualization rest api v1 rest api v2 paid royalty fusion free cost visualization library le customizable load time 2 approx server load client-side load le outdated customized load time 1.2s approx server load le client-side load fresh clean adobe flash player client side suitable angular approach based angular 1 comparison legacy ui ui older version wa based fusioncharts limited support rpm visualization code wa manipulated hard-coded fit provided restriction developer wa hard analyze pict- technology- 2017-18 49 embedded analytics engine bmc release process rpm change improvement provided requestor ui fig.40 earlier wa drastic change month period provided dynamic nature depict change month fig.40 change trend fig.41 depicts earlier exact time completion didnt graph clearly understandable easy read achieving visualization fig.41 change time completion pict- technology- 2017-18 50 embedded analytics engine bmc release process rpm fig.42 difference visualization provided earlier fault clear wa removed version fig.42 change time pict- technology- 2017-18 51 embedded analytics engine bmc release process rpm 8 support bmc rpm generation charting library built d3js analytics visualization rest product fetch lot flexible dynamic scalable 8.1 context visualization basic managing heavy real-time performance visualize easily short period time amount collected consumer behavior expose opportunity adaptable company requires consistently collecting analyzing visualization library market web-based library javascript visualization hard current library paid version provide customization specific royalty cost product seller alternative product source visualization product vast study modify limited focus creating alternative proprietary generator providing source fully customizable visualization library integrate generate provided generalized modified easily simply changing template provided scalable responsive compatible angular currently trending frontend industry pict- technology- 2017-18 52 embedded analytics engine bmc release process rpm 8.2 engine produced specific bmcs rpm analytics engine developed ruby rail rest concept specific modified usage visualization library produced visualization engine modified kafka cassandra handle live input produce real time library producing handler code refinement addition generic library compete existing generation library industry charging royalty cost pict- technology- 2017-18 53 embedded analytics engine bmc release process rpm 1. sungchul lee ju-yeon jo yoohwan kim performance web-based visualization man cybernetics smc international conference 2014 2. release process online http //www.bmcsoftware.in/it- solutions/release-process-management.html 3. representational state transfer online http //en.wikipedia.org/wiki/representational_state_transfer 4. driven document online http //d3js.org/ 5. introducing json online http //www.json.org/ 6. javascript web mobile online http //www.fusioncharts.com/ 7. viewing online http //docs.bmc.com/docs/releaseprocessmgt/50/using/viewing-reports 8. lianjun chen hongbo zhou dynamic interactive visualization based d3 audio language image processing icalip international conference 2016 9. hu wenhui huang yu liu xueyang study rest api supporting web service integration security cloud bigdatasecurity 3rd international conference 2017 10. jonathan harper maneesh agrawala converting basic d3 reusable style template transaction visualization graphic volume 24 issue 3 2018 11. bmc adapt online http //github.bmc.com/pages/bmc-ux/adapt- angular/ /start pict- technology- 2017-18 54 embedded analytics engine bmc release process rpm review sheet pict- technology- 2017-18 55 embedded analytics engine bmc release process rpm 56 pict- technology- 2017-18 embedded analytics engine bmc release process rpm pict- technology- 2017-18 57 embedded analytics engine bmc release process rpm pict- technology- 2017-18 58 embedded analytics engine bmc release process rpm pict- technology- 2017-18 59 embedded analytics engine bmc release process rpm pict- technology- 2017-18 60 embedded analytics engine bmc release process rpm pict- technology- 2017-18 61 embedded analytics engine bmc release process rpm pict- technology- 2017-18 62", "keywords": ["active record", "analytical engine", "analytics engine", "analytics engine bmc", "apis url", "assigned release", "average time", "bmc help", "bmc release", "bmc release process", "bmc rpm", "bmc rpm product", "bmcs rpm", "calendar calendar", "calendar deployment", "calendar deployment window", "calendar environment", "calendar view", "change time", "client response", "client response time", "code snippet", "code snippet time", "code time", "complete request", "component version", "component version map", "deployment window", "deployment window calendar", "deployment window event", "devops solution", "devops solution bmc", "djs djs", "djs javascript", "document object", "element height", "embedded analytics", "embedded analytics engine", "engine bmc", "engine bmc release", "environment assigned", "environment assigned release", "environment calendar", "environment release", "fetching processing", "fig code", "fig code snippet", "format generating", "formatting code", "free cost", "generated time", "generating library", "generating library djs", "international conference", "javascript library", "json format", "json format generating", "library djs", "library javascript", "method rest", "method rest apis", "newly generated", "newly generated time", "number request", "pict technology", "process rpm", "process rpm devops", "property map", "query code", "query code snippet", "rail engine", "rail rest", "release environment", "release process", "release process rpm", "release release", "representational state", "representational state transfer", "request hold", "response time", "rest api", "rest apis", "rest apis url", "rest client", "rest client response", "rest ruby", "rest ruby rail", "role teamgroupuser", "rpm devops", "rpm devops solution", "rpm product", "ruby rail", "ruby rail engine", "ruby rail rest", "screenshot formatting", "screenshot formatting code", "server map", "snippet time", "solution bmc", "solution bmc help", "state transfer", "svg element", "svg element height", "template initialization", "template object", "time complete", "time complete request", "time completion", "time request", "total number", "total number request", "version map", "visualization library", "web service", "webbased visualization", "window calendar", "window event"], "libraries": [], "languages": ["html5", "php", "clean", "html", "cs", "ruby", "xml", "javascript", "basic", "small", "nodejs"], "frameworks": ["react", "angular"], "dbs": ["cassandra", "postgresql", "mysql"]}, "./reports/BE Project Report_10 .pdf": {"title": "deepcode: deep learning in code   analysis", "filename": "./reports/BE Project Report_10 .pdf", "data": "preliminary deepcode deep learning code fulfilment rayomand raimalwalla b120058602 sanjana rinke b120058608 saloni alias puja sarnot b120058610 guidance prof. k. a. sultanpure 2017-2018 preliminary deepcode deep learning code fulfilment rayomand raimalwalla b120058602 sanjana rinke saloni alias puja sarnot b120058608 b120058610 guidance prof. k. a. sultanpure 2017-2018 deepcode deep learning code deepcode deep learning code rayomand raimalwalla sanjana rinke saloni alias puja sarnot b120058602 b120058608 b120058610 bonafide prof. kavita sultanpure earlier diploma prof. kavita a. sultanpure dr. balawant a. sonkamble examiner 2017-18 2 deepcode deep learning code preliminary deepcode deep learning code group 10 rayomand raimalwalla roll 4042 sanjana rinke roll 4045 saloni alias puja sarnot roll 4046 completed bonafide sponsorship l3cube mr. gaurav suryagandh mr. raviraj joshi mr. rahul khengare 27th 2018 2017-18 3 ii iii iv vi number 10 deepcode deep learning code sponsorship industry acknowledgement abbreviation title 1 2 3 1.1 1.2 1.3 2.1 2.2 2.3 2.4 2.5 3.1 3.1.1 3.1.2 3.2 3.2.1 3.3 3.3.1 3.3.2 3.3.3 3.3.4 code clone detection defect prediction deep learning classification source code author identification 11 12 13 14 1 15 16 17 19 21 21 21 22 usage scenario 18 profile 24 description 24 function 25 performance issue 25 h/w s/w specification 2 25 definition 4 4.1 4.2 4.3 level class 26 27 28 2017-18 4 deepcode deep learning code 5. approach preprocessing experimental environment dataset experiment recognize programming language source code predict author source code pseudo-code evaluation 5.1 5.2 5.3 5.4 5.5 5.5.1 5.5.2 5.6 6 6.1 6.2 6.2.1. evaluation identifying programming language predicting author source code study misclassified 6.2.2 6.3 7 8. 30 30 31 31 31 31 33 33 34 34 3 34 35 37 39 40 2017-18 5 deepcode deep learning code acknowledgement great pleasure satisfaction presenting preliminary deepcode deep learning code express deep sense gratitude ms. k. a. sultanpure kind co-operation encouragement helped complete express special gratitude dr.p.t.kulkarni dr. b. a. sonkamble prof. d.d londhe guidance constant well providing support completing directly indirectly helped completion mr. rayomand raimalwalla ms. sanjana rinke ms. saloni alias puja sarnot iii 2017-18 6 deepcode deep learning code number 3.2 3.3 4.1 4.2 4.3 5.1 5.2 6.1 6.2 6.3 6.4 6.5 function class deepcode vgg16-based designed deepcode accuracy curve indentation recognition accuracy curve programming language recognition accuracy curve author prediction comparison simple cnn deepcode author recognition misclassified sample programming language detection 23 24 26 27 28 30 32 34 35 36 36 37 iv 2017-18 7 deepcode deep learning code number number 3.3 25 2017-18 8 deepcode deep learning code abbreviation abbreviation illustration recurrent neural network long short term memory syntax tree virtual machine artificial intelligence convolutional neural network simple cnn visual geometry group rtnn lstm ast vm ai cnn s-cnn vgg vi 2017-18 9 deepcode deep learning code artificial neural network great advancement time growing popularity deep learning deep learning allows learn representation difficult extract help better classification image video speech processing major area deep learning applied area source code deep learning attention deep learning source code studied couple year previous domain failed capture structural behavioral aspect code relying manual author identification code plagiarism detection propose novel approach capture representation processing snapshot code processing source code token token propose deepcode snapshot-based approach extract deep convolutional impossible current approach deepcode deep convolutional neural network utilizing transfer learning 1 learn structural representation source code simple network fail learn deep network coupled transfer learning best deepcode capable capturing behavioral aspect source code employ author detection choose author detection validate approach requires number manual complicated source code simply text aim process text human learn meaningful representation deepcode doe manual tokenization solution keywords transfer learning convolutional neural network deep learning image processing 2017-18 10 deepcode deep learning code 1 1.1. code analyzer rule precision analyzer spew positive flood useless warning precision long finish balance kind analyzer interprocedural detects pattern function pattern correlated analyzer create simulate execution path intraprocedural focus pattern matching depends kind pattern interprocedural analyzer modern complex good example coverity fortify microsofts centralized prefix traditional code performed program well-defined syntax represented syntax tree asts capture programming pattern addition program semantics hidden deeply source code program semantic code completion bug detection semantic characterizing defect improving defect prediction order accurate prediction discriminative capable distinguishing instance code region 2017-18 11 deepcode deep learning code eliminate manual factor complexity code ai analysing candidate 's programming expertise language restricted vocabulary write parser cover move static parser paradigm machine learning 1.2. artificial neural network great advancement time growing popularity deep learning deep learning allows learn representation difficult extract help better classification image video speech processing major area deep learning applied area source code deep learning attention deep learning source code studied couple year previous domain failed capture structural behavioral aspect code relying manual author identification code plagiarism detection propose novel approach capture representation processing snapshot code processing source code token token propose deepcode snapshot-based approach extract deep convolutional impossible current approach deepcode deep convolutional neural network utilizing transfer learning learn structural representation source code simple network fail learn deep network coupled transfer learning best deepcode capable capturing behavioral aspect source code employ author detection choose author detection validate approach requires number manual complicated source code simply text aim process text human learn meaningful representation deepcode doe manual tokenization solution 2017-18 12 deepcode deep learning code 1.3. building deep learn representation source code help classification relevant source code aim explore build deep learning automatically learn representation source code corresponds characteristic person writes code help correctly identifying person source code explore deep learning learn better source code 2017-18 13 deepcode deep learning code 2 2.1. code clone detection clone detection process transforming situ code representation suitable assessing similarity domain stage development yield unique pattern source code revealing code clone detection pattern captured approach establish generic space latent described perspective code learned i.e learning representation pair lexical recurrent neural network syntactic recursive neural network code fragment fragment contiguous segment source code source file segment code clone clone fragment respect clone candidate clone pair reported clone detector statistical language distribution sentence language syntax tree asts parse tree deckard distinguishes relevant irrelevant node regard non-empty node ast relevant designating subset node relevant amount handcrafting abstraction fragment component characteristic vector represents occurrence count relevant node tree vector dimension number tree 2017-18 14 deepcode deep learning code pattern deemed relevant approximate tree deep learning code lexical level rtnns deep learner well suited modeling term source code corpus vocabulary |v|=m term user-specified hyperparameter number hidden unit rtnn comprises input layer xrm+n hidden layer zr output layer yrm assuming heuristic class-based output layer adjusting regulates capacity depth rtnn attributed recurrence hidden state copied input layer input layer rtnn agglutinates current term previous state i1 term including identifier influence fragment level granularity represented technique designed automatically discover discriminating source code traditional structure-oriented metrics-based technique fixed transformation manually find defect product real require highly customize creating special time impossible introduced particle swarm optimization linear classifier naive bayes decision tree defined comparison linear classification highest defect prediction accuracy lowest error rate neural network 2 defect prediction accuracy error rate choose better error rate inversely proportional accuracy 2017-18 15 deepcode deep learning code 2.2. defect prediction traditional defect prediction study focus designing hand-crafted input machine learning classifier identify defective code hand-crafted fail capture semantic structural program 1 treating program bag word order state of-the-art method overlook local structural 1 framework called defect prediction convolutional neural network dp-cnn capture semantic structural program 1 dp-cnn differs aforementioned defect prediction approach utilize deep learning technique i.e cnn automatically generate discriminative source code manually designing capture semantic structural program lead accurate prediction major step 1 parsing source code asts extract token 2 encoding token vector numerical vector 3 employing cnn generate semantic structural combining traditional defect prediction 4 building logistic regression classifier decide fresh code file buggy clean 2 2.3. deep learning understanding dynamic program behavior achieve optimization debugging security identification hot path deep learning technique learn subtle complex input 3 code represented intermediate code considering fact ic includes semantic level rich source building 2017-18 16 deepcode deep learning code crystalball 3 major components- 1 obtaining ground-truth training example classification require actual classification crystalball obtains ground truth hot path program execution path profiling instrumentation 3 2 static extraction crystalball describes ir code basic block level code characteristic relevant path behavior quantifiable 3 3 path sampling number path program doe scale size program complexity control graph cfg function conditional path exist 3 4 splitting training common approach splitting training pool benchmark proceed split collected 30 70 training 3 learning 1 rnn path ordered step advantage rnns output classification input provide classification step input previous step influence current step 4 2 lstm two-layer lstm 256 cell layer training path represented instruction count vector feed lstm network time step number basic block path 4 2.4. classification source code recognition programming language based keywords nearest neighbor principle based classifier decision tree discussed strategy 'linguist 2017-18 17 deepcode deep learning code naive bayes classifier 'ohcount regular expression level based support vector machine svms 5 author conclude stating deep learning text processor natural language processing recurrent neural network rnns basically memory component called lstm i.e long-short term memory paper teaching rnn syntax extracting vector input 5 step wa pre-processing input consists raw code archive code file tokenized meaning word recognized independent called 'tokens 5 token create dictionary called vocabulary sorted frequency alphanumeric character replaced special token num number unk alphabet token file replaced token vocabulary maximum number tokens/file decided rest file truncated input form matrix size number vector embedding size matrix initialized random number normal distribution matrix extract words/tokens building continuous vector space author dived explaining actual experimental setup hyper- parameter combination achieving accuracy vocabulary size rnn length number lstm unit layer size vector 5 input datasets 1 popular public dataset source code language rosetta code 2 github dataset 3 special dataset built experiment called 'lang called 'momento wa built tensorflow python tflearn 2017-18 18 deepcode deep learning code trained three datasets combination hyper-parameter 5 cross-validation technique wa called leave cross validation technique divided equal size called 'folds training created excluding fold training achieved better existing datasets file number token size dataset proved decisive factor includes better vocabulary built keywords specific language metadata regular expression semantic framework 2.5. author identification widespread authorship identification issue concern kind intellectual property copyright protected text bring unexpected consequence situation identify source piece attacked piece code virus logic bomb tracing source code interest situation include resolution authorship dispute proof authorship court proof code re-engineering popular day identify criminal charged crime dna fingerprinting blood hair based belief evidence human dna individual piece written text compiled interpreted question extract human dna fingerprint verify authorship kind written text program code le flexible format compiler interpreter ample room 2017-18 19 deepcode deep learning code programmer develop programming style improve accuracy program authorship identification krsul spafford 6 employed comprehensive measurement extract programming style divided fifty metric three category programming layout metric programming style metric programming metric programming layout metric includes fragile metric comment placement indentation bracket placement metric easily altered code formatter pretty printer text editor compose program modify metric changing format default preferred layout programming style metric code layout metric difficult change metric include variable length comment length naming preference preference loop programming metric assumed dependent programming experience ability programmer measurement collected eliminated smaller remained final 6 argued hidden unselected measurement wa ignored 2017-18 20 deepcode deep learning code 3 3.1 3.1.1 machine/deep learning ai source code predict behavior coding style code writes behavior social medium changing social medium source code github source repository 3.1.2 definition tokenization vocabulary creation kind text processing process reduce original le size removing word stemming pre-processing consumes signicant amount time processing power memory usage require capturing slightest code instance author style writing source code unique author signature author signature completely lost source code analyzed develop completely eradicates preprocessing overhead conserving unique source code difcult dene extract manually introduce deepcode snapshot-based approach code humane code preserved loss layout structural code hand identify language code written c++ java python 2017-18 21 deepcode deep learning code predict author code 3.2 usage scenario 3.2.1 profile 1 developer datasets create 2 deployed depicts interacts fig 3.2 2017-18 22 deepcode deep learning code fig 3.2 represents developer construct queried specification deep learning identifying author primary actor developer actor pre-conditions code author multiple language c++ java python basic 1. developer creates deep learning 2. developer dataset train 3. developer 4. saved directly load memory 5. input code 6. return code belonging author 2017-18 23 deepcode deep learning code 3.3 description 3.3.1 function fig 3.3. function fig 3.3 represents constructing dataset source code github colleague belonging author language divided training forwarded construct training dataset dataset performs validation validated calculating error precision based doe prediction code belongs author input stage completely exclusive train 2017-18 24 deepcode deep learning code 3.3.2 performance issue proposed going develop framework innovation performance framework accurate fast reliable framework handle multi language input 3.3.3 specification 1. ubuntu 14.04/16.04 64 bit 2. github personally built dataset 3. tensorflow kera 4. python 5 -anaconda 1. intel core i3-2120 cpu 3.30ghz 4 higher 2. nvidia gpu cuda compute capability 3.0 higher 3.3.4 description operating ubuntu 16.04 suggested l3cube tensorflow kera easy manipulation 3.3. 2017-18 25 deepcode deep learning code 4 level 4.1. class fig 4.1 class class fig 4.1 represents generic author class fact distinguishing help compare author define uniqueness instance class object author code class represents source code code identity code treated object class code 2017-18 26 deepcode deep learning code prediction_model class represents train recognized accuracy dropout precision function predict author recognize coding style code code belongs author 4.2. fig 4.2. 2017-18 27 deepcode deep learning code fig 4.2 state process define consideration prepare split training define proceed training analyze depending bias variance train longer period time proceed ahead 4.3. fig 4.3. fig 4.3 state process 2017-18 28 deepcode deep learning code input parser parser pre-process input training trained ready supply processed supplying output supply input query preprocessed parser execute output output 2017-18 29 deepcode deep learning code 5 5.1. approach tokenization vocabulary creation kind text processing process reduce original le size removing word stemming pre-processing consumes signicant amount time processing power memory usage require capturing slightest code instance author style writing source code unique author signature author signature completely lost source code analyzed develop completely eradicates preprocessing overhead conserving unique source code difcult dene extract manually introduce deepcode snapshot-based approach code humane code preserved loss layout structural code 5.1. deepcode 5.1. level deepcode 2017-18 30 deepcode deep learning code 5.2. preprocessing input consisted raw source code le code distributed directory hierarchy language written ii author source code source code divided partially overlapping code snippet overlapping helped increasing size input dataset snippet converted black-and-white image resolution 256 256 pixel eliminate pre-processing text space time processing power efcient 5.3. experimental environment built tensorow kera kera high-level neural network api written python capable running top tensorflow cntk theano experiment intel core i5 -8250u cpu 1.60ghz 8 gb ssd ram gpu nvidia geforce 940mx 2gb graphical memory 64-bit ubuntu 16.04 lts 5.4. dataset dataset wa raw source code archive compiled code archive github repository carefully ltered include author language specic code 5.5. experiment 5.5.1. recognize programming language source code initially source code archive split partially overlapping sample 20 converted 256256 pixel image rst experiment validate approach wa simple neural network wa learn classify image indented non-indented code simple convolutional neural 2017-18 31 deepcode deep learning code network wa convolutional neural network cnn class neural network machine learning image processing text video processing cnn popularly applied image ability learn representation independently cnn processing image efcient le cumbersome doe human intervention supplying hand- crafted approach specied cnn code multiple cnn experimented source code archive classied programming language written wa experimented programming language c++ java python supervised learning wa train 5.2. vgg16-based designed deepcode 5.2. represents vgg16-based wa designed deepcode wa complicated concept transfer-learning wa perform transfer learning fundamental concept storing knowledge applying knowledge independent transfer learning text spam ltering online recommendation mining social medium learning heterogeneous cross medium domain reuse concept transfer learning enables improved performance second 2017-18 32 deepcode deep learning code pretrained named vgg16 wa 10 vgg16 deep cnn wa developed trained visual geometry group oxford simplest popular pre-trained openly wa ne-tuned dataset achieve optimum dataset training folder mentioned language wa passed network 5.5.2. predict author source code experiment wa classify source code respective author previous supervised learning wa experiment wa identifying three author source code written language increasing complexity dataset consisted image wa built vgg16 fully-connected layer stacked 5.6. pseudo-code kera import vgg16 layer vgg_conv.layers freeze layer createmodel model.add layers.flatten model.add layers.dense model.add layers.dropout model.add layers.dense model.compile model.train model.save 2017-18 33 deepcode deep learning code 6 evaluation 6.1. validate dataset wa split train wa trained training dataset dataset wa passed validation accuracy wa ratio train dataset dataset wa 3 1. wa overlapping datasets contained image sample 6.2. evaluation 6.2.1. identifying programming language simple cnn rst experiment wa distinguish indented non-indented source code accuracy 99.50 6.1 validated approach layout source code wa properly recognized neural network 6.1. accuracy curve indentation recognition 2017-18 34 deepcode deep learning code 6.1. depicts accuracy curve indentation recognition source code transfer learning produced good wa recognize programming language source code accuracy 85 6.2. accuracy curve programming language recognition 6.2. depicts accuracy curve recognition programming language source code 6.2.2. predicting author source code observed accuracy wa 2 author i.e 98.88 compared 96.23 accuracy s-cnn 3 noticed accuracy decreased 97.29 2017-18 35 deepcode deep learning code 6.3. accuracy curve author prediction 6.3. depicts accuracy curve prediction author source code surprising factor wa wa passed as-cnn accuracy dropped drastically 42.01 4 author accuracy dropped 32.16 drop accuracy wa signicant accuracy wa 97.18 6.4. comparison simple cnn deepcode author recognition 2017-18 36 deepcode deep learning code 6.4. comparison simple cnn author recognition accuracy gures conclude approach wa preserve highly difcult extract manually 6.3. study misclassified studying misclassied image misclassied image belonged c++ programming language wa negligible amount ofmis java python c/c++ conclude accuracy c++ le fundamentally language term syntax keywords human visualize considerable difference source code deep cnns capable learning minute syntactical difference source code original label prediction cpp confidence 0.396 6.5.a misclassified sample programming language detection 6.5. depicts misclassified sample programming language detection original class predicted class prediction confidence 2017-18 37 deepcode deep learning code complicated wa author experimented 2 3 4 author source code written programming language c++ le misclassifications misclassified sample visually predicted class misclassification statistic conclude approach wa classify source code humane preserving highly difcult extract manually 2017-18 38 deepcode deep learning code 7 proposed process text capture tokenization nlp bag word natural approach exible learn minute highly difcult dene extract listed three implemented proved method efcient robust method text compared traditional method applied wide multitude domain focus capturing code propose deepcode tokenization increase applied instance anomaly detection traditionally manual extraction deep learning tokenization fundamental tokenization deepcode increase accuracy precision detect anomaly code main contribution rst extract structural automatically source code manual tokenization fundamental text pre-processing transfer learning trained imagenet dataset context source code 2017-18 39 deepcode deep learning code 1 praman deep singh anuradha chug defect prediction machine learning cloud computing science amp confluence 2017 7th international conference 2017 2 christopher vendome martin white al deep learning repository mining repository msr 2015 ieee/acm 12th working conference 2015 3 stephen zekany crystalball statically analyzing runtime behavior deep learning 49th annual ieee/acm international symposium microarchitecture micro 2016 4 song wang lin tan taiyue liu automatically learning semantic defect prediction icse 2016 ieee/acm 38th international conference 2017 5 julio reyes diego ramirez julio paciello automatic classification source code archive programming language deep learning approach computational science computational intelligence csci 2016 international conference 2016 6 i. krsul e. h. spafford `` authorship identifying author program '' csd-tr-96-052 science purdue west lafayette 1996. 2017-18 40 deepcode deep learning code 2017-18 41", "keywords": ["accuracy curve", "alias puja", "author recognition", "author source", "author source code", "classification source", "clone detection", "code archive", "code clone", "code clone detection", "convolutional neural", "convolutional neural network", "deep learning", "deep learning code", "deepcode deep", "deepcode deep learning", "defect prediction", "execution path", "java python", "language source", "language source code", "learning code", "neural network", "preliminary deepcode", "processing power", "programming language", "programming language source", "programming style", "puja sarnot", "rayomand raimalwalla", "saloni alias", "saloni alias puja", "simple cnn", "source code"], "libraries": ["kera", "tensorflow"], "languages": ["clean", "python", "c++", "basic", "java"], "frameworks": [], "dbs": []}, "./reports/BE Project Report_12.pdf": {"title": "real time bus vacacncy detection using iot   approach for pmpl", "filename": "./reports/BE Project Report_12.pdf", "data": "real time bus vacacncy detection iot approach pmpl jagruti dhondage sai kapadekar janhavi kode priyadarshni sagar b120058524 b120058538 b120058545 b120058605 guidance prof. d.d.londhe sr. 27 pune-satara road bharati vidyapeeth college dhankawdi bharati vidyapeeth campus dhankawdi maharashtra-411043 2017-2018 real time bus vacancy detection iot approach real time bus vacancy detection iot approach jagruti dhondage sai kapadekar janhavi kode priyadarshni sagar b120058524 b120058538 b120058545 b120058605 bonafide prof. d.d.londhe earlier diploma prof. d.d.londhe examiner dr. sonkamble b.a dr. p.t.kulkarni 2 2017-18 real time bus vacancy detection iot approach acknowledgement effort kind support help individual extend sincere highly indebted mrs. d.d.londhe guidance constant well providing support completing greatest appreciation prof. a.g.dhamankar prof. s.warhade cant tremendous support help encouragement guidance materialized willingness motivate contributed tremendously express special gratitude lab attendant attention time express gratitude parent member kind co- operation encouragement helped completion appreciation colleague developing people willingly helped ability jagruti dhondage sai kapadekar janhavi kode priyadarshni sagar 3 2017-18 real time bus vacancy detection iot approach sr. topic 1 2 3 4 5 acknowledgement abbreviation 1.1 1.2 review 2.1 2.2 specification existing proposed 3.1 3.2 3.3 3.4 3.5 3.5.1 3.5.2 3.5.3 3.5.4 3.6 3.6.1 3.6.2 3.6.3 3.6.4 3.6.5 3.6.6 3.6.7 definition concept non- split decomposition role responsibility 3.0 pert pert 4.1 4.2 4.3 4.4 4.5 4.6 4.7 er structural behavioral circuit 5.1 4 2017-18 2 3 4 5 6 7 8 9 10 10 11 13 15 16 16 16 17 18 18 18 19 19 22 23 23 25 27 28 29 29 30 31 31 32 33 34 35 42 43 46 46 real time bus vacancy detection iot approach 6 5.2 5.3 5.4 5.5 5.6 5.7 evaluation stage technique issue implemented implemented database 6.1 6.1.1 6.1.2 6.2 6.2.1 6.2.2 experiment detailed discussion experiment experiment white box black box 7 7.1 7.2 7.3 base paper plagiarism review sheet 51 51 52 52 53 55 55 57 58 58 59 59 65 67 67 67 68 69 70 70 73 74 5 2017-18 real time bus vacancy detection iot approach sr. 2.1 2.2 3.1 3.2 3.3 3.4 3.5 3.6 3.7 5.1 5.2 5.3 5.4 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 mobile apps comparison difference specification cost comparison pert bus bus_stop mobile app gpio pin checking rpi interfacing unit load cell vacancy calculation mobile app connection rpi local server transfer mobile app local server 6 2017-18 real time bus vacancy detection iot approach sr. 3.1 3.2 3.3 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 4.10 4.11 4.12 4.13 split 3.0 pert er structural use-case class sequential transmission server sequential transmission rpi server circuit load cell hx711 weighing sensor 4.14 pin connection 5.1 5.2 5.3 6.1 6.2 phpmyadmin db unloaded prototype loaded prototype kmb bus abbreviations* abbreviation iot rpi app pmpl kmb full-form internet thing raspberry pi mahanagar parivahan bus 7 2017-18 real time bus vacancy detection iot approach internet thing iot paradigm object everyday life equipped micro-controllers communicate integral internet internet thing connect people physical thing real time iot playing role development smart city purpose understand implementing internet thing bus transportation proposes real time bus vacancy detection iot reduce long waiting period providing bus location seat occupancy passenger smart phone bus location seat occupancy provided passenger waste time waiting bus crowded bus weight sensor load cell ensures accuracy raspberry pi real time processing weight sensor load area bus vacancy determined ensure optimal public transportation prevents congestion bus platform keep passenger informed flexible manner convenience keywords internet thing sensor android load sensor bus occupancy 8 2017-18 real time bus vacancy detection iot approach 1. 1.1 now-a-days everyday people busy moving office school main thing transport bus people waiting wasting precious time bus timing generally unpredictable country time crowded bus hanging door lead accident aware arrived passenger counting intelligent public transportation planning operation traditional counting cant identify individual passenger access additional capacity allow collecting historical statistic passenger transportation enabling enhanced optimization purpose proposes passenger counting identification method iot approach optimization transportation service passenger service benefit real- time vehicle occupancy prediction availability seat valuable addition transportation operation focus estimation public transport occupancy estimating bus passenger load i.e number people bus bus operator input bus route efficiency provide app indicating passenger load aim implement prototype method collected weight sensor estimation accuracy 9 2017-18 real time bus vacancy detection iot approach 1.2 public transportation bus transport transportation india commuter time waiting bus stand long time bus arrives turn vacancy highly crowded mahanagar parivahan mahamandal pmpl transport fleet 1000 bus carrying 8 07 511 passenger daily puneits claim travel highly troublesome unsatisfying chaotic route delayed timing bus crowdedness provide occupancy bus location provide real time bus location real time vacancy detection people public bus transport nice worthy provide real time update bus location occupancy hoped achieved iot approach iot network internet-connected object collect exchange embedded sensor piezo-electric load cell sensor precise measurement accuracy measuring weight load cell transducer create electrical signal magnitude directly proportional force measured voltage output generated sensor processing collected sensor raspberry pi rpi rpi micro- controller program calculating vacancy implemented rpi calculated uploaded web server distributes android gather collected sensor process provide android making pmpl transport convenient passenger 10 2017-18 real time bus vacancy detection iot approach 2. review proposed functionality implemented vary sensor method calculating vacancy comparison year paper working pro con 2008 2014 2016 sept 2016 2017 performance evaluation uhf rfid real-time passenger tracking intelligent public transportation systems- 5 bus tracker seat availability checker 6 rfid epc gen2 tag portal antenna 4 performance better single row passenger cost applicable gps chip tracker relative bus position passenger destination accuracy effective sim card internet connection public transport occupancy estimation wlan probing- 7 wi-fi probe raspberry pi received signal strength indication easily le cost inaccurate inclusion biometric fingerprint recognition bus ticket 8 arduino fingerprint tech automated accuracy excessive contactless sensor human body identification rf absorption signatures- 9 capacitive sensor arduino uno dielectric property detects body bmi cost indoor purpose 2.1 2.1 display comparison comparison based working pro con 11 2017-18 real time bus vacancy detection iot approach existing aim bus arrival vacancy innovative description lacking biometric measure level based radio frequency wave absorption human body wa javed iqbal method detects presence human body radio frequency wave absorption capacitive sensor dielectric property efficient detect human body bmi implemented static room 1 aalborg denmark wa developed wifi probe installed inside bus detect wi-fi passenger seating bus people area determine number people seated bus method considers people bus wifi passenger wifi affect accuracy 2 processing moved developed technique biometric measure a. s. zeeman booysen fingerprint detection installed bus door passenger press thumb entering connected database passenger hamper security man handling accuracy weak person press thumb enter front door 3 g. surendiran developed based passenger source destination recorded ticket printing machine vacancy detected current location bus approach doesnt iot accurate intelligent dynamic wlan based wa implemented 4 christian oberli dan landau proposes passenger carry epc gen2 tag help rfid tag detecting person people pas portal wa equipped 4 antenna collect determine bus vacancy method feasible manhandling cost calculating occupancy wa implemented 5 12 2017-18 real time bus vacancy detection iot approach 2.1 existing play store doe real time tracking static timetable bus train real time vacancy detection achieve real time tracking bus explains comparison existing android m- indicator app 1.maharashtr state transport offline bus timetable shivneri ordinary bus 2.local public transport mumbai 3. provide auto taxi fare 4.also picnic spot 1.vacancy detection 2.real time tracking lacking delhi public transport offline 1.search delhi metro bus 2.offline app 3.schedules timetable public transport victoria app 1.journey planner reminder 2.real time tracking bus train 3.all night transport remainder 4.search route station transit moovit onebusaway 1.upcom ing departur time 2.trip planning 3.favouri te 4.compa option 5.real time tracking 1.smart transit suite 2.transit 3.real time tracking bus train 4.service alert 5.favourite 1.real time number transit agency 2. arrival bus 3.many access android iphone web sm 1.vacancy detection 2.map 1.vacancy detection 2.real time tracking 1.vacanc detectio 1.vacancy detection 2.interactio 1.vacancy detection 2.2 mobile apps comparison 2.2 display comparison android google play describes app lacking 13 2017-18 real time bus vacancy detection iot approach public transport india people access better public transport compared lacking studied map real time tracking vehicle timetable bus train real time vacancy vehicle city people well-known listed 1. m-indicator app app mumbai indicator app timetable train bus mumbai shivneri bus timetable crowded train indication peak hour rail map nearby mumbai picnic spot fare auto taxi lacking lack real time vacancy detection 10 2.victoria app app journey planner remainder real time tracking bus train provided night transport remainder search route station real time vacancy detection 11 3.delhi public offline transport app delhi city timetable train metro delhi offline well online searching bus metro real time bus train metro occupancy face 12 4. transit app map search destination bus train current location real time occupancy vehicle provided 13 5. moovit smart transit suite app transit real time tracking bus train service alert favourite option choose route favourite real time vacancy detection 14 6.onebusaway real time number transit agency arrival bus access android iphone web sm real time occupancy vehicle provided 15 14 2017-18 real time bus vacancy detection iot approach 2.2 proposed provide bus occupancy location provide real time bus location real time vacancy detection intends provide real time occupancy bus framework proposes implement innovative convenient public transport uhf rfid gps chip tracker biometric fingerprint achieve load cell sensor measure weight inside bus detect crowd seat check vacancy load cell adchx711 sensor cover area detect weight requires 12-14 sensor cover area bus area seat load cell connected amplifier amplify electric output load cell connected adc convert analog signal digital signal amplified digitally converted signal fed raspberry pi derive weight weight calculated raspberry pi self-designed raspberry pi kit gps tracker location bus real time server fetch raspberry pi distributes request mobile provided location destination server bus prototype load cell 5kg weight 60kg number sensor 5-6 load cell sensor geographical area coverage static programmer-made google map bus location considered static gps eliminated 15 2017-18 real time bus vacancy detection iot approach 3. specification 3.1 definition real time bus vacancy detection iot reduce long waiting period providing bus location seat occupancy passenger smart phone 3.2 concept real-time planning scheduling public transportation requires knowing actual number passenger traveling bus designed sensor sensor associated seat consider average weight person 60kg prototype 0.5-1 example sensor weighs 90 2 seat occupied seat vacant seat determining bus crowded weight entire bus calculated consider bus crowded 100 people i.e 100*60 6000 100*0.5=50 bus weighs 20-40 bus standing vacancy weight bus crowded processing raspberrypi fetch sensor process provide seat vacancy script continuously interval vacancy calculated rpi connected server server server bridge bus embedded mobile app save maintains rpi request mobile app destination location server bus fetched server database mobile app finally mobile enters destination location server responds desired bus access app home/ office bus arriving bus nearest 16 2017-18 real time bus vacancy detection iot approach 3.3 1. implemented public transport 2. bus arriving bus seat vacancy crowd detection 3. provided passenger smart phone 4. location security ensured vehicle sensor raspberry pi server 1. seat vacancy 2. crowd detection 3. location security public transport bus pmpl mobile android version 5.0 load cell 5kg rpi 3 tomcat 3.1 3.1 functionality implemented prototype prototype load cell 5 sensor limited sensor analyze small area location bus determined location bus actual load cell 60 sensor depending seat sensor analyze area local server small database bus limited region considered cost estimation bus max 5k determined cloud server database bus entire considered cost estimation bus min 25k 3.2 difference 3.2 difference functionality prototype actual 17 2017-18 real time bus vacancy detection iot approach 3.4 1. bus arriving bus 2. provide occupancy bus 3. crowd detection 3.5 3.5.1 person city transport kind person proposed real time vacancy detection public transport boon friendly helping person city providing bus occupancy bus bus ease transport reducing waiting time bus providing real time tracking bus satisfaction travelling proposed overcome lacking providing real time vacancy proposed real time vacancy detection public transport destination current location provide bus arriving bus provide occupancy bus bus location enter desired location proposed bus arriving location occupancy bus occupancy bus provided requested crowd detection bus bus crowded notification provided option bus proposed real time vacancy detection public transport aiming real time vacancy detection providing bus location enters location location server server fetch location bus route server processing fetching bus occupancy bus route raspberry pi processor raspberry pi processor fetch sensor sensor based functionality bus seat load cell proposed detecting vacancy pressure generated detecting vacancy generated raspberry pi processing 18 2017-18 real time bus vacancy detection iot approach 3.5.2 going passenger public transport pmpl bus .android phone version 4.4 higher require .application installed android mobile phone internet needed opening app session unique token generated session ensure security database stored server speed internet capability developed assumes tomcat server mysql database storage mysql-php driver database connectivity prototype programmer- map detecting location proposed real time bus vacancy detection iot approach pmpl area 3.5.3 mentioned development parameter considered optimization cost integrity specification 1.mobile device 2.raspberry pi kit 3.sensors 4.amplifiers 5.adc 6.power supply android phone version 4.4 rpi 3 load cell 5 hx711 adc 5v 3.3 3.4 proposed 19 2017-18 real time bus vacancy detection iot approach sr.no 1 description snc2c6 cheap tension compression load cell small button load sensor 50kg 100kg 150kg 200kg 2 40 10 ton hook scale s-type tension sensor load cell image cost 3300- 4620 1980- 5280 1.aluminum alloy stainless steel super miniature load cell specially force measuring limited space 2.capacity 100 3.output- analog signal 1.high precision bidirectional load easy installation 2. suitable batching scale hook scale mechanical electrical combination scale material mechanical machine ect 3.capacity-up 200kg 3.output analog signal 20 2017-18 3 4 5 real time bus vacancy detection iot approach 660-2640 1.it pressure sensor 2.output- analog signal 60kg platform scale single point load cell super powerful long-lasting mavin load cell ps-1242- stainless 60kg-300kg single point load cell 660 1.it pressure sensor 2.output- analog signal 4356 1.load cell rated load 350 2. rated output 2mv/v 3.4 cost comparison 3.4 comparison perform individual function described compared basis cost 21 2017-18 real time bus vacancy detection iot approach 3.5.4 mentioned coding development server side well android parameter considered optimization integrity modular nature ides best efficiency 1. android studio android studio development android studio 1. native environment android development doe third party plugins 2. version android version control well controlled android studio 3. support powerful refactoring 4. debugging le complicated android studio ides 2. database 1. sqlite implemented sqlite database application/ client side simple easy well suited android i.e compatible android apps optimized android environment source 2. mysql implemented mysql database sever side storage store format doe require structured format database scalable reliable 22 2017-18 real time bus vacancy detection iot approach 3. programming language 1. java implemented java language coding cross-platform compatible easy understand language development object-oriented language modularize code achieve reusability 2. python implemented python language manipulation raspberry pi kit interpreted easy learn easy read maintain object-oriented language encapsulates code object portable extendable 3. php implemented php language server side coding php server side scripting language embedded html integrated number popular database including mysql simple efficient flexible 3.6 3.6.1 proposed kind includes raspberry pi real time processing load cell weigh weight hx711 convert load cell output digital form wire connection includes connectivity driver rpi server server mobile app people worked help 23 2017-18 real time bus vacancy detection iot approach 3.6.1.1 proposed bus vacancy request wa developed prototype bus seat calculate seat vacancy standing vacancy bus wa created seat load cell seat load cell calculating entire bus standing vacancy wa component raspberry pi kit sensor connecting wire gps mobile device specification rpi -3 4 load cell 3kg 2 load cell 5kg f2f m2m f2m neo 6m v2 android phone version 4.4+ 3.5 3.5 detailed 3.6.1.2 proposed wa develop android developed android studio local server store rpi process phpmyadmin calculate vacancy rpi python send vacancy local server pymysql phpmyadmin android studio python mysql php specification version 4.6.5.1 version 2.3.0 version 2 version 5.0.28 php 7.0 3.6 3.6 detailed specification 24 2017-18 real time bus vacancy detection iot approach 3.6.1.3 human group people contributed responsibility wa assigned help review timely manner assigned conduct review response additional suggestion 3.6.2 split fig 3.1 split 25 2017-18 real time bus vacancy detection iot approach 3.6.2.1 mobile app enters destination location server responds desired bus access app home/ office internet connection bus arriving bus nearest 3.6.2.2 distribution server server bridge bus embedded mobile app save maintains rpi request mobile app destination location server bus fetched server database mobile app 3.6.2.3 processing rpi rpi fetch sensor process provide seat vacancy script continuously interval vacancy calculated rpi connected server server 3.6.2.4 fetching sensor fetching load cell 5 prototype sensor bus 4 seat 3.6.2.4.1 bus determining bus crowded weight entire bus calculated consider bus crowded 100 people i.e 100*60 6000 100*0.5=50 bus weighs 20-40 bus standing vacancy weight bus crowded 3.6.2.4.2 seat bus sensor associated seat consider average weight person 60kg prototype 0.5-1 example sensor weighs 90 2 seat occupied seat vacant seat 26 2017-18 real time bus vacancy detection iot approach 3.6.3 decomposition provide real-time extremely accurate concept internet thing i.e interaction virtual object component interact provide purpose component described 3.6.3.1 occupancy detection sensor going load cell sensor load cell range 5kg 10kg 100kg prototype load cell weight 5kg limit increased load cell higher capacity load cell connected amplifier hx711 hx711 amplifies electric output load cell connected adc convert analog signal digital signal amplified digitally converted signal fed rpi derive weight sensor associated seat consider average weight person 60kg prototype 0.5-1 example sensor weighs 90 2 seat occupied seat vacant seat determining bus crowded weight entire bus calculated consider bus crowded 100 people i.e 100*60 6000 100*0.5=50 bus weighs 20-40 bus standing vacancy weight bus crowded 3.6.3.2 processor raspberry pi small integrated single board attach peripheral mouse keyboard raspberry pi 32 bit 900 mhz processor processor 4 core named arm cortex-a7 processor 1 raspberry support operating main operating prototype raspbian raspberry pi processing board python script allows board receive command smartphone control room appliance raspberry pi fetch sensor process provide seat vacancy script continuously interval vacancy calculated rpi connected server server 3.6.3.3 distributor server bridge bus embedded mobile app save maintains rpi request mobile app destination 27 2017-18 real time bus vacancy detection iot approach location server bus fetched server database mobile app 3.6.3.4 mobile app enters destination location server responds desired bus access app home/office bus arriving bus nearest 3.6.4 role responsibilties sr. 1 2 3 4 5 6. role responsibility developer 6 load cell connected rpi hx711 adc weight calculated weight vacancy calculated connectivity developer connectivity developer database designer android app developer rpi server connected localhost send rpi server request server bus mobile app provided designing mysql database store develop mobile app android studio enter source destination bus destination bus vacancy bus entering source tester strategy 28 2017-18 real time bus vacancy detection iot approach 3.6.5 3.0 fig 3.2 time division fig 3.2 3.0 3.6.6 pert predecessor duration day 1 2 3 4 5 6 7 8 9 10 11 12 1 1 2 4 5 3 7 8 6 9 10 11 3.7 pert 15 15 8 8 12 25 8 6 25 6 7 10 total 143 day 29 2017-18 real time bus vacancy detection iot approach 3.6.7 pert fig 3.3 pert 30 2017-18 real time bus vacancy detection iot approach 4. 4.1 fig 4.1 4.1 proposed consists sensor raspberrypi server android app description consists bus block consists load cell sensor attached bus seat entire bus rpi process second block server distributes android third block front 31 2017-18 real time bus vacancy detection iot approach 4.2 fig 4.2 4.2 proposed distributor processor fetcher raspberrypi database description proposed gps sensor distributor processor fetcher process raspberry pi store arrow 32 2017-18 real time bus vacancy detection iot approach 4.3 er fig 4.3 er 4.3 er entity- 33 2017-18 real time bus vacancy detection iot approach 4.4 structural fig 4.4 structural 4.4 structural description structural showing conceptual modeling proposed showing hierarchy capturing sensor processing vacancy detection distributor send mobile 34 2017-18 real time bus vacancy detection iot approach 4.5 behavioral 4.5.1 use-case 4.5 relation actor functionality fig 4.5 description represents functionality basic functionality enters destination bus going arrive nearest going entered location fetched database displayed smart phone 1. search bus mobile app enter destination bus arriving bus going destination displayed 2. sensor reading 35 2017-18 real time bus vacancy detection iot approach weight sensor bus detect weight inside bus extracted rpi kit defined interval 3. process reading extracted sensor processed vacancy calculated 4. distribute display vacancy calculated vacancy distributed requested displayed mobile 5. maintain bus bus bus real time produced stored maintained server side main actor going interact 1. functionality provided 2. rpi rpi kit extract sensor processed stored server 3. database server database server store bus bus distributed request mobile 36 2017-18 real time bus vacancy detection iot approach 4.5.2 class fig 4.6 class 4.6 depicts class basic modeling description class involved 4.5.2.1 sensor sensor class sensor bus associated getweight method return weight detected sensor 4.5.2.2 _bus calculates weight entire bus crowd inside bus 37 2017-18 real time bus vacancy detection iot approach 4.5.2.3 seat calculates weight 4 seat seat vacancy bus 4.5.2.4 fetch rpi kit fetch sensor class fixed interval sensor associated rpi kit bus 4.5.2.5 data_processor fetched data_fetch class processed class vacancy crowd determined processed server class 4.5.2.6 data_distributor stored server distributed requested mobile_application location destination server appropriate bus returned multiplicity class responsibility operation class helpful modularized development 38 2017-18 real time bus vacancy detection iot approach 4.5.3 fig 4.7 4.7 depicts processing description fetching distribution 39 2017-18 real time bus vacancy detection iot approach 4.5.4 transmission server fig 4.8 transmission server 4.8 transmission server performs functionality description represents scenario server class object mobileapp datadistributor dataprocessor datafetch main transmission server 40 2017-18 real time bus vacancy detection iot approach transmission server fig 4.9 transmission sensor rpi server 4.9 transmission sensor raspberrypi server performs functionality description represents scenario rpi server class object datadistributor dataprocessor datafetch sensor main transmission rpi server 41 2017-18 real time bus vacancy detection iot approach 4.6 circuit fig 4.10 circuit 4.10 pin prototype 6 load cell 6 hx711 adc connected load cell load cell wire red black green white read wire connected vcc black wire connected gnd white green wire connected a- a+ adc vcc gnd hx711 connected vcc gnd dt sck pin hx711 connected gpio pin rpi 42 2017-18 real time bus vacancy detection iot approach 4.7 4.7.1 fig 4.11 4.11 complete proposed occupancy detection sensor sensor associated seat consider average weight person 60kg prototype 0.5-1 example sensor weighs 90 2 seat occupied seat vacant seat determining bus crowded weight entire bus calculated consider bus crowded 100 people i.e 100*60 6000 100*0.5=50 bus weighs 20-40 bus standing vacancy weight bus crowded collected sensor rpi rpi fetch sensor process provide seat vacancy script continuously interval vacancy calculated rpi connected server server server bridge bus embedded mobile app save maintains rpi request mobile app destination location 43 2017-18 real time bus vacancy detection iot approach server bus fetched server database mobile app mobile enters destination location server responds desired bus access app home/ office bus arriving bus nearest proposed load cell sensing pressure seat vacancy seat predicted load cell hx711 weight sensor raspberry pi build automatic gate automatic gate sense pressure sends fetcher load cell hx711 weight sensor load cell transducer transforms force pressure electrical output magnitude electrical output directly proportion force applied load cell strain gauge deforms pressure applied strain gauge generates electrical signal deformation effective resistance change deformation load cell consists strain gauge wheatstone bridge configuration load cell range 5kg 10kg 100kg load cell weigh 5kg prototype electrical signal generated load cell millivolt amplify amplifier hx711 weighing sensor picture hx711 weighing sensor hx711 chip 24 precision a/d converter analog digital converter hx711 analog input channel gain to128 programming channel hx711 amplifies electric output load cell amplified digitally converted signal fed rpi derive weight 44 2017-18 real time bus vacancy detection iot approach fig 4.12 load cell fig 4.13 hx711 weighing sensor 4.10 load cell sensor going proposed 4.11 hx711 weighing sensor going proposed load cell connected hx711 load cell amplifier wire wire red black white green/blue slight variation color wire connection red wire connected e+ black wire connected e- white wire connected a- green/blue wire connected a+ fig 4.14 pin connection 4.14 pin connection load cell sensor hx711 weighing sensor 45 2017-18 real time bus vacancy detection iot approach 5. consist three android 'know bus local server raspberry pi raspberry pi serf input local server vacancy local server android output processed i.e bus vacancy android implemented android studio local server phpmyadmin server server connectivity three -raspberry pi local server connectivity local server android app connectivity android app local server connectivity raspberry pi local server connectivity python vacancy calculated raspberry pi local server android local server local server android app connectivity php .database mysql 5.1 5.1.1 raspberry pi 5.1.1.1 fetch fetching fetching load cell 5 prototype sensor bus 4 seat 5.1.1.1.1 bus determining bus crowded weight entire bus calculated consider bus crowded 100 people i.e 20*60 1200 20*260g=5200g bus weighs 5.2 bus standing vacancy weight bus crowded 5.1.1.1.2 seat bus sensor associated seat consider average weight person 60kg prototype 260g example sensor weighs 90 360g prototype seat occupied seat 46 2017-18 real time bus vacancy detection iot approach vacancy calculation //for interfacing connect 6 load cell 6 gpio pin import hx711 hx711 load1=hx711 17 27 load1=hx711 20 21 load1=hx711 5 6 load1=hx711 23 24 load1=hx711 25 12 load1=hx711 19 26 print occupied seat 1 print occupied seat 2 print seat empty weight 720 weight 360 weight 360 weight 140 weight 140 //this function calculate standing vacancy calculated weight load cell func calculate_vacancy weight func //this function calculate standing vacancy total weight func standing_vacancy totalweight func ////this function calculate weight sensor_id passed func calculate_weight func totalweight 5250 print bus full totalweight 5250 totalweight =3500 totalweight 3500 totalweight =2600 totalweight 2600 totalweight =2000 totalweight 2000 weightlist weightlist.append getweight loadcell weight mode weightlist print 100 vacancy print 75 vacancy print 25 vacancy print 50 vacancy 47 2017-18 real time bus vacancy detection iot approach 5.1.1.2. processing local server raspberry pi collect sensor process provide seat vacancy script continuously interval vacancy calculated rpi connected server server 5.1.2 local server 1. distributor server bridge bus embedded mobile app save maintains rpi request mobile app destination location server bus fetched server database mobile app fig 5.1 phpmyadmindb 5.1 database stored local server 48 2017-18 real time bus vacancy detection iot approach processing local server //select destination area enters source destination server server side bus route source destination retrieved bus fetched json array created json array parsed android step 1 source _get source destination _get destination result2 select bus bus bus equal destination step 2 connect mysql step 3 result1 select bus bus bus equal source step 4 bus intersect result1 2 step 5 json encode bus step 6 mysql connection //updating database real time processed bus bus departs bus seating vacancy standing vacancy previous bus updated database update triggered rpi database updated step 1 bus_details _get bus step 2 connect mysql step 3 update bus bus bus_details step 4 mysql connection 5.1.3 mobile 5.1.3.1. mobile app enters destination location server responds desired bus access app home/ office bus arriving bus nearest fetching bus mobile app entering source destination receiving bus bus source destination route 49 2017-18 real time bus vacancy detection iot approach screen 1 step 1 read entered source step 2 read entered destination step 3 onclick bus button httpconnection localhost url send entered source destination url=new url http //192.168.43.213/bus_details.php source=source destination=destination url.openconnection step 4 read response received parse json array fetched store bus bus screen 2 step 5 create recycler view populate bus fetched step 6 onclick refresh execute step step 3 5.1.4 connectivity 5.1.4.1. raspberry pi local server connectivity collected raspberry pi server python calculate vacancy code wa written code separate calculating seat vacancy calculating percentage standing vacancy code snapshot 5.1.4.2. local server mobile app connectivity raspberry pi server stored database updating 2 minute auto refresh purpose code wa written app unique key generated source destination .this server bus displayed vacancy includes seat vacancy standing vacancy php mysql .code snapshot 5.1.4.3. mobile app local server connectivity app unique key generated enters source destination source destination bus displayed working database query written mysql .auto refreshing mobile app refresh android app 50 2017-18 real time bus vacancy detection iot approach 5.2 stage 5.2.1 fetching stage fetching load cell sens pressure based pressure vacancy calculated raspberry pi connection load cell hx711 load cell analog output hx711 convert digital form vacancy calculated condition written python code local server 5.2.2 processing stage stage raspberry pi local server processed interfacing stored database processed query 5.2.3 distribution stage app unique key generated source destination local server server send mysql query execution php mysql connectivity android main class connectivity code address local server source destination server process distribute app 5.2.4 stage android designed developed android studio gui source destination processing server bus seat vacancy percentage standing vacancy bus 5.3 technique initially pressure sensed load cell analog output hx711 convert analog output digital output based pressure code written python vacancy seat standing vacancy percentage offset load cell interfacing vacancy local server connecting local server raspberry pi pymysql refreshed pressure changed load cell .for android bus created source destination processing server send bus desired vacancy 51 2017-18 real time bus vacancy detection iot approach 5.4 issue raspberry pi output vacancy time output individual load cell initially wa serially wa time parallel processing wa overcome issue secondly local server prototype device connect address local server issue solved implementing cloud local server 5.5 vacancy raspberry pi program written python setting load cell offset interfacing python send raspberry pi local server pymysql connectivity driver raspberry pi local server connect local server android php mysql php-mysql connect android local server mobile developed android studio gui source destination second display bus 52 2017-18 real time bus vacancy detection iot approach 5.6 implemented fig 5.2 unloaded prototype 5.2 unloaded bus prototype plank platform represent seat load cell plank load cell prototype 3kg load cell 5kg platform standing vacancy bus seat unloaded prototype 2 vacancy load cell 53 2017-18 real time bus vacancy detection iot approach fig 5.3 loaded prototype 5.3 loaded bus prototype weight plank represents person prototype 1 vacancy load cell weight people seating prototype 0 vacancy load cell 54 2017-18 real time bus vacancy detection iot approach 5.6 implemented database 1. bus column int 11 bus_id varchar 100 bus_name varchar 100 bus_source varchar 100 bus_destination varchar 100 bus_location int 11 seat_vacancy standing_vacancy int 11 int 11 stop_id varchar 100 prev_stop next_stop varchar 100 varchar 100 bus_img default null null null null null null null null null key primary key foreign key 5 1 bus 5.1 database store bus primary key foreign key bus_id stop_id.this store bus vacancy bus 2. bus_stop column stop_id bus_id int 11 int 11 default key foreign key foreign key 5.2 bus_stop 5.2 represents bus foreign key stop_id bus_id 3. column stop_id stop_name area int 11 varchar 100 varchar 100 default null null key primary key 5.3 5.3 represents stored bus bus bus area bus 55 2017-18 real time bus vacancy detection iot approach 4. mobile app column user_id unique_id user_source user_destination user_location int 11 int 11 varchar 100 varchar 100 varchar 100 default null null null key primary key unique key 5.4 mobile app 5.4 represents database store unique purpose privacy user_id primary key location source destination 56 2017-18 real time bus vacancy detection iot approach 6. evaluation proposed number vacant seat bus percentage standing vacancy experiment performed phase evaluation initially weight seat prototype bus checked difference weight subtracted weight offset code interfacing load cell calibration load cell interfacing program correct output final program calculating vacancy implemented .this program number vacant seat percentage standing vacancy wa local server raspberry pi local server connectivity source destination processing local server bus displayed 6.1 experments number experiment performed development phase experiment performed connection change pin connection rpi i.e gpio pin pin accuracy wa experiment wa performed load cell prototype bus weight changed randomly offset load cell checked changed checked person sitting seat person sitting person sitting seat capacity bus people boarded bus checked prototype failed correct output 57 2017-18 real time bus vacancy detection iot approach 6.1.1 detailed discussion experments 1. experiment pin raspberry pi raspberry pi 98 accuracy gpio pin varies gpio pin load call 4 wire ground vcc rpi connection gpio pin raspberry pi connection changed output wa checked wa variation output gpio pin number 17 27 9 11 5 6 19 26 20 21 25 12 23 24 14 15 expected 1000g 1000g 1000g 1000g 1000g 1000g 1000g 1000g actual 999 1001 1200g 990 1000g 1000g 1000g 990 1010g 990 1000g 1000g 6.1 gpio pin 6.1 display load cell configured rpi gpio pin 2. experiment number person sitting seat experiment wa performed number people sitting seat weight wa seat bus checked seat vacancy displayed weight seat vacancy displayed bus exceeds capacity experiment check loop hole proposed experiment 6.8 6.1.2 experments performing experiment proposed fails person weight le 40 seat displayed vacant person sitting wa gpio pin configuration wa changed wa slight change output 58 2017-18 real time bus vacancy detection iot approach 6.2 investigation conducted provide product delivered strategy performed proposed key check point development process number performed prototype changing weight seat bus check accuracy percentage 6.2.1 white box white box method phase tested proposed coding infrastructure calibration code load cell interfacing code load cell connectivity code raspberry pi local server local server android wa white box focus input output input load cell raspberry pi wa tested checked going correctly local server input wa tested source destination checked database retrieving correct 6.2.2.1 unit basically unit single snippet code functionality unit wa performed snippet load cell calibration execution code single load cell wa tested output change change subtracted offset load cell 6.2.2.1.1 unit performed interfacing rpi unit interfacing rpi wa performed multiple pin rpi implementing prototype load cell connected allocated pin load cell detect accurate weight check happening performed 59 2017-18 real time bus vacancy detection iot approach unit performed interfacing rpi 1.1 sub-test explanation checking pin connection expected output change weight actual output change weight status pas load-cell connected pin load cell connected pin checking load cell offset scale accurate offset scale inaccurate offset scale doesnt change weight doesnt change weight pas accurate weight weight error weight correct weight weight error weight pas pas 6.2 testcases checking rpi interfacing 6.2 explains testcases checking interfacing rpi 6.2.2.1.2 unit performed load cell load tested individually weight load cell checked output subtracted offset unit performed load cell load cell actual weight load cell 900 gram 900 gram 1000 gram 1000 gram 1000 gram 1000 gram output load cell 851.28 gram 853.73 gram 1047.87 gram 1046.20 gram 983.81 gram 770 gram scale load cell 48.72 46.27 -47.87 -46.20 16.19 230 6.3 unit load cell offset load cell 8394480 8399930 8380840 8384725 8393060 8411580 1.2 2.1 2.2 1 2 3 4 5 6 6.3 describes scale offset load cell 60 2017-18 real time bus vacancy detection iot approach 6.2.2.1.3 unit performed vacancy calculation check weight detected correctly vacancy calculated correctly unit performed vacancy calculation expected output actual output explanation weight weight range i.e 140 720 weight 720 weight load cell 2 seat vacancy display 0 1 seat occupied vacancy 2 vacancy 0/1 consider people seating consider excess weight vacancy 0 vacancy fluctuates/inaccurate output status pas pas pas pas 1 2 3 4 6.4 vacancy calculation note weight exceeds weight load cell damage load cell 6.4 explains calculating vacancy 6.2.2.1.4 unit performed mobile app unit mobile app wa performed state mobile app tested action lead state action performed 61 2017-18 real time bus vacancy detection iot approach unit performed mobile app 1 expected action bus source and/or destination actual action status bus pas enters explanation incorrect source destination field net connection mobile phone mobile connection failed server 2 3 display message connect internet prompted display message failure server connection empty displayed fail display toast failure server connection pas 6.5 mobile app 6.5 explains executed android app 6.2.2.2 integration integration level individual unit combined tested group purpose phase expose fault integration integrated unit proposed integrated unit raspberry pi local server android integration wa performed checked integrated unit working properly weight seat bus seat load cell calculating seat vacancy underlying load cell calculate bus standing vacancy process vacancy calculation display bus tested purpose divided rpi local server tested second processed local server app tested 6.2.2.2.1 raspberry pi local sever raspberry pi sending correct database tested number 62 2017-18 real time bus vacancy detection iot approach integration performed rpi local server actual output expected output status 1 2 3 explanation connection established connection failed display message success failure display message retry server failure updation rollback read response display server response read display error retry rollback update trigger pas pas pas 6.6 connection rpi local server 6.6 explains connection rpi local server 6.2.2.2.2 unit performed transfer mobile app local server unit connectivity phase wa performed mobile local server tested source destination mobile app mysql query working properly tested integration performed mobile app local server expected output actual output status 1 2 3 explanation enters correct source destination enters wrong source and/or destination source destination and/or enters bus route bus route pas bus available/ source and/or destination prompted enter source and/or destination bus pas bus fail 6.7 transfer mobile app local server 6.7 explains transfer mobile app local server 63 2017-18 real time bus vacancy detection iot approach snapshot android app fig 6.2 listofbuses fig 6.1 kmb-snapshot app 6.1 app bus 6.2 bus fetched source destination 64 2017-18 real time bus vacancy detection iot approach 6.2.2 black box black box method examines functionality peering working .for proposed black box wa performed check functionality individual component initially weight seat bus code calculating vacancy local server request displayed bus proper vacancy i.e vacant seat percentage standing vacancy black box focus input output bothering knowledge wa performed 6.2.2.1 vacancy performed black box considering variation weight people people weight occupying seat considered person 40 weight sits seat output difference output likewise performed 65 2017-18 real time bus vacancy detection iot approach black box performed vacancy sr weight weight person sitting seat person sitting second seat expected vacancy actual fail/pass vacancy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 40 50 60 70 80 90 40 40 40 40 40 40 50 50 50 50 50 60 60 60 60 70 70 70 80 90 40 50 60 70 80 90 50 60 70 80 90 60 70 80 90 70 80 90 80 90 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 fail pas pas pas pas pas fail fail pas pas pas pas pas pas pas pas pas pas pas pas pas pas pas pas pas pas 6.8 26 23 passed achieving 89.99 accuracy proposed 6.2.2.2 summary black box vacancy number performed 26 number passed 23 number failed 3 66 2017-18 real time bus vacancy detection iot approach 6.2.2.3 mobile app black box performed mobile app 1 expected action actual action status bus pas bus source and/or destination enters explanation incorrect source destination field net connection mobile phone mobile connection failed server 2 3 display message connect internet prompted display message failure server connection empty displayed fail display toast failure server connection pas 6.2.2.4 summary black box mobile app number performed 3 number passed 2 number failed 1 67 2017-18 real time bus vacancy detection iot approach 7 7.1 proposed ensures optimal public transport platform prevents congestion bus platform keep passenger informed flexible manner locates bus real-time passenger app bus arrive location desired destination displayed vacancy bus reduce long waiting period provide passenger better judgment 7.2 public transportation bus transport transportation india commuter time waiting bus stand long time .with people public bus transport nice worthy provide real time update bus location vacancy bus time crowded bus hanging lead accident sleepless night travel bus aware arrived solution proposed aim provide real time vacancy bus location gps load cell prototype real time difficult keep maintenance load cell wrong output maintenance main proposed secondly prototype wired connection raspberry pi load cell real time scenario wired connection bus difficult manage connection long time provide accurate bus wi-fi solved prototype load cell seat separate load cell calculate standing vacancy real time scenario entire bus minimum 18 20 load cell cost efficient solution cost 68 2017-18 real time bus vacancy detection iot approach 7.2 now-a-days everyday people busy moving office school main thing transport bus people waiting wasting precious time bus timing generally unpredictable country time crowded bus hanging lead accident sleepless night travel bus aware arrived proposed aiming solve proposed bus location gps vacancy bus android app bus app source destination bus going source destination correct direction vacant seat bus percentage standing vacancy bus achieved load cell bus load cell 2 seat load cell entire bus calculate standing vacancy prototype color coding occupied seat occupied seat red color vacant seat yellow color displayed gui mobile app designed thing seat booking book seat advance color seat changed rest ease travelling experience public transport 69 2017-18 real time bus vacancy detection iot approach paper 1 performance evaluation uhf rfid real-time passenger tracking intelligent public transportation systems- 2008 christian oberli dan landau electrical pontificia universidad catolica de chile vicuna mackenna 4860 santiago chile 2 bus tracker seat availability checker 2014 g. surendiran 3rd year eee panimalar college chennai 3 public transport occupancy estimation wlan probing- 2016 lars mikkelsen_ lmm es.aau.dk radoslav buchakchiev_ rbucha13 student.aau.dk tatianamadsen_tatiana es.aau.dk andhanspeterschwefel_hps es.aau.dk_wirelesscommunica tion network aalborg denmark 4 biometric fingerprint recognition bus ticket 2016 zeeman booysen 5 contactless sensor human body identification rf absorption signatures- 2017 javed iqbal arslan arif osama bin tariq mihai teodor lazarescu luciano lavagno electronics telecommunication det politecnico di torino italy email javed iqbal arslan.arif osama.bintariq mihai.lazarescu luciano.lavagno polito.it datasheets 6 http //www.mouser.com/ds/2/813/hx711_english-1022875.pdf 21 2018 7 http //www.u-blox.com/sites/default/files/products/documents/neo-6_datasheet_ gps.g6- hw-09005 .pdf 21 2018 link 8 raspberry pi foundation online 2015 http //www.raspberrypi.org 23 2018 9 http //www.webcitation.org/6hkvdhfhy 23 2018 10 http //www.complaintboard.in/complaints-reviews/pmpml-l31060.html 1 2018 11 http //mrane.com/portfolio/pune-bus-map/ 1 2018 70 2017-18 real time bus vacancy detection iot approach base paper 71 2017-18 real time bus vacancy detection iot approach 72 2017-18 real time bus vacancy detection iot approach 73 2017-18 real time bus vacancy detection iot approach plagiarism 74 2017-18 real time bus vacancy detection iot approach review sheet 75 2017-18 real time bus vacancy detection iot approach 76 2017-18 real time bus vacancy detection iot approach 77 2017-18 real time bus vacancy detection iot approach 78 2017-18 real time bus vacancy detection iot approach 79 2017-18", "keywords": ["actual output", "analog output", "analog signal", "android app", "android app connectivity", "android phone", "android phone version", "android studio", "android studio gui", "app connectivity", "app destination", "app journey", "app local", "app local server", "associated seat", "black box", "box black", "box black box", "bridge bus", "bus access", "bus bus", "bus bus bus", "bus crowded", "bus location", "bus occupancy", "bus pas", "bus people", "bus prototype", "bus route", "bus seat", "bus source", "bus standing", "bus standing vacancy", "bus train", "bus vacancy", "bus vacancy detection", "cell hx", "cell sensor", "collected sensor", "connected server", "connected server server", "connection rpi", "current location", "database store", "default null", "destination bus", "destination location", "destination location server", "destination server", "detection iot", "detection iot approach", "display message", "electrical signal", "enters destination", "entire bus", "epc gen", "epc gen tag", "fetch sensor", "fetch sensor process", "foreign key", "gen tag", "gpio pin", "gram gram", "human body", "hx hx", "hx load", "intelligent public", "intelligent public transportation", "internet thing", "iot approach", "key foreign", "key foreign key", "key generated", "load cell", "load cell hx", "load cell sensor", "local server", "local server android", "location bus", "location server", "mahanagar parivahan", "mobile app", "mobile app destination", "mobile app local", "mysql database", "occupancy bus", "output status", "pas bus", "pas pas", "pas pas pas", "passenger smart", "passenger smart phone", "percentage standing", "percentage standing vacancy", "phone version", "php mysql", "pi kit", "pi local", "pi local server", "pi server", "pin connection", "pin load", "primary key", "prof ddlondhe", "proposed bus", "prototype load", "prototype load cell", "prototype vacancy", "prototype vacancy load", "public transport", "public transport occupancy", "public transportation", "raspberry pi", "raspberry pi kit", "raspberry pi local", "raspberry pi server", "real time", "real time bus", "real time occupancy", "real time vacancy", "request mobile", "rpi connected", "rpi connected server", "rpi gpio", "rpi kit", "rpi local", "rpi local server", "rpi request", "rpi request mobile", "rpi rpi", "rpi server", "seat bus", "seat load", "seat load cell", "seat vacancy", "sensor bus", "sensor load", "sensor load cell", "sensor process", "sensor raspberry", "sensor sensor", "server android", "server bridge", "server bridge bus", "server bus", "server database", "server mobile", "server server", "smart phone", "smart transit", "source destination", "standing vacancy", "standing vacancy bus", "standing vacancy weight", "store bus", "stored server", "studio gui", "time bus", "time bus vacancy", "time occupancy", "time vacancy", "time vacancy detection", "transfer mobile", "transfer mobile app", "transmission server", "transport occupancy", "unique key", "unique key generated", "vacancy bus", "vacancy calculation", "vacancy detection", "vacancy detection iot", "vacancy load", "vacancy load cell", "vacancy local", "vacancy local server", "vacancy weight", "vacancy weight bus", "vacant seat", "weight bus", "weight load", "weight load cell", "weight seat", "weight sensor", "weight sensor load", "weight weight", "white box"], "libraries": [], "languages": ["php", "python", "html", "sr", "basic", "small", "java"], "frameworks": [], "dbs": ["sqlite", "mysql"]}, "./reports/BE Project Report_14.pdf": {"title": "congested scene analysis using dilated convolutional   generative adversarial networks", "filename": "./reports/BE Project Report_14.pdf", "data": "congested scene dilated convolutional generative adversarial network prateek malhotra b120058591 awais patekari sagar kolhatkar nishant petkar b120058581 b120058604 b120058588 guidance mrs. j. b. jagdale 2017-2018 congested scene dilated convolutional gans congested scene dilated convolutional generative adversarial network prateek malhotra b120058591 awais patekari b120058581 sagar kolhatkar b120058604 b120058588 nishant petkar bonafide prof. j.b. jagdale preliminary earlier diploma prof. j.b. jagdale dr. b. a.sonkamble examiner 2017-18 2 congested scene dilated convolutional gans acknowledgement abbreviation ii iii iv 1 1.1 1.2 1.3 2. title 2.1 existing 2.2 proposed 3. specification 3.1 3.2 definition concept 11 12 12 13 14 18 20 20 2017-18 3 congested scene dilated convolutional gans 4 5 6 4.1 4.2 4.3 4.4 5.1 5.2 3.3 3.4 3.5 3.5.1 datasets 3.5.2 3.5.3 non-functional 3.5.4 3.5.5 structural behavioral 23 24 26 29 approach preprocessing evaluation 20 21 21 22 22 22 22 31 32 33 6.1 dense image 2017-18 4 congested scene dilated convolutional gans 34 35 36 36 37 38 40 6.2 sparse image 6.3 actual count 6.4 6.5 comparison approach parameter reduction 7 8 9. 2017-18 5 congested scene dilated convolutional gans acknowledgement great pleasure satisfaction presenting preliminary congested scene dilated convolutional generative adversarial network express deep sense gratitude prof. j. b. jagdale kind cooperation encouragement helped complete express special gratitude dr.p.t.kulkarni dr. b. a. sonkamble prof. d.d londhe guidance constant well providing support completing directly indirectly helped completion mr. prateek malhotra mr. sagar kolhatkar mr. nishant petkar mr. awais patekari 2017-18 6 congested scene dilated convolutional gans title 1 2 3 comparison dcnn based approach compared contemporary approach parameter reduction 14 36 36 2017-18 7 congested scene dilated convolutional gans title 1 cross scene crowd counting 15 2 3 4 5 6 7 8 9 10 11 12 13 14 15 combining network deep shallow network sized filter gans density estimation dilated kernel dilated kernel semantic segmentation general class deployment 17 17 18 19 20 23 24 25 26 27 28 front-end 31 ground truth generation dense image 32 33 2017-18 8 congested scene dilated convolutional gans 16 17 sparse image generated actual count graphing 34 35 2017-18 9 congested scene dilated convolutional gans abbreviation abbreviation expanded form deep convolutional neural network generative adversarial network rectified linear unit convolutional generative adversarial network absolute error square error dcnn gan relu dcgan mae mse 2017-18 10 congested scene dilated convolutional gans india country second largest population billion face year overcrowding public road temple housing area recreational ground exists standardized efficient number people time consequence include grave disaster scale stampede collapsing bridge well-documented accident propose end-to- convolutional generative adversarial network understand distribution accurately number people highly congested scene generator network branch dilated kernel size deliver increased reception field simultaneously achieving parameter reduction 50 compared current state-of- art approach demonstrate network count estimation performance image generation complete shanghaitech dataset keywords crowd-counting convolutional neural network crowd-analysis vision image segmentation 2017-18 11 congested scene dilated convolutional gans 1 1.1 deep convolutional neural network image recognition generation development dcnn wa generative adversarial network introduced unsupervised technique generate density map based training phase gan wa introduced built basic specific image generation achieved reduction number parameter needed memory space store running device capability memory constraint current state art method achieve better 200mb space store approach reduces le 1mb memory 1.2 crowd large-scale public gathering india difficult sheer amount people small area grave disaster stampede occured number people area limit performing crowd scene photograph area question short duration help arranging and/or deriving better crowd strategy limit preparing better technique emergency disaster absolute urgency better crowd india prominent city mumbai tragedy 2017 elphinstone mumbai 23 people died panic overcrowding demonstrates danger rise everyday overpopulation 2017-18 12 congested scene dilated convolutional gans 1.3 crowd large-scale public gathering india difficult sheer amount people small area grave disaster stampede occured number people area limit real-time crowd photograph help crowd preparation better evacuation strategy disaster density heat map better smoother crowd technique number people area stay predefined limit 2017-18 13 congested scene dilated convolutional gans 2 2.1 existing crowd density crowd counting performed and/or investigated researcher year convolutional neural network unsurprisingly contending state-of-the-art approach 1 comparison dcnn based approach basic cnn bare bone convolutional neural network multi-task crowd counting technique velocity scale context aware robust change scale scenario 2017-18 14 congested scene dilated convolutional gans patch based image divided smaller analysed independently cross scene crowd countingzhang al 1 analyzed existing method identify performance reduces drastically applied scene training dataset learned network alternatively training function crowd count density estimation alternatively optimizing function better local optimum order adapt network scene network fine-tuned training sample target scene network perform perspective normalization achieving robustness scale perspective variation additionally introduced dataset purpose evaluating cross-scene crowd counting fig 1 cross scene crowd counting 1 crowdnetboominathan al 3 combined deep shallow fully convolutional network predict density map crowd image combination network enables build robust non-uniform scaling crowd variation perspective augmentation performed 2017-18 15 congested scene dilated convolutional gans extensively scaling training image rescaled blurring annotation gaussian kernel shallow deep network combined add robustness fig 2 combining deep shallow network 2 deep shallow concatenated processed convolutional layer single image crowd counting mcnn -- -- zhang al 4 inspired success multi-column network image recognition proposed method ensures robustness variation object scale constructing network comprises three column filter receptive field size medium small zhang al proposed account perspective distortion estimating spread parameter gaussian kernel based size person image finally considering existing crowd counting datasets cater challenging situation encountered real scenario shanghaitech crowd datasets constructed 2017-18 16 congested scene dilated convolutional gans fig 3 network sized filter 3 network improve weak learner reduce variance generative adversarial network crowd counting complicated scene -- li al 5 paper gans time crowd counting achieves pretty decent advantage approach unsupervised le overfitting gans hard train requires separate powerful network balanced continuously paper proposes u-net better fig 4 gans density estimation 2017-18 17 congested scene dilated convolutional gans generative adversarial network better density estimation 2.2 proposed achieve increased kernel reception field convolutional layer adapted dilated kernel 1 offer wider reception field aggregating fig 5 dilated kernel improving resolution density map generated turn sure accurate crowd density map count 2017-18 18 congested scene dilated convolutional gans 6 dilated kernel compared contemporary approach 4 observed dilated kernel based performs standard semantic segmentation achieved state art semantic segmentation datasets approach combine power dilated kernel convolutional generative adversarial network generate resolution heat-maps accurate crowd counting congested scene 2017-18 19 congested scene dilated convolutional gans 3 3.1 definition implement dilated kernel based deep convolutional network state-of-the-art technique analyse crowd pattern predicting number people location local crowd density photograph scene 3.2 concept photograph scene described converted patch predefined size patch passed convolutional neural network upsampling layer produce density heatmap 1 heatmaps compared ground-truth map find square error mse find loss respect ground truth error backpropagated find gradient respect loss utilizing learning-rate change network iteration order increase accuracy decrease mse 2 doesnt apply regression technique calculate number people map created regression technique random forest regression accurate paper regression technique simply add element image array crowd count generally error ignored 3.3 capture image remote location secure transfer stationary server preprocessing generating image map deep convolutional neural network display generated heat map crowd density print estimated count 2017-18 20 congested scene dilated convolutional gans fine-tuning generalises well indian scenario analysing heat map changing timesteps making prediction behaviour observed crowd 3.4 1. helping better understanding crowd distribution pattern density count faster better crowd 2. better evacuation strategy generated based realtime performed natural disaster 3. density heat map better smoother crowd technique number people area stay predefined limit 4. calculation better estimation limit expert 3.5 3.5.1 datasets 1. ucf_cc_50 dataset 50 image crowd annotation 7 2. shanghaitech dataset 2 separate largest crowd counting dataset 8 3. mall dataset video crowd inside mall 9 3.5.2 1. web allow uploading image scene 2. upload option viewing heatmap displaying count 2017-18 21 congested scene dilated convolutional gans 3. option download image analysis.. 3.5.3 1. site 24 hour 2. easy intuitive 3. site support privacy law 4. site support browser exist market 5 3.4 1. nvidia gpu cuda 3.0 2 4gb ram 3. cloud training 10gb memory atleast 3.5 1. python 2.7 installed anaconda support jupyter notebook scipy numpy pil opencv panda standard library 2. pytorch support torchvision torch 3. flask 4. html cs bootstrap 2017-18 22 congested scene dilated convolutional gans 4 4.1 fig 7 generator 8 branched deep cnn dilated kernel size incorporate spatial single image point proposed 8 divided regression classification solved common output output map stack convolutional layer 1. final conv map 1 build crowd density map 2. classification responsible labelling image density scale 1 10 3. regression total count image 4. regression sum entire image count 2017-18 23 congested scene dilated convolutional gans 4.2 structural fig 8 class proposed crowd counting gan generator discriminator inherit common class defines overlapping 2017-18 24 congested scene dilated convolutional gans fig 9 deployment proposed crucial python file deployed nvidia gpu cuda forward processing backward processing component executed environment 2017-18 25 congested scene dilated convolutional gans 4.3 behavioural fig 10 functionality implemented meant actor administrator administrator power update example 2017-18 26 congested scene dilated convolutional gans fig 11 interacts image compatibility pre-processing step implemented web 2017-18 27 congested scene dilated convolutional gans fig 12 generate final count un-preprocessing heat map display concurrently inspired 3 2017-18 28 congested scene dilated convolutional gans 4.4 preprocessing step 1. converting image patch 225x225 sliding window 2. normalise patch increasing sharpness training 1. scaling image size 2. converting image 225x225 sliding window 3. normalise patch 4. flipping randomly rotating image 5. sampling distribution branched branch capture local dilation rate 2. subsequent branch higher dilation rate layer capture level -- highest dilation rate layer 32 global image map concatenated convolutional layer final vector size 256 256. passed loss function combination separate loss function ensure stability pair generator discriminator conditional loss l1 loss understanding difference output gan final output 2017-18 29 congested scene dilated convolutional gans cross entropy loss loss stabilizing handling randomness output predicted output bringing maximising variational lower bound variational bound created difference image bound array compute lower bound variational bound maximising loss function adam 2 optimiser learning rate 0.002 leakyrelu activation negative slope 0.2. 2017-18 30 congested scene dilated convolutional gans 5 5.1 approach operation backend integration 1 2 3 4 raspberry pi equipped camera click site picture 5 interval image stationary server tcp connection latest density map count uploading server web browser time based database created count generated map 5 backend database mongodb coding front-end flask integrating web app running port 5000 13 front-end 2017-18 31 congested scene dilated convolutional gans 5.2 preprocessing generating ground truth density map zhang al geometry adaptive gaussian kernel distort annotation based local density distance point effective capture spatial produce accurate density map parameter beta fixed 0.3 based empirical achieved zhang al example 14 ground truth generation image preprocessing technique generates ground truth 5.3 dataset 1. shanghaitech dataset 300 training image 162 image 2. shanghaitech dataset 400 training image 250 image 2017-18 32 congested scene dilated convolutional gans 6 evaluation 6.1 sample dense image original image ground truth 199 214 15 dense image 2017-18 33 congested scene dilated convolutional gans 6.2 sample sparse image original ground truth 71 66 16 sparse image 2017-18 34 congested scene dilated convolutional gans 6.3 final actual count fig 17 generated count actual count observed performs comparatively better actual number people range 50 1300 6 4 comparison approach 2017-18 35 congested scene dilated convolutional gans mae mae approach zhang al 3 mcnn s-m 4 gan li al 5 augmentation s-cnn 6 181.8 160.5 158.8 150.2 90.4 csrnet 7 2 comparison 68.2 32.0 42.3 26.5 21.6 10.6 6.5 parameter reduction reduced memory space achieved approach csrnet approx number parameter 100k 511 kb 776k 139mb 3 achieved parameter reduction branched help achieving better lesser number parameter 2017-18 36 congested scene dilated convolutional gans 7 novel end-to-end crowd counting dilated convolutional generative adversarial network proposed motivated removal max-pooling operation branched enabling encoding local intermediate global image parameter learned end-to-end fashion presence loss function regulariser prevent overfitting training dataset main contribution achieving density map crowded scene generating reasonable count working memory constraint occupies 511kb storage apt device memory processing power 2017-18 37 congested scene dilated convolutional gans 1 zhang c. li h. wang x. yang 2015. cross-scene crowd counting deep convolutional neural network proceeding conference vision pattern recognition 833841. link paper 2 walach e. wolf l. 2016. learning count cnn boosting european conference vision springer 660676. link 3 boominathan l. kruthiventi s.s. babu r.v 2016. crowdnet deep convolutional network dense crowd counting 2016 acm multimedia conference acm 640644. link 4 zhang h. sindagi v. patel v.m 2017. image de-raining conditional generative adversarial network arxiv preprint arxiv 1701.05957. link 5 zhang y. zhou d. chen s. gao s. 2016b single-image crowd counting multi-column convolutional neural network proceeding conference vision pattern recognition 589 597. proceeding 6 xu huang john hopcroft serge belongie stacked generative adversarial network arxiv preprint arxiv 1701.05957. link 7 f. chollet xception deep learning depthwise separable convolution 2017 conference vision pattern recognition cvpr 18001807 8 victor lempitsky andrew zisserman learning count object image advance neural processing 13241332 2010. datasets 9 ucf_cc_50 dataset idrees h. saleemi i. seibert c. shah m. 2013. multi-source multiscale counting extremely dense crowd image proceeding conference vision pattern recognition 25472554 10 shanghai tech dataset zhang c. li h. wang x. yang 2015. cross-scene crowd count- ing deep convolutional neural network proceeding conference vision pattern recognition 833841. 2017-18 38", "keywords": ["actual count", "adversarial network", "conference vision", "conference vision pattern", "congested scene", "convolutional gans", "convolutional generative", "convolutional generative adversarial", "convolutional layer", "convolutional neural", "convolutional neural network", "crowd counting", "crowd density", "deep convolutional", "deep convolutional neural", "deep shallow", "density estimation", "density map", "dilated kernel", "dilation rate", "gaussian kernel", "generative adversarial", "generative adversarial network", "ground truth", "heat map", "jb jagdale", "li al", "li wang", "li wang yang", "neural network", "number parameter", "number people", "parameter reduction", "pattern recognition", "prateek malhotra", "proceeding conference", "proceeding conference vision", "reception field", "sagar kolhatkar", "semantic segmentation", "vision pattern", "vision pattern recognition", "wang yang", "zhang al", "zhang li", "zhang li wang"], "libraries": ["pytorch", "anaconda", "opencv", "panda", "scipy", "numpy"], "languages": ["html", "cs", "python", "beta", "basic", "small"], "frameworks": ["flask"], "dbs": ["mongodb"]}, "./reports/BE Project Report_17.pdf": {"title": "intuitive intrusion detection/prevention   system", "filename": "./reports/BE Project Report_17.pdf", "data": "intuitive intrusion detection/prevention vaibhav lohani b120058636 sumeet kumar b120058626 tejas s. b120058630 momin sohail abdul sattar b120058567 guidance prof. t. a. rane s. 27 satara road 411043 2017-2018 intuitive intrusion detection/prevention vaibhav lohani b120058636 sumeet kumar b120058626 tejas s. b120058630 momin sohail abdul sattar b120058567 bonafide prof. t. a. rane earlier diploma prof. t. a. rane examiner prof. d. d. londhe coordinator dr. p. t. 2018 acknowledgment compromise theoretical consideration practical involves non-technical experience source express feeling gratitude number people instrumental supportive completion assessment express sincere regard prof. t. a. rane coordinator prof. d. d. londhe valuable suggestion help undertaken complete kind assistance encouragement express profound dr. sonkamble b.a incharge h.o.d cheerful encouragement valuable suggestion support vital helped complete forget express immense sense thankfulness staff college extended cooperation needed completion help received staff thankful friend offered helping hand needed family supporting spiritually life vaibhav lohani b120058636 sumeet kumar b120058626 tejas s. b120058630 momin sohail abdul sattar b120058584 title 4.1 4.2 4.3 4.4 4.5 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9 6.10 6.11 architectural block class iids dashboard pdf scanner output malicious file pdf scanner output non-malicious file dynamic file hook creation output file registry virtualization static app.exe static hash output static import static call extraction static malware detected output 14 15 15 16 16 39 40 40 41 41 42 42 43 43 44 44 acronym description intrusion detection machine learning logical virtual machine dynamic link library portable executable microsoft visual studio operating term lvm dll pe mv title 1 2 3 4 acknowledgement abbreviation background challenge aim background existing proposed specification definition specification 3.2.1 static 3.2.2 dynamic 3.2.3 machine learning class 1.1 1.2 1.3 1.4 2.1 2.2 3.1 3.2 3.3 4.1 4.2 4.3 4.4 4.5 4.6 ii iii 1 2 3 3 4 4 6 7 8 9 10 10 10 11 11 12 13 14 14 15 15 16 16 17 5 6 7 5.1 5.2 5.2.1 dynamic 5.2.2 static evaluation 6.1 18 18 19 30 38 39 45 47 intelligent intuitive form intrusion detection core current day virtualization support virtualization abstraction level heavyweight virtual machine vm created full-fledged operating environment initializing vm incurs overhead term disk space invocation latency os-level virtual machine creates multiple execution environment single physical machine hardware-level virtual machine os-level virtual machine virtualization layer operating program virtualization layer designed allows process vms access host machine tamper achieved call hooking minhook library c++ word vm share execution environment host machine keep diverges host environment vms local state vm small achieve scalability machine learning classifier trained analyze file vm classify file malicious benign file benign change synchronized host environment file malicious alert action keywords intrusion detection intrusion prevention network security machine learning unsupervised learning 1 1.1 background advancement field networking connectivity growing compromise backbone networking infrastructure server protected network rise evident arose considerable effort prevent happening network intrusion detection prevention created researched ids/ips created focus rule based approach detecting network attack approach worked well earlier attack cracker sophisticated cracking crafted mind approach virtualization intercepting window call exposed user-mode user-mode dynamic link library dll approach sophisticated attack crafted attacker detected virtualized prevented attempt making intelligent researcher applied real scenario positive rate time detection attempt develop detect attack intelligently positive rate time 1.2 challenge focus logical virtualization call hook fault-tolerant intrusion-tolerant require ability execute unsafe program realistic environment leaving permanent damages.virtual machine meet perfectly execution environment realistic isolated key technique logical sandbox namespace virtualization isolates virtual machine renaming call main challenge wa achieve strong isolation virtual machine host machine numerous namespaces interprocess mechanism window demonstrate logical sandbox flexible scalable requires le incurs lower start-up run-time performance overhead existing hardware-level virtual machine compelling building block security fault-tolerant 1.3 aim focused provide logical virtualization i.e hooking call making virtual namespace change executable file lightweight logical sandbox le scalable 1.4 2 background background 3 detailed needed specification 4 dfds explanation 5 realization concept developed describe implemented 6 describes extent achieved comprehensible summary critical 7 summarizes achieved acknowledges forward improvement 2 background 2.1 existing 2.1.1 abstraction layer virtualization vmware 1 2 microsoft virtual pc 3 virtualization abstraction layer virtualize common pc processor memory peripheral i/o device multiple operating instance installed single physical x86 machine so-called lightweight virtual machine abstraction layer 4 5 6 virtualize subset denali 4 para-virtualization technique scale number concurrent vms running server xen 5 para-virtualization technique support full multi-application operating small performance overhead linux ported xen performance native linux virtualization simulate abstraction layer create multiple instance vms guest operating advantage full isolation vms host machine disadvantage performance overhead 2.1.2 operating level virtualization freebsd jail 7 utility create multiple virtual execution environment called jail file root ip address process jail access jail utility requires chroot call kernel modification separate namespaces jail linux vserver 8 advanced jail-like linux modifies kernel code process file network address root capability interprocess separate user- space environment distinct virtual private server support unification hard link reduce disk space consumption 2.2.3 window confinement mechanism window implement confinement mechanism 9 session window station desktop job object session support multiple interactive window terminal service 10 session namespace kernel object well keyboard mouse display device multiple instance multiple terminal session terminal server session isolate access file registry completely supported window platform window server 2.2 proposed basic concept create virtual namespace executable file call hook hooking call minhook.h library visual c++ virtualize file call hook apply machine learning classify virtualized file benign malicious 3 specification 3.1 definition develop detection malicious file analyzing controlled isolated environment static dynamic synchronize state isolated environment actual environment file benign 3.2 specification 3.2.1 static static earlier method detecting malwares cost overhead procedure preferred choice sophisticated procedure overhead detection pipeline modern detection stage detect malwares static scan file executed executing file environment executable file examined signature pattern executable code artifact analysing scanning detecting malicious file executable file detection malwares reading scanning file finding signature pattern operation executable file 3.2.2 dynamic dynamic sophisticated powerful accurate technique malware detect malware sample compared static method intuitively incurs heavy overhead well heavy process considerable scanning analyzing time dynamic process consists executing suspicious file contained constrained isolated environment affect actual actual virtualized method virtualization interaction execution process virtualized actual change interaction process virtualized analysed order detect sign malicious malicious detected rule based detection malicious change interaction recognizing pattern signature interaction process virtualized 3.2.3 machine learning machine learning discipline artificial intelligence ai power ability learn program machine explicitly machine learning focus development program adapt change exposed dataset machine learning detect hidden pattern adjust program action machine learning classified supervised unsupervised supervised apply learned historic unsupervised directly draw datasets malware detection classification clustering machine learning classification supervised method learned training historical classify file malicious benign clustering hand unsupervised directly grouping unlabelled cluster labelled programmer clustering classification recognise pattern point group help identifying pattern point 3.3 3.3.1 processor intel i5 higher hard disk space 100 gb min ram memory 4gb 8 gb recommended 3.3.2 operating library window 7 window nt kernel minhook call hooking pefile parse portable executable file language static python dynamic c++ visual c++ ide .net microsoft visual studio 2017 4 4.1 proposed malware detection consists series process suspicious file static malware dynamic malware synchronization change dynamic file malicious suspicious file process stage serially process series invoked depends output previous process depicts complete level detection clearly 4.2 architectural 4.1 architectural block 4.3 4.2 4.4 class 4.3 class 4.5 4.4 4.6 4.5 5 state virtual machine defined retained virtual machine running logical sandbox creates virtual machine state root file directory file update virtual machine root registry hive registry update virtual machine directory root directory private version file registry vm vm created root directory physically residing host directory namespace logical image vms file directory union vms root file directory current host file directory library called minhook.h creating virtual namespace current host file directory vms root file directory virtual namespace created call hook executable file redirecting change executable virtual namespace 5.1 visual c++ window operating minhook library call hooking pefile library call string extraction executable file 5.2 broadly divided 2 small 1. dynamic virtualization a. call hooking b. dll injection 2. static a. obfuscation check b. hash matching c. call 5.2.1 dynamic dynamic call hooking c++ library minhook.h making .dll file visual c++ dynamic dll injection allocate memory executable file injects .dll file executable hooks_dll.cpp injection.cpp prototype function injection.h injectprocess.cpp dllmain.cpp 5.2.2 static exescan.py obfuscation check hash matching call extraction call 6 6.1 kind benign partially malicious malicious file executing fully virtualized environment kvm checked efficiency discriminating power depict execution fig 6.1 iids dashboard fig 6.2 pdf scanner output malicious file fig 6.3 pdf scanner output non-malicious file fig 6.4 dynamic file fig 6.5 hook creation fig 6.6 file registry virtualization fig 6.7 static app.exe fig 6.8 static hash output fig 6.9 static import fig 6.10 static call extraction fig 6.11 static malware detected output 7 developed intelligent multi-stage malware detection combination technique hash matching innovative technique call lightweight dynamic leveraging reliability tested technique intelligent prediction ability machine learning based technique extracted positive method combination technique complement improve collective accuracy compared individual technique reduced overhead carrying fully isolated dynamic logical virtualization bit drawback advantage advantage running process detect environment running full virtualization prevents detection suspicious file drawback logical virtualization method malware detect hooking call capability limited compared full virtualization provided support file registry virtualization area promising avenue combination based detection technique call executable file static logical virtualization dynamic area require wide array possibility detection improve area provide complete reliable intelligent detection malwares 1 vmware vmware product http //www.vmware.com/products/ 2006 2 j. sugerman g. venkitachalam b. lim virtualizing i/o device vmware workstation hosted virtual machine monitor proceeding 2001 usenix annual conference 2001 3 microsoft microsoft virtual pc 2004 http //www.microsoft.com/windows/virtualpc/default.mpsx 4 a. whitaker m. shaw s. d. gribble denali lightweight virtual machine distributed networked proceeding usenix annual conference 2002 5 p. barham b. dragovic k. fraser s. hand t. harris a. ho r. neugebauer i. pratt a. warfield xen art virtualization proceeding 19th acm symposium operating principle acm press 2003 164177 6 j. dike user-mode port linux kernel proceeding 4th annual linux showcase conference 2001 7 p. kamp r. watson jail confining omnipotent root proceeding 2nd international sane conference 2000 8 h. potzl linux-vserver http //linux-vserver.org/linux-vserver-paper 2004 9 t. a. h. karp m. stiegler shatter-proofing window hpl-2005-87 hp laboratory palo alto 2005 10 m. corporation window server 2003 terminal service http //download.microsoft.com/download/2/8/1/281f4d94-ee89-4b21-9f9e- 9accef44a743/terminalserveroverview.doc 2005", "keywords": ["abdul sattar", "disk space", "dynamic file", "executable file", "execution environment", "file directory", "file malicious", "file registry", "file registry virtualization", "host machine", "logical sandbox", "logical virtualization", "machine learning", "malicious file", "malware detection", "pdf scanner", "registry virtualization", "root file", "root file directory", "suspicious file", "vaibhav lohani", "virtual machine", "virtual namespace", "vms root"], "libraries": [], "languages": ["basic", "small", "c++", "python"], "frameworks": [], "dbs": []}, "./reports/BE Project Report_18.pdf": {"title": "data visualization and report   generation framework for nvidia", "filename": "./reports/BE Project Report_18.pdf", "data": "visualization generation framework nvidia visualization generation framework nvidia shreyash tatia ram ramrakhya b120058629 b120058596 academic year 2017-18 guidance prof. d. d. londhe pict- technology- 2017-18 visualization generation framework nvidia visualization generation framework nvidia shreyash tatia ram ramrakhya b120058629 b120058596 bonafide prof. d. d. londhe earlier diploma prof. d. d. londhe examiner dr. b. a. sonkamble dr. p. t. pict- technology- 2017-18 visualization generation framework nvidia sponsorship letter pict- technology- 2017-18 visualization generation framework nvidia pict- technology- 2017-18 visualization generation framework nvidia sr. 4.1 4.2 4.3 4.4 4.5 4.6 4.7 5.1 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9 6.10 6.11 class use-case option collection collection processed collection iv gantt processing queue generation queue scheduler ui admin ui admin ui substring search admin ui download admin ui aggregation echarts admin ui aggregation c3js stacked bar pie 11 12 13 14 15 17 18 22 26 27 28 29 30 31 31 32 33 34 35 pict- technology- 2017-18 6.12 6.13 6.14 visualization generation framework nvidia area bar heat map 35 36 37 pict- technology- 2017-18 visualization generation framework nvidia sr. 7.1 7.2 7.3 7.3 unit integration black box framework comparison 40 41 42 43 pict- technology- 2017-18 visualization generation framework nvidia sponsorship industry ii iii title 1 2 3 4 5 6 1.1 1.2 2.1 2.2 3.1 3.2 3.3 3.4 3.5 3.5.1 3.5.2 4.1 4.2 4.3 4.4 4.5 4.6 5.1 5.2 6.1 6.1.1 1 1 2 7 3 3 5 7 7 8 8 8 8 9 review existing proposed specification definition concept class database schema manual split-up iv 23 stage 23 definition 23 10 11 12 13 14 15 19 22 22 22 pict- technology- 2017-18 visualization generation framework nvidia 7 6.1.2 6.1.3 6.1.4 6.1.5 6.1.6 6.2 6.2.1 6.2.2 8. 7.1 7.2 initiation planning 23 gathering 23 25 coding 25 integration 33 33 33 37 comparitive 39 evaluation 39 comparative evaluation 43 44 45 plagiarism review sheet 46 47 pict- technology- 2017-18 visualization generation framework nvidia visualization generation framework devops solution nvidia help manage performance display driver nvidia runtime bug create weekly/monthly/annual process closely powerful embedded visualization engine product framework developed graphic library d3js processing help rest apis implemented nodejs framework help keep watch bundle display driver find bug help graphic performance metric driver video streaming converted graphical representation visualize runtime conveniently apis flexible scalable proposed visualization library closed proprietary nvidia nvidias develop framework automate generation process pict- technology- 2017-18 visualization generation framework nvidia 1.1 1 visualisation generation framework charting generation integrated received mongodb database mysql database json pattern trend correlation undetected text-based exposed recognized easier visualization framework primary visualization democratize analytics data- driven insight worker framework help keep watch bundle display driver find bug help graphic performance metric driver video streaming converted graphical representation visualize runtime conveniently effective visualization help analyse reason evidence human brain process graph visualize amount complex easier poring spreadsheet visualization quick easy convey concept universal manner experiment scenario making slight adjustment picture worth word find understand include variable increased amount created internet expanding number sensor environment referred `` '' internet thing processing analysing communicating ethical analytical challenge visualization field science practitioner called scientist help address challenge dynamic variation easily visualized framework general basic visualisation exploration help find story telling explanation story audience visualisation account audience expectation pict- technology- 2017-18 1 visualization generation framework nvidia 1.2 currently nvidia manually operable charting api purpose graphical representation free cost well man increase manual generation library constraint offer limited functionality nvidia display driver attempt framework manually library manual operation eliminated render box accepts input parameter return output good choice lot going provided provide parameter customized customization extended charting capability good choice dont customizations good choice pict- technology- 2017-18 2 visualization generation framework nvidia 2 review 2.1 existing common visualization 1 fall 2d area temporal multidimensional hierarchical network category 2.1.1 2d area 2d area visualization geospatial meaning relate relative position thing earth surface 1. cartogram cartogram distorts geometry space map convey alternative variable population travel time main area distance cartograms 2. choropleth choropleth map area patterned shaded represent measurement statistical variable visited website country population density state 3. dot distribution map dot distribution dot density map dot symbol presence map relying visual scatter spatial pattern 2.1.2 temporal temporal visualization one-dimensional linear visualization differ start finish time item overlap 4. connected scatter plot connected scatter plot scatter plot plot display variable connects series pict- technology- 2017-18 3 visualization generation framework nvidia 5. polar area polar area traditional pie sector differ extend center circle size angle 6. time series time series point typically consisting successive measurement time interval number website visit period month 2.1.3 multidimensional multidimensional element dimension category common visualization 7. pie pie circle divided sector illustrate numerical proportion arc length angle sector proportional quantity represents 8. histogram histogram visualization rectangle height proportional count width equal bin size range small interval 9. scatter plot scatter plot display variable collection point 2.1.4 hierarchical hierarchical ordering group larger group encompass smaller group 10. dendrogram dendrogram tree illustrate arrangement cluster produced hierarchical clustering pict- technology- 2017-18 4 visualization generation framework nvidia 11. ring ring sunburst multilevel pie visualizes hierarchical concentric circle 12. tree tree tree represents hierarchical nature graph form visually represented top bottom left 2.1.5 network network visualization network 13. alluvial alluvial represents change network time 14. node-link node-link represents node dot link segment connected 2.2 proposed 2.2.1 fetching processing fetched making rest request server rest underlying architectural principle web client browser server interact complex client knowing server host key constraint server client agree medium web html api adheres principle rest doe require client api server provide client interact service nodejs best api service provider rest build ui logic presentation node combined pict- technology- 2017-18 5 visualization generation framework nvidia framework choice ember react nodejs serve rest apis node heavy lifting nodejs creating rest api fetching server processing generate json format 2.2.2 generating library d3js d3.js d3 data-driven document javascript library producing dynamic interactive visualization web browser implemented svg html5 cs standard d3 allows bind arbitrary document object dom apply data-driven transformation document example d3 generate html array number create interactive svg bar smooth transition interaction d3 monolithic framework seek provide conceivable d3 solves crux efficient manipulation document based avoids proprietary representation affords extraordinary flexibility exposing full capability web standard html svg cs minimal overhead d3 extremely fast supporting datasets dynamic behavior interaction animation d3s style allows code reuse diverse collection official community-developed pict- technology- 2017-18 6 visualization generation framework nvidia 3 specification 3.1 definition develop visualization framework making d3js rest apis generalize framework accept source mongo mysql json xml nvidia study existing business intelligence capability product developed migrate visualization framework 3.2 concept fetched making rest request server api adheres principle rest doe require client api server provide client interact service nodejs serve rest apis server heavy lifting nodejs creating rest api fetching server processing generate json format d3 allows bind arbitrary document object dom apply data-driven transformation document minimal overhead d3 extremely fast supporting datasets dynamic behavior interaction animation d3s style allows code reuse diverse collection official community- developed library proposed generate developed d3 pict- technology- 2017-18 7 visualization generation framework nvidia 3.3 proposed visualization library proprietary nvidia nvidias individual nvidia access visualization framework include existing rest framework deployed display driver display driver issue runtime bug reporting performance generalized nvidia 3.4 visualization fusion drawback free cost free capable generating pdf restriction includes dynamic variation supported nvidia aim generate framework customize template individual logins specific individual well filter based range 3.5 3.5.1 2 gb ram processor- pentium pict- technology- 2017-18 8 visualization generation framework nvidia 3.5.2 nodejs npm angular 4 rest api mongodb d3js git wkhtmltopdf visual code studio pict- technology- 2017-18 9 visualization generation framework nvidia 4 process collecting interpreting fact identifying decomposition component conducted purpose studying order identify problem-solving technique improves ensures component efficiently accomplish purpose process planning business replacing existing defining component satisfy specific planning understand thoroughly determine best order operate efficiently focus accomplish sad focus process pict- technology- 2017-18 10 visualization generation framework nvidia 4.1 architechture fig 4.1 proposed fetched rest api url processed nodejs analytics engine processed dynamic engine generate based charting library d3js c3js ui angular 5. fig 4.1 fetching rest api url processing nodejs analytics engine generating library d3js c3js google integrating nvidias requestor ui angular 5. pict- technology- 2017-18 11 visualization generation framework nvidia 4.2 class fig 4.2 class proposed class involved view generation template class inherited bar pie fig 4.2 class pict- technology- 2017-18 12 visualization generation framework nvidia 4.3 fig 4.3 proposed object interact achieve functionality fig 4.3 pict- technology- 2017-18 13 visualization generation framework nvidia 4.4 fig 4.4 proposed interaction actor involved allows visualize interaction actor fig 4.4 use-case pict- technology- 2017-18 14 visualization generation framework nvidia 4.5 database schema 4.5.1 option collection option collection store framework thing option width source text color background color creator fig 4.5 option collection pict- technology- 2017-18 15 visualization generation framework nvidia fig 4.5 option collection pict- technology- 2017-18 16 visualization generation framework nvidia 4.5.2 collection collection store scheduled consists crontime recipient isenabled pdf csv fig 4.6 collection pict- technology- 2017-18 17 visualization generation framework nvidia 4.5.3 processed collection processed collection combination option collection collection timestamp fig 4.7 processed collection fig 4.7 processed collection pict- technology- 2017-18 18 visualization generation framework nvidia fig 4.7 processed collection 4.6 manual 1. stacked bar width 33 50 100 chartoption 1 ydata 2 color 3 xlabel 4 ylabel array legend array color legend hex x-label y-label 5 printyvaluetype '' range '' `` absolute '' 6 showrangeaxis 7 trendline 8 bgcolor 9 textcolor 10 height '' leastsquare '' `` midpoint '' background color hex text color hex height integer pict- technology- 2017-18 19 visualization generation framework nvidia 2. pie width 33 50 100 chartoption 1 range 2 array 2 min max range array legend 3 textformat undefined actual percentage 3. width 33 50 100 chartoption 4 linelabeling 5 bgcolor 6 textcolor 7 height 8 color 1 2 range 3 4 area 5 xname 6 yname 7 bgcolor 8 textcolor 9 height 10 ygrid 11 xgrid 12 trendline background color hex text color hex height integer array color legend hex '' '' array 2 min max range array legend x-label y-label background color hex text color hex height integer grid y-axis grid x-axis '' leastsquare '' 13 hidefirstxlabel 14 color array color legend hex pict- technology- 2017-18 20 visualization generation framework nvidia 4. bar width 33 50 100 chartoption 1 2 range 3 4 area 5 xname 6 yname 7 bgcolor 8 textcolor 9 height 10 ygrid 11 xgrid 12 trendline '' bar '' array 2 min max range array legend x-label y-label background color hex text color hex height integer grid y-axis grid x-axis '' leastsquare '' 13 showbardata 5. heat map width 33 50 100 chartoption 1 xdata 2 ydata 3 bucket 4 color 5 bgcolor 6 textcolor 7 height x-label y-label number bucket size heatmap array color bucket hex background color hex text color hex height integer pict- technology- 2017-18 21 visualization generation framework nvidia 5 5.1 split-up charting library pie bar d3js charting bootstrap custom template generator based individual generator pdf converter wkhtmltopdf 5.2 iv fig 5.1 gantt pict- technology- 2017-18 22 visualization generation framework nvidia 6 6.1 stage 6.1.1 definition applying statistical knowledge creating graph dimensional representation generating visualization framework scheduling number cron job processing scheduled job fcfs manner queue automating complete scheduling job processing dynamic dimensional format visualization generating pdf finally mailing recipient angular5 nodejs d3js c3js mongodb git queue multi-dimensional array 6.1.2 initiation planning phase creation milestone 6.1.3 gathering phase existing visualisation charting library echarts fusion studied snippet current c3js echarts pict- technology- 2017-18 23 visualization generation framework nvidia column 'data1 30 200 100 400 150 250 'data2 50 20 10 40 15 25 format multi-line graph c3js 'data1 'line 11 11 15 13 12 13 10 'data1 'line 1 -2 2 5 3 2 0 format multi-line graph echarts format altered dimensional format convenient understand standardized pict- technology- 2017-18 24 visualization generation framework nvidia '' '' `` '' `` 10 mar '' `` 11 mar '' `` 12 mar '' `` '' 11 11 15 1 -2 2 `` '' `` data1 '' `` data2 '' 6.1.4 phase use-case class designed 6.1.5 coding programming phase started implementing developing database schema mongodb schema wa ready shifted developing server-side code scheduler processor generator pict- technology- 2017-18 25 visualization generation framework nvidia 6.1.5.1 scheduler scheduler node.js server named scheduler.js accepts scheduled job input executes job fixed interval time crontime job 6.1.5.2 processor processor node.js server named processor.js api endpoint receives server prescribed database queue process format processing fed generator processor fig 6.1 queuing processed multi-threaded queue thread count 8 achieve utilization parallelism fig 6.1 processing queue pict- technology- 2017-18 26 visualization generation framework nvidia 6.1.5.3 generator generator node.js server named generator.js collect processed queue start ui stored queue ui generated mapped pdf help wkhtmltopdf converter queue multi- threaded achieve parallelism utilisation parallelism count 8. fig 6.2 queue generating fig 6.2 generation queue pict- technology- 2017-18 27 visualization generation framework nvidia generation server-side scripting code moved ui 3 ui 6.1.5.4 scheduler ui scheduler ui responsible adding database enabling disabling scheduling editing existing fig 6.3 scheduker ui created angular5 fig 6.3 scheduler ui pict- technology- 2017-18 28 visualization generation framework nvidia 6.1.5.5 admin ui admin ui limited access authenticated authorised oauth2 authorisation capability viewing generated functionality admin ui includes substring searching viewing generated sorted time downloading generated printing generated fig 6.4 admin ui pict- technology- 2017-18 29 visualization generation framework nvidia fig 6.5 admin ui substring search pict- technology- 2017-18 30 visualization generation framework nvidia fig 6.6 admin ui download fig 6.7 admin ui aggregation echarts pict- technology- 2017-18 31 visualization generation framework nvidia fig 6.8 admin ui aggregation c3js 6.1.5.6 dashboard ui dashboard ui ui sample authenticated json web token pict- technology- 2017-18 32 visualization generation framework nvidia 6.1.6 integration phase integration database backend frontend performed white box unit integration black box stress boundary 6.2 6.2.1 6.2.1.1 stacked bar stacked bar graph stacked bar bar comparison category ability break compare bar represents segment bar represent category stacked bar good job featuring total providing hint total category divided bar vertical horizontal fig 6.9 stacked bar pict- technology- 2017-18 33 visualization generation framework nvidia 6.2.1.2 pie pie circle circular statistical graphic divided slice illustrate numerical proportion pie arc length slice consequently central angle area proportional quantity represents fig 6.10 pie 6.2.1.3 graph display series point called 'markers connected straight segment basic common field scatter plot measurement point ordered typically x-axis joined straight segment pict- technology- 2017-18 34 visualization generation framework nvidia fig 6.11 fig 6.12 area pict- technology- 2017-18 35 visualization generation framework nvidia 6.2.1.4 bar bar bar graph graph categorical rectangular bar height length proportional represent bar plotted vertically horizontally vertical bar called graph fig 6.13 bar pict- technology- 2017-18 36 visualization generation framework nvidia 6.2.1.5 heat map heat map heatmap graphical representation individual contained matrix represented color fig 6.14 heat map 6.2.1 6.2.1.1 angular5 angular commonly referred `` angular 5 '' typescript-based open-source front- web platform led angular google community individual corporation angular complete rewrite built angularjs 6.2.1.2 nodejs node.js open-source cross-platform javascript run-time environment executes javascript code server-side historically javascript wa client-side scripting script written javascript embedded webpage 's html client-side javascript engine 's web browser 6.2.1.2 d3js d3.js d3 data-driven document javascript library producing dynamic interactive visualization web browser implemented svg html5 cs standard pict- technology- 2017-18 37 visualization generation framework nvidia 6.2.1.3 wkhtmltopdf wkthmltopdf source lgplv3 command render html pdf image format qt webkit rendering engine entirely `` headless '' require display display service 6.2.1.4 npm npm package manager javascript programming language default package manager javascript runtime environment node.js pict- technology- 2017-18 38 visualization generation framework nvidia 7 comparative evaluation support nvidia generation previous wa paid version additional scheduling generation scheduling crontime charting library built d3js analytics visualization rest product fetch lot flexible dynamic scalable 7.1 phase development lifecycle sdlc focus investigation discovery phase verifying code programming customer listed provide independent view allow business appreciate understand technique include process executing program intent finding bug error defect verifying product fit 7.1.1 white box white box major performed i.e unit integration 7.1.1.1 unit programming unit method individual unit source code program associated control usage procedure operating procedure tested determine fit performed unit pict- technology- 2017-18 39 visualization generation framework nvidia description expected actual status tc_u1 scheduler check job pas scheduler executed expected job time scheduled time tc_u2 processor check fetched pas fetched properly ip expected api endpoint address parameter tc_u3 generator check pdf pdf generating empty graph fail generation graphical generated fetched processed representation incompatible processed version tc_u4 admin ui check admin ui pas admin view view download expected download print print generated pdf generated pdf tc_u5 scheduler check scheduler ui pas ui manager admin perform expected add delete update template existing 7.1 unit pict- technology- 2017-18 40 visualization generation framework nvidia 7.1.1.2 integration integration called integration abbreviated phase individual combined tested group occurs unit validation integration input unit tested group larger aggregate applies defined integration aggregate delivers output integrated ready performed integration description expected actual status tc_i1 scheduler check job pas scheduled job executes executed expected processor generates scheduled time fetching api fetched endpoint scheduled correctly time tc_i2 processor check processed pas processed processor passed expected generator passed generator generator generator generator generates generate pdf pdf tc_i3 scheduler ui check scheduler ui pas template perform expected scheduler deleted updated reflected scheduler tc_i4 admin ui check admin ui pas admin ui download print expected generator download pdf pdf calling generator fetched 7.2 integration pict- technology- 2017-18 41 visualization generation framework nvidia 7.1.2 black box black box method examines functionality peering working proposed black box wa performed check functionality individual component description expected actual status tc_b1 scheduler ui enables pas scheduled scheduled interval expected clicking enabled cron-time checkbox tc_b2 scheduler ui click edit editing pas button scheduled scheduled job expected job reflected ui well scheduled collection mongodb tc_b3 scheduler ui fill correct clicking add pas form adding button expected job scheduler prompt job well reflected database scheduler ui tc_b4 admin ui click based click pas view download viewed expected print icon downloaded printed tc_b5 admin ui search performs character pas based searching output expected substring entered search bar 7.3 black box pict- technology- 2017-18 42 visualization generation framework nvidia 7.2 comparative evaluation framework proposed framework visualization d3js c3js echarts rest api v1 rest api v2 paid royalty free cost le customization customization load time compared le load time proposed framework outdated feel trending feel latest latest angular5 7.4 framework comparison nodejs pict- technology- 2017-18 43 visualization generation framework nvidia 8 framework capable visualizing analyze trend capable showing dynamic change visualization framework capable generating daily/weekly automatically mailing manager review create custom template generate embedding custom application/context generation bug reporting performance visualization library pict- technology- 2017-18 44 visualization generation framework nvidia 1. sungchul lee ju-yeon jo yoohwan kim performance web-based visualization man cybernetics smc 2014 international conference 2. javascript web mobile online http //www.fusioncharts.com/ 3. hu wenhui huang yu liu xueyang study rest api supporting web service integration security cloud bigdatasecurity international conference performance smart computing hpsc international conference intelligent security 2017 3rd international conference 4. driven document online http //d3js.org/ 5. lianjun chen hongbo zhou dynamic interactive visualization based d3 audio language image processing icalip 2016 international conference 6. jonathan harper maneesh agrawala converting basic d3 reusable style template transaction visualization graphic 2017. pict- technology- 2017-18 45 visualization generation framework nvidia plagiarism pict- technology- 2017-18 46", "keywords": ["admin ui", "array color", "background color", "background color hex", "bgcolor textcolor", "collection collection", "color hex", "color hex height", "color hex text", "color legend", "display driver", "djs cjs", "framework nvidia", "free cost", "generation framework", "generation framework nvidia", "good choice", "graphical representation", "heat map", "height integer", "hex height", "hex height integer", "hex text", "hex text color", "international conference", "javascript runtime", "json format", "library djs", "nodejs server", "nvidia visualization", "nvidia visualization generation", "option collection", "pdf pdf", "pict technology", "pict technology visualization", "processed collection", "prof londhe", "range array", "rest api", "rest apis", "scatter plot", "tcb scheduler", "technology visualization", "technology visualization generation", "text color", "text color hex", "unit integration", "visualization framework", "visualization generation", "visualization generation framework", "visualization library", "xlabel ylabel"], "libraries": [], "languages": ["html5", "html", "cs", "xml", "javascript", "basic", "small", "nodejs"], "frameworks": ["react", "angularjs", "angular"], "dbs": ["mysql", "mongodb"]}, "./reports/BE Project Report_19.pdf": {"title": "sponsorship valuation by trademark   matching in sports video.", "filename": "./reports/BE Project Report_19.pdf", "data": "sponsorship valuation trademark matching sport video manthan agrawal b120058503 avadh agrawal b120058502 ujjwal bhangale b120058516 krushna darade b120058522 guidance dr. s.c. dharmadhikari sr 27 pune-satara road bharti vidyapeeth college college dhankwadi maharashtra 411043 2017-2018 manthan agrawal b120058503 avadh agrawal b120058502 ujjwal bhangale b120058516 krushna darade b120058522 bonafide dr. s. c. dharmadhikari fulfilment earlier diploma dr. s. c. dharmadhikari dr. b. a. sonkamble examiner dr.prahlad t. sponsorship valuation trademark matching sport video acknowledgement opportunity express heart-felt gratitude dr. prahlad providing infrastructure complete express deepest gratitude dr. sonkamble b. a. express deep sincere gratitude dr. s. c. dharmadhikari unflagging support continuous encouragement guidance persistent help mentor mr. mayank thakur guidance constant warm faculty helped view encouraging directly indirectly helped completion seminar 2017-18 mr. manthan agrawal mr. avadh agrawal mr. ujjwal bhangale mr. krushna darade ii sponsorship valuation trademark matching sport video faster r-cnn fig 3.1 4.1 4.2 class 4.3 use-case 4.4 5.1 split-up 5.2 spilt resnet-50 5.3 gantt 6.1 resnet 50 identity block code 6.2 resnet 50 convolutional block 6.3 resnet 50 6.4 classifier 6.5 rpn 6.6 output resnet 50 6.7 input image array 6.8 augmentation 6.9 batch normalization 6.10 anchor box generation code 6.11 rpn calculator evaluator 2017-18 iii sponsorship valuation trademark matching sport video 6.12 training code snippet 6.13 video image frame conversion code script 6.14 image frame video conversion code script 6.15 code 6.16 code 7.1 7.2 sign-in 7.4 video 7.5 7.6 image frame generated video 7.7 coca-cola brand detection 7.8 coca-cola brand logo detection sport video 7.9 terminal screenshot 2017-18 iv sponsorship valuation trademark matching sport video sponsorship acknowledgement 1 2 3 1.1 1.2 2.1 2.2 4 5 6 7 3.1 3.2 3.3 3.4 3.5 4.1 4.2 4.3 5.1 5.2 6.1 7.1 title review existing proposed specification definition concept dataflow splitup 2.0 code snapshot evaluation snapshot ii iii iv 1 3 3 4 6 9 11 14 14 14 16 17 17 21 21 23 25 27 27 28 30 31 41 41 2017-18 sponsorship valuation trademark matching sport video 7.2 strategy 45 8 8.1 8.2 title base paper 48 48 49 51 52 53 2017-18 vi sponsorship valuation trademark matching sport video brand recognition challenging topic localization recognition advertisement marketing move digital medium sponsorship space catch approach based fast region-based convolutional network frcn resnet-50 cnn pre-trained ilsvrc imagenet dataset novelty lie transfer learning leverage powerful convolutional neural network trained large-scale datasets repurpose context graphic logo detection experimental customized dataset promising performance developed respect noise transformation robust scoring logo branding sport venue game calculate sponsorship worth keywords machine learning neural network vision advertisement 2017-18 1 sponsorship valuation trademark matching sport video 1 2017-18 2 sponsorship valuation trademark matching sport video 1. 1.1 year sponsor spend euro sport marketing portion spent placement billboard banner physical advertising medium sport sponsor calculate nielsen manual process small percentage footage watched month automating process adding comprehensive valuation real-time cost sponsorship extremely sponsor require verification level visibility trademark order evaluate return investment sponsorship spending 60 billion market challenge inefficient market sponsor satisfied valuation challenge convincing potential advertiser return investment detecting recognizing trademark logo generic object recognition studied decade actively investigated aim logo branding sport venue game calculate sponsorship worth vision developed deep learning automated logo detection visibility raw detection rich statistic enables measure number exposure time logo remain visible size location well measure parameter logo appearing alongside 2017-18 3 sponsorship valuation trademark matching sport video logo detection solution variety scenario brand visibility sport broadcast brand presence social medium 1.2 brand promoted sponsorship campaign sport cultural event event attract number viewer directly medium allowing brand favourable positioning sponsorship contract steep price brand owner naturally interested finding effectively outlay working difficult ass quantitatively great brand exposure current approach computing statistic based manually annotating broadcast material tedious expensive order address developed automated logo detection visibility providing raw detection rich statistic 2017-18 4 sponsorship valuation trademark matching sport video 2 2017-18 5 sponsorship valuation trademark matching sport video 2. review 2.1 automatic graphic logo detection fast region-based convolutional network 6 approach based fast region-based convolutional network frcn proposed ross girshick state-of-the-art performance generic object recognition pascal visual object class challenge cnn pretrained ilsvrc imagenet dataset selective search window proposal pre-processing stage augmentation enhance logo recognition rate novelty lie transfer learning leverage powerful convolutional neural network trained largescale datasets repurpose context graphic logo detection benefit framework allows multiple detection graphic logo region object 2.2 faster r-cnn real-time objectdetection region proposal network 5 paper introduce region proposal network rpn share full-image convolutional detection network enabling cost-free region proposal rpn fully convolutional network simultaneously predicts object bound objectness score position rpn trained end-to-end generate high-quality region proposal fast r-cnn detection paper merge rpn fast r-cnn single network sharing convolutional featuresusing popular terminology neural network attention mechanism rpn component unified network deep vgg-16 detection frame rate 5fps including step gpu achieving state-of-the-art object detection accuracy pascal voc 2007 2012 coco datasets 300 proposal image 2017-18 6 sponsorship valuation trademark matching sport video 2.3 real-time billboard trademark detection recognition sport 2 nowadays automatic video indexing keyword based video search tv commercial developed detecting recognizing billboard trademark propose hierarchical solution real-time billboard trademark recognition sport video billboard frame detected level fuzzy decision tree easily-computing employed accelerate process second level color regional sift combined time describe appearance trademark shared nearest neighbour snn clustering 2 distance utilized traditional k-means clustering construct sift vocabulary latent semantic lsa based sift vocabulary matching performed template trademark candidate region billboard frame preliminary experiment demonstrate effectiveness hierarchical solution real time constraint met solution 2.4 faster r-cnn region proposal refinement 14 state-of-the-art object detection method major group region proposal based method faster r-cnn regression based method yolo focus improving region proposal faster r-cnn introducing iterative region proposal refinement lstm region proposal refinement iterative region proposal refinement iteratively refine region proposal based previous output lstm region proposal refinement lstm layer carry hidden iteration trained tested pascal voc 2007 dataset improved average precision map 0.6702 0.6774. experiment method iteratively improve detection multiple refinement 2017-18 7 sponsorship valuation trademark matching sport video 2.5 trademark matching retrieval sport video database 21 paper describe detection retrieval trademark appearing sport video propose compact representation trademark video frame based sift point representation robustly detect localize retrieve trademark appear variety sport video classification trademark performed matching sift descriptor trademark instance sift detected frame video localization performed robust clustering matched point video frame experimental provided precision recall proposed technique efficient effectively detects classifies trademark 2.6 logo detection based spatial-spectral saliency spatial context 13 logo detection brand advertising surveillance central issue fast localization accurate matching based key trait common logo paper two-stage detection scheme based spatial spectral saliency ss spatial context psc ss speed logo location avoid cluttered background psc filter matching spatial consistency local invariant point integration ss psc faster localization increased accuracy experiment dataset 10 000 web image popular logo presented indicate method applicable precise logo detection scenario 2017-18 8 sponsorship valuation trademark matching sport video 2.1 existing hog stand histogram oriented gradient based order image gradient image gradient pooled overlapping orientation bin dense manner hog 1. based order image gradient pooled orientation bin 2. dense evaluated image 3. hand engineered learning hog sift stand scale invariant transform hog sift 128 dimensional vector summarizes/describes 1616 window patch sift dividing 1616 window 44 bin bin 8 orientation bin channel dimensionality sift descriptor equal 448 128 sift 1. based order gradient 2. course evaluated scale invariant point difference gaussian dog key point detector dense variant dense-sift 3. hand engineered doe learn representation hard coded 2017-18 9 sponsorship valuation trademark matching sport video cnn stand convolutional neural network hierarchical deep learning based repeated convolutional operation repeatedly filter signal stage filter trainable learn adapt hand learning cnns 1. trainable detector highly adaptive achieve accuracy level image recognition trained end-to-end 2. supervised deep learning motivated primary visual cortex alternating layer convolution pooling layer 3. learn low-level sift hog training example amazing minimize cnns sift hog low-level n't hierarchical layer-wise representation learning cnn hierarchical deep learning representation cnn achieve comparable performance sift w.r.t accuracy outperform hog sift matching limited small database cnn hog moderate database easily extended scale detection cnn hog faster extract retrieval sift sift outperforms w.r.t accuracy 2017-18 10 sponsorship valuation trademark matching sport video 2.2 proposed convolutional network driving advance detection conv-nets improving whole-image classification making progress local structured output include advance bounding box object detection key point prediction local correspondence advance object detection driven success region proposal method region-based convolutional neural network rcnns region-based cnns computationally expensive originally cost drastically reduced sharing convolution proposal latest incarnation fast r-cnn achieves real-time rate deep network ignoring time spent region proposal observation convolutional map region-based detector fast rcnn generating region proposal top convolutional construct rpn adding additional convolutional layer simultaneously regress region bound objectness score location regular grid rpn kind fully convolutional network fcn trained end-to generating detection proposal rpns designed efficiently predict region proposal wide range scale aspect ratio region proposal based representative region proposal based mode faster r-cnn originates r-cnn fast r-cnn 2017-18 11 sponsorship valuation trademark matching sport video r-cnn region-based convolutional neural network r-cnn wa proposed long emergence cnn greatly improved detection performance term average precision map compared deep cnns consists three generates region proposal selective search second extraction cnn proposed region third classification svms r-cnn innovative effective defect ad hoc training expensive training space time worst long detection time fast r-cnn fast r-cnn build r-cnn improves training speed increasing detection accuracy speed-up sharing cnn computation region proposal fast r-cnn image cnn create convolution map region interest roi pooling layer extract vector region proposal vector fed fully-connected layer finally produce softmax class bounding box detected object fast r-cnn reduces training time region proposal traditional method cost long time pre-processing faster r-cnn solve bottleneck region proposal fast r-cnn faster r-cnn proposed region proposal neural network composed region proposal network rpn proposes region second fast r-cnn detector inspect rpn small network slide convolution map multiple anchor sliding window location rpn output bounding box region proposal predicted class fast r-cnn doe four-step alternating training adopted share 2017-18 12 sponsorship valuation trademark matching sport video 3 2017-18 13 sponsorship valuation trademark matching sport video 3. specificationand 3.1 definition brand visibility measuring roi marketing campaign business challenge ad-driven industry brand frequently function cluttered advertising space including outdoors website limited exposition time describe deep learning solution automated logo detection visibility analytics 3.2 concept input image convolution network output convolutional map convolutional layer sliding window spatially map size sliding window nn 33 sliding window 9 anchor generated centre 3 aspect ratio 3 scale note coordinate computed respect original image anchor computed indicated anchor overlap ground-truth bounding box 1 iou 0.7 -1 iou 0.3 0 iou intersection union defined iou anchor gtbox anchor gtbox 2017-18 14 sponsorship valuation trademark matching sport video finally 33 spatial extracted convolution map fed region proposal network output rpn determines predicted bounding- box output classification sub-network indicating predicted box object background faster r-cnn object detection network depend region proposal hypothesize object location advance fast r-cnn reduced running time detection network exposing region proposal computation bottleneck introduce region proposal network rpn share full-image convolutional detection network enabling cost-free region proposal rpn fully convolutional network simultaneously predicts object bound objectness score position rpn trained end-to-end generate high-quality region proposal fast r-cnn detection merge rpn fast r-cnn single network sharing convolutional featuresusing popular terminology neural network attention mechanism rpn component unified network deep resnet-50 detection achieving state-of-the-art object detection accuracy fig.3.1 faster r-cnn 5 2017-18 15 sponsorship valuation trademark matching sport video training network transfer learning approach transfer learning concept deep learning transfer learning retrain trained input dataset reduce size training training time training utilizes weight trained start learning weight learn classify effective technique resnet-50 trained imagenet dataset base faster rcnn trained flicker-27 flicker-27 dataset wa training object detection 3.3 sponsorship spending 60 billion market challenge inefficient market sponsor satisfied valuation challenge convincing potential advertiser return investment sport sponsor calculate net worth investment nielsen manual process small percentage footage watched month automating process adding comprehensive valuation real-time focusing providing standalone platform video stream input provide real time output valuation company interested calculating advertisement effectiveness stream watched people provide driven company well event organiser actual scenario intuitive based speed process company action 2017-18 16 sponsorship valuation trademark matching sport video 3.4 based development convolutional neural network process video stream image fast responsive manner modular detection allows specific individual client customization solution series statistic ranking visualization statistic calculated brand solution allows easily compare statistic brand including brand exposure size time logo position screen bar recognize evaluating sponsorship brand activation calculating roi video sport event allows logo 3.5 3.2.1 datasets experiment purpose flickr logo 27 dataset publicly flickr logo 27 dataset annotated logo dataset downloaded flickr dataset le amount image class i.e 30 image class le training convolutional neural net shifted customised dataset currently coca cola logo 700 image brand annotated image augmented increase dataset size 2500 image 2017-18 17 sponsorship valuation trademark matching sport video pre-processing image augmentor flicker-27 small dataset 810 image augmentation training augmentation image augmentor library python 9 cropped logo image performed transformation horizontal flip vertical flip adding noise rotation blurring 5000 example mere 810 image 7 image annotator logo object detection image annotation i.e bounding box logo image suitable annotate customized dataset github repository simple image annotator 10 repository easy allow annotate 100 image short span time 3.2.2 1. web allow demo video 2. annotated video 3. provide video number second advertisement appears average area screen covered advertisement 4. site email mobile number 5. setting editing profile area 6. login/logout time 2017-18 18 sponsorship valuation trademark matching sport video 3.2.3 1. site operating web proper resizing 2. site 24 hour 3. easy intuitive 4. site support browser exist market 3.5.1 kera 2 tensorflow opencv 3.4 cuda cudnn sdk development python 2.7 front-end html 5 cs 3 web framework bootstrap ide pycharm jupyter notebook annotate image neural network deep learning framework python library numpy scipy web browser 3.5.2 16gb ram graphic card quadro k620m ubuntu 16.04 2017-18 19 sponsorship valuation trademark matching sport video 128gb ssd processor intel xenon 4 2017-18 20 sponsorship valuation trademark matching sport video 4.1 4. faster r-cnn network region proposal network rpn generating region proposal network proposal detect object main fast r-cnn selective search generate region proposal time cost generating region proposal smaller rpn selective search rpn share computation object detection network rpn rank region box called anchor proposes object region proposal network output region proposal network rpn bunch boxes/proposals examined classifier regressor eventually check occurrence object precise rpn predicts possibility anchor background foreground refine anchor 2017-18 21 sponsorship valuation trademark matching sport video fig 4.1 10 2017-18 22 sponsorship valuation trademark matching sport video 4.1. 4.1.1. class fig 4.2 class location sends request upload video accept video request.the convert video frame pas frame annotate image based apperance logo video statistic generated 4.1.2. use-case 2017-18 23 sponsorship valuation trademark matching sport video fig 4.3 use-case tenant service provided tenant website upload video his/her annotate video provide detailed trademark appearance 4.2. dataflow 2017-18 24 sponsorship valuation trademark matching sport video fig 4.4 dataflow assignment dataflow basic input i.e input video video uploaded converted frame logo detection annotate frame customized resnet-50 frame converted single video based appearance logo video detailed generated 25 2017-18 sponsorship valuation trademark matching sport video 5 2017-18 26 sponsorship valuation trademark matching sport video 5. 5.1. split-up decided break step logo detection convolutional neural net analytics step summary statistic computed fig 5.1. spilt fig 5.2. spilt resnet-50 2017-18 27 sponsorship valuation trademark matching sport video 5.2. 2.0 fig 5.3 gantt 28 2017-18 sponsorship valuation trademark matching sport video 6 2017-18 29 sponsorship valuation trademark matching sport video 6. rpn trained end-to-end backpropagation follow image centric sampling strategy train network mini-batch arises single image positive negative example anchor optimize loss function anchor bias negative sample dominate randomly sample 256 anchor image compute loss function mini-batch sampled positive negative anchor ratio 1 1. fewer 128 positive sample image pad mini-batch negative randomly initialize layer drawing weight zero-mean gaussian distribution standard deviation 0.01. layer i.e shared convolutional layer initialized pre-training imagenet classification standard practice tune 15 layer resnet-50 net train region proposal object detection network image single scale re-scale image shorter side 600 pixel multi- scale extraction image pyramid improve accuracy doe exhibit good speed-accuracy trade-off re-scaled image total stride resnet-50 convolutional layer 16 pixel stride good accuracy improved smaller stride anchor 3 scale box area 128*128 256*256 512*512 pixel 3 aspect ratio 1 1 1 2 2 1. hyper-parameters carefully chosen dataset provide ablation experiment solution doe image pyramid filter pyramid predict region multiple scale saving considerable running time method capability method wide range scale aspect ratio note allows prediction larger underlying receptive field .such prediction impossibleone roughly infer extent object middle object visible anchor box cross image boundary handled care training ignore cross-boundary anchor contribute loss typical 1000*600 image roughly 2017-18 30 sponsorship valuation trademark matching sport video 20000 anchor total cross-boundary anchor ignored 6000 anchor image training boundary-crossing outlier ignored training introduce difficult correct error term training doe converge apply fully convolutional rpn entire image generate cross boundary proposal box clip image boundary rpn proposal highly overlap reduce redundancy adopt non-maximum suppression proposal region based class score iou threshold nm 0.7 leaf 200 proposal region image nm doe harm ultimate detection accuracy reduces number proposal nm proposal region detection train fast r-cnn 200 rpn proposal evaluate number proposal test-time 6.1 code snapshot 6.1 sample code identity block resnet-50 fig 6.1. resnet 50 identity block code 6.2 sample code convolutional block resnet-50 2017-18 31 sponsorship valuation trademark matching sport video fig 6.2. resnet 50 convolutional block 6.3 basic architectural layout 50 layer resnet-50 fig 6.3. resnet 50 6.4 function classification layer resnet-50 2017-18 32 sponsorship valuation trademark matching sport video fig 6.4. classifier 6.5 integrated rpn layer convolutional block resnet-50 fig 6.5. rpn 6.6 final output extraction layer resnet-50 fig 6.6. output resnet 50 2017-18 33 sponsorship valuation trademark matching sport video 6.7 collection code snippet extraction array fig 6.7. input image array 6.8 code snippet image augmentation horizontal flip vertical flip rotation image training increase size dataset extraction fig 6.8. augmentation 2017-18 34 sponsorship valuation trademark matching sport video 6.9 normalization operation performed training dataset fig 6.9. batch normalization 2017-18 35 sponsorship valuation trademark matching sport video 6.10 code generating anchor box image fig 6.10. anchor box generation code 6.11 code rpn calculation depending overlapping generated anchor box ground truth fig 6.11. rpn calculator evaluator 2017-18 36 sponsorship valuation trademark matching sport video 6.12 code snippet final construction training image dataset fig 6.12. training code snippet 6.13 function convert video image frame fig 6.13. video image frame conversion code script 2017-18 37 sponsorship valuation trademark matching sport video 6.14 function convert image frame video fig 6.14. image frame video conversion code script 6.15 code snippet video fig 6.15. code 2017-18 38 sponsorship valuation trademark matching sport video 6.16 code snippet function performed detected logo video fig 6.16. code 2017-18 39 sponsorship valuation trademark matching sport video 7 2017-18 40 sponsorship valuation trademark matching sport video 7. evaluation 7.1. snapshot image fig 7.1 image sign-in 2017-18 41 sponsorship valuation trademark matching sport video fig 7.2 sign-in image video uploaded fig 7.4 video logo detection 2017-18 42 sponsorship valuation trademark matching sport video fig 7.5 image generated image video fig 7.6. image frame generated video image output frame coca-cola logo detected 2017-18 43 sponsorship valuation trademark matching sport video fig 7.7 coca-cola brand detection image output frame coca-cola logo detected fig 7.8 coca-cola brand logo detection sport video frame terminal snapshot frame frame output video 2017-18 44 sponsorship valuation trademark matching sport video fig 7.9 terminal screenshot 7.2. strategy gathered dataset 2500 image contained storefront logo located sport video limited logo well-known brand i.e adidas fly-emirates visa hyundai coca-cola bmw 2500 image selected 1000 training manually augmented logo wa visible 1000 image represented ideal logo i.e believed encompass wide range illumination viewpoint blurry fed 1000 training image representation phase implemented python making tensorflow kera popular source library general vision extraction 2017-18 45 sponsorship valuation trademark matching sport video challenge deep learning emerging field straightforward box solution aimed specialist researcher installing actual provided additional challenge implementing gpu acceleration convnet requires toolbox installed cuda parallel computing platform developed nvidia cuda supplemented cudnn cuda deep neural network library convnet requires gpu compute capability measurement nvidia ranking graphic cuda greater 2.0 18 geforce 840m compute capability 5.0 19 compute convolutional object detection pipeline gpu wa difficult predict additional setting gpu acceleration runtime evaluation wa thesis chose perform computation cpu working ultimately cnn wa computationally intensive experiment time- consuming wa train minor challenge wa converting image bounding box datatypes format instance wa scale image input size resnet-50 network individually sort conversion trivial surprisingly amount time manual manual includes manually i.e automated script tester role end-user identify unexpected behaviour bug stage manual unit integration acceptance automation 2017-18 46 sponsorship valuation trademark matching sport video automation tester writes script product process involves automation manual process automation re-run scenario performed manually repeatedly manual method black-box technique knowledge interior working called black-box tester oblivious doe access source code white-box white-box detailed investigation logic code white-box called glass open-box order perform white-box tester working code grey-box mixture white black box black box function tested input unit unit unit field 2017-18 47 sponsorship valuation trademark matching sport video 8 2017-18 48 sponsorship valuation trademark matching sport video 8. 8.1. logo recognition key marketing analytics digital advertising augmented reality traditional approach logo recognition involve key point-based detector descriptor cnns pretrained solution employ cnn trained logo classification perfectly localized experiment flickrlogos-32 flicker-27 customized dataset experiment convolutional method practice created working tensorflow faster r-cnn learned challenging implementing deep learning collecting training performing training publicly benchmark datasets serve starting point practical training time shortened pretrained network final doe object class benchmark visual universal benefit detector trained optimal bottom-layers convolutional network human eye receptive field visual sense initialize layer pretrained network learned easy out-of-the-box solution effectively implementing convolutional network current kera require specialist skill creating working difficult.we trained general image detect object specific logo detection demonstrating adaptability method faster r-cnn detected object annotator original marked 2017-18 49 sponsorship valuation trademark matching sport video 8.2. easily improved improving efficiency neural network better policy neural net improve kind generates gradient policy improved development handling scalability unavailability trained vast help recommendation currently limit logo better neural network pre trained logo detection extremely helpful determines medium percentage factor time logo wa screen area covered logo cover factor clarity prominence visibility placement share voice determine brand exposure 50 2017-18 sponsorship valuation trademark matching sport video 2017-18 51 sponsorship valuation trademark matching sport video 1 wei-lwun lu jo-anne ting james j. kevin p. murphy learning track identify player frombroadcast sport video transaction pattern machine intelligence 2 jiang bu song-yang lao liang bai real-time billboard trademark detection recognition sport video proc spie 8783 87831m-2 2016 3 lamberto ballan marco bettino arjun jain automatic detection sport videohttp //www.micc.unifi.it/vim recognition trademark advertising 4 watve s. sural soccer video processing detection advertisement billboard pattern recognition letter 2 97 994-1006 2008 5 shaoqing ren kaiming ross girshick jian sun faster r-cnn real-time object detection region proposal network 6 r. girshick fast r-cnn international conference vision iccv 2015 7 k. simonyan a. zisserman deep convolutional network large-scale image recognition international conference learning representation iclr 2015 8 m. everingham l. van gool c. k. i. williams j. winn a. zisserman pascal visual object class challenge 2007 voc2007 2007 9 o. russakovsky j. deng h. su j. krause s. satheesh s. z. huang a. karpathy a. khosla m. bernstein a. c. berg l. fei-fei imagenet scale visual recognition challenge international journal vision ijcv 2015 10 http //medium.com/ smallfishbigsea/faster-r-cnn-explained-864d4fb7e3f8 11 jonathan long evan shelhamer trevor darrellfully convolutional network semantic segmentation cvpr 2015 12 iandola shen gao keutzer deeplogo deeplogo hitting logo recognition deep neural network hammeraspire laboratory unviersity california berkeley usa 13 ross girshick fast r-cnn 2015 international conference vision 14 peng yuan yangxin zhong yang yuan faster r-cnn region proposal refinement stanford cv laboratory 15 david g. lowe object recognition local scale-invariant science british columbia 2017-18 52 sponsorship valuation trademark matching sport video 16 hossein pourghassem hierarchical logo detection recognition two-stage segmentation multiple classifier 2012 fourth international conference computational intelligence network 17 jeff donahue yangqing jia oriol vinyals judy hoffman ning zhang eric tzeng trevor darrell decaf deep convolutional activation generic visual recognition 6 oct 2013 18 j. ba v. mnih k. kavukcuoglu multiple object recognition visual attention corr abs/1412.7755 2014 19 w. liu d. anguelov d. erhan c. szegedy s. reed c.y fu a. c. berg ssd single shot multibox detector.in european conference vision 2137.springer 2016 20 s. ren k. r. girshick j. sun faster r-cnn real-time object detection region proposal network advance neural processing 9199 2015 21 andrew d. bagdanov lamberto ballan marco bertini alberto del bimbo trademark matching retrieval sport video database 2017-18 53 sponsorship valuation trademark matching sport video 2017-18 54 faster r-cnn region proposal renement peng yuan yangxin zhong electrical science stanford pengy stanford.edu stanford yangxin stanford.edu yang yuan science stanford yyuan16 stanford.edu state-of-the-art object detection method ma- jor group region proposal based method faster r- cnn 11 regression based method yolo 10 focus improving region proposal faster r-cnn introducing iterative region proposal renement lstm region proposal renement iter- ative region proposal renement iteratively rene re- gion proposal based previous output lstm re- gion proposal renement lstm layer carry hidden differ- ent iteration trained tested pas- cal voc 2007 dataset improved average preci- sion map 0.6702 0.6774. experiment method iteratively improve detection multiple renements 1. object detection vision aim detect instance semantic object class dig- ital image video image object detection detects object locate play role face detection self-driving car video surveillance year deep convolutional neural network cnn bring signicant improvement object detection traditional method 6 12 cnn based object de- tection divided major category region proposal based r-cnn 4 fast r- cnn 3 faster r-cnn 11 regression based al- gorithm yolo 10 ssd 7 investigate region proposal based detection rene region proposal multiple iteration 1 specically improve performance faster r-cnn 11 inspired renenet 9 lstm 5 propose method better region proposal multiple- iteration renement tested method pascal voc 2007 dataset 2 2. 2.1. region proposal based representative region proposal based mode faster r-cnn 11 originates r-cnn 4 fast r-cnn 3 r-cnn region-based convolutional neural network r-cnn wa proposed long emergence cnn greatly improved detection performance term average precision map compared mod- el deep cnns 4 consists three rst generates region proposal se- lective search 14 second extraction cnn proposed region third svms r-cnn innovative effective defect ad hoc training expensive training space time worst long detection time 3 11 fast r-cnn fast r-cnn build r-cnn improves training speed increasing detection accuracy 3 speed-up shar- ing cnn computation region proposal fast r-cnn image cnn create convolu- tion map rst region interest roi pooling layer extract vector region pro- posal 3 vector fed fully-connected layer nally produce softmax class prob- ability bounding box detected ob- jects fast r-cnn signicantly reduces training time region proposal traditional method 3 cost long time pre-processing faster r-cnn solve bottleneck region proposal fast r-cnn faster r-cnn pro- posed region proposal neural network in- stead 11 composed rst mod- ule region proposal network rpn proposes region second fast r-cnn detector in- spect rpn small network slide con- volution map multiple anchor sliding- window location rpn output bounding box re- gion proposal predicted class fast r-cnn doe four-step alternating training adopted share 11 2.2. regression based yolo ssd yolo reframe detection regression single shot multibox detector ssd re- gion proposal involved 10 7 based pre-dened grid cnn simultaneously predicts bounding box class condence making extremely fast compared method based region proposal 10 7 2.3. iterative renement reported renenet 9 iterative renement proposed region signicantly improve map detection renenet based zf net 16 achieved performance faster r-cnn running ten time faster inspired paper pro- pose iterative renement based fast r-cnn adding lstm 5 achieved improvement perfor- mance object detecting 3. method 3.1. faster r-cnn state-of-the-art object detection faster r-cnn 11 faster r-cnn 1. image rst employ pre- trained deep convolutional neural network vgg 13 extract map re- gion proposal network rpn consists con- volutional layer detect region object map image network em- ploy roi pooling layer 3 crop resize fea- ture map region proposal map region ner bounding box regression three fully con- nected layer issue faster r-cnn region proposal output rpn accurate 1. faster r-cnn gure original paper 11 rpn hard coded anchor xed scale aspect guess potential region al- rpn bounding box regression aim general box kind ob- jects class specic knowledge box accurate argue error nal bounding box regression partly caused error proposed region suppose ner region proposal accuracy nal bounding box regression improved 3.2. iterative region proposal renement nature better region proposal regressed bounding box designed rene rough region output rpn class specic knowledge encoded network regressed bounding box output faster r-cnn network region proposal ner bounding box start round bounding box regression re- gressed bounding box previous round region pro- posals round process keep going iteration iterative rene re- gion proposal better iteration faster r-cnn iterative region pro- posal renement 2. rst iteration exactly faster r-cnn extract map image vgg pas rpn region pro- posals employ roi pooling layer crop resize map proposal three-layer fully 2 connected network nal class score bound- ing box regression class rst iteration proposed region se- lect regressed bounding box maximum class score region proposal second iteration rest second iteration rst iteration roi pooling layer crop resize map proposal classify regress bounding box map note input roi pooling layer reuse map rst iteration recalculation reuse parameter three-layer fully connected network iteration second iteration repeat process third iteration 2 demonstration iteration number 3. iterative renement represented equation map extraction initial rpn region proposal gg image rp1 rp suppose iteration number iteration represented =1 2 ... ri roip ooling rpi scoresi boxesi 3 ri rpi+1 boxesi arg maxj 0 ... scoresij lossi losscrossentropy scoresi ci ci cid 54 bg losssmoothl1 boxesi bi 3 denotes three-layer fully connected net- denotes number class ci denotes class label proposed region rpi bi denotes ground truth bounding box object region ci cid 54 bg 1 region background object other- wise ci cid 54 bg 0 weight parameter balance loss bounding box regression loss training softmax- cross entropy loss bounding box regression smooth l1 norm loss 3 lossi iteration nal loss sum iteration loss rpn nal loss time score bounding box iteration nal output lossf inal cid 88 i=1 lossi output scorest boxest 2. faster r-cnn iterative region pro- posal renement 3. faster r-cnn lstm region pro- posal renement note equation region proposal rpn yield region proposal be- ginning thing proposal average lossf inal proposal nal loss 3.3. lstm region proposal renement issue iterative renement gradi- ent loss backpropagated itera- tion earlier iteration error classica- tion bounding box regression iteration caused error earlier iteration hope earlier error corrected gradient backpropagation iterative renement roi layer backpropagate gradient re- gion proposal coordinate roi layer coordinate crop map crop operation differentiable respect coordinate 2 gradient loss iterative propagated downward yellow arrow 3 propagated left green arrow inspired reccurrent neural network rnn pas time step propagate gradient backward previous time step propose lstm region proposal renement lstm rnn 5 3. iter- ative lstm renement add lstm layer nal fully connected output layer pas hidden state lstm iteration blue arrow iteration number iteration equation =1 2 ... ri roip ooling roii ai 2 ri lst hi1 ai scoresi boxesi roii+1 boxesi arg maxj 0 ... scoresij lossi losscrossentropy scoresi ci ci cid 54 bg losssmoothl1 boxesi bi hidden state lstm iteration input lstm layer hi1 hidden state previous iteration ai output two-layer fully con- nected network current iteration rest iterative renement benet adding lstm layer hidden state previous iteration improve bounding box regres- sion current iteration benet backpropagate gradient loss iteration earlier blue arrow fig- ure 3 lstm differentiable respect pre- vious hidden state error prediction current iteration error previous iter- ations lstm chance correct error gradient backpropagation unusual lstm/rnn rnns sequential input text audio video hidden state rnn wa proved ability capture temporal previous time step meaning current frame sequential frame previ- ous rnn great success encoding sequential image sequential rene region proposal progress step step temporal iteration multiple guess iter- ation guessed region image decide better guess time sequential processing non-sequential called attention glimpse multiple object detection 1 question answering 15 paper 15 lstm rene answer span question multiple time 4. experiment implemented based pytorch imple- mentation faster r-cnn 8 trained iterative re- nement lstm renement voc 2007 train validation tested voc 2007 average precision map object detection metric eval- uate 4.1. 1. renement perform better origi- nal faster r-cnn region proposal renement improve detection explore hyper-parameters itera- tive renement general performs better lstm renement best iterative renement 0.6774 map best lstm 0.6743 map compared 0.6702 map original faster r- cnn trained notice train better renement learning rate start rela- tive small addition training includes loss rpn better number iteration renement training 3 iteration 3 iteration achieves best perfor- mance suggesting iteration number larger better detailed best iterative renement lstm renement 2. iterative renement lstm renement performance class better ap original category 4.2. visualization better understand iterative renement analyze pro con visualize object de- tection 4 renement iteration 1 2 3 bounding box color orange yellow green observe iterative improvement bounding box prediction image concretely 1 im- age single object original region proposal cover object renement usu- ally enlarge bounding box cover entire object 2a 3a 3b 5a 4 2 image single object original region proposal good renement minor change 4 4. visualization iterative renement iteration 1 2 3 denoted orange yellow green original iterative renement iterative renement iterative renement iterative renement iterative renement iterative renement lstm renement lstm renement lstm renement lstm renement lstm renement lstm renement lstm renement train max iter 2 2 3 3 3 3 2 3 3 4 4 7 7 parameter max iter includes rpn loss 2 2 3 2 3 4 2 2 3 2 3 2 3 learning rate 0.0001 0.00001 0.00001 0.00001 0.00001 0.00001 0.0001 0.00001 0.00001 0.00001 0.00001 0.00001 0.00001 map 0.6702 0.6580 0.6707 0.6744 0.6772 0.6774 0.6760 0.6582 0.6702 0.6596 0.6712 0.6723 0.6743 0.6557 1. trained 100k step learning rate decay 1/10 50k 80k step size fully connected layer 4096 hidden unit number lstm 1024. original map 0.6702 0.680 0.779 0.660 0.548 0.470 0.758 0.794 0.786 0.456 0.724 0.654 0.743 0.803 0.697 0.761 0.391 0.652 0.624 0.750 0.680 iterative renement 0.6774 0.691 0.710 0.672 0.581 0.494 0.764 0.797 0.792 0.441 0.717 0.688 0.754 0.806 0.706 0.762 0.412 0.667 0.657 0.755 0.682 lstm renement 0.6743 0.700 0.773 0.678 0.515 0.478 0.768 0.789 0.775 0.470 0.715 0.670 0.753 0.807 0.745 0.755 0.368 0.659 0.646 0.758 0.665 horse mbike person plant sheep sofa boat bottle cow chair train areo bike bird dog bus car cat tv 2. class voc 2007 bounding box 2c 3 image multi- ple object region proposal object iterative renement shrink correct size 1a 1b 4a fail 4 importantly iterative renement some- time object wa originally detected 1c truck plane detected third renement iteration 3c dog detected second iteration 5 iterative length short lstm reason contributes magnify good bad detection under- performance renement predic- tion previous stage input magnify good bad prediction concretely orig- inal region proposal reasonably good renement rene detection bounding box improve detection accuracy original region proposal bad totally wrong renement magnify error renement repeating region proposal failure original lead failure subse- quent 5. conclude introduced renement method it- erative lstm renement faster r-cnn improve performance 0.6702 0.6774 map object detection pascal voc 2007 dataset method improved 1 nding method roi pooling layer backpropagate gradient iteration improve iterative 2 potential over-tting issue 1 j. ba v. mnih k. kavukcuoglu multiple object recog- nition visual attention corr abs/1412.7755 2014 2 m. everingham l. van gool c. k. williams j. winn a. zisserman pascal visual object class voc chal- lenge international journal vision 88 2 303 338 2010 3 r. girshick fast r-cnn proceeding inter- national conference vision 14401448 2015 4 r. girshick j. donahue t. darrell j. malik rich fea- ture hierarchy accurate object detection semantic proceeding conference segmentation vision pattern recognition 580587 2014 5 s. hochreiter j. schmidhuber long short-term memory neural computation 9 8 17351780 1997 6 a. krizhevsky i. sutskever g. e. hinton imagenet deep convolutional neural network advance neural processing 10971105 2012 7 w. liu d. anguelov d. erhan c. szegedy s. reed c.- y. fu a. c. berg ssd single shot multibox detector european conference vision 2137. springer 2016 8 longcw faster rcnn pytorch http //github com/longcw/faster_rcnn_pytorch 2017 6 5. learning curve faster r-cnn iterative region proposal renement learning rate decay 40k 60k step 6. learning curve faster r-cnn lstm region pro- posal renement learning rate decay 40k 60k step 4.3. discussion renenet 9 applies iterative renement based zf net reported signicant improvement map iterative renement lstm renement improve map expected analyzed reason depth over-tting issue 5 6 learning curve itera- tive renement lstm renement learning curve gap learn map suggesting over-tting is- sue larger drop-out rate adding regularization bring gap decrease map renement method achieve better performance overtting issue solved iterative length short lstm 4.1 iterative region proposal re- nement better lstm renement iterative length 2-7 short lstm strength comparison lstm re- nement training larger number itera- tions bring map suggests 9 r. n. rajaram e. ohn-bar m. m. trivedi renenet iterative renement accurate object localization 2016 19th international conference intelligent trans- portation itsc 15281533 nov 2016 10 j. redmon s. divvala r. girshick a. farhadi unied real-time object detection pro- ceedings conference vision pattern recognition 779788 2016 11 s. ren k. r. girshick j. sun faster r-cnn real-time object detection region proposal network advance neural processing 9199 2015 12 p. sermanet d. eigen x. zhang m. mathieu r. fergus y. lecun overfeat integrated recognition localization detection convolutional network arxiv preprint arxiv 1312.6229 2013 13 k. simonyan a. zisserman deep convolu- tional network large-scale image recognition corr abs/1409.1556 2014 14 j. r. uijlings k. e. van de sande t. gevers a. w. smeulders selective search object recognition interna- tional journal vision 104 2 154171 2013 15 c. xiong v. zhong r. socher dynamic coattention network question answering corr abs/1611.01604 2016 16 m. d. zeiler r. fergus visualizing understanding european conference com- convolutional network puter vision 818833. springer 2014 7", "keywords": ["anchor box", "anguelov erhan", "anguelov erhan szegedy", "aspect ratio", "average precision", "average precision map", "based order", "bounding box", "bounding box regression", "box object", "box regression", "brand exposure", "class score", "cocacola brand", "code script", "code snippet", "conference vision", "conversion code", "conversion code script", "convolution map", "convolutional block", "convolutional layer", "convolutional network", "convolutional neural", "convolutional neural network", "current iteration", "deep convolutional", "deep learning", "detection accuracy", "detection network", "detection visibility", "erhan szegedy", "european conference", "fast rcnn", "faster rcnn", "faster rcnn iterative", "faster rcnn realtime", "faster rcnn region", "fully connected", "gion proposal", "graphic logo", "graphic logo detection", "hidden state", "image frame", "image recognition", "image video", "input image", "international conference", "iteration number", "iterative length", "iterative region", "iterative region proposal", "iterative renement", "iterative renement lstm", "lamberto ballan", "learning rate", "learning rate decay", "logo detection", "logo recognition", "lstm layer", "lstm region", "lstm region proposal", "lstm renement", "manthan agrawal", "manual process", "matching sport", "matching sport video", "max iter", "nal loss", "network output", "neural network", "number iteration", "object detection", "object recognition", "object region", "orientation bin", "original region", "original region proposal", "overtting issue", "pascal voc", "pattern recognition", "peng yuan", "pooling layer", "posal renement", "precision map", "proposal network", "proposal renement", "proposal renement lstm", "proposed region", "rate decay", "rcnn iterative", "rcnn iterative region", "rcnn realtime", "rcnn region", "rcnn region proposal", "realtime object", "realtime object detection", "region pro", "region proposal", "region proposal network", "region proposal renement", "regionbased convolutional", "renement iteration", "renement learning", "renement learning rate", "renement lstm", "renement lstm renement", "return investment", "ross girshick", "rpn output", "scale aspect", "selective search", "short lstm", "simonyan zisserman", "sponsorship valuation", "sponsorship valuation trademark", "sport video", "szegedy reed", "trademark matching", "trademark matching sport", "training time", "valuation trademark", "valuation trademark matching", "video fig", "video frame", "video image", "video image frame", "wide range", "yang yuan", "yangxin zhong"], "libraries": ["pytorch", "tensorflow", "opencv", "kera", "scipy", "numpy"], "languages": ["pascal", "python", "html", "cs", "sr", "basic", "small"], "frameworks": [], "dbs": []}, "./reports/BE Project Report_2.pdf": {"title": "isilon credential vault", "filename": "./reports/BE Project Report_2.pdf", "data": "isilon credential vault fulfilment sanket b120058609 m. shushanth priyanka fulzele b120058592 esha shah b120058611 b120058555 guidance prof. r.b.murumkar 2017-2018 isilon credential vault isilon credential vault sanket m. shushanth priyanka fulzele esha shah bonafide prof.r.b.murumkar b120058609 b120058555 b120058592 b120058611 prof. deepali londhe co-ordinator earlier diploma prof. r.b.murumkar dr. balwant a. sonkamble examiner dr. p.t.kulkarni 2017-18 isilon credential vault acknowledgement great pleasure satisfaction presenting preliminary isilon credential vault express deep sense gratitude prof. r.b.murumkar kind co-operation encouragement helped complete express special gratitude dr.p.t.kulkarni dr.b.a.sonkamble prof.d.d.londhe guidance constant well providing support completing directly indirectly helped completion mr. sanket mr. m. shushanth ms. priyankafulzele ms. esha shah 2017-18 isilon credential vault 2017-18 era digitization foremost security provided authentication process pass- word pin common authentication process security password storage retrieval crucial order potential preserve integrity fullest password security compromised vulnerable attack brute force attack dictionary attack man middle attack proposed technique handle security password robust manner propose authentication provider acting storage technique storing credential salted hash supporting crud operation keywords hashing salting security authentication 1 1.1 1.2 2 2.1 existing 2.2 proposed 3 3.1 definition 3.2 concept 3.3 3.4 3.5 3.5.1 3.5.2 technological 4 4.1 4.2 4.2.1 dfd level 0 4.2.2 dfd level 1 4.2.3 dfd level 2 4.3 behavorial 4.4 4.5 database 5 plam 5.1 split 6 6.1 2 2 3 5 5 6 8 8 8 8 9 9 9 10 11 11 12 12 12 13 13 15 15 17 17 19 19 7 planning 7.1 pert 8 8.1 apis authenticator 8.2 database schema 8.3 action 8.3.1 add 8.3.2 verify 8.3.3 update/edit 8.3.4 delete 9 screenshots 9.1 source 10 10.1 10.2 22 22 23 23 25 25 25 26 26 26 27 27 30 30 30 30 1.1 cia triangle 4.1 4.2 level 0 4.3 level 1 4.4 level 2 4.5 4.6 state 4.7 7.1 pert 8.1 handler apache mod authnz 8.2 directive authentication 9.1 prompt authentication client apache 9.2 authentication failed 9.3 authenticated 3 11 12 12 13 13 14 14 22 24 24 27 28 29 isilon credential vault 1 1.1 security aspect era digitization 21st century considered era rapid growth industrialization secu- rity issue looked security critical business client pay- ment le bank account hard replace dangerous fall wrong hand lost disaster ood crushing losing hacker malware infection greater consequence held valuable critical rely store process es- sential maintain security purpose security policy preserve condentiality accessed view secure en- sures condentiality allows individual supposed condentiality aspect discussed privacy secure storage sensitive authenticated integrity relied accurate processed correctly secure ensures valid integrity protected deletion corruption resides database transmitted network integrity aspect object privilege control access command authorized change referential integrity ability main- tain valid database rule dened database protected virus designed corrupt 2017-18 1 isilon credential vault availability secure authorized delay denial-of- service attack attempt block authorized ability access needed 1.1 cia triangle 1.2 today moving digital space conden- tiality integration authorization crucial au- thentication procedure sure rightful people access specic instance black hat hacker managed access password authentication leading compromise privacy people cyber space example 2012 165 linkedin ac- count compromised 2014 500 yahoo account compromised 2017 143 equifax account hacked examine browser built-in password manager mobile password manager 3rd party manager observed signicant difference auto policy password manager auto policy lead disastrous consequence remote network attacker extract multiple password password manager interaction password protection today challenge con- sidering advancement computing motivated 2 isilon credential vault challenge create foolproof robust protection mechanism extended current password based authentication biometrics based freebsd enable contribute source community propose doe exist freebsd framework 3 isilon credential vault 2 2.1 existing detailed auto policy implemented deployed password manager password manager include desktop browser pm google chrome 34 microsoft internet explorer 11 mozilla fire- fox 29 apple safari 7 3rd party pm 1password lastpass keeper nor- tonidentitysafe passwordsafe keepass passwordsafe keepass provide browser extension support password eld auto io pm mobile safari password manager syncs desktop version safari apple icloud keychain synchronization service mobile safari doe support extension 3rd party pm separate built- web browser addition mobile safari password manager google chrome 1password lastpass tab android pm default android browser chrome password manager offer auto functionality password manager automatically populates username password eld web browser divide auto strategy broad category automatic auto populate username password eld loaded requiring interaction password manager support automatic auto include chrome platform firefox safari last- pas norton identitysafe lastpass tab manual auto require interaction auto lling interaction include clicking typing username eld pressing keyboard shortcut pressing button browser password manager require manual interaction include 1pass- word keeper password safe keepass internet explorer 11 hybrid approach automatically auto lls password loaded http re- quire interaction loaded http 4 conservative behavior enables attack 2017-18 4 isilon credential vault 2.2 proposed hashing producing hash accessing security hash simply hash called message digest number generated string text hash smaller text generated formula extremely text produce hash hash play role security ensure transmitted message tampered sender generates hash message encrypts sends message recipient decrypts message hash produce hash received message compare hash message wa transmitted intact salting password salting adding random string character password hash calculated password hashing secure difcult reverse random string character combination letter number character argon2 offer hashing scheme called argon2 argon2 summarizes state art memory-hard function streamlined simple aim highest memory lling rate effective multiple computing unit providing defense trade-of attack argon2 optimized x86 exploit cache memory intel amd processor argon2 variant argon2d argon2i argon2d faster data-depending memory access suitable crypto- currency threat side-channel timing attack ar- gon2i data-independent memory access preferred password hash- ing password-based key derivation argon2i slower pass memory protect trade-off attack recommend argon2 aim performance version argon2 allow 1 gb ram fraction second smaller amount faster scale easily arbitrary number parallel computing unit optimized clarity ease scheme better trade-off resilience pre-phc equal performance phc nalists aim maximize cost password cracking asics approach measure cost turn popular time-area product assume password hashed salt 5 isilon credential vault secret key hash leak adversary salt tag cracker tagi si password hashing suppose defender allocates amount time e.g 1 second password number cpu core e.g 4 core hash password maximum amount memory memory size translates asic area a. running asic time determined length longest computational chain asic memory latency maximize 6 isilon credential vault 3 3.1 definition designing storage based freebsd performs authentication storing password salted hash supporting crud operation 3.2 concept isilon credential vault managing credential certicates store encrypted database key encrypted database stored externally scenario mutual authentication salted hash received certicate computed checked stored entry certicate verication returned calling routine password credential stored salted hash signing salt generated track salt salt generated making difcult black hat hacker password salted hashed decryption password impossible credential compromised manner 3.3 proposed implemented freebsd operating source community network store infor- mation securely rely propose hasnt devel- oped freebsd enable contributing source community network remarkable spot aim provide patch apache storage 2017-18 7 isilon credential vault store apache credential discussed 3.4 password database authentication provider store password cer- ticates perform password-based authentication store pass- word salted hash salt 8 byte long separate salt password entry component authenticate password store password encrypted format database encryption key certicates encrypted separate key key encryption stored separately apis store retrieve password database database fips compliant 1 source storing password storing certicate 3.5 3.5.1 state proposed server side authentication help certicates storing certicates password credential encrypt entire database measure entire com- promised memory hard hashing function safeguard memory at- tack 8 isilon credential vault 3.5.2 technological freebsd-11.1-release-amd64 operating advanced sodium library oracle vm virtual box 4 gb ram processor- intel i5 9 isilon credential vault 4 4.1 4.1 fig 4.1 describes ow proposed component randomized salt generator hashing component encrypted database key key stored externally 2017-18 10 4.2 4.2.1 dfd level 0 isilon credential vault 4.2 level 0 4.2.2 dfd level 1 4.3 level 1 inspection fig 4.2 three major component recognized hashing randomized salting verication operation fig 4.3. entire closely depicted fig 4.4 representing level 11 4.2.3 dfd level 2 isilon credential vault 4.4 level 2 4.3 behavorial 4.5 fig 4.5 encryption engine encrypted database 12 isilon credential vault 4.6 state fork indicates parallel process certicates requested time authenticated fig 4.6. 4.7 fig 4.7 indicates certicate storage request certicate converted readable format existing pem format 13 isilon credential vault 4.4 argon2 streamlined simple state art memory-hard function 2 avours argon 2i argon 2d argon2i data-independent mem- ory access password based hashing approach preferred password hashing password based key gen- eration 2 input message nonce s. password salt secure credential vault designed applica- tions store certicates password entire vault encrypted key password salted randomized salt hashed memory hard slow hashing function argon 2i hashed password stored database encrypted apis desgined sodium library verication password performing salting hashing input password comparing database entry metadata hashing scheme parameter stored hash verication procedure 4.5 database provide storage authenticator inbuilt solution making mysql database backend mysql fast easy-to- rdbms small business mysql developed marketed supported mysql ab swedish company mysql popular good reason mysql released open-source license pay mysql powerful program handle subset functionality expensive powerful database package mysql standard form well-known sql language 14 isilon credential vault mysql operating language including php perl c++ java mysql well mysql support database 50 row default le size limit 4gb increase operating handle theoretical limit 8 terabyte tb mysql friendly php appreciated language web devel- opment mysql customizable open-source gpl license allows programmer modify mysql specic environment 15 isilon credential vault 5 plam 5.1 split 1. encryption decryption int crypto secretbox easy unsigned char *c const unsigned char *m un- signed long longmlen const unsigned char *n const unsigned char *k -the crypto secretbox easy function encrypts message length mlen byte key nonce n. int crypto secretbox easy unsigned char *m const unsigned char *c unsigned long longclen const unsigned char *n const unsigned char *k crypto secretbox easy function veries decrypts cipher- text produced crypto secretbox easy 2. hashing int crypto pwhash unsigned char const unsigned long longoutlen const char constpasswd unsigned long longpasswdlen const unsigned char const salt unsigned long longopslimit size tmemlimit intalg -the crypto pwhash function derives outlen byte long key password passwd length passwdlen salt salt xed length crypto pwhash saltbytes byte computed key stored alg identier alg=crypto pwhash alg argon2i13 version 1.3 argon2i algo- rithm libsodium 1.0.9. int crypto pwhash str char crypto pwhash strbytes const char constpasswd unsigned long longpasswdlen unsigned long longopslimit size tmemlimit -the crypto pwhash str function ascii encoded string 2017-18 16 isilon credential vault int crypto pwhash str verify const char str crypto pwhash strbytes const char constpasswd unsigned long longpasswdlen -this function veries str valid password verication string generated crypto pwhash str passwd length passwdlen 3. random salt generator void randombytes buf void constbuf constsize size randombytes buf function lls size byte starting buf unpredictable byte 17 isilon credential vault 6 6.1 input behavior expected input behavior expected input behavior expected input behavior expected t01 pas connection 6.1 t01 t02 database client success success pas 6.2 t02 t03 insertion credential success pas 6.3 t03 t04 null credential accepted failed failure 2017-18 18 isilon credential vault pas 6.4 t04 input behavior expected input behavior expected input behavior expected t05 existing client success operation dedi- cated schema success pas 6.5 t05 t06 update credential exist- ing client success tamp success pas updated times- 6.6 t06 t07 authentication source client success success pas 6.7 t07 19 isilon credential vault apis input behavior expected t08 verication provided success success pas 6.8 t08 20 isilon credential vault 7 planning 7.1 pert 7.1 pert 2017-18 21 isilon credential vault 8 stating stated source store credential perform authentication showcasing provided patch apache server store apache password salted hash turn apache perform authentication short description apache authentication 8.1 apis authenticator server sensitive intended small group people access control technique access specic people achieved apache direc- tives 1 authtype directive selects method authenticate 2 authuserfile directive path password le storing password plain text le le propose store credential safely database rst formed basic apis supporting crud operation int db insert app*conn const char *username const char *password consider scenario database store username password password stored salted hash unique salt username api connection database re- turn 1 insertion return 0. int db verify app*conn const char *password const char* username insertion process verication process return 1 suc- ce password match 0 failure function return extracted password username return verifying process 0 1 2017-18 22 isilon credential vault int db update app*conn const char* username const char* password update password based username entered fetch previous hashed entry replaces computing salted hash password return 1 success 0 update operation fails add apache authentication direct apache bypass inbuilt authentication routine dened method proposed approach writing handler handler function called request restricted directory received handler accept credential authenticate database achieve apache called mod authnz directed apache refer verication api perform au- thentication small snippet code 8.1 handler apache mod authnz wa included apache apxs linking library mysql cong cags libs -lsodium database connection sodium library directive conguration le restrict access directory server 8.2 directive authentication 23 isilon credential vault request access directory received apache prompt client authenticate receiving credential autho- rization performed help includes veri- cation api client authorized access status returned server client allowed access au- thentication fails i.e client authorized http unauthorized status returned server raise alert credential authorized access question afore discussed built compiled apxs building installing extension study apxs extensively apache http server revelation mod- ule apache step decided add abstraction authentication provider approach nalized discussion wa build kernel object ko apis approach parity ldap major differ- ence ldap call happening space aim enable kernel space 8.2 database schema database simple consists database named isilon time client api specic client allocated database specic client granted crud privilege store client database relation 3 column comprising username password time updated respect entry password column stored password salted hash column en- crypted key stored 8.3 action 8.3.1 add creating entry dependent regis- tered achieved api registra- tion creates entry add selected password credential designated relation respect original password inserted database salted hash 24 isilon credential vault 8.3.2 verify operation performed help verify api mentioned ... provide connection pointer database credential veried dedicated relation match return 1 8.3.3 update/edit update edit password perform operation creating entry password specied database salted hash salt generated correct edit located based username 8.3.4 delete deleting entry delete username password updated timestamp including metadata recomputation hash verication correct delete located based username 25 isilon credential vault 9 screenshots 9.1 source 9.1 prompt authentication client apache receiving request restricted server prompt client authentication fig 9.1. 2017-18 26 isilon credential vault 9.2 authentication failed receiving wrong credential authentication provider deemed client unauthorized gain access returned unau- thorized message server fig 9.2 27 isilon credential vault 9.3 authenticated fig 9.3 client enters correct credential status server authentication provider 28 isilon credential vault 10 10.1 process developing prevent attack stored password proven daunting surveyed attack happen existing proposed designed overcome shortcoming account robustness making attacker slack exigent tough 10.2 development version provide freedom developer adding kernel space communicate call 2017-18 29 isilon credential vault 1 security salt passwordhashes 2015 international conference advanced science 45 8 pp.152-159 praveen gauravaram 2 http //umbrella.cisco.com/blog/2013/03/06/ announcing-sodium-a-new-cryptographic-library d. dinu d. khovratovich 2013 3 a. biryukov 3 proposed concept enhancing encryption decryption method cloud computing 2015 17th uksim-assm international con- ference modelling simulation 35 2016 ali pitchay wail abdo ali alhiagem farida ridzuan madihahmohd saudi 4 password manager attack defense david silver suman jana eric chen collin jackson dan boneh 5 freebsd operating marshall kirk mckusick george neville-neil robert n.m. watson 6 writing apache perl oreilly associate inc. lin- coln stein doug maceachern 2017-18 30 1 isilon credential vault authentication provider sanket m.shushanth priyanka fulzele esha shah abstractin era digitization security utmost authentication provided pin password security crucial order preserve integrity paper explains insight multi-level security implemented authenticator credential vault password stored salted hash database encrypted key decryption stored externally aim provide apis source apache authenticator store credential termssalting hashing authentication security attack cid 70 1 security aspect era digitization issue looked purpose security policy preserve condentiality integrity availability common authenticate password pin password manager vulnerable attack compromise privacy password manager browser store secure technique retrieved effort secure authorized 2 existing password manager intend include desktop browser pm google chrome 34 microsoft internet explorer 11 mozilla firefox 29 apple safari 7. third party pm 1password lastpass keeper nor- tonidentitysafe passwordsafe keepass io pm mobile safari password manager synchro- ni desktop safari apple icloud keychain synchronisation service android pm pm offer auto-ll func- tionality pm automatically populates credential web browser password manager studied wa keepass free source password manager requires remember master key unlock database database encryption aes twosh keepass reliable strong security easy database transfer support password group ability generate strong random password 3 proposed vault basis certicate authentication supposed authenticate valid certicate asked ow execution a. existing request certicate receiving sends credential username password password fetch appropriate salt hash password check database appropriate match logged hashed password retrieved database entered password compared hashed password argon crypto pwhash str verify function b. request certicate obtaining certicate username password randomised salt generated stored database salt password hashed database storage retrieval key generation step key generated argon crypto pwhash function hash password created argon function crypto pwhash str opslimitset 3 memlimit 100000. changeable based experiment username encrypted aes hashed password stored database aes symmetric encryption key encryprion decryption digest certicate based authentication digital certicate identify participant access granted library sodium argon 2. sodium library password hashing encryption decryption suitable cross-compilable cross-platform cross-language argon2 streamlined simple state art memory-intensive memory-hard function 2 avours argon2i argon2d argon2i data-independent memory access approach preferred password hashing pass- word based key generation 2 input message nonce s. password salt scheme better trade-off resilience pre-phc equal performance phc nalists aim maximize cost pass- word cracking asics approach measure cost turn popular time-area product assume password hashed salt secret key hash leak adversary salt tag cracker tagi si password hashing suppose defender allocates amount time e.g 1 second password number cpu core e.g 4 core hash password maximum amount memory memory size translates asic area a. running asic time determined length longest computational chain asic memory latency maximize entire vault encrypted key prevents attack additional security layer analogy thought person treasure chest front key unlock access digital certicate pertaining provision mutual authentication exchange asymmetric key password salted randomised salt hashed memory hard slow hashing function argon 2i hashed password stored database encrypted apis sodium library verication password performing salting hashing input password comparing database entry verication apis sodium library argon hashing producing hash accessing security hash simply hash called message digest number generated string text hash smaller text generated formula extremely text produce hash hash play role security ensure transmitted message tampered sender generates hash message encrypts sends message recipient decrypts message hash produce hash received message compare hash message wa transmitted intact 2 salting password salting adding random string character password hash calculated password hashing secure difcult reverse random string character combination letter number character 3.1 level security employing three level security password respective salt hashed stored database top symmetric encryption performed entire database encrypted single key stored externally externally meaning device application/database housed 4 4.1 describes ow proposed component randomized salt generator hashing component encrypted database key key stored externally fig 1. 4.2 designing database provide storage authenticator inbuilt solution making mysql database back-end mysql fast easy-to-use rdbms small business mysql developed marketed supported mysql ab swedish company mysql popular good reason listed mysql released open-source license pay mysql powerful program handle subset functionality expensive powerful database package mysql standard form well-known sql language mysql operating language including php perl c++ java mysql well mysql support database 50 row default le size limit 4gb increase operating handle theoretical limit 8 terabyte tb mysql friendly php appreciated language web development mysql customizable open-source gpl li- cense allows programmer modify mysql specic environment 5 outcome password database authentication provider store password certicates perform password-based authenti- cation store password salted hash salt 8 byte long separate salt password entry component authenticate password store password encrypted format database encryption key certicates encrypted separate key key encryption stored separately simple apis store retrieve password database database fips compliant 1 source storing pass- word storing certicate authentication provider 6 6.1 stating stated source store credential perform authentication showcasing provided patch apache server store apache password salted hash turn apache perform authentication short description apache authentication server sensitive intended small group people access control technique access specic people achieved apache directive 1 authtype directive selects method authenticate 2 authuserfile directive path password le storing password plain text le le propose store credential safely database rst formed basic apis supporting crud operation 3 int db insert app*conn const char *username const char *password consider scenario database store username password password stored salted hash unique salt username api connection database return 1 insertion suc- cessful return 0. int db verify app*conn const char *password const char* username insertion process verication pro- ce return 1 success password match 0 failure function ei- ther return extracted password username return verifying process 0 1 int db update app*conn const char* username const char* password update password based username en- tered fetch previous hashed entry replaces computing salted hash password return 1 success 0 update operation fails add apache authentication direct apache bypass inbuilt authentication routine dened method proposed approach writing handler handler function called request restricted directory received handler accept credential authenticate database achieve apache called mod authnz directed apache refer verication api perform authentication wa included apache apxs linking library mysql cong cags libs -lsodium database connection sodium library directive conguration le restrict access directory server request access direc- tory received apache prompt client authenticate receiving credential authorization performed help includes verication api client authorized access status returned server client allowed access authentication fails i.e client authorized http unauthorized status returned server raise alert credential authorized access question afore discussed built compiled apxs building installing extension study apxs 4 extensively apache http server reve- lation apache step decided add abstraction authentication provider approach nalized discussion wa build kernel object ko apis 6.2 database schema database simple consists database named isilon time client api specic client allocated database specic client granted crud privilege store client database relation 3 column comprising username password time updated respect entry password column stored password salted hash column encrypted key stored 6.3 action 6.3.1 add creating entry dependent registered achieved api registration creates entry add selected password credential designated relation respect original password inserted database salted hash 6.3.2 verify operation performed help verify api mentioned ... provide connection pointer database credential veried dedicated relation match return 1 6.3.3 update/edit update edit password perform operation creating entry password specied database salted hash salt generated correct edit located based username 6.3.4 delete deleting entry delete username password updated timestamp including metadata recomputation hash verication correct delete located based username fig 2. prompt authentication apache fig 3. authentication failed 6.4 snapshot authentication provider wa store apache cre- dentials providing authorization apache server expected indicat- ing success fig 4. authentication 7 process developing prevent attack stored password proven daunting surveyed attack happen existing proposed designed overcome shortcoming account robustness making attacker slack exigent tough 5 1 security salt passwordhashes 2015 international con- ference advanced science 45 8 pp.152-159 praveen gauravaram 2 http //umbrella.cisco.com/blog/2013/03/06/announcing- sodium-a-new-cryptographic-library a. biryukov d. dinu d. khovratovich 2013 3 3 proposed concept enhancing encryption de- cryption method cloud computing 2015 17th uksim-assm international conference modelling simulation 35 octo- ber 2016 ali pitchay wail abdo ali alhiagem farida ridzuan madihahmohd saudi 4 password manager attack defense david silver suman jana eric chen collin jackson dan boneh 5 freebsd operating marshall kirk mckusick george neville-neil robert n.m. watson 6 writing apache perl oreilly associate inc. lincoln stein doug maceachern plagiarism scan summary 126 846 22 apr 2018 100 unique genrated plagiarism status total word total character ignore url checked plagiarism era digitization foremost security provided authentication process password pin common authentication process security password storage retrieval crucial order potential preserve integrity fullest password security compromised vulnerable attack brute force attack dictionary attack man middle attack dierent proposed dierent technique handle security password robust manner propose storage technique storing credential salted hash supporting crud opertations keywords hashing salting security authentication smallseotools.com generated smallseotools.com", "keywords": ["access password", "android pm", "apache authentication", "appconn const", "appconn const char", "authentication process", "authentication provider", "based username", "browser password", "chen collin", "client success", "const char", "const unsigned", "const unsigned char", "credential vault", "crud operation", "crypto pwhash", "crypto secretbox", "crypto secretbox easy", "database database", "david silver", "db update", "dfd level", "encryption decryption", "era digitization", "eric chen", "eric chen collin", "esha shah", "farida ridzuan", "farida ridzuan madihahmohd", "fulzele esha", "fulzele esha shah", "gb ram", "google chrome", "input behavior", "int crypto", "int db", "isilon credential", "isilon credential vault", "jackson dan", "key password", "language web", "memory access", "mobile safari", "mobile safari password", "pass word", "password credential", "password database", "password hashing", "password manager", "phc nalists", "pm mobile", "preferred password", "prof rbmurumkar", "rd party", "request certicate", "ridzuan madihahmohd", "safari password", "safari password manager", "salted hash", "secretbox easy", "security password", "sodium library", "source community", "specic client", "store apache", "store credential", "store password", "stored database", "storing password", "str verify", "success pas", "success success", "success success pas", "unsigned char", "unsigned long", "username password", "verication api", "web browser"], "libraries": [], "languages": ["php", "c++", "io", "perl", "basic", "small", "java"], "frameworks": [], "dbs": ["mysql"]}, "./reports/BE Project Report_20.pdf": {"title": "automatic captioning for social media   images", "filename": "./reports/BE Project Report_20.pdf", "data": "automatic captioning social medium image rucha dhondge b120058525 shravani majali b120058557 rashneet kaur rajpal aishwarya sirmagadum b120058599 b120058622 guidance dr. a.m. bagade sr. 27 pune-satara road maharashtra 411043 2017-2018 automatic captioning social medium image rucha dhondge b120058525 shravani majali b120058557 rashneet kaur rajpal b120058599 aishwarya sirmagadum b120058622 bonafide dr. a. m. bagade earlier diploma dr. a. m. bagade prof. deepali londhe coordinator dr. b. a. sonkamble examiner dr. p. t. sponsorship letter ii acknowledgement people helped completion dr. a. m. bagade guidance motivated strengthened confidence thesis express deepest gratitude valuable suggestion constant helped complete constantly encouraged direction shaped learning dr. b. a. sonkamble guidance whole- heartedly thankful valuable time attention providing systematic completing time dr. p. t. immense support dr. emmanuel s. b. deshmukh gaurav suryagandh support constant encouragement iii title statistic popular social medium website 2018 number monthly active facebook till number active instagram till number active snapchat till average number picture uploaded facebook lstm lstm combined cnn image embedder word embeddings proposed class deployment state collaboration 5 6 6 7 7 12 13 19 19 20 20 21 21 22 22 23 iv automatic captioning social medium image sponsorship letter acknowledgement ii iii iv title survery 4 5 9 9 9 2.1 existing 2.1.1 image captioning business aware latent topic 2.1.2 image captioing 10 region-based attention scene-specific context 2.1.3 image captioning 11 2.1.4 recognition neural 11 image caption generator proposed 13 concept 15 15 15 15 1 2 3 2.2 3.1 3.2 3.3 2017-18 1 automatic captioning social medium image 3.5.1 3.5.2 3.5.3 3.5.4 3.6.1 3.6.2 4 5 6 3.4 3.5 3.6 4.1 4.2 4.3 4.4 4.5 5.1 5.2 6.1 non-functional 15 16 16 16 16 16 split-up role responsibility structural behavioral stage issue evaluation 17 17 18 19 19 19 20 21 23 41 41 41 43 43 43 43 47 6.1.1 white box 6.1.1.1 unit 6.1.1.2 integration 2017-18 2 automatic captioning social medium image 6.1.2 7 8. black box 6.1.2.1 48 49 52 53 2017-18 3 automatic captioning social medium image social medium grabbed attention year trending now-a-days captioning best caption central component image post communicate background story photograph perception thought uploading picture social medium eye catching caption trend existing generate description image isnt satisfactory proposed automate process relevant caption image caption provided consider emotion mood object image enhance experience social medium platform caption generated hike interaction audience deemed critical campaign advertisement industry caption image released daily basis news online shopping website catchy caption market product better built simply image suggests couple caption highest relevancy number advantage designed user-friendly manner keywords social medium catchy caption trend marketing campaign 2017-18 4 automatic captioning social medium image 1 picture story help find primary social medium today youth selfies scenic beauty festive photograph update people daily life social medium social medium instagram facebook platform express thought image tremendous increase number long time statistic include statistic popular social medium website 2018 2017-18 5 automatic captioning social medium image number monthly active facebook till number active instagram till 2017-18 6 automatic captioning social medium image number active snapchat till average number picture uploaded facebook 2017-18 7 automatic captioning social medium image social medium increased tremendously facebook 350 photo day snapchat 400 snap day instagram statistic lot picture uploaded catch attention catch attached referred caption image uploaded caption express person picture people good writing caption picture people struggle caption doesnt flair writing people struggle language traditional spell check automatic caption generation step proposed automate process writing caption aim automatically captioning social medium image caption image perspective mood factor contribute selection choice caption considering property image mood/ perception extract image initially internally generate caption describing image description keywords respect image 's mood selected quote phrase generated keywords web scrapping topic modelling order generate word tag generated help maintain relevancy caption image provide multiple suggestion i.e caption relevant image caption generated quotation phrase scrapped internet suggestion include hash-tags preference involved include machine learning image processing natural language processing apis implemented machine learning extract image processing generate tag tag passed natural language processing mapped database best 2017-18 8 automatic captioning social medium image 2 2.1 existing 2.1.1 image captioning business-aware latent topic image providing informative context generating visually descriptive caption metadata automatically captured image post e.g location clue generate textual summary caption depend circumstance image wa captured shared i.e author involved moment complicated factor lead noisy caption pose great challenge prediction visual-based image captioning attempt generate visually descriptive sentence image exploiting extracted visual statistic associated language area target visually descriptive text image generating caption advance deep learning visual computing machine translation study incorporate deep learning generate precise sentence image context-based text summarization summarize experience image associated contextual source topic representation incorporated language multi-modal log bilinear mlbl factored mlblf mlbl sentence generated word word mlbl incorporate modality specific word representation respect factored mlblf evaluation metric bleu bilingual evaluation understudy approach evaluate relevance description higher score better standard quantitative metric captioning bleu-1 indicates bleu unigrams image candidate caption generated bleu score candidate ground-truth computed ensure evaluation independent number word caption stopping criterion 2017-18 9 automatic captioning social medium image generate word ground-truth original caption created social medium evaluation process repeated 5 time final bleu average account variability generated text baseline baseline language trained caption context denoted baseline improvement gained additional context second baseline image context generate caption denoted image 01 2.1.2 image captioning region based attention scene specific context correspondence visual concept detected object-like region textual realization word sentence process generating word generated aligned visual perception experience attention shifting region imposes ordering visual perception preference alignment characterizes latent meaning encoding semantically shared visual scene textual description evolving process latent meaning long-short term memory lstm network hidden state predict visual focus word caption novel modeling contribution scene-specific context context capture higher-level semantic encoded image example image involving people image adapt language generating word specific scene instance caption image mary asleep scene kitchen caption mary lie floor scene context visual extracted image affect word generation biasing lstm 02 2017-18 10 automatic captioning social medium image 2.1.3 image captioning recognition machine translation transform sentence written source language translation target language maximizing t|s year machine translation wa achieved series separate translating word individually aligning word reordering translation simpler recurrent neural network rnns reach state-of-the-art performance encoder rnn read source sentence transforms rich fixed-length vector representation turn initial hidden state decoder rnn generates target sentence visual enriched detecting broader range visual concept recognizing celebrity landmark caption generation order provide graceful handling image difficult describe confidence built confidence score caption output based vision text provide back-off caption difficult 2.1.4 neural image caption generator generative based deep recurrent combine advance vision machine translation generate natural sentence describing image trained maximize likelihood target description sentence training image experiment datasets accuracy fluency language learns solely image description 03 accurate verified qualitatively quantitatively end-to-end presented neural net fully trainable stochastic gradient descent second combine state- of-art sub-networks vision language pre-trained larger corpus advantage additional finally yield better performance compared state-of-the-art approach trained maximize likelihood sentence image experiment datasets 2017-18 11 automatic captioning social medium image robustness nic term qualitative generated sentence extremely reasonable quantitative evaluation ranking metric bleu metric machine translation evaluate generated sentence clear experiment size datasets image description increase doe performance approach nic lstm lstm memory block cell controlled three gate blue recurrent connection output time 1 fed memory time three gate cell fed forget gate predicted word time t1 fed addition memory output time softmax word prediction lstm trained predict word sentence image well preceding word defined st|i s0 st1 purpose instructive lstm unrolled form copy lstm memory created image sentence word lstms share parameter output mt1 lstm time 1 fed lstm time t. 2017-18 12 automatic captioning social medium image lstm combined cnn image embedder word embeddings recurrent connection transformed feed-forward connection unrolled version advance machine translation language recurrent neural network rnn transforms sentence vector representation second rnn vector representation generate target sentence language rnn input word replaced deep convolutional neural network cnn trained classify object image cnns layer final softmax class object assigning object image final layer removed cnns rich encoding image fed rnn designed produce phrase trained directly image caption maximizes likelihood description produce best match training description image 04 2.2 proposed neural image caption generator generate description image image input description image generated image caption doe develop ability generate 2017-18 13 automatic captioning social medium image accurate caption presented completely scene indicating deeper understanding object context image 4 browser-integrated visual automated acquisition multiple web reducing current barrier extract relevant web proposed scrapy designed website composed semantic advantage structural similarity allow scrape multiple creating template example 05 2017-18 14 automatic captioning social medium image 3 3.1 designing extraction provide automatic suggestion caption social medium image 3.2 concept focus automating process caption generation social medium image microsoft google api generates description image keywords keywords undergo natural language processing generate tag help tag scrapped quote net stored database extracted tag presented hash-tagged caption form keywords quotation generated relevant image searching scoring top 5 highest scored quote displayed 3.3 caption generated hash tag english caption generated include quotes/phrases caption generated social medium image caption generated restricted domain 3.4 extract uploaded image image processing process description tag generated image scoring search best caption provide relevant suggestion image choice generated caption enhance experience 2017-18 15 automatic captioning social medium image 3.5 3.5.1 extraction pre-processing searching scoring suggesting best caption centred designed keeping mind uploading image automatic generation caption eliminates manually write caption process uploading image simple button click browsing selecting image button generation caption entire processing background doe perform action till caption generated wa improved provide top 5 suggestion select caption choice hashtags decided post image hashtag 3.5.2 non-functional robustness accuracy relevancy scalable response time 3.5.3 core i7 processor 4gb ram 2gb graphic 3.5.4 sofware programming language python 2017-18 16 automatic captioning social medium image package performing semantic function nltk nosql database mongodb micro web framework flask automating process keyword extraction autotagger frontend html cs javascript jinja image processing microsoft google api 3.6. 3.6.1 split-up function image processing api input image output sentence description image tag json format microsoft google cloud vision api extracted image tag responsible extracting semantic sending processing natural language processing input description tag sentence processed semantic image output lemmatized tag sure tag semantically image match database format construction database searching sorting construction database domain combination web searching quote filtering dump correct database mapping tag generated database scoring matched tag matched quote fetched display top 5 caption input quote fetched top 5 quote highest score displayed web quote hashtags displayed 2017-18 17 automatic captioning social medium image caption select caption post his/her social medium account 3.6.2 role responsibility role identify check statistic social medium revenue generated exchange photograph uploaded create simple web attractive upload picture choice implement select maximum efficiency extracting image uploaded sure picture uploaded extracted processing process output match database tag remove word lemmatize tag intersection function improve efficiency search quote database build database consisting caption extract tag quote database find score caption collected top quote allow select caption hashtag post image responsibility ensure fulfills ensure integration ensure scalability accuracy robustness 2017-18 18 automatic captioning social medium image 4 4.1 proposed 4.2 2017-18 19 automatic captioning social medium image 4.3 structural 4.3.1 class 4.3.2 deployment class deployment 2017-18 20 automatic captioning social medium image 4.4 behavioral 4.4.1 state state 4.4.2 2017-18 21 automatic captioning social medium image 4.4.3 4.4.4 2017-18 22 automatic captioning social medium image 4.4.5 collaboration collaboration 4.5 4.5.1. google cloud vision api microsoft api google cloud vision api enables developer understand image encapsulating powerful machine learning easy rest api classifies image category e.g `` sailboat '' `` lion '' `` eiffel tower '' detects individual object face image find read printed word contained image build metadata image catalog moderate offensive enable marketing scenario image sentiment analyze image uploaded request integrate image storage google cloud storage 4.5.1.1. cloud vision api label detection detect broad category image ranging mode transportation animal 2017-18 23 automatic captioning social medium image explicit detection detect explicit adult violent image logo detection detect popular product logo image landmark detection detect popular natural man-made image optical character recognition detect extract text image support broad range language support automatic language identification face detection detect multiple face image associated key facial emotional state wearing headwear facial recognition supported image detect general image dominant color appropriate crop hint web detection search internet image 4.5.1.2. integrated rest api access rest api request annotation image image uploaded request integrated google cloud storage 4.5.1.3. label detection scenario example vision api detect extract image broad group category label identify object location animal specie product label returned english label detection definitely interesting annotation add semantics image video stream providing relevant label i.e keywords uploaded image label selected object category mapped official google knowledge graph allows image classification 2017-18 24 automatic captioning social medium image enhanced semantic understanding reasoning technically actual detection performed image object extraction phase executed advance client order extract label single object object uploaded independent image lead lower-quality resolution isnt object context relevant object purpose label annotation `` labelannotations '' `` score '' 0.99989069 `` mid '' `` /m/0ds99lh '' `` description '' `` fun '' `` score '' 0.99724227 `` mid '' `` /m/02jwqh '' `` description '' `` vacation '' `` score '' 0.63748151 `` mid '' `` /m/02n6m5 '' `` description '' `` sun tanning '' api return json uploaded image label basically string description field relevance score 0 1 knowledge graph 4.5.1.4. microsoft api return visual image 2017-18 25 automatic captioning social medium image tagging description domain-specific identify label confidence apply adult/racy setting enable automated restriction adult identify image color scheme picture supported input method raw image binary form application/octet stream image url supported image format jpeg png gif bmp image file size le 4 mb image dimension greater 50 50 pixel vision api return tag based 2000 recognizable object living scenery action tag ambiguous common knowledge api response 'hints clarify meaning tag context setting tag organized taxonomy inheritance hierarchy exist collection tag form foundation image 'description displayed human readable language formatted complete sentence note point english supported language image description uploading image image url vision api 's output tag based object living action identified image tagging limited main subject person foreground includes setting indoor outdoor furniture plant animal accessory gadget categorizing image addition tagging description vision api return taxonomy-based category defined previous version category organized taxonomy parent/child hereditary hierarchy category english 2017-18 26 automatic captioning social medium image 86-category concept based 86 concept visual image categorized ranging broad specific analyze category identifying image categorize image vision api boolean flag indicate image black white color flag indicate image drawing indicate image clip art indicate scale 0-3 1. clip-art detects image clip art image response vision analyze cheese clip art 3 good-clip-art vision analyze house yard 0 non-clip-art 2. drawing detects image drawing generating description vision api 's analyze image form foundation 'description displayed human-readable language complete sentence description summarizes image vision api 's generate description based object identified image description evaluated confidence score generated returned ordered highest confidence score lowest perceiving color scheme vision extract color image color analyzed three context foreground background grouped twelve 12 dominant accent color accent color black blue brown gray green orange pink purple red teal white yellow depending color image simple black white accent color returned hexadecimal color code 2017-18 27 automatic captioning social medium image 4.5.2. natural language processing process output apis mentioned earlier microsoft api description image google microsoft apis term describing image term directly database matching checking similarity threshold intermediate processing help natural language processing toolkit written python functionality respect natural language processing training function brown corpus sentence processed extract term add term ambiguous word semantic meaning change context word form semantic meaning handled 4.5.2.1. natural language toolkit nltk nltk text processing nltk famous python natural language processing toolkit nltk leading platform building python program human language easy-to-use 50 corpus lexical wordnet suite text processing library classification tokenization stemming tagging parsing semantic reasoning natural language toolkit nltk suite library program symbolic statistical natural language processing nlp english written python programming language wa developed steven bird edward loper science pennsylvania nltk includes graphical demonstration sample nltk intended support nlp including empirical linguistics cognitive science artificial intelligence retrieval machine learning nltk teaching individual study platform prototyping building nltk support classification tokenization stemming tagging parsing semantic reasoning functionality 2017-18 28 automatic captioning social medium image nltk lexical word text tokenizer n-gram collocation part-of-speech tagger tree text chunker capturing named-entity recognition 4.5.2.2. installation 1. install nltk 2. install nltk includes corpus grammar etc.various arabic stemmer arlstem snowball nist mt evaluation metric 4.5.3 sentence microsoft api tokenized tokenizers divide string substring example sentence tokenizer find sentence word tokenizer find word string sentence tokenize sentence boundary disambiguation natural language processing deciding sentence natural language processing require input divided sentence number reason sentence boundary identification challenging punctuation mark ambiguous example period denote abbreviation decimal point ellipsis email address sentence nltk support 17 european language sentence tokenizing word represented token separately stored unimportant word word removed sentence sentence consists word article preposition contribute semantic meaning sentence word word word number document nltk maintains word based brown corpus frequency count word 2017-18 29 automatic captioning social medium image document mark word word frequency exceeds threshold function ignore token word nltk stored lowercase removal word remaining token lemmatised converted common format representation lemmatisation process removing suffix term representing common format lemmatisation sentence form word tense semantically meaning storing form word caption database level redundancy inconsistency search avoid issue store word lemmatised form term api lemmatised main ensure maximum search efficiency term repetition example consider sentence dog chasing yellow ball green field sentence generated api sentence tokenised term token dog chasing yellow ball green field token checked word dog chasing yellow ball green field term detected word removed contribute semantic meaning image computing word word filtered processing natural language text `` word '' common word language single universal word natural language processing avoid removing word support phrase search term lemmatised chasing chase semantically equivalent final dog chase yellow ball green field term term generated apis making sure repetition 2017-18 30 automatic captioning social medium image stemming lemmatization basic text processing method english text stemming lemmatization reduce inflectional form derivationally form word common base form stemming linguistic morphology retrieval stemming process reducing inflected derived word stem base root form generally written word form stem identical morphological root word sufficient word map stem stem valid root stemming studied science 1960s search engine treat word stem synonym kind query expansion process called conflation stemming program commonly referred stemming stemmer lemmatization lemmatisation lemmatization linguistics process grouping inflected form word analysed single item computational linguistics lemmatisation algorithmic process determining lemma word process involve complex understanding context determining speech word sentence requiring example knowledge grammar language hard implement lemmatiser language language word appear inflected form example english verb walk appear walk walked walk walking base form walk dictionary called lemma word combination base form speech called lexeme word 2017-18 31 automatic captioning social medium image lemmatisation closely stemming difference stemmer operates single word knowledge context discriminate word meaning depending speech stemmer typically easier implement faster reduced accuracy matter nltk famous stemmer porter stemmer lancaster stemmer snowball stemmer nltk stemmer simple porter stemmer based porter stemming nltk lemmatization method based wordnet built-in morphy function wordnet lexical database english noun verb adjective adverb grouped cognitive synonym synset expressing distinct concept synset interlinked conceptual-semantic lexical relation network meaningfully word concept navigated browser wordnet freely publicly download wordnet computational linguistics natural language processing wordnet superficially resembles thesaurus group word based meaning distinction wordnet interlinks word form string letter specific sens word word proximity network semantically disambiguated second wordnet label semantic relation word grouping word thesaurus doe follow explicit pattern meaning similarity part-of-speech tagging 2017-18 32 automatic captioning social medium image text classify word speech label tagset collection tag po tagging part-of-speech tagging word class lexical category corpus linguistics part-of-speech tagging po tagging post called grammatical tagging word-category disambiguation process marking word text corpus speech based definition well context i.e adjacent word phrase sentence paragraph simplified form commonly taught school child identification word noun verb adjective adverb performed hand po tagging context computational linguistics associate discrete term well hidden speech descriptive tag pos-tagging fall distinctive group rule-based stochastic e. brill tagger english pos-taggers employ rule-based term generated tagged speech efficient search relevant caption matching tag cc conjunction coordinating cd numeral cardinal mid-1890 nine-thirty forty-two one-tenth ten 0.5 forty- 1987 twenty '79 78-degrees eighty-four ix '60s .025 fifteen 271 124 dozen quintillion dm2 000 ... dt determiner 2017-18 33 automatic captioning social medium image half nary existential preposition conjunction subordinating astride inside pro despite atop on.. jj adjective numeral ordinal third ill-mannered pre-war regrettable oiled calamitous separable ectoplasmic battery-powered participatory fourth still-to-be-named multilingual multi-disciplinary ... jjr adjective comparative bleaker braver breezier briefer brighter brisker broader bumper busier calmer cheaper choosier cleaner clearer closer colder commoner costlier cozier creamier crunchier cuter ... jjs adjective superlative calmest cheapest choicest classiest cleanest clearest closest commonest corniest costliest crassest creepiest crudest cutest darkest deadliest dearest deepest densest dinkiest ... item marker a. b. c. sp-44001 sp-44002 sp-44005 sp-44007 second third three three 2017-18 34 automatic captioning social medium image md modal auxiliary n't dare n't nn noun common singular mass common-carrier cabbage knuckle-duster casino afghan thermostat investment slide humour falloff slick wind hyena override subhumanity machinist ... nnp noun proper singular motown venneboerger czestochwa ranzer conchita trumplane christos oceanside escobar kreisler sawyer cougar yvette ervin odi darryl ctca shannon a.k.c meltex liverpool ... nns noun common plural undergraduate scotch bric-a-brac product bodyguard facet coast divestiture storehouse club fragrance average subjectivist apprehension mus factory-jobs ... pdt pre-determiner half sure po genitive marker 's prp pronoun hisself oneself ownself thee thy prp pronoun possessive 2017-18 35 automatic captioning social medium image mine thy rb adverb occasionally unabatingly maddeningly adventurously professedly stirringly prominently technologically magisterially predominately swiftly fiscally pitilessly ... rbr adverb comparative gloomier grander graver greater grimmer harder harsher healthier heavier higher larger leaner lengthier less- perfectly lesser lonelier longer louder lower ... rb adverb superlative best biggest bluntest earliest farthest furthest hardest heartiest highest largest le nearest second tightest worst rp particle aboard apart crop fast i.e pie raising start teeth up-pp `` '' preposition infinitive marker uh interjection goodbye goody gosh wow jeepers jee-sus hubba hey kee-reist oops amen huh howdy uh dammit whammo shuck heck whodunnit honey golly man baby diddle hush sonuvabitch ... 2017-18 36 automatic captioning social medium image vb verb base form assemble ass assign assume atone attention avoid bake balkanize bank behold bend benefit bevel beware bless boil bomb boost brace break bring broil brush build ... vbd verb tense dipped pleaded swiped regummed soaked tidied convened halted registered cushioned exacted snubbed strode aimed adopted belied figgered speculated wore appreciated contemplated ... vbg verb participle gerund telegraphing stirring focusing angering judging stalling lactating hankerin alleging veering capping approaching traveling besieging encrypting interrupting erasing wincing ... vbn verb participle multihulled dilapidated aerosolized chaired languished panelized experimented flourished imitated reunifed factored condensed sheared unsettled primed dubbed desired ... vbp verb tense 3rd person singular predominate wrap resort sue twist spill cure lengthen brush terminate appear tend stray glisten comprise detest tease attract emphasize mold postpone sever return wag ... vbz verb tense 3rd person singular base reconstructs mark mix displeases seal carp weave snatch slump stretch authorizes smolder picture emerges stockpile seduces fizz bolster slap speaks pleads ... 2017-18 37 automatic captioning social medium image wdt wh-determiner whichever wp wh-pronoun whatsoever whosoever wrb wh-adverb whereever whereof database consists document document consists quote tag algorithmia autotagger extract keywords quote 2017-18 38 automatic captioning social medium image '' purely peer-to-peer version electronic cash allow online payment directly party going financial institution digital signature provide solution main benefit lost trusted third party prevent double-spending propose solution double- spending peer-to-peer network network timestamps transaction hashing ongoing chain hash-based proof-of-work forming record changed redoing proof-of-work longest chain serf proof event witnessed proof largest pool cpu power long majority cpu power controlled node cooperating attack network generate longest chain outpace attacker network requires minimal message broadcast best effort basis node leave rejoin network accepting longest proof-of- chain proof happened '' document tag generated json format are- `` network '' `` chain '' `` proof '' `` longest '' `` proof-of-work '' `` node '' `` power '' `` cpu '' searching- input operation 1. tag image named l1 2. document retrieved mongo db consisting tag individual held variable l2 searching function criterion scoring generate appropriate tag scoring based number matching tag intersection tag find common tag 1. l1= nature god universe power l2= nature tree love power 2. intersection generates common_tags_list nature power 2017-18 39 automatic captioning social medium image 3. score quote element l2 tag 3. sublist consists score quote caption image forms- 1.hashtags 2.quote microsoft google cloud vision api generate tag individually hashtags image sorted top element generate suggestion top caption perception image change caption suggested enhance experience 2017-18 40 automatic captioning social medium image 5 5.1 stage 5.1.1 preparation processing image three domain nature classroom environment travel downloaded image manually selected ensure image domain caption scrapped quote website caption manually checked sure three selected domain manual intervention wa ensure caption generated relevant image uploaded worked implemented individually tested integrated working wa 5.2 issue compatibility issue python 2 python 3 nltk installed python 2 number function unicode output nltk description generated microsoft api tokenised contained unicode token searching database function orignal token word nltk stored lowercase comparing token removal word token converted lowercase detected word quote stored database stored tag semantic meaning tag needed considered wa considered possibility irrelevant quote suggested po 2017-18 41 automatic captioning social medium image tagger wa form tag considered generating tag respective quote database efficient search function wa wa intersection function helped reduce time complexity compared individual search individual tag tag generated 2017-18 42 automatic captioning social medium image 6 evaluation 6.1 effective performance product 's ensure failure expensive stage development 's stay business 6.1.1 white box white box clear box box method item tested tester tester chooses input exercise path code determines appropriate output knowledge essential white box white box actual processing output white box consists 6.1.1.1 unit unit level individual units/ component tested purpose validate unit performs designed unit smallest testable input single output image processing google api 2017-18 43 automatic captioning social medium image returned json 'tags `` '' `` grass '' `` confidence '' 0.999999761581421 `` '' `` outdoor '' `` confidence '' 0.999970674514771 `` '' `` sky '' `` confidence '' 999289751052856 2017-18 44 automatic captioning social medium image `` '' `` building '' `` confidence '' 0.996463239192963 `` '' `` house '' `` confidence '' 0.992798030376434 `` '' `` lawn '' `` confidence '' 0.822680294513702 `` '' `` green '' `` confidence '' 0.641222536563873 `` '' `` residential '' `` confidence '' 0.314032256603241 microsoft api input output 2017-18 45 automatic captioning social medium image preprocessing input output searching database scoring input output database searching scoring procedure 1. l1= nature god universe power 2017-18 46 automatic captioning social medium image l2= nature tree love power 2. intersection generates common_tags_list nature power 3. score quote element l2 tag 3 6.1.1.2 integration integration level individual unit combined tested group purpose level expose fault interaction integrated unit driver stub assist integration uploads image 2017-18 47 automatic captioning social medium image caption generated 6.1.2 black box black box behavioural method item tested tester non-functional integration black box output uploads image 2017-18 48 automatic captioning social medium image selects caption hashtags output displayed selection 6.1.2.1 considered ensure input 2017-18 49 automatic captioning social medium image tested image belonging domain built domain nature domain classroom environment 2017-18 50 automatic captioning social medium image 2017-18 51 automatic captioning social medium image 7 introduced novel automatic caption generation social medium image implement initially analyzed existing deep neural network machine learning designed implemented relevant caption social medium image develop designed description image natural language processing keywords extracted scrapping wa deep neural network trained image quote relevant caption generation social medium image caption generated form hash-tags quote phrase expanded generating caption form song lyric language 2017-18 52 automatic captioning social medium image 8 01 o. vinyals al `` neural image caption generator `` 2015 base paper 02 kun fu al `` aligning image captioning region-based attention scene-specific context `` 2016 03 kenneth tran al `` rich image captioning wild `` conference vision pattern recognition workshop 2016 04 yan-ying chen al `` business-aware latent topic image captioning social medium `` fx palo alto laboratory inc. palo alto california usa 2016 05 amir ghazvinian al `` scrappy simple web scraping '' stanford biomedical informatics link 1. http //research.googleblog.com/2016/09/show-and-tell-image-captioning- open.html 2. http //flask.pocoo.org/docs/0.12/ 3. http //stackoverflow.com/questions/4183506/python-list-sort-in-descending-order 4. http //stackoverflow.com/questions/28090191/how-to-retrieve-sub-documents-in- a-array-from-mongodb-using-python-script 5. http //stackoverflow.com/questions/42465578/parsing-a-json-file-python 2017-18 53", "keywords": ["ball green", "ball green field", "caption generation", "caption generator", "caption image", "clip art", "cloud vision", "cloud vision api", "computational linguistics", "confidence score", "description image", "enhance experience", "google cloud", "google cloud vision", "green field", "image caption", "image caption generator", "image captioning", "image description", "image image", "image processing", "image uploaded", "input output", "json format", "label detection", "language processing", "machine learning", "machine translation", "medium image", "metric bleu", "microsoft api", "microsoft google", "natural language", "natural language processing", "neural image", "neural image caption", "neural network", "noun verb", "object image", "processing natural", "processing natural language", "processing process", "quote database", "relevant caption", "scenespecific context", "semantic meaning", "simple web", "social medium", "social medium image", "uploaded image", "vector representation", "vision api", "white box", "word caption", "word sentence", "word word", "yellow ball", "yellow ball green"], "libraries": ["nltk"], "languages": ["cs", "python", "javascript", "basic", "html", "eiffel"], "frameworks": ["flask"], "dbs": ["mongodb"]}, "./reports/BE Project Report_21.pdf": {"title": "proactive monitoring of server logs to avoid instant server shutdown", "filename": "./reports/BE Project Report_21.pdf", "data": "proactive server log avoid instant server shutdown proactive server log avoid instant server shutdown manasi gawali kanchan pingale prajakta raosaheb b120058529 b120058589 b120058624 b120058554 guidance prof. a. g. dhamankar sr. 27 pune-satara road dhankawdi pune-411043 2017-2018 2017-18 proactive server log avoid instant server shutdown proactive server log avoid instant server shutdown manasi gawali kanchan pingale prajakta raosaheb b120058529 b120058589 b120058624 b120058554 bonafide prof. a. g. dhamankar earlier diploma prof. a. g. dhamankar prof. d. d. londhe coordinator dr. b. a. sonkamble dr. p. t. examiner 2017-18 proactive server log avoid instant server shutdown sponsorship letter 2017-18 ii proactive server log avoid instant server shutdown acknowledgement volume word express gratitude mr.a.g dhamankar helped explore vast topic organized manner grateful dr. mr. b.a sonkamble dr. p. t. inspiration triggered thankful staff member colleague hour provided help facility importantly parent almighty showing direction blue help stay calm oddest time keep moving time wa hope manasi gawali kanchan pingale prajakta raosaheb 2017-18 iii proactive server log avoid instant server shutdown 3.1 3.2 6.1 white box 6.2 black box 2017-18 iv proactive server log avoid instant server shutdown 2.1 working elasticsearch 4.1 4.2 4.3 4.4 4.5 5.1 5.2 class dfd state ii log parsed ii log 5.3 apache log 5.4 parsed apache log 5.5 kibana dashboard 5.6 email notification 6.1 6.2 gantt pert 2017-18 proactive server log avoid instant server shutdown sponsorship letter acknowlegments title existing proposed specification anaysis definition concept datasets non-functional 3.5.1 3.5.2 3.5.3 3.5.4 3.5.5 1.1 1.2 2.1 2.2 3.1 3.2 3.3 3.4 3.5 1 2 3 4. ii iii iv 1 2 3 3 4 5 5 8 9 9 9 9 9 9 10 10 11 11 12 2017-18 vi proactive server log avoid instant server shutdown 5 6 7 8 4.1 4.2 4.3 4.4 4.5 5.1 6.1 6.2 6.3 6.4 7.1 8.1 8.2 8.3 dfd structural behavorial stage implmentation preparation processing 5.1.1 5.1.2 split decomposition 2.0 pert evaluation white box black box 7.1.1 7.1.2 plagiarism review sheet 13 14 14 15 16 18 19 19 20 25 26 26 27 27 28 29 29 30 31 32 32 32 33 34 34 35 2017-18 vii proactive server log avoid instant server shutdown server defined program manages access centralized service network definition stated server heart smoothly unexpected shutdown server lead unhealthy situation aim avoid instantaneous shutdown server elastic search server log file parsed file humanly readable concept elastic search play runtime generated processed parsed stored cluster elastic search processed analyzed notified dashboard notification email notification server shutdown saving time 2017-18 1 proactive server log avoid instant server shutdown 1 2017-18 2 proactive server log avoid instant server shutdown 1. 1.1 cleansing inspecting modeling crucial day increasing unexpected outcome server .lot heard server crash reason number connected server service time provided server .this fatal lead major unexpected shutting server common issue looked log server ia server sql server apache server parsed converted generic json format dumped search engine named elastic search elastic search flexible consistent achieve fast search response searching directly search .later detects threat notifies notification dashboard notification email notification 1.2 multiple server deliver business pre-eminent service include database server core app server caching server web server performance server pivotal server fail influence delivery business service apart panic flurry thing online good number employee twiddling thumb boss wondering going cost company loss focal recovery time-consuming process requires incorporated indispensable performance issue proactively identified early stage fixed turn hamper business 2017-18 3 proactive server log avoid instant server shutdown 2 2017-18 4 proactive server log avoid instant server shutdown 2. 2.1 existing existing 1. nagios nagios monitor entire infrastructure ensure service business process functioning properly event failure nagios alert staff allowing remediation process outage affect business process end-users customer un-friendly gui lack database performance record difficulty configuration lack automatic device discovery 2. goaccess goaccess source real-time web log analyzer interactive viewer terminal *nix browser fast valuable http statistic administrator require visual server fly real-time functionality piping multiple log file 2.2 proposed era mobile device constantly creating surprising amount includes human variety thing accelerate creation continues stagnation change great decade computational ability meet challenge .there billion log event generated everyday giant company mining business log challenge traditional scale example load billion log event oracle 2017-18 5 proactive server log avoid instant server shutdown database oracle cluster oracle cluster scale performance lower sql lost rapid development internet amount internet exponential growth existing centralized search engine mass retrieve difficult search engine distributed processing capability deal growth constantly expanding size enhance 's ability process building distributed search engine meaningful time money search analyze log real time oracle cluster pressure experience internet company facebook yahoo traditional rmdbs process reasonable response time lucene full-text search search source library full- text indexing search java development environment lucene free source mature lucene currently year popular free java retrieval library elasticsearch construct based lucene source distributed restful search engine designed cloud computing achieve real-time search stable reliable fast easy install support json http best elasticsearch real time search implemented java client supported php ruby perl scala python .net javascript erlang clojure django couchbase searchbox integrated elasticsearch mongodb counchdb rabbitmq sofa jdbc filesystem dropbox activemq ldap amazon sqs st9 oai twitter imported solr directly working elasticsearch elasticsearch distributed storage store fetch complex serialized json document real time word instance document indexed elasticsearch retrieved node cluster performing search json object elasticsearch json format workflow elasticsearch 1. elasticsearch based apache lucene smallest unit elasticsearch document largest unit multiple shard shard elasticsearch lucene maximum number document lucene fixed depends version lucene lucene 5843 limit 2147483519. create provide number shard shard independent hosted node elasticsearch cluster elasticsearch field indexed default _eld dedicated inverted fast retrieval database 2017-18 6 proactive server log avoid instant server shutdown inverted query return breath-taking speed elasticsearch refreshes default time interval 1 second help achieving nrt search interval changed modifying elasticsearch.yml setting file /config folder elasticsearch designed keeping cloud environment mind elasticsearch automatically detects node network cluster cluster node number shard number replica setting elasticsearch.yml file document indexed inverted created field inverted field field document pointer document standard analyser ngram field multiple inverted fig 2.1 working elasticsearch 2017-18 7 proactive server log avoid instant server shutdown 3 specification 2017-18 8 proactive server log avoid instant server shutdown 3. specification 3.1 definition proactively monitor server avoid instant shutdown log elastic search 3.2 concept concept analyzing log server parsing respective log json format pin point online threat server shut predicted avoided 3.3 loss focal server shutdown recovery time-consuming process requires incorporated avoid predicts server shutdown measure solve consequence 3.4 pin point online threat avoid occurring server shutdown 3.5 3.5.1 datasets datasets proper execution log file web server database server database server 1. mysql 2. mongodb 2017-18 9 proactive server log avoid instant server shutdown web server 1. apache 2. tomcat 3. ii server 3.5.2 describes 1. par log file server 2. create log format server log 3. create cluster elastic search 4. search threat elastic search 5. 6. predict notify server shutdown 3.5.3 funtional specifies function 1. parsing log file efficiently file format 2. searching time 3. searching fast 4. replication sharding properly 5. effectivity efficiency compatibility security major non-functional 2017-18 10 proactive server log avoid instant server shutdown 3.5.4 machine server memory hard drive processor live server 4gb ram 10gb atleast i3 processor 3.1 3.5.5 operating win linux 64 bit programming language source platform wide functionality python 2.7.x python handling collected python library manipulation python angular 4 3.2 2017-18 11 proactive server log avoid instant server shutdown 4 2017-18 12 proactive server log avoid instant server shutdown 4. 4.1 fig 4.1 log file server database server web server consideration log file parsed json document fed elastic search json formatted parsed log file fed elastic search stored form cluster indexed easier search analyzing simpler online threat detected collected analyzed dashboard notified server shutdown avoided fig 4.1 2017-18 13 proactive server log avoid instant server shutdown 4.2 dfd dfd log server parsed brought common format stored cluster easier searching analyzing elastic search cluster elastic search cluster detects threat sends notification server administrator fig 4.2 dfd 4.3 structural class log extraction class extract log database server web server parsing log .parsed log brought common format stored cluster .elastic search search check threat sends notification form email display notification dashboard 2017-18 14 proactive server log avoid instant server shutdown fig 4.3 class 4.4 behavioral showcase accessed actor fig 4.4 2017-18 15 proactive server log avoid instant server shutdown fig 4.5 log server parsed parsed log dumped elastic search cluster .elastic search analyze detects threat sends notification fig 4.5 state 4.5 parser 1. define log file parsed 2. dictionary log file prepared 3. remove unnecessary log comment 4. parse log file log 5. store parsed log json format file 6. log variable size folder prepared time efficiency 2017-18 16 proactive server log avoid instant server shutdown hierarchical clustering item clustered n*n distance similarity matrix basic process hierarchical clustering 1. start assigning item cluster item cluster item distance similarity cluster distance similarity item 2. find closest pair cluster merge single cluster cluster le 3. compute distance similarity cluster 4. repeat step 2 3 item clustered single cluster cluster size n. elastic search 1. log json format fed elastic search 2. basic considered 3. document split dictionary format word frequency document belongs 4. simple text processing lowercasing removing punctuation splitting word construct `` inverted '' 5. inverted map term document position document term 6. term dictionary sorted find term subsequently occurrence postings-structure 7. 2017-18 17 proactive server log avoid instant server shutdown 5 2017-18 18 proactive server log avoid instant server shutdown 5.1 stage 5.1.1 preparation considered building 1. apache log file unparsed log snippet 127.0.0.1 20/sep/2017 20 34 43 +0530 `` http/1.1 '' 200 871 `` '' `` mozilla/5.0 x11 ubuntu linux x86_64 rv 49.0 gecko/20100101 firefox/49.0 2. ii log file unparsed log snippet microsoft internet service 8.5 version 1.0 2017-02-03 20 04 07 10.0.0.4 80 120.138.116.242 mozilla/5.0+ windows+nt+6.3 +wow64 +rv 51.0 +gecko/20100101+firefox/51.0 200 0 0 62 2017-18 19 proactive server log avoid instant server shutdown 5.1.2 processing elk stack elk acronym three source elasticsearch logstash kibana elasticsearch search analytics engine source distributed restful json-based search engine easy scalable flexible earned hyper-popularity company formed search logstash server-side processing pipeline ingests multiple source simultaneously transforms sends `` stash '' elasticsearch ease processing independent source format schema kibana source analytics visualization platform designed elasticsearch kibana search view interact stored elasticsearch easily perform advanced visualize variety maps.kibana easy understand volume simple browser-based enables create share dynamic dashboard display change elasticsearch query real time.kibana visualize graph elasticsearch filebeat elastic stack i.e seamlessly logstash elasticsearch kibana lightweight shipper logs.elastalert sourced developed github alerting .elastalert developed automatically query analyze log elasticsearch cluster generate alert based easy-to-write rule server log ii apache server log .these log studied thoroughly considered .as ii server log 15 atttributes include time cs-method cs-uri-stem cs-username c-ip user-agent referer sc-status s-ip sc-substatus sc-win32-status time-taken cs-uri-query s-portand apache server log include time cs-method cs-uri-stem cs-username c-ip user-agent referer sc-status user-identity response- size.the common log consideration .further parsing log python language json format .the parsed log forwarded filebeat filebeat text shipper forward parsed log logstash .logstash enriches transforms elasticsearch alerting alerting elastalert alert gmail smtp sm alert consists source log file error hostname 2017-18 20 proactive server log avoid instant server shutdown notified help action output snapshot fig 5.1 ii log 2017-18 21 proactive server log avoid instant server shutdown fig 5.2 parsed ii log fig 5.3 apache log 2017-18 22 proactive server log avoid instant server shutdown fig 5.4 parsed apache log fig 5.5 kibana dashboard 2017-18 23 proactive server log avoid instant server shutdown fig 5.5 email notification 2017-18 24 proactive server log avoid instant server shutdown 6 2017-18 25 proactive server log avoid instant server shutdown 6. 6.1 split split parser log file server database server web server consideration python log file parsed json document fed elastic search elasticsearch json formatted parsed log file fed elastic search stored form cluster indexed easier search analyzing simpler notification dashboard online threat detected collected analyzed dashboard notified server shutdown avoided 6.2 decomposition function decomposed 4 segment parsing parsing log file respective server log form json document clustering parsed log divided stored form cluster broken node shard segment dashboard online threat detected analyzed elastic search helpful predicting avoiding server shutdown notification notification server shutdown dashboard measure avoid shutdown 2017-18 26 proactive server log avoid instant server shutdown 6.3 2.0 fig 6.1 gantt 6.4 pert fig 6.2 pert 2017-18 27 proactive server log avoid instant server shutdown 7 evaluation 2017-18 28 proactive server log avoid instant server shutdown 7.1 7.1.1 white box summar step expected actual 1 2 3. parsing log mapping compile code mapping elastic- search created logstash alerting mechanism structuring query 4. cross clustering accessing node parse log file key pair logstash created default format specific format alert source hostname matching query remote node form cluster working expected logstash created timestamp working expected node cluster form cluster statu pas pas pas fail 6.1 white box 2017-18 29 proactive server log avoid instant server shutdown 7.1.2 black box summary step parsing log compile code expected actual log parsed perfectly working expected status pas 1 2 3 4. visualization check kibana dashboard reporting visualization running elasticalert instance send alert elastalert parsing self-defined log parse log parser visualizatio alert source hostname parse log working expected pas working expected pas fail parser doesnt log pattern log parsed 6.2 black box 2017-18 30 proactive server log avoid instant server shutdown 8 2017-18 31 proactive server log avoid instant server shutdown 8.1 developing prevent unexpected shutting helpful effective functioning re-work server failure saved saving precious lack- time 8.2 real-time eventual consistency real-time search 1 process refresh wake 1 default searchable elasticsearch lose reason network partition multiple node going time update expensive update existing document deletes document re-inserts document 8.3 log pattern prediction machine learning spam detection server utilization percentage predicting configuration usage pattern detection aws integration azure apis integration integration docker hadoop devops 2017-18 32 proactive server log avoid instant server shutdown 01 o. kononenko o. baysal r. holmes m. godfrey `` mining modern repository elasticsearch '' proceeding 11th working conference mining repository msr 2014 2014 02 risto vaarandi clustering mining pattern event log proceeding 2003 workshop ip operation 119-126 03 pragya gupta1 sreeja nair paper elastic search paper nov152583 volume 5 issue 1 2016 04 jun bai log real time search based hbase elasticsearch natural computation icnc 2013 ninth international conference 1166 1170. 2013 05 yicheng zheng feng deng qingmeng zhu yong deng cloud storage search mass spatio-temporal proxmox elasticsearch cluster cloud computing intelligence ccis 2014 3rd international 2017-18 33 proactive server log avoid instant server shutdown a. plagiarism 2017-18 34 proactive server log avoid instant server shutdown b. review sheet 2017-18 35 proactive server log avoid instant server shutdown 2017-18 36 proactive server log avoid instant server shutdown 2017-18 37 proactive server log avoid instant server shutdown 2017-18 38", "keywords": ["apache log", "apache server", "black box", "cluster cluster", "cluster elastic", "cluster elastic search", "database server", "detects threat", "distance similarity", "elastic search", "elasticsearch cluster", "elasticsearch kibana", "email notification", "fed elastic", "fed elastic search", "form cluster", "instant server", "instant server shutdown", "json document", "json format", "kibana dashboard", "log file", "log json", "log json format", "notification dashboard", "notification server", "online threat", "parse log", "parsed log", "proactive server", "proactive server log", "real time", "search engine", "server log", "server shutdown", "shutdown server", "stored cluster", "stored form", "stored form cluster", "web server", "white box"], "libraries": [], "languages": ["php", "erlang", "python", "ruby", "perl", "basic", "javascript", "java", "scala"], "frameworks": ["django", "angular"], "dbs": ["hbase", "mysql", "mongodb"]}, "./reports/BE Project Report_22.pdf": {"title": "data migration", "filename": "./reports/BE Project Report_22.pdf", "data": "migration aakruti shitut sai amle anjali jain aniruddh tejomurtula be120058501 be120058506 be120058507 be120058631 guidance prof. s. a. jakhete s. 27 satara road 411043 2017-2018 sr. topic order sponsorship industry acknowledgement abbreviation title 1. 2 3 4 5 1.1 1.2 2.1 2.2 3.1 3.2 4.1 4.2 4.3 5.1 5.2 5.3 5.4 5.5 undertaken background review existing methedologies proposed specification behavioural ar-api comparator audit logging error logging ii iii iv 1 2 3 4 5 5 6 7 7 7 8 8 9 10 11 11 11 11 11 12 6 7 6.1 6.1.1 6.1.2 6.2 attachment 13 13 13 17 21 22 23 24 migration migration aakruti shitut sai amle anjali jain aniruddh tejomurtula be120058501 be120058506 be120058507 be120058631 bona fide prof. s. a. jakhete earlier diploma prof. s. a. jakhete dr. b. a. sonkamble examiner dr. p. t. 2017-18 migration 2017-18 ii migration acknowledgement immense pleasure satisfaction carrying titled migration opportunity express heartfelt gratitude dr. p. t. sir providing facility infrastructure complete express deepest gratitude appreciation dr. b. a. sonkamble constant sincerely thankful mrs. s. a. jakhete unflagging support continuous encouragement phase guidance persistent help grateful reviewer s. s. pande t. a. rane update suggestion co-ordinator d. d. londhe well-managed timely concern sponsorship warm faculty helped view encouraging express deepest gratitude bmc recognizing potential granting sponsorship thankful mentor bmc mr. vishal kumar toshniwal guidance helping learning process directly indirectly seminar worked completion aakruti shitut sai amle anjali jain aniruddh tejomurtula 2017-18 iii migration fig 4.1 4.2 4.3 diagram.. behavioural ... ... ... 6.1.1 field form before.. 6.1.2 panel form 6.1.3 screen form 6.1.4 social form 6.2.1 field form 6.2.2 panel form 6.2.3 screen form 6.2.4 social form 8 9 10 13 14 15 16 17 18 19 20 2017-18 iv migration abbreviation abbreviation illustration cmdb itsm rest etl api dbms erp ip ar gpl customer database service representational state transfer extract transform load program database enterprise planning internet protocol action request general public license 2017-18 migration paper propose database migration common database vendor mysql mongodb destination apis rest underlying website friendly etl fails destination source proprietary company proposed method migration migrating mysql mongodb apis 2017-18 1 migration 1. migration relocating ensuring correctly migrated etl paper focus migration commonly dbms vendor api java migration complicated version operating fails upgrade wide range scenario commercial etl prevalent market database migration 2 major disadvantage apart fact fail migrate source etl tend expensive affordable small medium sized second require warehousing special skill small medium sized paper propose alternative method enters credential web database mysql mongodb web built rest approach allows developer migration user-friendly manner opposed legacy migration credential include ip source destination username password port number authentication 2017-18 2 1.1 undertaken migration change storage update ensure customer migrated loss fault tolerant scalable number aim migrate smartit database cmdb itsm database 2017-18 3 1.2 migration migration change database vendor version upgrade erp installed irrespective reason migration losing cost company lot firm migrating correctly lead direct attack company economy market migration costly side migration provide good ui web paper drawback existing etl applicable migration database existing migration source destination database rigid ui customer directly designed web appealing enable migrate his/her knowledge migration 2017-18 4 migration 2. background 2.1 existing general database migration rdbm complex time-consuming magnified process heterogeneous db discus categorized review existing migration strategy translation technique discus issue making migration process effective existing respect migration 1 migration object oriented processed object/xml form stored relational form based concept object program database persistence process requires object-to/from-database mapping technique mapping bi- directional demand updating relational database object oriented reverse direction object-based schema translated database schema object associated source database linked primary key foreign key single object represented tuples lot joining query 2 database integration connection established source target database allow built top dbms access relational object/xml dbms impression stored database achieved special called gateway support connectivity dbms involve sql database schema query operation converted sql translated target object underlying database retrieving unification schema providing two-way mapping integration cooperate autonomously creating unified consistent view database hiding heterogeneity query language commercial dbms oracle mysql sql server provide flexibility mapping gateway construction heterogeneous database 3 database migration database relational database called source second called target represents migration process addition process help intermediate conceptual representation e.g er stage enrichment input source schema enriched semantically translated target schema stored source database converted target database based target schema 2017-18 5 migration generally relation translated equivalent target object foreign key replaced domain weak relation mapped component class multi-valued composite inside parent class/entity association inheritance extracted analysing database instance 4 migration based rest api rest stand representational state transfer version web called source version identified schema persistent target version rest api change schema making comfortable version update major drawback database database biggest migration existing technique describe migration database server deal migration database server itsm middleware database server engineer 2.2 proposed written java automates migration process version update migration smart database server access itsm database directly api ar api action- request communicate itsm server itsm server log migration status log file 2017-18 6 migration 3. specification 3.1 laptop 8 gb ram 500 gb hard disk wi-fi connectivity network card 3.2 java source object oriented programming language developed jre 1.8.0_144 java run-time environment time environment execution java program including interpreter jvm jdk 1.8.0_144 java development kit includes class package execution java program eclipse oxygen version ide developing java code apache tomcat server apache tomcat source web server servlet container developed apache foundation mysql database mysql fast easy rdbms small business mysql customizable source gpl allows programmer modify mysql fit specific environment representational state transfer rest rest style consisting guideline best practice creating scalable web service apache maven maven build automation java maven address aspect building 1 describes built 2 describes build single java program bmc smart environments- purpose 2017-18 7 migration 4. 4.1 fig 4.1 2017-18 8 4.2 behavioural migration fig 4.2 behavioural 2017-18 9 4.3 migration fig 4.3 2017-18 10 migration 5. 5.1 check status mig smartit audit form status staged- start migration update status progress check -get db record galileodb -get itsm record fnd smartit layout field -compare db record itsm record -if record exist fnd smartit layout field skip record -else migrate db record overlay 1 -if db record group check member member group fnd smartit layout field form skip entire group migrating migrating update status mig smartit audit finished 5.2 ar-api api create abstraction level database enable functionality provide security 5.3 comparator migration process interrupted error process resumed check migrated continue migration rest comparator implemented record database comparing record attempting migrate 5.4 audit logging unsuccessful migration view status attempt migration log understand interrupt process help improve performance 2017-18 11 migration 5.5 error logging interrupted migration multiple error error logged visible resolve complete migration error analyzed improve performance error logging includes attempt migration encountered error 2017-18 12 6.1 6.1.2 migration 6. fig.6.1.1 field form 2017-18 13 migration fig.6.1.2 panel form 2017-18 14 migration fig.6.1.3 screen form 2017-18 15 migration fig.6.1.4 social form 2017-18 16 6.1.2 migration fig.6.2.1 field form 2017-18 17 migration fig 6.2.2 panel form 2017-18 18 migration fig.6.2.3 screen form 2017-18 19 migration fig.6.2.4 social form 2017-18 20 6.2 migration 1. bmc specific 2. etl 2017-18 21 migration 7. change storage update customer migrated loss fault tolerant scalable number addition changed definition existing parameter change existing 2017-18 22 migration 1. chin- yun hsieh hong-an hsieh yu chin cheng method web migration based restful api study ezscrum 2016 2. m. elamparithi v. anuratha review database migration strategy technique 2016 3. bmc confluence 4. andreas meier hierarchical relational database migration 2014 5.andreas meier providing databse migration tools- practitioner approach 2013 6. complete migration online 2017-18 23 migration 2017-18 24 migration 2017-18 25 migration 2017-18 26 migration 2017-18 27 migration 2017-18 28 migration 2017-18 29 migration 2017-18 30 migration 2017-18 31 migration 2017-18 32 migration 2017-18 33 migration 2017-18 34", "keywords": ["aakruti shitut", "aakruti shitut sai", "amle anjali", "amle anjali jain", "anjali jain", "database migration", "db record", "field form", "fnd smartit", "fnd smartit layout", "java program", "layout field", "migration database", "migration fig", "migration migration", "migration process", "mysql mongodb", "relational database", "sai amle", "sai amle anjali", "screen form", "shitut sai", "shitut sai amle", "smartit layout", "smartit layout field", "social form"], "libraries": [], "languages": ["small", "java"], "frameworks": [], "dbs": ["mongodb", "mysql"]}, "./reports/BE Project Report_23.pdf": {"title": "praytm \u2013 app for meditation", "filename": "./reports/BE Project Report_23.pdf", "data": "praytm app meditation nilam vijay badgujar namrata anil chaudhari prajakta nimba patil punam umesh patil b120058511 b120058519 b120058582 b120058584 guidance prof. s. b. deshmukh s. 27 satara road 411043 2017-2018 praytm app meditation praytm app meditation nilam vijay badgujar namrata anil chaudhari prajakta nimba patil punam umesh patil b120058511 b120058519 b120058582 b120058584 bonafide prof. s. b. deshmukh earlier diploma prof. s. b. deshmukh dr. b. a. sonkamble dr. p. t. examiner technology- 2017-18 praytm app meditation sponsership letter technology- 2017-18 praytm app meditation completion technology- 2017-18 praytm app meditation acknowledgement express deep sincere gratitude .s b. deshmukh support continuous encouragement guidance persistent help express deepest gratitude dr. b. a. sonkamble valuable time support comment suggestion directly indirectly helped warm faculty reviewer opportunity express heartfelt gratitude dr.p.t providing infrastructure complete helped view encouraging completion miss.nilam badgujar miss.namrata chaudhari miss.prajakta patil miss.punam patil technology- 2017-18 2.1 3.1 fig 3.1 3.2 3.3 4.1 4.2 4.3 4.4 4.5 4.6 4.7 5.1 5.2 5.3 5.4 5.5 5.6 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9 6.10 6.11 6.12 6.13 6.14 praytm app meditation comparison existing proposed pert split-up gantt 3.0 pert class registration chanting registration chanting database schema chanting session history database schema code snippet chanting round calculation code snippet web service code snippet remainder code snippet validation screen registration screen screen chanting screen dashboard screen profile screen history screen add manual chanting screen screen remainder screen rating screen admin portal admin portal devotee admin chanting history technology- 2017-18 praytm app meditation day meditation practicing technique stable mind rate meditation insight timer japa /chanting mhk drawback lack customization doe n't keep track daily performed devotee signal meditation session proposing free drawback chanting meditation recommendation showing performance statistic stress daily life style suggestion improve mental physical stability recommendation technique history app challenge devotee keywords mobile computing recommender machine learning filtering graphical technology- 2017-18 praytm app meditation 1. title 2. 3. sponsorship industry 4. completion 5. acknowledgement 6. 7. 8. title 1. 1.1 1.2 2. review 2.1 existing 2.2 proposed 3. specificationand 3.1 definition 3.2 concept 3.3 3.4 3.5 3.5.1 datasets 3.5.2 3.5.3 non-functional 3.5.4 3.5.5 3.6.1 3.6.2 split-up 3.6.3 decomposition 3.6.4 role responsibility 3.6.5 3.0 3.6.6 pert 3.6.7 pert 3.6 4. 4.1 architechure 4.2 dfd 4.3 structural 4.4 behavioural 4.5 5. 5.1 stage ii iii iv vi vi vii 1 2 3 4 5 5 6 7 7 8 8 8 8 9-10 9 9 9 10 10 10 10-11 11 12 12 13 14 15 15 16 16 17 19 20 technology- 2017-18 praytm app meditation 5.1.1 preparation 5.1.2 processing 5.2 elaborate issue 6. evaluation 6.1 experiment algorithmic 6.1.1 6.1.2 experiment discussion experiment 27 6.2 6.2.1 7. 7.1 7.2 7.3 base paper plagiarism review sheet 20 20-23 23-25 26 27 28-34 35 35-46 47 48 48 48 49-50 technology- 2017-18 praytm app meditation 1 technology-information technology-2017-18 1 praytm app meditation 1.1 stress increasingly prevalent culture associated physical psychological health issue meditation practice improve health aspect including reduction depressive relapse suffer depression meditation help reduce blood pressure anxiety attack headache ulcer insomnia muscle joint improves mood immune energy level gain inner source energy help relieve stress life deployed android platform count number bead devotee change count round regular basis spring general-purpose conversion field formatting spring object xml mapping functionality oxm moved spring web service spring comprehensive rest support maven comprehension maven ability easily write plugins java scripting language maven release distribution publication additional configuration maven integrate source control maven instant access extra configuration developed called `` praytm '' digital ocean cloud storing digital ocean cloud simple affordable scalable reliable cloud hosting keep safe distributing server redundant server hosted cloud protected failure automated backup snapshot ensure server stay safe up-to-date trello trello free pricing basic service trello quick front card easy tag label category drag drop technology-information technology-2017-18 2 praytm app meditation functionality in-line editing checklist progress meter easy uploading file attachment filtering 1.2 physical level meditation help reduce blood pressure anxiety attack headache ulcer insomnia muscle joint improves mood immune energy level gain inner source energy mental benefit meditation mind fresh delicate beautiful clean nourishes calm feel overwhelmed unstable emotionally shut increase focus inner peace positive thinking decision making power performance concentration emotional stability creativity happiness gain clarity peace mind smaller history option devotee view history daily basis prospective history number bead number round day technology-information technology-2017-18 3 praytm app meditation 2 review technology-information technology-2017-18 4 praytm app meditation 2.1 existing 2.1.1 insight timer main drawback noticed lack customization music background noise geared eastern tradition 2.1.2 japa /chanting issue wa screen reorients position count reset 2.1.3 mhk app signal session music pause meditation 2.2 proposed 2.1 comparing existing proposed provide better interaction existing provide quick response robustness security care scalable globe generate suggestion dynamically moderate accuracy android io device provide facility choose background music signal session music pause meditation 2.1 comparison existing proposed sr. app registration meditation chanting group recommendat 1 insight timer ion 2 japa/ chanting 3 mhk 4 praytm technology-information technology-2017-18 5 praytm app meditation 3 specification technology-information technology-2017-18 6 praytm app meditation 3.1 definition meditation praytm i.e pray mobile includes history devotee registered devotee devotee directly perform time validity checked devotee valid message n't chanting meditation key point perform chanting meditation chanting start chant clicking start chant chant clicking finish chant meditation option includes guided unguided meditation i.e keep audio create log depends regular perform history option devotee view history daily basis prospective history number bead number round day performance provided daily basis option remainder setting remainder devotee notified message time .rating option devotee feedback admin admin panel fetch devotee digital ocean cloud admin 3.2 concept android device downloading app hibernate mapping object oriented concept database spring including library .maven comprehension feed registration credential valid devotee chant meditate increase performance chanting history devotee provided server profile total round total bead day forgets chat time day reminder .user rating comfort liking admin admin panel devotee chanting history technology-information technology-2017-18 7 praytm app meditation 3.3 create bring people globe engaged chanting meditation authentication social medium profile devotee total number total people meditation live time total number people installed app screen chanting person click button count increase reminder reminding person meditation session history screen history change background feel fresh comfortable milestone rating option app app facility guided unguided meditation admin panel admin keep track registered devotee 3.4 displaying active devotee total devotee numerical format devotee registration authentication devotee authentication provide guided unguided meditation devotee displaying history daily basis number bead number round facility reminder rate app change background provide admin admin panel keep devotee track 3.5 3.5.1 datasets input e-mail username password age mobile number technology-information technology-2017-18 8 praytm app meditation 3.5.2 validation checking provided correct chanting meditation provide chanting meditation track performance track performance devotee daily generate log devotee 3.5.3 non-functional security provide security provided performance essential fast responsiveness ensures ready respond 's input scalability scalability well deal increasing size usability relates easily people measure usability time familiar function 's training help maintainability relates ease app find bug 3.5.4 minimum android device version 4.0 ubuntu 16.04 window 7 i3 core processer hard disk 500 gb 4 gb ram 3.5.5 digital ocean cloud bitbucket version control 4.12 trello technology-information technology-2017-18 9 praytm app meditation rest web service android studio hibernate 4.2 spring 4.3 maven 3.5.0 3.6. 3.6.1. carry people facility equipment capable completion main i.e devotee admin internet connection establishment server client 3.6.2. split-up fig 3.1 split-up component registration chanting recommendation creation group fig.3.1 split-up 3.6.3. decomposition 1 registration devotee devotee registered devotee devotee time registration devotee enter username location birth age devotee directly perform panel devotee technology-information technology-2017-18 10 praytm app meditation enter username password validate server devotee valid n't 2 chanting meditation chanting meditation key point perform chanting meditation chanting start chanting finish chant meditation option hear audio audio choose language hearing audio 3 rating devotee rate app his/her comfort app 4 remainder devotee remainder chanting time day 3.6.4. role responsibility member member contribution play vital role completion divided front backend development member divide equally actively phase contribution member 1 2 completing individual deliverable 3 provide expertise field 4 working client gathering 5 documenting sponsor initialize .they active member high-level planning resolve conflict obstacle occurring development people approve phase 1 key decision 2 approving budget 3 keep check availability 4 communicate technology-information technology-2017-18 11 praytm app meditation 5 oversight direction 6 discussing designing process identifying member 3.6.5 3.0 fig 3.2 scheduling proposed 3.6.6 pert fig.3.2 gantt 3.0 3.1 coordination duration searching gathering planning modelling ui designing validation ui deployment 3.1 pert duration 5 day 5 day 10 day 5 day 10 day 10 day 5 day 60 day 10 day 2 day technology-information technology-2017-18 12 praytm app meditation 3.6.7 pert fig 3.3 diagrammatic representation coordination fig.3.3 pert technology-information technology-2017-18 13 praytm app meditation 4 technology-information technology-2017-18 14 praytm app meditation 4.1 fig 4.1 recommendation component cloud component interact hibernate maven rest web service 4.2 dfd fig .4.1 fig 4.2 stepwise component proposed fig.4.2 technology-information technology-2017-18 15 praytm app meditation 4.3 structural 4.3.1 class fig 4.3 proposed .recommendation group major class fig.4.3 class 4.4 behavioural 4.4.1 fig 4.4 fig 4.5 component registration chanting devotee fig.4.4 registration fig.4.5 chanting technology-information technology-2017-18 16 praytm app meditation 4.4.2 fig 4.6 fig 4.7 component registration chanting perform direct fig.4.6 registration fig.4.7 chanting 4.5 collaborative filtering recommendation slope item-based collaborative filtering completely based user-chanting ranking compute similarity object history ranking similarity predict potential ranking user-chanting pair dataset rate chanting calculates similarity prediction user-chanting rating hasnt rated slope slope wa named simplest form non-trivial item-based collaborative filtering based rating account rated chanting chanting rated calculate similarity matrix based well calculate chanting well number chanting occurrence technology-information technology-2017-18 17 praytm app meditation check his/her rating chanting step check chanting existing matrix occurrence create entry map matrix calculate difference rating positive negative difference rating negative stored double hand frequency stored integer .if rated chanting increase frequency count main logic divide calculated chanting rating difference number occurrence step print final difference matrix main slope going predict missing rating based existing order compare user-chanting rating difference matrix calculated previous step trick consider larger chanting entry frequency .that prediction equal -1. worked correctly receive prediction chanting didnt rate repeated rating chanting rated repeated rating change bug major factor affect slope technology-information technology-2017-18 18 praytm app meditation 5 technology-information technology-2017-18 19 praytm app meditation 5.1 stage 5.1.1 preparation devotee processing consists devotee e-mail username password age mobile number devotee considered stored database processing number count chanting history generated tracking devotee action server stored database time 5.1.2 processing devotee processing registered directly proper username password app start chanting chanting bead stored database .application active dashboard .devotees stored server fetch server postman .admin panel number devotee chanting history.fig.5.1 fig.5.2 database schema fig.5.1 database schema chanting session history technology-information technology-2017-18 20 praytm app meditation fig.5.2 database schema chanting round calculated code snippet fig.5.3 108 bead considered round fig.5.3 code snippet chanting round calculation technology-information technology-2017-18 21 praytm app meditation fig.5.4 code snippet utilization web service android fig.5.4 code snippet web service fig.5.5 code snippet remainder fig.5.5 code snippet remainder technology-information technology-2017-18 22 praytm app meditation fig.5.6 validation pattern recognition fig.5.6 code snippet validation 5.2 elaborate issues/techniques/software installing android studio 1. error start android studio error start android studio jdk validate android_studio_jdk jdk_home java_home point valid jdk installation echo press key continue issue android studio window launcher script doe find java installed 2. android sdk missing template android sdk missing template ensure sdk version 22 happen sdk installation android developer bundle eclipse sdk manager adt bundle update android sdk 21.1 22 android studio digital ocean issue 1. ssh authentication issue permission denied password 1. error output root 111.111.111.111 's password technology-information technology-2017-18 23 praytm app meditation permission denied publickey password 2. putty error output root 111.111.111.111 's password access denied server disconnect message 2 protocol error `` authentication failure root '' permission denied key 2. putty error output 1. error output permission denied publickey disconnected supported authentication method server publickey password doe console console prompt prompt ubuntu 14.04.4 lts server tty1 server password enter correct password error output incorrect password reset prompt prompt change password changing password root current unix password re-enter current password connection mistake re-entering current password success prompted enter password prompt enter unix password retype unix password technology-information technology-2017-18 24 praytm app meditation entering password session restarts i.e 're prompt error typically 's critical file managing authentication technology-information technology-2017-18 25 praytm app meditation 6 evaluation technology-information technology-2017-18 26 praytm app meditation 6.1 experiment algorithmic 6.1.1 discussion experiment devotee registered devotee devotee time registration devotee enter email mobile number password devotee directly perform panel devotee enter username password validate server devotee valid n't display total devotee active devotee total bead total round chanting key point perform chanting chanting start chanting finish chant meditation option hear audio devotee rate app his/her comfort app devotee remainder chanting time day remainder devotee notification time chant devotee view history basis number bead number round devotee manually add history app option improve devotee performs overlook history day basis admin admin panel cant access admin panel admin panel admin total devotee devotee devotee display mobile number email chanting history button click chanting history button history chanting latest chanting well total bead total round individual devotee technology-information technology-2017-18 27 praytm app meditation 6.1.2 experiment fig.6.1 screen fig.6.2 registration screen fig.6.1 existing fig.6.2 screen describes registration click registration button allow technology-information technology-2017-18 28 praytm app meditation fig.6.3 screen fig.6.4 chanting screen fig.6.3 screen display fig.6.4.screen display chanting display total screen press tap chant active total round total beads.as button perform chanting well change background option chanting click finish chant press start chant button button start chanting chanting stored history technology-information technology-2017-18 29 praytm app meditation fig.6.5 dashboard screen fig.6.6 profile screen fig.6.5 screen display fig.6.6 screen display profile example profile chant chanting remainder rating logout technology-information technology-2017-18 30 praytm app meditation fig.6.7 history screen fig.6.8 add manual chanting screen fig.6.7 screen display history fig 6.8 screen display manually history includes bead adding bead round well round based history check bead round everyday technology-information technology-2017-18 31 praytm app meditation fig.6.9 screen fig.6.10 remainder screen fig.6.9 screen display screen display chant hare krishna remainder chanting receive notification time chant technology-information technology-2017-18 32 praytm app meditation fig.6.11 rating screen fig.6.11 screen display rating feedback rating admin portal fig.6.12 admin portal technology-information technology-2017-18 33 praytm app meditation fig.6.11 display admin panel fig.6.13 admin portal devotee fig.6.13 display devotee fig.6.14 admin portal chanting history fig.6.14 display history individual latest performing chanting display technology-information technology-2017-18 34 praytm app meditation 6.2 6.2.1 1. registration scenario registration 2. registration scenario unsuccessful registration duplicate email provided technology-information technology-2017-18 35 praytm app meditation 3. registration scenario registration googleauthtoken 4. registration scenario unsuccessful registration incomplete provided registration missing isregisteredviagoogle flag and/or missing googleauthtoken string technology-information technology-2017-18 36 praytm app meditation 5. registration scenario unsuccessful registration failure /runtime exception 6. attempt correct failure response runtime exception db connection technology-information technology-2017-18 37 praytm app meditation 7. response full response 8. attempt correct username googleauthtoken provided technology-information technology-2017-18 38 praytm app meditation 9. unsuccessful attempt wrong googleauthtoken provided 10. unsuccessful attempt wrong password technology-information technology-2017-18 39 praytm app meditation 11. unsuccessful attempt matching email database 12. status change active technology-information technology-2017-18 40 praytm app meditation 13. attempt change status active failed wrong credential 14. status change notactive technology-information technology-2017-18 41 praytm app meditation 15. attempt change status notactive failed wrong credential 16. invocation refresh_home api response technology-information technology-2017-18 42 praytm app meditation 17. invocation refresh_home api wrong credential 18. invocation save_new_chanting_session technology-information technology-2017-18 43 praytm app meditation 19. invocation save_new_chanting_session wrong credential 20. invocation get_chanting_history wrong credential technology-information technology-2017-18 44 praytm app meditation 21. invocation get_chanting_history response number bead chanted parameter provided input record previous 30 provided input returned provided input record matching 30 current returned technology-information technology-2017-18 45 praytm app meditation technology-information technology-2017-18 46 praytm app meditation 7 technology-information technology-2017-18 47 praytm app meditation 7.1 purpose meditation create harmony physical vital mental psychological spiritual aspect human satisfied extend meditation improve leave peace ease track performance bring improvement life 7.2 n't deployed io recommendation improve meditation statistic provided grouping provided devotee communicate audio provided multilingual 7.3 praytm create log depends regular performed recommend audio video article blog challenge based daily performed devotee improve his/her performance recommendation provided app history performance statistic provided devotee create group time creation group admin sends invitation group devotee devotee he/she join group accepting invitation reject invitation invitation group included based devotee decide joining group group devotee send message discus location chant well perform meditation group regular basis making group communicate motivated chant/meditate receive nice quote chanting enters milestones/challenges reviewing self-rating generating suggestion audio hear improve meditation session facility guided meditation language option manual/auto/guided display summarization history help graphical representation technology-information technology-2017-18 48 praytm app meditation 1 ioannis tsingalis ioannis pipilis ioannis pita -a statistical clustering study youtube 2d 3d video recommendation graph 2014 2 laxmi shaw -statistical extraction multivariate pattern meditation eeg pca 2016 3 yongquan yang zhiqiang wei dongning jia yanping cong ruobing shan-a cloud based smart 2010 4 hugo sequeira paulo carreira thomas goldschmidt philipp vorst -energy cloud real-time cloud-native energy monitor analyze energy consumption multiple industrial site 2014 5 bin nie honggang zhang yong liu social interaction based video recommendation ecommending youtube video facebook 2014 6 zhou xing marzieh parandehgheibi fei xiao nilesh chris pouliot- content-based recommendation podcast audio-items natural language processing technique 2016 7 yanfeng wang mingyang ding zhiyong chen ling luo-caching placement recommendation cache-enabled mobile social network 2016 8 craig a. d. human feeling aware trend cognitive science 2004 9 craig a. d. feelnow anterior insula human awareness nature review neuro- science 2009 10 yao-chang huang shyh-kang jeng-an audio recommendation based audio signature description 2004 international conference multimedia expo technology-information technology-2017-18 49 praytm app meditation 11 heeter c. allbritton m. lehto r. h. day t. n.d. 6-week cybermeditation program hospiceprofessionals meditation engagement interoceptive awareness compassion fatigue international journal yoga therapy 12 killingsworth m. gilbert d. t. wandering mind unhappy mind 2009. technology-information technology-2017-18 50 praytm app meditation technology-information technology-2017-18 51 praytm app meditation a. base paper technology-information technology-2017-18 52 praytm app meditation b. plagiarism technology-information technology-2017-18 53 praytm app meditation c. review sheet technology-information technology-2017-18 54 virtual mindfulness meditation virtual reality electroencephalography health gamification amber choo aaron school interactive art school interactive art simon fraser surrey b.c canada achoo sfu.ca simon fraser surrey b.c canada amay sfu.ca mindfulness practice improve health aspect patient lifestyle including reduction depressive relapse suffer depression 4 reduction perceived pain chronic pain patient 3 mindfulness meditation reduce stress encourage relaxation 10 naturally beneficial demographic including life satisfaction 1 paper outline attempt translate learning outcome mindfulness practice gamification educational immersive virtual environment guided meditation catalyze mindfulness support electroencephalography eeg collection monitor affective state participant allows provide visual feedback real-time heavily influenced gamification strategy contemporary game practice order encourage persistent training behavior participant longer period time practice learning track keywords mindfulness gamification educational game meditation mbsr eeg emotiv electroencephalography vr virtual reality indie game i. mindfulness described state observation focused nature emotion experienced moment experience body currently undergoing matter trivial painful practice strives acceptance experience embodied reality promoting sense freedom acceptance habit brooding unnecessary negative thought auto-pilot mindless living 5 12 mindfulness practice including mindfulness-based stress reduction mbsr decade help participant combat negative experience stress pain ailment mind 2 5 life improvement extended individual life satisfaction 1 individual psychological disorder 2 6 outlined paper aim help casual gamers learn mindfulness practice engaging rewarding fashion mindfulness traditionally taught limited accessibility person interested developing skill mindfully meditate searching teacher learning group weekly lesson strain time limited mobility energy individual chronic condition spend game excellent 978-1-4799-7546-4/14/ 31.00 2014 medium disseminate learning practice easily accessible distributable engaging potential invoke affective state meaningful game equipped collect electroencephalography eeg observe participant state mind emotiv eeg headset 8 monitor emotional state time help predict participant straying mindfulness practice example participant stressing daily event preventing acquiring calm meditative state help refocus waning attention guided verbal instruction collection display eeg participant concrete visualization performance progress ordinary classroom setting ii review health mindfulness practice extensive benefitted wide range demographic decade notable trend mindfulness-related promising reducing perceived intensity pain chronic pain patient 9 3 individual suffering chronic pain easily manage intensity pain completing multi-week mindfulness program mindfulness practice improve mental health practice consistently 3-arm randomized unblinded trial plews- ogan examined mindfulness-based stress reduction mbsr massage group twenty-three chronic musculoskeletal pain patient participant completed twelve week mbsr mental health score sf-12 health assessment rise average improvement 10.2 sd=8.7 compared decrease mental health score 1.7 standard care group massage group mental health improvement twelve week 3 additionally mindfulness practice improve anger skill person suffered aggressive behavior 13 singhs paper motivating account patient intellectual disability fig 1. angkor wat scene participant sitting meditation white flower mindfully meditating anger issue young man wa learn mindfulness practice apply effectively taught mindfulness strategy peer reduction aggressive behavior singhs paper anger aggressive behavior three individual taught decreased level month initiating training remained level year informal collected success gamification purpose motivational critical mindfulness gamification improving effectiveness health game well established 11 gamification strategy require addition systemic game mechanic consider game order positively influence behavior process requires emphasis experimental nature game gamification 7 example mindfulness state practitioner point view requires focus inner embodied current state physical conscious game innate tendency encourage outward attention mindfulness teaching learning benefit positive conditioning associated gamified considered game-like mindlessness iii mindfulness exercise common game mechanic maintain interest time attempting distract mindfulness meditation point titled serenity reward player mindfully meditating point rewarded meditation session finished amount serenity earned static amount mindful lesson completed matter excellently participant performed help prevent 978-1-4799-7546-4/14/ 31.00 2014 performance anxiety feel free focus mindfulness learning pace inhibit participant maintaining state mindfulness concerned performance moment doe discourage poor performance identify failure attempt reward player practice concept unlockable gamification measure integrated serenity reward mindfulness scene meditation lesson unlocked pre-determined amount serenity mindfulness meditation conduct closer obtaining mindfulness location area depicted fig 1. mindfulness lesson unlock time ensures overwhelmed option easing lesson time reward scene unlock meditative effort unlock scene example player finish meditative lesson second lesson unlocked practice three time third scene unlocked unlocking area choose keep playing lesson conducted effort better performance lesson virtual space virtual locale angkor wat 12th century temple cambodia fig 1 chosen promote condition ideal environment allowing focus angkor wat manifest quiet virtual space accommodating meditation space understandably conveys sense wonder visitor scene realistically rendered animated light breeze rustling leaf nearby tree soft unobtrusive sound chirping bird heard twenty minute guided mindfulness audio track play prompted designed mindful sitting session second virtual scene depicts stonehenge prehistoric english monument sundown lit ten candle dotted landscape breathing exercise relayed guided audio track focus breathing candle scene light manner flower bloom angkor wat emotiv eeg headset follow affective progress mindful session provide abstracted visual feedback real-time mindfulness lesson located virtual space locale manifestation visual feedback example overgrown angkor wat scene player asked conduct sitting meditation guided audio track player relaxes focusing breathing inner sensation emotiv eeg track meditation score numerically represented 0 1 1 highest score well factor including calmness boredom affective state angkor wat scene observes player performance based affective score responds opening flower dot overgrown building virtual space flower bloom higher player meditative score lower meditation score fewer flower bloom time iv order current effectiveness conduct preliminary convenience sample continuing develop mindfulness scene expand target demographic encompasses learn mindfulness meditation limit participant specific patient demographic determine angkor wat stonehenge scene evoking meaningful meditative experience participant experience improved virtual reality real-time feedback contrast simple learning method guided audio track played comparison effectiveness audio-based learning guided meditative audio track effectiveness full virtual game space conducted determine guided audio track mindful effectiveness improved integrated virtual game space real-time eeg feedback emotiv eeg headset qualitative questionnaire sample group collect holistic array participant comparison audio audio-vr group preliminary lead optimistic hope add mindfulness scene virtual setting constructed serene nature depict ideal location mindfulness meditation practice inherently include audibly realistic regard everyday life setting player inhabit setting invasive experience traffic-heavy area experience everyday life dish video game movie background human speech considering distractive scene player undertake simulate audible disruption everyday life order better train participant mindfully meditate situation harder relax focus inwardly scene unlocked mindfulness player comfortable mindfulness attempt difficult setting 1 s. hayes k. strosahl k. wilson acceptance commitment therapy experiential approach behavior change york guilford 1999. j. kristeller c. hallett exploratory study meditation based intervention binge eating disorder journal health psychology 4 3 357363 1999 2 3 m. plews-ogan j. e. owen m. goodman p. wolfe j. schorling pilot study evaluating mindfulness-based stress reduction massage chronic pain journal general medicine 20 12 11361138 2005 4 z. segal m. williams j. teasdale 2 cognition mood nature depressive relapse subsection long-lasting cognitive therapy mindfulness-based cognitive therapy depression york guilford press 2002 24 26 5 z. segal m. williams j. teasdale 3 developing mindfulness-based cognitive therapy mindfulness-based cognitive therapy depression york guilford press 2002 4649 6 m. lineham cognitive-behavioral treatment borderline personality disorder york guilford 1993 7 k. huotari j. hamari defining gamification service marketing perspective mindtrek 12 proceeding 16th international academic mindtrek conference 1722 2012 8 emotiv eeg neuroheadset http //bit.ly/1kzerb2 9 j. kabat-zinn l. lipworth r. burney w. seller four-year follow-up meditation-based program self-regulation chronic pain treatment outcome compliance clinical journal pain 2 3 159 173 1986 10 j. kabat-zinn full catastrophe living wisdom body mind face stress pain illness dell publishing 1990 11 a. darzi gamification influencing health behaviour game journal royal society medicine 106 3 7677 2013 12 m. williams j. kabat-zinn mindfulness diverse perspective meaning origin multiple intersection science dharma contemporary buddhism interdisciplinary journal 12 1 118 2011 13 n. singh g. lancioni a. winton j. singh peer intellectual disability mindfulness-based anger aggression therapist developmental disability 32 6 26902696 dec. 2011.emotiv eeg neuroheadset web 14 mar 2014 978-1-4799-7546-4/14/ 31.00 2014 2.52.5 plagiarism 2018-04-23 08 24 utc shor tened inalr epor t. docx shor tened inalr epor t. docx 2018-04-23 08 20 utc source 8 internet source 8 0 http //www.digitalocean.com/what-is-cloud-hosting/ 1.1.8 3 match 1 http //www.racksquared.com/cloud.htm 1.61.6 3 match 2 http //chemicloud.com/wordpress-hosting/ 1.41.4 2 match 3 http //chemicloud.com/ 0.90.9 1 match 4 www.healingenergytools.com/meditation-techniques/ 0.0.7 1 match 5 http //www.youtube.com/watch v=b79yk4-sr4g 0.0.8 2 match 6 http //www.meetup.com/brisbane-south-breathing-meditation/events/vhdrrmyxfbcb/ 0.40.4 1 match 7 http //www.quora.com/what-is-the-use-of-meditation 0.40.4 1 match 15 2000 wor 15 2000 wor plagl evel plagl evel selected selected 4 match 8 source 8 online source setting setting policy compare web source check document sensitivity medium bibliography consider text citation detection reduce plaglevel whitelist 1 118882009 praytm app meditation 1 technology-information technology- 2017-18 1 app meditation praytm 1.1 stress increasingly prevalent culture associated physical psychological health issue meditation practice improve health aspect including reduction depressive relapse suffer depression meditation help reduce blood pressure anxiety attack headache ulcer insomnia muscle joint improves mood immune energy level gain inner source energy 4 help relieve stress life deployed android platform count number bead devotee change count round regular basis spring general-purpose conversion field formatting spring object xml mapping functionality oxm moved spring web service spring comprehensive rest support maven comprehension maven ability easily write plugins java scripting language maven release distribution publication additional configuration maven integrate source control maven instant access extra configuration developed called `` praytm '' 0 digital ocean cloud storing digital ocean cloud simple affordable scalable reliable cloud hosting keep safe distributing server redundant server hosted cloud protected failure automated backup snapshot ensure server stay safe up- -date trello trello free pricing basic service trello quick front card easy tag label category drag drop 0 0 technology-information technology- 2017-18 2 praytm app meditation functionality in-line editing checklist progress meter easy uploading file attachment filtering 1.2 physical level meditation help reduce blood pressure anxiety attack headache ulcer insomnia muscle joint improves mood immune energy level gain inner source energy mental benefit meditation mind fresh delicate beautiful clean nourishes calm feel overwhelmed unstable emotionally shut increase focus inner peace positive thinking decision making power performance concentration emotional stability creativity happiness gain clarity peace mind smaller history option devotee view history daily basis prospective history number bead number round day technology-information technology- 2017-18 3 praytm app meditation 2 review technology-information technology- 2017-18 4 praytm 2.1 existing app meditation 2.1.1 insight timer main drawback noticed lack customization 's music background noise geared eastern tradition 2.1.2 japa /chanting issue wa screen reorients position count reset 2.1.3 mhk app signal session music pause meditation 2.2 proposed 2.1 comparing existing proposed provide better interaction existing provide quick response robustness security care scalable globe generate suggestion dynamically moderate accuracy android io device provide facility choose background music signal session music pause meditation 2.1 comparison existing proposed sr. app registration meditation chanting group recommendat ion 1 2 insight timer japa/ chanting 3 mhk 4 praytm technology-information technology- 2017-18 5 praytm app meditation 3 specification technology-information technology- 2017-18 6 app meditation praytm 3.1 definition meditation praytm i.e pray mobile includes history devotee registered devotee devotee directly perform time validity checked devotee valid message n't chanting meditation key point perform chanting meditation chanting start chant clicking start chant chant clicking finish chant meditation option includes guided unguided meditation i.e keep audio create log depends regular perform history option devotee view history daily basis prospective history number bead number round day performance provided daily basis option remainder setting remainder devotee notified message time .rating option devotee feedback admin admin panel fetch devotee digital ocean cloud admin 3.2 concept android device downloading app hibernate mapping object oriented concept database spring including library .maven comprehension feed registration credential valid devotee chant meditate increase performance chanting history devotee provided server profile total round total bead day forgets chat time day reminder .user rating comfort liking admin admin panel devotee 's chanting history technology-information technology- 2017-18 7 praytm app meditation 3.3 create bring people globe engaged chanting meditation authentication social medium profile devotee total number total people meditation live time total number people installed app screen chanting person click button count increase reminder reminding person meditation session history screen history change background feel fresh comfortable milestone rating option app app facility guided unguided meditation admin panel admin keep track registered devotee 3.4 displaying active devotee total devotee numerical format devotee registration authentication devotee authentication provide guided unguided meditation devotee displaying history daily basis number bead number round facility reminder rate app change background provide admin admin panel keep devotee track 3.5 3.5.1 datasets input e-mail username password age mobile number technology-information technology- 2017-18 8 praytm 3.5.2 app meditation validation checking provided correct chanting meditation provide chanting meditation track performance track performance devotee daily generate log devotee 3.5.3 non-functional security provide security provided performance essential fast responsiveness ensures ready respond 's input scalability scalability well deal increasing size usability relates easily people measure usability time familiar function 's training help maintainability relates ease app find bug 3.5.4 minimum android device version 4.0 ubuntu 16.04 window 7 i3 core processer hard disk 500 gb 4 gb ram 3.5.5 digital ocean cloud bitbucket version control 4.12 trello technology-information technology- 2017-18 9 praytm app meditation rest web service android studio hibernate 4.2 spring 4.3 maven 3.5.0 3.6. 3.6.1. carry people facility equipment capable completion main i.e devotee admin internet connection establishment server client 3.6.2. split- fig 3.1 split-up component registration chanting recommendation creation group fig.3.1 split-up 3.6.3. decomposition 1 registration devotee devotee registered devotee devotee time registration devotee enter username location birth age devotee directly perform panel devotee technology-information technology- 2017-18 10 praytm app meditation enter username password validate server devotee valid n't 2 chanting meditation chanting meditation key point perform chanting meditation chanting start chanting finish chant meditation option hear audio audio choose language hearing audio 3 rating devotee rate app his/her comfort app 4 remainder devotee remainder chanting time day 3.6.4. role responsibility member member contribution play vital role completion divided front backend development member divide equally actively phase contribution member 1 2 completing individual deliverable 3 provide expertise field 4 working client gathering 5 documenting sponsor initialize .they active member high-level planning resolve conflict obstacle occurring development people approve phase 1 key decision 2 approving budget 3 keep check availability 4 communicate technology-information technology- 2017-18 11 praytm app meditation 5 oversight direction 6 discussing designing process identifying member s. 3.6.5 3.0 fig 3.2 scheduling proposed fig.3.2 gantt 3.0 3.6.6 pert 3.1 coordination duration searching gathering planning modelling ui designing validation ui deployment 3.1 pert duration 5 day 5 day 10 day 5 day 10 day 10 day 5 day 60 day 10 day 2 day technology-information technology- 2017-18 12 praytm 3.6.7 pert app meditation fig 3.3 diagrammatic representation coordination fig.3.3 pert technology-information technology- 2017-18 13 praytm app meditation 4 technology-information technology- 2017-18 14 praytm 4.1 app meditation fig 4.1 recommendation component cloud technology-information technology- 2017-18 15 2016 4th intl conf applied computing technology/3rd intl conf computational science/intelligence 2016 4th intl conf applied computing technology/3rd intl conf computational science/intelligence applied informatics/1st intl conf cloud computing science applied informatics/1st intl conf cloud computing science recommendation engine online short video nan yang sanxing cao medium china beijing china yangnan cuc.edu.cn sxcao cuc.edu.cn abstractin today internet era people facing amount called overloading hampered people full convenience internet solve category search engine re- commendation engine search engine recommendation engine popular real situation recommendation engine proved effective search engine e-commerce personalized retrieval mobile internet online short video popular form video nowadays good recommendation help people reach efficiently article introduce robust recommendation engine specialized online short video keywordsrecommendation engine online short video collaborative filtering memory-based filtering user-based top-n recommendation i. form video play dominant role medium industry duo popularity internet video industry entered big-video era development 4g mobile internet people treat mobile device necessity daily life cnnic 1 china 700 people mobile device access internet 65.4 mobile phone play video mobile phone smart operating easy nowadays screen mobility advantage well shortage decided short video better form video fig 1. general view chinese mobile internet 978-1-5090-4871-7/16 31.00 2016 978-1-5090-4871-7/16 31.00 2016 doi 10.1109/acit-csii-bcd.2016.76 doi 10.1109/acit-csii-bcd.2016.76 357 357 yu liang zhengzheng liu medium office china beijing china liangyumuyu 126.com 838789694 qq.com people play short video fragmented short video news short mv micro-movies camera smart phone people video short video upload video web social medium video provider stimulated provide short video attract mobile stimulate production online short video satisfy popularity mobile device mobile internet well fast pace working living style people form ugc/pgc user- generated content/professionally-generated studio produce half full professionalized short video provide short video provider platform medium main stream medium domestic medium domain short video provider setup online short video platform provide analyzing attitude comment short video built 2014. platform innovation specialized online short video comment fetching analyzing utilizing e.g recommendation fig 2. procedure platform fetching utilizes mainstream searching distributed analyzing implement robust machine learning fulfill mining introduced article article focus recommendation engine energetic innovative article 1 2 background 3 recommendation engine 4 summary 5 ii background exist approach recommendation engine collaborative filtering content-based filtering approach 2 background pro con lead reason approach chosen platform recommendation engine active field mining machine learning time recommendation mechanism relies concept long tail phenomenon theory wa popularized 2004. long tail term situation e-commerce mass medium marketing social network mechanism long tail theory item neglected le interested earn equal compared popular presentation production chance cost le popular item good achieve good attention sale internet commodity easily presented customer situation good recommendation category search engine raise attention fig 3. long tail phenomenon content-based filtering collaborative filtering main recommendation content-based filtering cbf generate recommendation source rating associated item treat recommendation user-specific classification learns classifier 's dislike based product utilize series discrete characteristic item recommend item characteristic `` item '' general term denote recommends product movie news short video 3 hand collaborative filtering cf wa mentioned david goldberg 4 doe rely description item depends preference expressed preference expressed explicitly numeric rating indicated implicitly behavior clicking link purchasing book reviewing news article video major difficulty designing cbf lie formalizing human perception preference difficult fetch represent difference average news contrary cf powerful overcome difficulty preference taste explicit implicit rating utilized 5 general cbf method recommend item collaborative filtering method based collecting analyzing amount behavior preference predict based similarity cf method face challenge sparsity scalability synonymy cold start gray sheep popular effective recommendation choose collaborative filtering main fig 4. recommendation collaborative filtering wikipedia cf method described based collecting analyzing amount behavior preference predicting based similarity 4 wikipedia demonstrates recommendation collaborative filtering 6 distinguish kind collaborative filtering approach distinguish memory-based model-based hybrid technique 7 distinguish non-probabilistic probabilistic 8 article distinguishing method adopted a. memory-based cf technique memory-based cf technique called neighborhood-based approach entire fraction operation record user-item database generate prediction preference studied extensively proven personalized recommendation 8 memory-based cf technique classified user-based cf filtering item-based cf 358358 filtering 9 produce prediction active weighted average rating item item simple weighted average 7 10 1 user-based cf filtering user-based cf main cf method practice preference ingredient user-based cf preference comment analyzing behavior sense cf considered behavior vector utility matrix closer measure measure find similarity distance active i.e prediction preference predict similarity rating active top-n recommendation recommend top- ranked item interest association rule mining based top-n recommendation user-based top-n recommendation firstly identify nearest neighbor active pearson correlation cosine 9 11 treated vector m-dimensional item space similarity active computed vector 2 item-base cf filtering item-based cf popular cf method 10 effective user-based counterpart item-based top-n recommendation approach developed avoid scalability user- based top-n recommendation approach firstly calculates item item similarity identify candidate recommended item collection item removing item selected purchased finally computes similarity item u. item sorted decreasing order similarity item-based top-n recommendation 7 12 b. model-based cf technique model-based cf approach computing predefined offline presenting online development machine learning mining allow learn recognize complex pattern based training intelligent prediction collaborative filtering real-world based learned main stream model-based cf bayesian net net cf 14 15 clustering cf 16 markov decision process cf 17 regression based cf 18 19 model-based cf investigated solve shortcoming memory-based cf 9 13 classification cf rating categorical regression svd method numerical rating 7 c. hybrid recommendation hybrid recommendation combine collaborative filtering content-based filtering approach recommendation effectively 20 hybrid method provide accurate recommendation pure approach overcome common cold start sparsity collaborative filtering number investigate hybrid recommendation naive bayes knn classifier news recommendation 21 iii recommendation engine online video game long-tailed pattern suitable handled recommendation recommendation engine built online short video comment sentiment full 22 comment short video sentiment input recommendation engine choosing proper procedure generate prediction needed a. choosing collaborative filtering method making automatic prediction filtering interest collecting preference taste collaborating approach chosen user-based cf item-based cf entire platform online short video class video recommendation engine referred video item preference video preference form comment short video comment represented form utility matrix user-video pair represents preference video main choosing collaborative filtering online short video people best recommendation interest online short video platform half platform specifies online short video produced video producer ugc studio group membership stable compared pure commercial website avoid cold-start face ordinary commercial website 359359 user-based cf item-based cf approach maintain similarity matrix platform number item video larger platform putting condition considering nature online short video platform user-based cf better 5 step adopted recommendation procedure 1 registration answering key question 2 assigning default 3 calculating 4 producing top-n recommendation presentation 5 recommendation evaluation improvement similarity step recommendation process e.g time join online short video platform key step described b. similarity top-n recommendation user-based collaborative filtering approach building recommendation 23 24 method rely person belongs larger group consisting similarly-behaving individual video frequently viewed member group form basis recommended item 25 interest preference represented matrix item node cid 1870 cid 3048 cid 481 cid 3036 corresponds rating item u. rating matrix sparse ordinary commercial rate item platform typically rating produced item viewed rated item top-n selected prediction recommendation current consideration recommendation treated active 26 generally number computation similarity regarded neighborhood size active similarity based cf treated neighborhood-based cf 7 generate top-n recommendation find item nearest neighbor computing similarity integrate neighbor top-n frequent item recommendation cid 122 similarity calculating similarity calculating platform crucial step memory-based user-based cf similarity wa defined utility matrix sense collaborative filtering considered behavior vector utility matrix distance measure similarity calculating three specific step adopted similarity calculate assign weight respect active second neighborhood calculation choose highest similarity active third weighted integration chosen neighbor rating calculate needed prediction 26 similarity described cid 1845 cid 1861 cid 1865 cid 1861 cid 1864 cid 3028 cid 481 cid 3048 cid 573 user-based cf calculating rated item essential step method calculate similarity method pearson correlation cosine commonly usable similarity based pearson correlation measure extent linear dependence calculated variable main difference user-based item- based correlation article 27 main function cid 1845 cid 1861 cid 1865 cid 1861 cid 1864 cid 1853 cid 481 cid 1873 cid 3404 cid 963 cid 4666 cid 1870 cid 1853 cid 481 cid 1861 cid 2879 cid 1870 cid 3364 cid 1853 cid 4667 cid 4666 cid 1870 cid 1873 cid 481 cid 1861 cid 2879 cid 1870 cid 3364 cid 1873 cid 4667 cid 1861 cid 1488 cid 1835 cid 3495 cid 963 cid 4666 cid 1870 cid 1873 cid 481 cid 1861 cid 2879 cid 1870 cid 3364 cid 1873 cid 4667 cid 3118 cid 3495 cid 963 cid 4666 cid 1870 cid 1853 cid 481 cid 1861 cid 2879 cid 1870 cid 3364 cid 1853 cid 4667 cid 3118 cid 1861 cid 1488 cid 1835 cid 1861 cid 1488 cid 1835 1 treat rating vector m- dimensional space compute similarity based cosine angle specific calculate similarity cosine method convenient cid 1845 cid 1861 cid 1865 cid 1861 cid 1864 cid 1853 cid 481 cid 1873 cid 3404 cid 1829 cid 1841 cid 1845 cid 4666 cid 1870 cid 3028 cid 4652 cid 4652 cid 4652 cid 1318 cid 481 cid 3 cid 1870 cid 3048 cid 4652 cid 4652 cid 4652 cid 4652 cid 1318 cid 4667 cid 3404 cid 963 cid 1870 cid 1853 cid 481 cid 1861 cid 942 cid 1870 cid 1873 cid 481 cid 1861 cid 1865 cid 1861 cid 3128 cid 3117 cid 3496 cid 963 cid 3496 cid 963 cid 1870 cid 1873 cid 481 cid 1861 cid 3118 cid 1865 cid 1861 cid 3128 cid 3117 cid 1870 cid 1853 cid 481 cid 1861 cid 3118 cid 1865 cid 1861 cid 3128 cid 3117 cid 1842 cid 1870 cid 1857 cid 1856 cid 1853 cid 481 cid 1861 cid 3404 cid 1870 cid 3364 cid 1853 cid 3397 cid 963 cid 4672 cid 1870 cid 1873 cid 481 cid 1861 cid 2879 cid 1870 cid 3364 cid 1873 cid 4673 cid 3400 cid 1845 cid 1861 cid 1865 cid 1861 cid 1864 cid 1853 cid 481 cid 1873 cid 1873 cid 1488 cid 1836 cid 963 cid 1845 cid 1861 cid 1865 cid 1861 cid 1864 cid 1853 cid 481 cid 1873 cid 1842 cid 3028 cid 481 cid 3036 prediction active cid 573 item cid 1849 cid 3028 cid 481 cid 3048 similarity cid 573 prediction generally computed weighted average deviation neighbor 26 3 2 cid 1873 cid 1488 cid 1836 neighborhood order favor similarity active 9 26 amplification wa introduced transform original weight function 3 cid 1845 cid 1861 cid 1865 cid 1861 cid 1864 cid 3028 cid 481 cid 3048 cid 4593 cid 3404 cid 1845 cid 1861 cid 1865 cid 1861 cid 1864 cid 3028 cid 481 cid 3048 cid 942 cid 3627 cid 1845 cid 1861 cid 1865 cid 1861 cid 1864 cid 3028 cid 481 cid 3048 cid 3627 cid 3096 cid 2879 cid 2869 cid 591 amplification factor cid 591 cid 3 cid 3410 cid 883 4 cid 122 top-n recommendation user-based top-n cf rely fact belongs larger group interest video viewed frequently individual group produce basis recommended video approach defined 360360 video matrix cid 1870 cid 3036 cid 481 cid 3037 user-i defined user-video matrix historical viewing commenting played video-j video viewed compute top-n recommendation considered active order simplify presentation active assumed belonging stored matrix r. user-based cf recommendation compute top-n recommended video 28 precise procedure identify nearest neighbor database modeling video vector- space retrieval 29 30 well active treated vector m-dimensional item space similarity active existing measured computing cosine vector discovered row utility matrix integrated identify item viewed commented group frequency user-based cf technique recommend top-n frequent video active played commented note frequency item computed calculating actual occurrence frequency normalizing row length normalization le emphasis video viewed frequent lead better 25 28 method scalability real- time performance performed well platform c. recommendation evaluation recommendation evaluated comparing recommendation rating commonly method absolute error mae defined average absolute difference predicted rating actual rating 26 total number rating cid 1868 cid 1870 cid 1857 cid 1856 cid 3048 cid 481 cid 3036 predicted rating video cid 1870 cid 3048 cid 481 cid 3036 actual rating cid 1839 cid 1827 cid 1831 cid 3404 cid 963 cid 4698 cid 1868 cid 1870 cid 1857 cid 1856 cid 1873 cid 481 cid 1861 cid 2879 cid 1870 cid 1873 cid 481 cid 1861 cid 4698 cid 3419 cid 1873 cid 481 cid 1861 cid 3423 cid 1840 5 iv summary online short video platform focused provide short video provider ugc/pgc studio well step produce comment short video calculate recommendation video provider comment sparsity serious 361361 designed avoid cold-start default operate smoothly v. method popular improve performance recommendation improvement platform step- by-step upgrading considered a. firstly improve current add characteristic significance weighting default voting 26 neighbor based overlapping video tend bad predictor approach tackle multiply similarity weight significance weighting factor devalues correlation based co-rated item alternative approach default voting dealing correlation based co-rated item assume default rating item explicitly rated compute correlation union item rated matched opposed intersection item-based cf proved effective better user-based cf transformation hybrid consideration b. secondly improve platform technique alphago intelligent program defeated human chess champion early year artificial intelligence currently deep learning aroused attention corner society online short video platform decides involve ai promote recommendation performance representation learning vivid field machine learning community learning re-presentations deep learning approach translation-based method paid attention 31 success machine learning generally depends representation representation entangle hide explanatory factor variation learning representation easier extract building classifier predictor 32 dealing efficient representation surge approach handle sparsity cold-start recommendation example popular method family named latent factor rely matrix-factorization-based technique treat recommendation representation learning computing representation item common latent space 33 representation traditional approach compute missing rating item dot product item representation higher predication rate provide approach recommendation acknowledgment paper partly supported `` '' funded medium china 14nm06 referee valuable review feedback paper 18 j. canny `` collaborative filtering privacy factor `` international acm sigir conference development retrieval 2002 19 s. vucetic cid 15914 z. obradovic `` collaborative filtering regression- based approach `` knowledge 2005 20 m. pazzani `` framework collaborative content-based demographic filtering `` artificial intelligence review 13 393408 1999 21 r. burke `` hybrid web recommender `` adaptive web method strategy web personalization lecture note science pp.4321 377-408 2007 22 n. yang cid 15914 s. cao cid 15914 s. zhang `` online short video comment '' proceeding 15th ieee/acis international conference science 2016 23 j. konstan cid 15914 b. miller cid 15914 d. maltz cid 15914 j. herlocker cid 15914 l. gordon usenet news `` '' grouplens applying collaborative acm 40 3 2000 filtering 24 p. resnick n. iacovou m. suchak p. bergstrom j. riedl `` collaborative filtering netnews '' proceeding cscw 175 -- 186 1994 25 g. karypis `` evaluation recommendation `` international conference knowledge 247254 atlanta ga usa 2001. proceeding item-based top-n 26 p. melville v. sindhwani `` recommender `` encyclopedia machine learning 2010 27 m. mclaughlin j. herlocker `` collaborative filtering evaluation metric accurately experience `` proceeding 27th annual international acm sigir conference development retrieval 329336 sheffield uk 2004 28 y. ling cid 15914 d. guo cid 15914 f. cai cid 15914 `` user-based clustering top-n recommendation cold-start `` third international conference intelligent 1585- 1589 2013 29 g. salton `` automatic text processing transformation retrieval `` addisonwesley 1989 30 b. sarwar g. karypis j. konstan j. riedl `` recommendation e-commerce `` proceeding acm e- commerce 2000 31 a. bordes n. usunier a. garcia-duran j. weston o. yakhnenko '' translating embeddings modeling multi-relational `` advance neural processing 26 nip 2013 2013 32 y. bengio a. vincent `` representation learning cid 15928 review perspective `` trans pattern machine intelligence 2013 33 g. contardo cid 15914 l. denoyer cid 15914 t. artieres `` representation learning cold-start recommendation `` eprint arxiv 2015 1 `` 38th cnnic `` http // www.cnnic.net.cn hlwfzyj hlwxzbg hlwtjbg 201608 t20160803_54392.htm j. sobecki cid 15914 k. piwowar `` comparison recommendation method e-commerce `` asian conference intelligent database aciids 2009 2 3 r. meteren m. someren `` content-based filtering recommendation `` conference paper knowledge 1994 4 d. goldberg `` collaborative fi1tering weave tapestry `` acm 35 12 61-70 1992 5 k. yu a. schwaighofer v. tresp x. xu h. kriegel `` probabilistic transaction memory-based collaborative filtering `` knowledge 16 1 56-69 2004 6 collaborative filtering http // en.wikipedia.org wiki collaborative _filtering 7 x. su t. khoshgoftaar `` collaborative filtering technique `` 8 9 advance artificial intelligence archive 2009 j. schafer1 d. frankowski j. herlocker s. sen `` collaborative filtering recommender `` international conference intelligent 438-443 2015 j. breese d. heckerman c. kadie `` empirical predictive collaborative filtering `` proceeding 14th conference uncertainty artificial intelligence 1998 10 b. m. sarwar g. karypis j. a. konstan j. riedl `` itembased collaborative filtering recommendation `` proceeding 10th international conference wide web 01 285295 2001 11 b. sarwar g. karypis j. konstan j. riedl `` recommendation e-commerce `` proceeding acm e-commerce 158167 minneapolis minn usa 2000 12 g. karypis `` evaluation `` knowledge 247254 2001 proceeding item-based recommendation international conference top-n 13 c. basu h. hirsh w. cohen `` recommendation classification social content-based recommendation `` fifteenth national/tenth conference artificial intelligence/innovative artificial intelligence 1998 14 s. andersen `` probabilistic reasoning intelligent network plausible inference `` journal philosophy 48 1 117-124 1991 15 k. miyahara cid 15914 m. pazzani `` improvement collaborative filtering simple bayesian classifier `` ipsj journal 43 3429-3437 2002 16 j. han m. kamber j. pei `` mining concept technique third edition `` elsevier 2012 17 g. shani cid 15914 d. heckerman cid 15914 r. brafman `` mdp-based re- commender `` journal machine learning 1265- 1295 2015 362362", "keywords": ["admin admin", "admin admin panel", "admin panel", "admin portal", "android studio", "angkor wat", "angkor wat scene", "app meditation", "app meditation fig", "app meditation review", "approach recommendation", "artificial intelligence", "audio track", "badgujar namrata", "bead number", "bead number round", "cf method", "change background", "chanting meditation", "chronic pain", "code snippet", "coldstart recommendation", "collaborative filtering", "comment short", "comment short video", "component registration", "contentbased filtering", "creation group", "daily basis", "devotee admin", "devotee devotee", "devotee registered", "devotee registered devotee", "digital ocean", "eeg headset", "eeg neuroheadset", "emotiv eeg", "emotiv eeg headset", "emotiv eeg neuroheadset", "epor docx", "error output", "fig code", "fig code snippet", "fig screen", "fig screen display", "filtering approach", "guided audio", "guided audio track", "history screen", "history technologyinformation", "history technologyinformation technology", "inner source", "insight timer", "international conference", "intl conf", "invitation group", "item item", "itembased cf", "itembased topn", "karypis konstan", "karypis konstan riedl", "konstan riedl", "long tail", "machine learning", "massage group", "meditation fig", "meditation review", "meditation session", "memorybased cf", "mental health", "mindfulness meditation", "mindfulness practice", "mobile internet", "mobile number", "nearest neighbor", "nimba patil", "number bead", "number bead number", "number round", "online short", "online short video", "option devotee", "pain patient", "panel devotee", "password technologyinformation", "praytm app", "praytm app meditation", "proceeding th", "rate app", "rating item", "recommendation engine", "recommendation userbased", "registered devotee", "registered devotee devotee", "registration chanting", "registration scenario", "registration scenario unsuccessful", "remainder devotee", "rest web", "rest web service", "sarwar karypis", "sarwar karypis konstan", "scenario unsuccessful", "scenario unsuccessful registration", "screen display", "screen fig", "search engine", "session history", "short video", "short video comment", "short video platform", "technology praytm", "technology praytm app", "technologyinformation technology", "technologyinformation technology praytm", "topn recommendation", "topn recommendation userbased", "total bead", "total devotee", "total number", "total round", "unguided meditation", "unsuccessful attempt", "unsuccessful registration", "userbased cf", "userbased topn", "username password", "video comment", "video platform", "video provider", "video recommendation", "virtual reality", "virtual space", "visual feedback", "wat scene", "web service", "york guilford"], "libraries": [], "languages": ["clean", "xml", "io", "basic", "java"], "frameworks": [], "dbs": []}, "./reports/BE Project Report_24.pdf": {"title": "assignment engine using microservices", "filename": "./reports/BE Project Report_24.pdf", "data": "assignment engine microservices b120058513 sourabh ballullaya b120058533 jaideep singh ahluwalia b120058563 maanav mehrotra b120058623 rushil somwanshi guidance prof. manish khodaskar sr 27 pune-satara road bharti vidyapeeth college college dhankwadi maharashtra 411043 2017-2018 b120058513 sourabh ballullaya b120058533 jaideep singh ahluwalia b120058563 maanav mehrotra b120058623 rushil somwanshi bonafide prof. manish khodaskar fulfilment earlier diploma prof. deeepali londhe co-ordinator dr. p. t. prof. manish khodaskar dr. b.a sonkamble examiner assignment engine microservices sponsorship letter 2017-18 ii assignment engine microservices acknowledgement opportunity express heart-felt gratitude dr. p. t. providing infrastructure complete express deepest gratitude dr. b. a. sonkamble express deep sincere gratitude prof. manish khodaskar unflagging support continuous encouragement guidance persistent help mentor mr. anand vidyasagar guidance helping understand bmc warm faculty employee bmc helped view encouraging directly indirectly helped completion seminar mr. sourabh ballullaya mr. jaideep singh mr. maanav mehrotra mr. rushil somwanshi 2017-18 iii assignment engine microservices general sever bmc remedy class assignment use-case assignment dataflow assignment gantt create policy create assignment rule create person ticket record generate assignment rule support assignment policy random assignment weightage checking ticket record keyword map iv fig 2.1 3.1 4.1 4.2 4.3 4.4 5.1 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9 6.10 6.11 2017-18 assignment engine microservices stemming input stemming step 1 stemming step 5 word removal assignment lifecycle record manage agent notification registration policy support group fig 6.12 6.13 6.14 6.15 7.1 7.2 7.3 7.4 7.5 7.6 7.7 7.8 7.9 2017-18 assignment engine microservices 1 2017-18 vi assignment engine microservices sponsorship acknowledgement 1 2 3 1.1 1.2 2.1 2.2 4 5 6 3.1 3.2 3.3 3.4 3.5 4.1 4.2 4.3 4.4 5.1 5.2 6.1 6.2 6.3 6.4 title review existing proposed specification definition concept dataflow splitup 2.0 ticket generation assignment rule policy person ticket mapping ii iii iv vi 1 3 3 3 5 5 6 12 12 12 12 13 13 16 16 17 19 20 22 22 23 25 25 25 25 28 2017-18 vii assignment engine microservices 7 8 7.1 7.2 8.1 8.2 title evaluation snapshot strategy plagarism review sheet 36 36 40 44 44 44 45 47 48 49 2017-18 viii assignment engine microservices remedy platform component called assignment engine help determining workable ticket assigned complex qualification logic determine best assignee assigns workable ticket assignment engine standalone lifecycle publish state coming going hot configuration cache tenant specific node assignment tenant load increase decrease tenant configuration change assignment engine gracefully pick load fail innovation suite rest endpoint consume app specific assignment assignment engine broken monolithic micro service improve efficiency reduce crashing implemented time 2017-18 1 assignment engine microservices 1 2017-18 2 assignment engine microservices 1. 1.1 remedy platform component called assignment engine help determining workable ticket assigned complex qualification logic determine best assignee assigns workable ticket intent implement focus making assignment engine microservice time 1.2 present-day comprises monolithic component interwoven architecturally separate monolithic today issue 1 relating scalability reaction failure business agility improve accommodate development thought converting core monolithic microservice present-day machine learning assignment engine adhering older standard inefficient change assignment assignment engine better efficiency employee productivity 2017-18 3 assignment engine microservices 2 2017-18 4 assignment engine microservices 2. review 2.1 existing 2.1.1 presently monolithic component interwoven architecturally separate monolithic describes single-tiered access code combined single program single platform enterprise built three database consisting relational database client-side consisting html and/or javascript running browser server-side server-side handle http request execute domain specific logic retrieve update database populate html view browser monolith single logical executable alteration developer build deploy updated version server-side major issue 1 monolithic monolithic evolve ball mud situation single developer group developer understands entirety limited re-use realized monolithic scaling monolithic challenge difficult achieve agility repeated deployment monolithic artifact 2017-18 5 assignment engine microservices monolithic implemented single development stack i.e jee .net limit availability job 2.1.2 assignment assignment ticket assignment engine occurs manner round robin assigns issue person longest receiving assignment example person wa assigned issue 9 00 a.m. person wa assigned issue 10 30 a.m. person selected load balance number assigns issue person fewest number issue assignment example person assigned 2 issue person assigned 3 issue person selected load balance capacity assigns issue person lowest capacity ratio consider example person capacity rating 10 assigned 5 issue capacity ratio 5/10=0.5 assigned issues/capacity rating=capacity ratio person capacity rating 20 assigned 8 issue capacity ratio 8/20=0.4 person selected lowest capacity ratio person person capacity rating 10 assigned 10 issue issue assigned person longest receiving assignment 2.2 proposed 2.2.1 microservices style complex composed small independent process service 2 service communicate invoked rest apis service small highly decoupled focus small microservices loosely coupled loose 2017-18 6 assignment engine microservices coupling essential characteristic microservices microservice deployed needed coordination service owner service releasing thing deployment sign thing current service decomposition loose coupling enables frequent rapid deployment eventually improves response response bounded context 3 encapsulates single domain domain defines integration point bounded microservices critical well defined bound context boundary domain explicitly well-defined reason service designing sizing efficiently time shared boundary well exist inside boundary area fig 2.1 general 2 basic difference simple monolithic micro-service-based 2017-18 7 assignment engine microservices 2.2.2 assignment technique implementing involve density density estimation construction based observed unobservable underlying density function unobservable density function thought density population distributed thought random sample population 2.2.3 conflation conflation based luhns luhn stated 'it proposed frequency word occurrence article furnishes measurement word significance proposed relative position sentence word significance furnish measurement determining significance sentence significance factor sentence based combination measurement frequency occurrence word position text rank order order frequency occurrence plot relating yield curve hyperbolic curve luhn null hypothesis enable cut-offs upper lower excluding non-significant word word exceeding upper cut-off considered common lower cut-off rare contributing article ability word discriminate reached peak rank order position half cut-offs peak fell direction reducing cut-off point arbitrariness involved determining cut-offs established trial error 2017-18 8 assignment engine microservices coming removing sufxes word automatic operation document represented vector word term term common stem meaning example connect connected connecting connection connection frequently performance improved term group conated single term removal sufxes -ing -ion -ions leave single stem connect addition sufx stripping process reduce total number term reduce size complexity advantageous nature vary considerably depending stem dictionary sufx course purpose sufx stripping sufx stripping program explicit sufxes sufx criterion removed word leave valid stem 4 approach adopted sufx stripping program point borne mind firstly sufxes removed simply improve performance linguistic exercise obvious circumstance sufx removed exactly determine sufxes word automatic evaluation worth sufx stripping correspondingly difcult second point approach adopted i.e sufx rule success rate sufx stripping signicantly le 100 cent irrespective process evaluated example sand sander conated wand wander error -er wander treated sufx fact stem equally sufx completely alter meaning word removal unhelpful 2017-18 9 assignment engine microservices stage development sufx stripping program addition rule increase performance area vocabulary equal degradation performance phenomenon noticed time easy program complex easy undue emphasis appear turn practice rare step conflation rid plural -ed -ing suffix turn terminal vowel stem map double suffix single -ization -ational deal suffix -full -ness -ant -ence remove final -e 2017-18 10 assignment engine microservices 3 2017-18 11 assignment engine microservices 3. specification 3.1 definition carve bmc 's assignment engine making efficient microservice capable catering multiple client aim assignment engine individual microservice ability handle request load 3.2 concept remedy platform component called assignment engine help determining workable ticket assigned complex qualification logic determine best assignee assigns workable ticket assignment engine broken monolithic microservice ticket assigned assignee based rule implement density improve efficiency 3.3 assignment engine standalone lifecycle publish state coming going hot configuration cache tenant specific node assignment tenant load increase decrease tenant configuration change assignment engine 2017-18 12 assignment engine microservices gracefully pick load fail innovation suite rest endpoint consume app specific assignment assignment engine broken monolithic microservice improve efficiency reduce crashing implemented time 3.4 develop standalone lifecycle develop assignment engine facilitate tenant configuration change enable pick layoff load efficiently enhance ability assignment engine converting monolithic microservice reducing failure crashing develop time 3.5 3.5.1 maven v3.2.1 spring java jdk 1.8 rest innovation suite 18 remedy yarn v0.27 2017-18 13 assignment engine microservices 3.5.2 4gb ram window 128gb ssd processor i5 2nd gen minimum 3.5.3 server fig 3.1 sever 2 2017-18 14 assignment engine microservices 4 2017-18 15 assignment engine microservices 4. 4.1. fig 4.1 bmc remedy 1 basic bmc remedy showing assignment engine multiple tenant multiple server 2017-18 16 assignment engine microservices 4.2. 4.2.1. class fig 4.2 class assignment client employee company designation sends request assignment engine assignment engine assignes request asssignee help predefined rule administrator update assignee record and/or assignment administrator redefine rule assignment assignee resolve request update status request 2017-18 17 assignment engine microservices 4.2.2. use-case fig 4.3 use-case assignment engine tenant submit request authentication administrator help rule manage request assign respective assignee update assignee record assignment request 2017-18 18 assignment engine microservices 4.3. dataflow fig 4.4 dataflow assignment dataflow basic main input i.e tenant database tenant sends request ar fetch respective database possibility multiple tenant connected multiple server well request relevant extracted ticket help assignment engine assigned relevant assignee assignee server request completion notifies ticket 2017-18 19 assignment engine microservices 4.4. technique implementing involve density density estimation construction based observed unobservable underlying density function unobservable density function thought density population distributed thought random sample population implementing simple called conflation identify text text assign ticket 2017-18 20 assignment engine microservices 5 2017-18 21 assignment engine microservices 5. 5.1. split-up remedy remedy service suite complete capable service digital enterprise consists database relevant fetched innovation suite innovation suite enables create digital service minimal code help create automate business process learning programming language complex development machine learning capability ibm watson microservice microservices variant service-oriented soa architectural style collection loosely coupled service parallelizes development enabling small autonomous develop deploy scale respective service independently cognitive aspect technique implementing involve density density estimation construction based observed unobservable underlying density function unobservable density function thought density population distributed thought random sample population 2017-18 22 assignment engine microservices 5.2. 2.0 fig 5.1 gantt 2017-18 23 assignment engine microservices 6 2017-18 24 assignment engine microservices 6. 6.1. implement java angularjs rest bmc ar tenant customer facility assignment engine employee major advantage effectively utilize company keeping bmc mind component 6.2. ticket generation step development assignment happen initially generate ticket ticket request request small mouse replaces laptop replaced ticket priority category 6.3. assignment rule policy assignment rule policy defined administrator assignment policy group rule employee employee support group handle assignment individually support group policy policy consists multiple 2017-18 25 assignment engine microservices rule depending combination rule assignment define assignment policy sequential rule automatically assigning request assignment rule based foundation example categorization criterion location assignment rule innovation suite identifies assigns request correct assignee multiple assignee predefined assignment method identify assignee request fig 6.1 create policy snapshot form filled creating policy define assignment process request assignment process trigger assignment rule identify assignee automatically assigns request correct assignee innovation studio call assignment policy element process designer define assignment process 2017-18 26 assignment engine microservices fig 6.2 create assignment rule snapshot form filled creating assignment rule fig 6.3 create snapshot form filled ticket 2017-18 27 assignment engine microservices 6.4. person ticket mapping record map person ticket employee assigned ticket ticket unique employee unique initially developed ticket person introduced change ticket free planning introduce change ticket assigned person solve query efficiently example leave request hr mouse laptop repair request service fig 6.4 person ticket record snapshot person ticket record 2017-18 28 assignment engine microservices 6.5 coding snapshot fig 6.5 generate assignment rule snapshot generation assignment rule fig 6.6 support snapshot obtaining support 2017-18 29 assignment engine microservices fig 6.7 assignment policy snapshot function weightage obtaining max weight handled employee fig 6.8 random assignment function randomly assign ticket person support group 2017-18 30 assignment engine microservices fig 6.9 weightage snapshot function weightage obtaining max weight handled employee fig 6.10 checking ticket record snapshot checking ticket record 2017-18 31 assignment engine microservices fig 6.11 keyword map function map keywords help assign ticket fig 6.12 stemming input stemming process 2017-18 32 assignment engine microservices fig 6.13 stemming step 1 second step process stemming fig 6.14 stemming step 5 step process stemming 2017-18 33 assignment engine microservices fig 6.15 word removal word removal classification 2017-18 34 assignment engine microservices 7 2017-18 35 assignment engine microservices 7. evaluation 7.1. snapshot fig 7.1 assignment lifecycle image basic assignment engine fig 7.2 record image record 2017-18 36 assignment engine microservices fig 7.3 manage agent display employee assign ticket fig 7.4 submit ticket 2017-18 37 assignment engine microservices fig 7.5 notification notification assigned ticket fig 7.6 registration based assignment 2017-18 38 assignment engine microservices fig 7.7 policy snapshot policy fig 7.8 snapshot complexity ticket 2017-18 39 assignment engine microservices fig 7.9 support group number support group defined 7.2. strategy unit strategy unit process development small individually tested unit individually tested integrating help unit amount error removed good built designed tested individually checked bug multiple shouldnt tested simultaneously developed multiple method assignment iterative approach development initially developed assignment engine assignment single person improved assigning ticket randomly employee final development wa assign ticket weight 2017-18 40 assignment engine microservices integration seek verify component component integrated iterative expose defect interaction integrated component integrated basic running assignment engine simple assignment code conflation 7.2.1. expected example- com.example.test actual description accepted status pas accepts valid string entering valid field accepted pas accepted pas tc001 tc002 creating policy creating assignment rule 1 bundle validation 2 description validation 3 group assignment field 4 clicking save 1 bundle validation 2 description validation 3 support group 4 rule 5 clicking save 2017-18 policy created policy created policy created example- com.example.testing error fail accepts valid string accepted pas support group e.g cloud_sg creating valid string rule created accepted pas accepted pas rule rule created 41 assignment engine microservices tc003 1 entering description 2 entering valid policy 3 complexity selection 4 clicking save accepts valid string policy pre-existing e.g policy1 enter format medium entered saved description accepted accepted pas pas accepted pas accepted valid pas 1 2017-18 42 assignment engine microservices 8 2017-18 43 assignment engine microservices 8. 8.1. discussed developed assignment engine microservice major wa develop engine minimum downtime integrated help bmc ar develop deployed tenant engine better performance compared older 8.2. easily improved improving efficiency assignment assignment policy improved development handling scalability improve find root instant jumping conflation isnt efficient doesnt correct output easily improved totally ibm watson assignment ticket multiple parameter 2017-18 44 assignment engine microservices 2017-18 45 assignment engine microservices 1. keshab katuwal microservices flexible digital age version 1.0 2. divyanand malavalli sivakumar sathappan scalable microservice based enabling dmtf profile 3. david jaramillo duy nguyen leveraging microservices docker 4. m.f.porter suffix stripping mcb program 14 issue 3 internet 1. http //blog.hampisoftware.com/index.php/2016/01/20/apache-kafka- differences-from-jms/ 2. http //docs.bmc.com/docs/innovationsuite/cloud/ 3. http //blog.syncsort.com/2016/05/big-data/4-benefits-of-using-apache-kafka- in-lieu-of-amqp-or-jms/ 4. http //www.quora.com/how-is-kafka-different-from-typical-jms-message- brokers-like-ibm-mq-active-mq-etc 5. http //www.javatpoint.com/jms-tutorial 6. http //www.mulesoft.com/resources/api/microservices-vs-monolithic 2017-18 46 assignment engine microservices 2017-18 47 assignment engine microservices plagarism 2017-18 48 assignment engine microservices review sheet 49 2017-18 assignment engine microservices 50 2017-18 assignment engine microservices 2017-18 51 assignment engine microservices 2017-18 52 assignment engine microservices 2017-18 53 assignment engine microservices 54 2017-18 assignment engine microservices 2017-18 55 assignment engine microservices 56 2017-18", "keywords": ["accepted pas", "assign ticket", "assigned issue", "assignee assigns", "assignment assignment", "assignment engine", "assignment engine microservices", "assignment policy", "assignment rule", "assigns issue", "assigns issue person", "best assignee", "best assignee assigns", "bmc remedy", "capacity ratio", "capacity ratio person", "configuration change", "engine microservices", "innovation suite", "issue person", "monolithic microservice", "person capacity", "platform component", "policy snapshot", "ratio person", "remedy platform", "remedy platform component", "rule policy", "snapshot form", "sourabh ballullaya", "standalone lifecycle", "support group", "tenant configuration", "tenant configuration change", "ticket assigned", "ticket assignment", "ticket assignment engine", "ticket record", "valid string", "word removal", "workable ticket"], "libraries": [], "languages": ["small", "sr", "javascript", "basic", "html", "java"], "frameworks": ["angularjs"], "dbs": []}, "./reports/BE Project Report_26.pdf": {"title": "platform independent customization of  integrated appliances", "filename": "./reports/BE Project Report_26.pdf", "data": "platform independent customization integrated appliance suraj bhor nayan anurag rane b120058517 b120058548 b120058597 ratnadeep rawale b120058601 guidance dr. emmanuel m. sr 27 pune-satara road bharti vidyapeeth college college dhankwadi maharashtra 411043. academic year 2017-18 platform independent customization integrated appliance platform independent customization integrated appliance suraj bhor nayan anurag rane ratnadeep rawale b120058517 b120058548 b120058597 b120058601 bonafide prof. emmanuel m. fulfilment earlier diploma dr. emmanuel m. prof. d. d. londhe coordinator dr. b. a. sonkamble dr. p. t. examiner technology2017-18 platform independent customization integrated appliance technology2017-18 ii platform independent customization integrated appliance acknowledgement opportunity express heart-felt gratitude dr. p. t. providing infrastructure complete express deepest gratitude dr. sonkamble b. a. opportunity dr. emmanuel m. valuable guidance providing facility indispensable completion preliminary thankful staff member valuable time support comment suggestion persuasion providing facility internet access book suraj bhor nayan anurag rane ratnadeep rawale technology2017-18 iii platform independent customization integrated appliance vmware esxi hypervisor existing 1 hypervisor 2 hypervisor split-up decomposition 3.0 pert comparison libvirt control remote hypervisors libvirt driver-based libvirt class deployment state kvm host entry domain option select event listener kvmconnection success kvmconnection failure storagepoolstart success deletestoragepool success deletestoragepool failure deletesnap failure deletesnap success 6 9 9 17 18 19 21 23 24 25 26 27 28 29 30 31 32 37 38 39 41 42 42 43 43 44 44 fig 2.1 2.2 2.3 3.1 3.2 3.3 3.4 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 4.10 5.1 5.2 5.3 6.1 6.2 6.3 6.4 6.5 6.6 6.7 technology2017-18 iv platform independent customization integrated appliance fig 6.8 6.9 6.10 6.11 6.12 6.13 6.14 6.15 6.16 6.17 6.18 6.19 6.20 rebootdomain failure rebootdomain success connect host connection select domain create domain eventlistener create domain suspend domain eventlistener suspend domain resume domain eventlistener resume domain destroy domain eventlistener destroy domain 45 45 46 47 48 49 50 51 52 53 54 55 56 technology2017-18 platform independent customization integrated appliance 3.1 3.2 5.1 5.2 role responsibility pert stage issue 19 20 35 36 technology2017-18 vi platform independent customization integrated appliance aim creating sdk deploying customizing configuring vms kvm hypervisor main concept handling multiple vms provide customization option integrated appliance deployed advantage source nature kvm hypervisor implement functionality keywords sdk kvm hypervisor technology2017-18 vii platform independent customization integrated appliance sponsorship acknowledgement ii iii iv vi vii 1 2 3 1.1 1.2 1.3 1.4 2.1 2.2 2.3 3.1 3.2 3.3 3.4 title aim review existing 2.1.1 vmware esxi hypervisor 2.1.2 kvm hypervisor 2.3.1 2.3.2 1 hypervisor 2 hypervisor specification definition concept 2 2 3 4 4 6 6 6 7 8 8 9 9 11 11 11 12 13 2017-18 platform independent customization integrated appliance 3.5 title 14 3.5.1 3.5.2 non-functional 3.5.3 3.5.4 3.6 3.6.1 split-up 3.6.2 3.6.3 3.6.4 3.6.5 3.6.6 decomposition role responsibility 3.0 pert pert 4 4.1 4.1.1 libvirt 4.1.2 control remote hypervisor libvirt 4.1.3 driver based libvirt 4.2 4.3 4.4 structural 4.3.1 class behavioral 4.4.1 4.4.2 diagram- deployment 14 15 15 16 17 17 18 19 19 20 21 23 23 23 24 25 26 27 27 28 28 29 4.4.3 diagram-monitoring 30 4.4.4 31 2017-18 ii platform independent customization integrated appliance title 5 6 7 5.1 5.2 5.3 5.4 5.5 5.6 4.4.5 state apis jar library stage issue implemented ui 5.6.1 kvm window 5.6.2 option window 5.6.3 event listener evaluation 6.1 6.1.1 white box 6.1.2 black box citation 1 2 plagiarism review sheet 32 34 34 34 34 35 36 37 37 38 39 41 41 41 46 58 59 60 61 62 63 2017-18 iii platform independent customization integrated appliance 1 technology2017-18 1 platform independent customization integrated appliance 1 1.1 virtualisation technique gained extensive advancement year virtualisation find cloud service well computing virtualisation implementing cloud service performance computing integrated appliance deployed virtual machine hypervisors 1 kvm 2 vmware 3 kvm open-source developing kvm boon operating kvm function method difficult ample knowledge field virtualisation kvm type-1 hypervisor higer efficiency hypervisor closer concept functionality difficult understand implement kvm bundled linux distribution qemu xen driver kvm provide higher virtualization functionality kvm combine linux kernel hypervisor sell standard linux distribution inorder control kvm thorugh code libvirt library libvirt library basically library manipulating action kvm library exposed java api libvirt java api kvm instructed perform virtual machine storage pool mentioned api java sdk developed client ui develped demonstration purpose technology2017-18 2 platform independent customization integrated appliance 1.2 virtualisation implementing cloud service performance computing numurentwber corporate company applications/appliances virtualisation field today company investing capital advancement virtual advancement virtual edge competitor increasing technological status firm well boost client base dell-emc company product virtual company vmware based vmware highly advanced virtualization hypervisor functionality vmware propreitory cost integrating virtual higher product developed vmware company pay license develop proprietory cost turn client increasing cost service dell-emc migrate integrated appliance vmware based kvm based offered sponsorship discussed earlier kvm source fairly simple turn reduce cost company finally reduce cost product kvm source growing bustling community advancement definitely improve undertaken platform virtualisation complex deployed virtually limitless domain improve service oriented based virtualisation technology2017-18 3 platform independent customization integrated appliance 1.3 aim aim creating java sdk controlling kvm hypervisor developed sdk kvm simpler virtual administrator basic knowledge virtualisation person interacting sdk virtualization concept technique sdk semantic function call turn action performed 1.4 understand concept virtualization type-1 type-2 hypervisors differ provide java sdk communicating controlling kvm hypervisor exposed libvirt library development kvm hypervisor develop client side remote access virtual machine established allow end-users virtualization technique learn concept kvm type-1 virtulization provide remote access kvm server technology2017-18 4 platform independent customization integrated appliance 2 technology2017-18 5 platform independent customization integrated appliance 2 review 2.1 existing 2.1.1 vmware esxi hypervisor vmware esxi hypervisor 4 customizing appliance deployed integrated virtual machine proprietary closed-source product restricting authorized personnel licensing vmware esxi hypervisor esxi bare metal hypervisor meaning layer directly doe require underlying operating service guest operating fig 2.1 vmware esxi hypervisor existing description fig 2.1 vmware vcenter control integrated appliance access storage solution vsphere client instructs vcenter technology2017-18 6 platform independent customization integrated appliance 2.1.2 existing vmware esxi availability protection failure operating malfunction linked clone virtual machine copy created snapshot single parent vm linked clone allows faster creation virtual machine exact file parent vm time snapshot vmotion 5 allows moving virtual machine running host click service downtime storage vmotion allows moving virtual machine disk file storage space interruption vsphere 6 replication continually replicate running virtual machine geographically-diverse location memory overcommittment deduplication allows higher consolidation ratio scalability 64 logical processing core 256 virtual cpu 1 tb ram host enabling higher consolidation ratio memory ballooning network traffic shaping network card teaming technology2017-18 7 platform independent customization integrated appliance 2.2 kvm kvm combine linux kernel hypervisor sell standard linux distribution openstack linux distribution combination openstack kvm better source manage source hypervisor openstack community incorporated kvm twisted highly tested rich hypervisor openstack cloud packaging linux kernel operating ubuntu red hat suse kvm best choice openstack kvm hypervisor support raw qemu copy-on-write qcow2 qed qemu enhanced disk vmware virtual machine disk format vmdk virtual machine image format 2.3 hypervisor hypervisor manages launch virtual machine hypervisor manages virtual machine single virtual machine launched separate program hypervisor manages allocation virtual machine virtual machine separate virtual machine operating host machine virtual machine operating hypervisor dependent host operating doe disturb virtual machine hypervisors split presented fig 2.2 fig.2.3 1 hypervisor 2 hypervisor technology2017-18 8 platform independent customization integrated appliance 2.3.1 1 hypervisor guest 1 guest 2 1 hypervisor fig.2.2 1 hypervisor description fig.2.2 position 1 hypervisor 1 hypervisor directly top called bare metal hypervisor directly host monitor operating hypervisors independent operating virtual machine guest operating doe affect virtual machine guest operating example hypervisor vmware esxi server microsoft hyper-v citrixs xen server 2.3.2 2 hypervisor guest 1 guest 2 1 hypervisor host fig.2.2 2 hypervisor description fig.2.2 position 2 hypervisor hypervisor hosted hypervisor installed top operating support multiple guest operating 2 hypervisor depend host operating 5 .vmware workstation oracle virtual box microsofts virtual pc example hypervisor technology2017-18 9 platform independent customization integrated appliance 3 technology2017-18 10 platform independent customization integrated appliance 3 specification 3.1 definition develop platform independent sdk kvm hypervisor allows customization integrated appliance deployed virtual 3.2 concept aim creating java sdk controlling kvm hypervisor developed sdk kvm simpler virtual administrator basic knowledge virtualisation person interacting sdk virtualization concept technique sdk semantic function call turn action performed provide easy virtual machine function automating deployment vms kvm hypervisor configuring vms accepting parameter vm image file customizing integrated appliance deployed multiple vms integrated appliance technology2017-18 11 platform independent customization integrated appliance 3.3 virtualisation technique gained extensive advancement year virtualisation find cloud service well computing virtualisation implementing cloud service performance computing integrated appliance deployed virtual machine hypervisors 1 kvm 2 vmware 3 kvm open-source developing kvm boon operating kvm function method difficult ample knowledge field virtualisation summarized vmware based simplify complex kvm operation ability monitor deployed vms provide ability interact kvm hypervisor virtual admininstrator perform semantic method call perform operation provide source alternative pre-existing propriatory provide advancement kvm virtualization understand conecepts virtualization focus 1 nature java api binding technology2017-18 12 platform independent customization integrated appliance 3.4 provide java sdk 7 operation performed managing virtual machine simplify instruction kvm hypervisor difficult knowledge virtualisation provide easy deployment configuration customization vms kvm hypervisor provide existing vms deployed exposed libvirt library development kvm hypervisor develop client side remote access virtual machine established allow end-users virtualization technique learn concept kvm type-1 virtulization provide remote access kvm server provide advancement field virtualization help improve kvm source community development java sdk simplify complex kvm operation provide semantic java method perform operation 1 hypervisor technology2017-18 13 platform independent customization integrated appliance 3.5 3.5.1 a. network network openstack 8 cluster includes decision interconnect cluster allow client access access operator administrate cluster consider bandwidth latency reliability network consider additional decision alarming provider service level agreement 9 slas typically defined contract consideration bandwidth latency jitter sla demand network increase sure network accommodates expansion upgrade operator add additional ip address block add additional bandwidth capacity addition consider managing life cycle event example upgrade decommissioning outage avoiding service interruption tenant b. database openstack component require access back-end database service store state configuration choose appropriate back- database satisfies availability fault tolerance openstack service mysql 10 default database openstack compatible database technology2017-18 14 platform independent customization integrated appliance c. operator access trend cloud operation hosted cloud environment operator require access resolve major incident ensure network connects cloud form integrated consider state hand reliable minimal latency optimal performance 3.5.2 non-functional i. support option 24x7 12x7 location ii scalability limit number supported hypervisor node instance iii existing proof-points iv pricing option 3.5.3 laptop/ desktop processor i3 ram 4gb technology2017-18 15 platform independent customization integrated appliance 3.5.4 programming language sdk development java 8 front-end html 5 cs 3 ide eclipse netbeans sublime text bracket hypervisor kvm hypervisor apis libvirt api jar jna-3.4.0.jar org.eclipse.swt.gtk.linux.x86_64-4.3 jar technology2017-18 16 platform independent customization integrated appliance 3.6 3.6.1 split-up description fig.3.1 split fig.3.1 split-up libvirt api intended extend function deployment virtual machine manages core hypervisor function host virtual machine networking storage pci/usb device hypervisor connection connection primary top level object libvirt api instance object attempting apis connection associated hypervisor running locally machine libvirt client remote machine network technology2017-18 17 platform independent customization integrated appliance guest agent guest domain refer running virtual machine configuration launch virtual machine connection object apis enumerate guest domain create guest domain manage existing domain 3.6.2 decomposition fig.3.2 decomposition description fig.3.2 decomposition libvirt api technology2017-18 18 platform independent customization integrated appliance 3.6.3 role responsibility member role 1 2 3 4 libvirt kvm connection host administrator sdk manager sdk event listener kvm event demonstration class 3.1 role responsibility description 3.1 role responsibility divided member 3.6.4 3.0 fig.3.3 3.0 description fig.3.3 3.0. technology2017-18 19 platform independent customization integrated appliance 3.6.5 pert predecessor elicitation level prototype preliminary review preliminary complete complete implentation final review final duration day 7 21 4 12 15 9 28 70 30 14 3.2 pert description 3.2 progam evaluation review technique technology2017-18 20 platform independent customization integrated appliance 3.6.6 pert description fig.3.4 program evaluation review technique fig.3.4 pert technology2017-18 21 platform independent customization integrated appliance 4 technology2017-18 22 platform independent customization integrated appliance 4 4.1 4.1.1 libvirt fig.4.1 comparison libvirt description fig.4.1 architectural comparison standard kvm libvirt comapareison standard kvm kvm libvirt standard kvm virtual machine guest hypervisor hosted linux host node physcial machine standard kvm driver installed operation kvm kvm libvert libvert hypervisor linux host libvert basically apps manage virtual machine running hypervisor kvm libvert convinient performing operation virtual machine bieng deployed technology2017-18 23 platform independent customization integrated appliance 4.1.2 control remote hypervisor libvirt fig.4.2 control remote hypervisors libvirt description fig.4.2 architectural control remote hypervisors libvirt control remote hypervisor libvert seperate physical machine communicate network hypervisors comminucate libvirt operation performed remotely libvirt kinf distributed virtual environment multiple virtual machine deployed comminicate remotely libvirt technology2017-18 24 platform independent customization integrated appliance 4.1.3 driver based libvirt fig.4.3 driver-based libvirt description fig.4.3 qemu/xen driver based libvirt driver-based libvirt specifcally qemu/xen driver based architure libvirt qemu driver xen driver resides top libvirt api libvirt qemu driver multi-instance driver provide single wide privileged driver .ie instance per- unprivileged driver .i.e session instance libvirt libxl driver xen libxl api libxenlight implement libvirts hypervisor driver functionality technology2017-18 25 platform independent customization integrated appliance 4.2 fig.4.4 description fig.4.4 technology2017-18 26 platform independent customization integrated appliance 4.3 structural 4.3.1 class description fig 4.5 depicts class proposed manager class perform fig.4.5 class major technology2017-18 27 platform independent customization integrated appliance 4.4 behavioral 4.4.1 description fig 4.6 depicts identified vm managing choosing vm image deploying vm configuring vm customizing vm saving vm image vm logout fig.4.6 technology2017-18 28 platform independent customization integrated appliance 4.4.2 deployment description fig 4.7 depicts process execution interaction proper deployed vm fig.4.7 deployment technology2017-18 29 platform independent customization integrated appliance 4.4.3 description fig 4.8 depicts process execution interaction proper monitor deployed vms fig.4.8 technology2017-18 30 platform independent customization integrated appliance 4.4.4 description fig 4.9 depicts perform direct deploying ad customization vm fig.4.9 technology2017-18 31 platform independent customization integrated appliance 4.4.5 state description fig 4.10 depicts state proposed going fig.4.10 state transition state technology2017-18 32 platform independent customization integrated appliance 5 technology2017-18 33 platform independent customization integrated appliance 5 5.1 apis 1. libvirt java api 2. eclipse swt gtk api 5.2 jar jna-3.4.0.jar libvirt-0.4.6.jar 1 2 3. org.eclipse.swt.gtk.linux.x86_64-4.3.jar 5.3 library 1. exposed libvirt library java binding jna expose api java friendly binding based initiated toth istvan binding articulated class org/libvirt package notably connect domain network function api virconnectptr virdomainptr virnetworkptr argument method class stripped virconnect virdomain prefix letter converted lower technology2017-18 34 platform independent customization integrated appliance 5.4 stage sr. stage 1 exploration description assessed identified startegies pattern assessed network protocol assessed fit approach discovered libvirt java api kvm installation initial 2 3 4 final established pathway established library established ensured configuration file order ensured development environment special attention wa experimentation attention continuous improvement understanding basic concept libvirt library small simple functionality implemented ssl fail finally ssh connection host server employed learnt concept integrated small final developed sdk developed client side demonstration 5.1 stage description 5.1 stage technology2017-18 35 platform independent customization integrated appliance 5.5 issue sr. 1 issue cryptographic network protocol 2 3 jna library gui threading description ssl cryptographic network protocol wa connect client server housing kvm led number compatibility issue ssh cryptographic network protocol wa alternate ssh proved efficient compatible compared ssl generic jna jar wa initial led compatibility issue led runtime error special jna library extending original wa discovered worked libvirt java api eclipse swt wa developing gui demonstration purpose threading issue arose listener class swt ui element led runtime error nested threading wa overcome issue inner thread update respective ui window amount time 5.2 issue description 5.2 issue faced technology2017-18 36 platform independent customization integrated appliance 5.6 implemented ui 5.6.1 kvm window fig.5.1 kvm host entry description fig.5.1 ui kvm host entry client connect host anurag localhost technology2017-18 37 platform independent customization integrated appliance 5.6.2 option window fig.5.2 domain option select description fig.5.2 ui domain oprtions select technology2017-18 38 platform independent customization integrated appliance 5.6.3 event listener fig.5.3 event listener description fig.5.3 ui event listener technology2017-18 39 platform independent customization integrated appliance 6 technology2017-18 40 platform independent customization integrated appliance 6 evaluation 6.1 6.1.1 white box 1 description kvmconnection fig.6.1 kvmconnection success description fig.6.1 success kvmconnection technology2017-18 41 platform independent customization integrated appliance fig.6.2 kvmconnection failure description fig.6.2 failure kvmconnection 2 description storagepoolstart fig.6.3 storagepoolstart success description fig.6.3 success storagepoolstart technology2017-18 42 platform independent customization integrated appliance 3 description deletestoragepool fig.6.4 deletestoragepool success description fig.6.4 success deletestoragepool fig.6.5 deletestoragepool failure description fig.6.5 failure deletestoragepool technology2017-18 43 platform independent customization integrated appliance 4 description deletesnaptest fig.6.6 deletesnap failure description fig.6.6 failure deletesnap fig.6.7 deletesnap success description fig.6.7 success deletesnap technology2017-18 44 platform independent customization integrated appliance 5 description rebootdomain fig.6.8 rebootdomain failure description fig.6.8 failure rebootdomain fig.6.9 rebootdomain success description fig.6.9 success rebootdomain technology2017-18 45 platform independent customization integrated appliance 6.1.2 black box 1a description connect host fig.6.10 connect host description fig.6.10 input window host technology2017-18 46 platform independent customization integrated appliance 1b description connection fig.6.11 connection description fig.6.11 operation window host connects technology2017-18 47 platform independent customization integrated appliance 2 description select domain domain fig.6.12 select domain description fig.6.12 operation window domain selected technology2017-18 48 platform independent customization integrated appliance 3 description create domain fig.6.13 create domain description fig.6.13 operation window domain created technology2017-18 49 platform independent customization integrated appliance fig.6.14 event listener create domain description fig.6.14 event registered technology2017-18 50 platform independent customization integrated appliance 4 description suspend domain fig.6.15 suspend domain description fig.6.15 operation window domain suspended technology2017-18 51 platform independent customization integrated appliance fig.6.16 event listener suspend domain description fig.6.16 event registered technology2017-18 52 platform independent customization integrated appliance 5 description resume domain fig.6.17 resume domain description fig.6.17 operation window domain resumed technology2017-18 53 platform independent customization integrated appliance fig.6.18 event listener resume domain description fig.6.18 event registered technology2017-18 54 platform independent customization integrated appliance 6 description domain destroy fig.6.19 destroy domain description fig.6.19 operation window domain destroyed technology2017-18 55 platform independent customization integrated appliance fig.6.20 event listener destroy domain description fig.6.20 event registered technology2017-18 56 platform independent customization integrated appliance 7 technology2017-18 57 platform independent customization integrated appliance 7 advancement open-source virtualisation technique standard development kit java simplify operation deploying configuring customizing virtual machine deployed kernel virtual machine kvm hypervisor main provide operation vms creating logical grouping snapshot machine clone virtual machine event listener open-source background competes proprietary closed- source hypervisors vmware kvm scalable vmware deploying vms kvm great option provide automatic functionalilities deploying vmware kind virtualization technique complex deployed virtually limitless domain ceratinly improve service oriented based virtualization technology2017-18 58 platform independent customization integrated appliance citation 1 http //searchservervirtualization.techtarget.com/definition/hypervisor 2 http //www.linux-kvm.org/ 3 http //www.vmware.com/ 4 http //www.vmware.com/products/esxi-and-esx.html 5 http //www.mosaictec.com/tessera/what-is-vmotion.htm 6 http //www.vmware.com/products/vsphere.html 7 http //en.m.wikipedia.org/wiki/java_development_kit 8 http //www.openstack.org/ 9 http //www.paloaltonetworks.com/cyberpedia/what-is-a-service-level-agreement-sla 10 http //www.mysql.com/ 11 http //www.oracle.com/technetwork/java/javase/overview/java8-2100321.html 12 http //developer.openstack.org/api-guide/compute/ 13 http //developer.openstack.org/api-guide/compute/ 14 http //www.atlassian.com/devops 15 http //www.rabbitmq.com/ 16 http //www.amqp.org/ technology2017-18 59 platform independent customization integrated appliance 1. anshu awasthi ravi gupta multiple hypervisor based openstack cloud vm migration cloud 6th international conference 4 5 jan 2016 2. radhwan ameen asmaa y. hamo server virtualization ijcsis international journal science security vol.11 3 2013 3. ashima agarwal shangruff raina live migration virtual machine cloud international journal scientific publication 2 6 2012 4. zhen xiao weijia song qi chen `` dynamic allocation virtual machine cloud computing environment '' transaction parallel distributed 24 8 1107-1117 2013 5. poonam v. kapse r. c. dharmik `` effective approach creation virtual machine cloud computing '' i-smac iot social mobile analytics cloud i-smac 2017 international conference 31 145-147 2017 6. http //www.ibm.com/support/knowledgecenter/en/linuxonibm/liaaf/lnz_r_kvm .html 7. http //en.wikipedia.org/wiki/openstack 8. http //en.wikipedia.org/wiki/vmware 9. vmware vsphere book forbes guthrie scott lowe 10. virtualization beginner 's book danielle ruest nelson ruest 11. mastering kvm virtualization book anil vettathu humble devassy chirammal prasad mukhedkar technology2017-18 60 platform independent customization integrated appliance technology2017-18 61 platform independent customization integrated appliance plagiarism technology2017-18 62 platform independent customization integrated appliance technology2017-18 63 platform independent customization integrated appliance technology2017-18 64 platform independent customization integrated appliance technology2017-18 65 platform independent customization integrated appliance technology2017-18 66 platform independent customization integrated appliance technology2017-18 67 platform independent customization integrated appliance technology2017-18 68 platform independent customization integrated appliance technology2017-18 69 platform independent customization integrated appliance technology2017-18 70 platform independent customization integrated appliance technology2017-18 71", "keywords": ["allocation virtual", "allocation virtual machine", "anurag rane", "anurag rane ratnadeep", "appliance description", "appliance fig", "appliance fig event", "cloud computing", "consolidation ratio", "control remote", "cryptographic network", "cryptographic network protocol", "customization integrated", "customization integrated appliance", "description fig", "description fig operation", "domain description", "domain description fig", "esxi hypervisor", "event listener", "exposed libvirt", "exposed libvirt library", "failure description", "fig event", "fig event listener", "fig operation", "fig operation window", "higher consolidation", "higher consolidation ratio", "hypervisor hypervisor", "hypervisor main", "independent customization", "independent customization integrated", "integrated appliance", "integrated appliance description", "integrated appliance fig", "international conference", "international journal", "kernel hypervisor", "kvm hypervisor", "kvm hypervisor main", "kvm kvm", "kvm source", "libvirt api", "libvirt control", "libvirt control remote", "libvirt java", "libvirt library", "linux distribution", "linux kernel", "machine cloud", "machine cloud computing", "nayan anurag", "nayan anurag rane", "network protocol", "operation window", "operation window domain", "pert description", "platform independent", "platform independent customization", "rane ratnadeep", "rane ratnadeep rawale", "ratnadeep rawale", "sdk kvm", "standard kvm", "success description", "technology platform", "technology platform independent", "virtual machine", "virtual machine cloud", "vms kvm", "vms kvm hypervisor", "vmware esxi", "vmware esxi hypervisor", "window domain"], "libraries": [], "languages": ["cs", "small", "sr", "basic", "html", "java"], "frameworks": [], "dbs": ["mysql"]}, "./reports/BE Project Report_27.pdf": {"title": "proactive task scheduling using   distributed machine learning", "filename": "./reports/BE Project Report_27.pdf", "data": "proactive scheduling distributed machine learning tejal bayaskar kumari sushmita ratna prabha bhairagond shahista shaikh b120058514 b120058550 b120058600 b120058613 guidance prof. s. b. deshmukh s.no.27 satara road pune-411043 2017-2018 proactive scheduling distributed machine learning proactive scheduling distributed machine learning tejal bayaskar kumari sushmita ratna prabha bhairagond shahista shaikh b120058514 b120058550 b120058600 b120058613 bonafide prof. s. b. deshmukh earlier diploma mr. s. b. deshmukh dr. p. t. dr. sonkamble b. __________________ examiner 2017-18 proactive scheduling distributed machine learning acknowledgement mr. s. b. deshmukh constant support encouragement course hod co-operative helpful dr. p. t. support complete college providing excellent infrastructure facility grateful lab attendant help setting laboratory lastly friend family support encouragement propelled completion tejal bayaskar b120058514 kumari sushmita b120058550 ratna prabha bhairagond b120058600 shahista shaikh b120058613 ii 2017-18 proactive scheduling distributed machine learning 1.1 1.2 2.1 3.1 4.1 4.2 map duration node job hadoop yarn identification slower node pert proposed calinski-harabaz score 4.3 class 4.4 object 4.5 worker node 4.6 master node 6.1 6.2 6.3 node classification prediction accuracy parameter accuracy month accuracy k-means dbscan 2017-18 4 7 9 23 26 29 31 32 32 33 40 41 42 iii proactive scheduling distributed machine learning 1.1 4.1 6.1 pert description prediction parameter 24 33 41 iv 2017-18 proactive scheduling distributed machine learning sr. title 1 2 3 4. acknowledgement 1.1 1.2 1.3 aim 1.4 straggler 1.5 challenge node execution performance heterogenety 1.6 hadoop map-reduce 1.7 background review 2.1 straggler 2.2 straggler detection 2.3 existing 2.4 speculative execution 2.5 distributed machine learning 2.6 proposed specification 3.1 3.2 3.3 3.4 3.5 4.1 proposed 4.2 offline behavioural description 4.3 online analytics 4.4 2017-18 ii iii iv 2-7 2 3 3 3 4 6 7 8-18 9 11 12 13 16 18 20-24 20 20 20 23 24 26-33 26 27 30 31 5 6 7. proactive scheduling distributed machine learning 5.1 stage 5.2 experimental setup evaluation 6.1 6.2 7.1 7.2 35-37 35 35 39-44 39 42 46-31 46 46 47 2017-18 proactive scheduling distributed machine learning priority storage vendor faster execution time optimal utilization slow running job distributed processing environment 6 8 time slower production cluster lead extended job completion time inefficient increased cost aim build neglect slow running node optimizes utilization providing minimum job completion time machine learning technique find feasible heterogeneous processor exceeding capacity processor keywords machine learning distributed machine learning scheduling straggler 2017-18 proactive scheduling distributed machine learning 1 2017-18 1 proactive scheduling distributed machine learning organized 1.1 1.2 1.3 aim strive achieve 1.4 describes straggler 1.5 describes challenge node execution performance heterogeneity 1.6 describes hadoop map reduce presented 1.7 1.1 execution performance manager service developed parallel computing platform hadoop delayed execution lead decreased availability potential sla service level agreement breakdown unpredicted response poor satisfaction common witness node failure large-scale production machine crash method deal node failure discussed node failure node performance degradation call attention lead serious challenge straggler straggler proposed 1 describes phenomenon small subset outlier performs extremely slower sibling parallel job speculator built-in component hadoop 2 deal straggler straggler detection redundant replica launched node execution generated quickest adopted killed 2017-18 2 proactive scheduling distributed machine learning 1.2 distributed numerous advantage job finished earlier compared individual processing great boon job completion time reduced compared existing solution interesting area 1.3 aim aim reduce response time distributed 1 identifying slow node 2 avoiding slower node 3 reducing job completion time 4 making proper 1.4 straggler parallel computing framework hadoop mapreduce 2 job divided multiple subtasks running node order achieve optimized response time represents ith job jj cluster composed multiple ti machine node mm scheduler responsible assigning machine di denotes duration ti j. assumed job duration map mapreduce framework theoretically mapper job execution length identical hdfs block size practice assigned node subtasks vary duration 1 three example mapreduce job size opencloud cluster consisting 366 805 1116 mapper straggler occurs duration variation extreme slow undermine job execution paper define straggler estimated duration 50 larger average 2017-18 3 proactive scheduling distributed machine learning straggler occur contention network congestion input skew importantly node performance heterogeneity node incur straggler despite fact physical configuration 1.1 map duration node job id=258 id=231 id=136 opencloud cluster 1.5 challenge node execution performance heterogenity node performance heterogeneity factor lead straggler heterogeneity caused physical capacity difference perturbation upgrade illustrates challenge brought heterogeneity effective straggler toleration analyzed node performance analyzer needed order mitigate straggler 1 straggler evenly distributed cluster node 2017-18 4 proactive scheduling distributed machine learning observable machine shorter average processing time longer average duration indicating slower execution larger variation time processing showing unstable performance considering homogeneous physical configuration opencloud cluster node performance purely dependent capacity note node larger number straggler change month revealing dynamic nature straggler generation utilization physical capacity node performance diversity solely dependent contention utilization well 2 node performance changing time node performance refers node ability term executing parallel reasonable analyze node performance based duration distributed framework multiple workload designed length co-exist raw duration directly generate comparable solve proposed normalized execution calculated equation 1 z-score normalization duration variation brought job eliminated reveals relative speed ti compared jj positive represents lower execution duration ti larger job average increment positive indicates aggravated straggler behavior ti exhibit vice versa negative indicates shorter response smaller negative quicker ti performs collect assigned node reflect quickness slowness derived node performance job heterogeneity statistic node calculated basic metric measure node performance 2017-18 5 proactive scheduling distributed machine learning 3 summary node performance ensuring timely response analyze changing trend prediction based historical pattern vital straggler machine learning technique classification address challenge modeling performance reflected normalized workload duration addition time series produced trace intelligently predict performance changing trend investigating machine learning based analyzer capture evolutionary behavior node performance simply physical capacity contention indicator determine static performance 1.6 hadoop map-reduce hadoop framework store process form distributed environment cluster simple programming source scale machine machine storage space local computation mapreduce programming target efficient processing large-scale distributed infrastructure leverage divide-and-conquer technique order distribute amount distributed infrastructure precisely mapreduce job split multiple responsible process proportion job input concurrently machine yarn framework cluster scheduling job yarn split functionality job scheduling/monitoring separate daemon resourcemanager nodemanager form data-computation framework resourcemanager ultimate authority arbitrates nodemanager per-machine framework agent responsible container 2017-18 6 proactive scheduling distributed machine learning usage cpu memory disk network reporting resourcemanager/scheduler 1.2 hadoop yarn yarn split functionality job scheduling/monitoring separate daemon 1.7 introduced concept distributed framework characteristic performed study hadoop framework underlying hdfs file 2017-18 7 proactive scheduling distributed machine learning 2 2017-18 8 proactive scheduling distributed machine learning background review organized 2.1 describes concept straggler distributed 2.2 explains straggler detection 2.3 describes existing avoiding straggler 2.4 describes speculative execution distributed 2.5 explains distributed machine learning 2.6 describes proposed solution working 2.1 straggler straggler node longer normal finish node increase execution time reduce cluster throughput slow node degrade cluster throughput hurdle faster completion modern framework 1.2 slower node 2.1 identification slower node 2017-18 9 proactive scheduling distributed machine learning straggler stem number root-causes including heterogeneity contention background network traffic i/o discord application- level source considerable effort studying straggler caused skew categorized map reduce skew subdivided partitioning skew record size skew computation skew distribution input dataset skew subsequently introduces straggler size computing infrastructure job continues expand straggler increase dramatically straggler extend job execution time impacting qos consumer service level agreement sla rare performance abnormality affect portion request large-scale distributed analyzing straggler critical order speed job completion 2.1.1 straggler factor capacity worker node heterogeneous running worker node compete factor co-hosted compete input skewed unacceptably slow speed remote input/output source fault three category root straggler 1. machine characteristic static aspects-hardware reliability e.g disk failure dynamic aspect -contention processor memory 2. network characteristic datacenter network over-subscribed leading variance congestion path 3. imbalance work-partitioning entropy key space 2017-18 10 proactive scheduling distributed machine learning map-reduce lead imbalance work-partitioning skewed 2.2 straggler detection approach mitigate straggler avoidance tolerance akin nature fault defined context dependability eliminating source straggler large-scale computing impractical scale complexity well increased multi-tenancy collocate physical server virtualization typical tolerate straggler speculative execution speculative execution technique observes execution progress percentage score ranging 0 1 representing start completion launch speculative copy backup copy progress 20 le average approach operates speculative copy execute faster complete prior original straggler currently deployed production cluster google facebook bing alibaba yahoo straggler approach demonstrated enhance job execution performance effectiveness underpinned accurate straggler detection current straggler detection approach classified online offline analytics face challenge online analytics detection occur late execution lifecycle applying speculative copy straggler execute 8 time slower compared average duration job increasing duration 47 hand offline analytics applied straggler avoidance approach le feasible increased scale heavily impacted term straggler behavior numerous underlying clear opportunity combine online offline analytic technique improve 2017-18 11 proactive scheduling distributed machine learning effectiveness straggler detection attempt preserve temporal guarantee distributed 2.3 existing 2.3.1 blacklisting job tracker submits job tracker instance node failing job tracker blacklist tracker tracker blacklisting a. per-job blacklisting b. cluster-wide blacklisting per-job blacklisting tracker blacklisted job fail tracker accept remaining job isnt blacklisted cluster-wide job blacklist 1/4th tracker cluster cluster-wide blacklisting tracker blacklisted currently running completed assigned un-blacklisting requires tracker restart blacklisting time half tracker blacklisted tracker automatically accept job removed blacklist 2.3.2 speculative execution hadoop node slow node delay execution program isolation input coming trust hadoop platform provide correct input correct input processed multiple time machine capability finish hadoop copy remaining node free called speculative execution 2017-18 12 proactive scheduling distributed machine learning inform jobtracker completion copy finish considered definitive copy copy execution tasktracker abort thesis discard output speculative execution aim reduce job execution time affect efficiency cluster duplication 2.4 speculative execution 2.4.1. reactive reactive technique spawn redundant copy slow running hoping copy reach completion original technique differentiate node inherently slow node temporarily overloaded 2.4.1.1 late mapreduce scheduling late heterogeneous environment based static fixed-weight method main step late prioritize node speculate select fastest node speculatively cap speculated avoid thrashing node request hadoop failed higher priority running job advantage late speculatively executes improve job response time slow disadvantage 1. late wrong re-execute 2. network utilization le 3. late doe n't consider map reduce slow 4. suffers static nature heterogenous environment 5. exerts pressure running competing 6. presumes progress roughly constant rate 2017-18 13 proactive scheduling distributed machine learning 2.4.1.2 samr samr remaining execution time find slow historical adjust stage weight map reduce estimating execution time samr recordes m1 m2 r1 r2 r3 tasktracker node historical facilitate accurate estimation tte samr assumes number key/value pair processed nf number key/value pair current stage processing 0 1 2 progress score stage subps samr historical recorded individual node stage weight m1 m2 r1 r2 r3 node advantage samr historical recorded node tune weight stage dynamically disadvantage doe consider job weight map reduce stage job datasets lead weight 2.4.1.3. esamr enhanced self-adaptive mapreduce esamr scheduling historical node node historical weight assigned node based job executed node dataset job characteristic node cluster weight nearest kmeans clustering save average weight cluster advantage esamr scalable esamr datasets smallest late samr single group esamr accurately late samr 2017-18 14 proactive scheduling distributed machine learning esamr find correct slow reduce disadvantage esamr focus optimization level job level performance 2.4.2. proactive reacting detection slower node proactive technique avoid creation slower node avoids slower node attain faster job completion time slight 2.4.2.1 mantri mantri speculative execution strategy aim save cluster computing slot start backing remaining appear higher backup completing earlier kill original copy cluster busy disadvantage a. focus saving computing cluster b. kill-restart method guarantee completed earlier original 2.4.2.2. wrangler wrangler predicts straggler interpretable linear modelling technique wrangler prevents wastage removing replicating wrangler introduces notion confidence measure prediction overcome modelling error confidence measure exploited achieve reliable scheduling wrangler predicts newly assigned node turn straggler prediction scheduling decision proactively avoid straggler formation wrangler proactively prevents situation straggler automatically learns predict situation statistical learning technique based cluster 2017-18 15 proactive scheduling distributed machine learning utilization counter predicts straggler linear modeling technique based cluster usage counter introduces notion confidence measure prediction overcome modeling error confidence measure simply predicting straggler non-straggler robust modeling error ensures reliable prediction confidence measure help decide prediction accurate preventing straggler influencing scheduling decision 2.4.2.3. dolly small job typically interactive center continue plagued disproportionately long running called straggler disadvantage focus interactive job replicative nature incur additional 2.5 distributed machine learning parallel loading fault tolerance synchronization concern program complicated 2.5.1 dml ideally expected execute accurately variety cloud infrastructure laptop server machine graphic processing unit gpus cloud computing virtual machine distributed network storage ethernet infiniband networking training storage computation capability single machine 2017-18 16 proactive scheduling distributed machine learning gap inspired growing body distributed program executed cluster center cloud provider ten machine scalability challenge major distributed order reduce capital cost running traditional method handle extremely initial loading time consuming subsample transfer machine disk-level machine learning handle bigger frequent access disk concern 2.5.2. advantage dml distributed learning avoids necessity gathering single workstation central processing saving time money learning process train classifier distributed increase possibility achieving higher accuracy large-size domain integration classifier represent integration learning bias compensate inefficient characteristic ensemble artificial neural network classifier making error le 0.5 error independently error decrease function number classifier learning distributed manner natural solution large-scale learning complexity memory main obstacle multi-core processor partition order independently derive classifier memory well execution time assuming minor 2017-18 17 proactive scheduling distributed machine learning overhead smaller computational cost training classifier subset lower training classifier distributed learning inherently scalable growing amount offset increasing number processor finally distributed learning overcomes centralized storage distributed learning essential order provide solution learning scale learning naturally distributed learning scalable solution growing volume offset increasing number learning site 2.6 proposed 1. proposed waterfall involves fully documenting advance variation outcome 2. detailed investigation full conducted upfront eliminating 3. propose leveraging historical parallel execution log classifies cluster node category predicts performance scheduling improve speculation effectiveness minimize straggler generation 2.6.1 working proposed building predictive processing collection relevant converting proper format clustering collecting node based extracted processing cluster labelling examining cluster labelling identify straggler non-stragglers 2017-18 18 proactive scheduling distributed machine learning 3 2017-18 19 proactive scheduling distributed machine learning specification 3.1 distributed slow running node degrade cluster performance lead extended job completion time wastage aim find feasible machine learning technique distributed 3.2 reduce response time distributed 1. identifying straggler 2. avoiding straggler 3. reducing job completion time 4. making proper 3.3 3.3.1 1. input datasets 2. job 3.3.2 non-functional 1. performance improvement 2. reducing job completion time 3. improving throughput 3.3.3 framework hadoop 2.7.4 hadoop source framework distributed processing 2017-18 20 proactive scheduling distributed machine learning hadoop 2.0 includes yarn scheduling key yarn support pluggable scheduler i.e change scheduler technique policy responsible scheduling node 3.3.4 3.3.4.1 apache rumen rumen extraction built apache hadoop rumen mine jobhistory log extract meaningful store easily-parsed condensed format digest raw trace mapreduce log insufficient simulation emulation benchmarking attempt measure condition occur source example locally raw trace simulation scheduler elect remote rack simulator requires runtime input provide fill gap rumen performs statistical digest variable trace doe n't supply rumen trace drive gridmix benchmark hadoop mapreduce cluster mumak simulator jobtracker rumen consists component trace builder convert jobhistory log easily-parsed format currently tracebuilder output trace json format folder utility scale input trace trace tracebuilder simply summarizes job input folder file time-span job trace finish considered trace runtime folder scale runtime trace decreasing trace runtime involve dropping job input trace scaling runtime remaining job increasing trace runtime involve adding dummy job trace scaling runtime individual job 3.3.4.2 python scikit library scikit-learn free machine learning library python programming 2017-18 21 proactive scheduling distributed machine learning language classification regression clustering including support vector machine random forest gradient boosting k-means dbscan designed interoperate python numerical scientific library numpy scipy numpy augments python language efficient numerical scipy additional routine needed scientific example routine computing integral numerically differential equation optimization sparse matrix function zscore stddev zscore calculates score sample relative sample standard deviation matplotlib produce plot turn presentation article numerical program save plot program 3.3.4.3 ipython ipython rich interactive computing powerful interactive shell kernel spyder support interactive visualization gui toolkits flexible embeddable interpreter load easy performance parallel computing 3.3.5 memory slave node 2 gb proper working hadoop machine minimal 2 gb master node 4gb node predictive working machine memory 4gb 2017-18 22 proactive scheduling distributed machine learning 3.4 3.4.1 split-up 1. processing select process input 2. clustering categorize performance node cluster 3. labelling label node straggler 4. classification predicting node straggler 3.4.2 3.2 pert 2017-18 23 proactive scheduling distributed machine learning 3.4.3 pert 3.3 pert 3.4 defined non-functional identified 2017-18 24 proactive scheduling distributed machine learning 4 2017-18 25 proactive scheduling distributed machine learning 4.1 proposed 1 ... fig.4.1 proposed 2017-18 26 proactive scheduling distributed machine learning 4.2 offline behavioural description description behavior presented 1. pre-processing common preprocessing step cleaning cleaning removal fixing missing instance incomplete carry address instance removed sampling selected longer running time larger computational memory smaller representative sample selected faster exploring prototyping solution considering dataset 2. extraction node performance typically influenced multiple selecting key indicator represent node ability parallel job execution vital process parallel execution trace generate key statistical normalized duration number timing adopted 1 statistical node performance reflected statistical running time period example assigned node m1 average 2 infer m1 weak performance node assigned m1 straggler job characterized 2 slower average duration dj assume assigned m1 relative speed 2j time slower well statistical standard deviation pertaining node reflect fluctuation range node performance showing stable random possibility node 2017-18 27 proactive scheduling distributed machine learning 2 number apart statistical derived dij distribution node number describe node performance implies node contention state reflects contention job execution rapidness addition normalized number compared machine node cluster raw number intend constrain selected range lay foundation operation clustering process three basic meta-features selected build node performance average standard deviation node well normalized number example leveraging three meta- clustering node 5 category k- machine node clusterization group execution performance 3 timing considering fact performance degradation caused time- cumulative adopted dimension timing specific divided trace 9 month job submission time month 30 day ignoring fact natural month day number month construct input dataset consists tuples tuple mid avg norm n_task 3. clustering step label node node performance group scenario clustering well-known technique -means simplest whilst effective clustering key parameter launching k-means find optimal 2017-18 28 proactive scheduling distributed machine learning reduce number node group separate minority weak performance node majority normal maintaining best clustering calinski-harabaz score calinski- harabaz score measure covariance cluster covariance cluster higher calinski-harabaz score signifies superior clustering 4.2 demonstrates score variation changing 2 10 represent node performance 4.2. calinski-harabaz score 2017-18 29 proactive scheduling distributed machine learning 4. labeling putting node performance group determine cluster represents weakest performance group conventional labeling manual practice conducted administrator suffers inefficiency subjective lead misidentification cope automatic labeling proposed heuristic ranking criterion adopted decision c1 weakest performance node number positive avg number positive avg .is primary indicator judging specific group weak performance node equation 1 positive signifies straggler node mid positive avg .indicates likelihood straggler occurrence number positive avg .can imply frequency node exhibit slow tendency month time c2 multiple cluster center number positive avg .then smallest ijdayn suggests worst performance 1 30 implies confidence predicting node performance represents stable random status small indicates concentrated distribution node mid node slow tendency e.g maximum positive avg number c1 smaller average higher chance group classified weakest 4.3 online analytics node parameter job node generalized prediction built distributed predict node straggler scheduler prediction based making 2017-18 30 proactive scheduling distributed machine learning decision avoid straggler formation proactively prediction produced offline analytics resides manager distributed rumen agent responsible analyzing execution progress straggler detection runtime scheduled server predictive periodically monitor progress extract key parameter trace generated parameter interest identified include time instantiation time completion normalized duration node predictive compare parameter produced offline generalized prediction identifies parameter behavior straggler avoid node 4.4 4.4.1 class 4.3. class 2017-18 31 proactive scheduling distributed machine learning 4.4.2 object 4.4. object 4.4.3 4.5. worker node 2017-18 32 proactive scheduling distributed machine learning 4.1 description 4.6. master node 2017-18 33 proactive scheduling distributed machine learning 5 2017-18 34 proactive scheduling distributed machine learning 5.1 stage processing order suitable input prediction clustering extracted processing clustering based node performance node identified node cluster higher average normalized duration identified straggler node cluster great possibility straggler node identified straggler cluster performance clustering labelling identify label cluster identified straggler cluster classification created predict node straggler non- straggler 5.2 experimental setup 5.2.1 opencloud cluster dataset opencloud cluster carnegie mellon cmu managed cmu parallel lab cmu researcher including faculty post-docs graduate campus opencloud released execution tracelog public covering month 2012. 64 node cluster 2.8 ghz dual quad core cpu 8 core 16 gb ram 10 gbps ethernet nic seagate 7200 rpm sata disk drive cluster hadoop 0.20.1 collection period raw log file anonymized field stored transformed log csv file 6 provided attempt history interest 2017-18 35 proactive scheduling distributed machine learning jobid tasktype taskid start shuffle /sort finish time attempt represented utc timestamp millisecond status success failed killed hostname filtering 18 935 parallel job consists 8 734 974 analyzed unit metric complex .so convenience convert normalized form 5.2.2 detailed step normalized input svm variable variance small weight load variance scale matter lot normalizing wa better accurate training normalization logic normalization relative speed ti compared job jj input created tuple machine consists machine mid average normalized duration machine avg standard deviation normalized duration machine normalized number tni tuple mid avg norm n_task tuple input kmeans group machine node performance cluster written csv file unlabeled cluster maximum number positive avg considered weak cluster 2017-18 36 proactive scheduling distributed machine learning cluster number average positive compared minimum stdi considered weak cluster machine cluster labeled 1 indicating straggler machine labeled 0 non-straggler written csv file csv file xgboost classifier learns creates prediction unlabeled csv prediction predicts label machine accuracy prediction calculated comparing predicted label calculated label 5.2.3 hadoop multinode cluster hadoop cluster heterogeneous node evaluate proposed method finding straggler node node wa chosen master node hadoop distributed file namenode yarn runtime resourcemanager remaining three node slave node datanodes nodemanagers node interconnected wireless networking multi-node setup ubuntu 14.04 operating jdk version 8 hadoop 2.7.2 version performance job multinode hadoop cluster parameter job collected json format apache rumen anonymized csv parameter python script node straggler 2017-18 37 proactive scheduling distributed machine learning 6 2017-18 38 proactive scheduling distributed machine learning evaluation 6.1 1. xgboost classifier parameter parameter setting tested train xgboost main parameter tuned learning rate evaluation metric gbtree depth learning rate shrink weight boosting process conservative support parallelization tree construction ability fit boost trained model.shallow tree expected poor performance capture generally referred weak learner deeper tree generally capture overfit training dataset limiting ability good prediction evaluation metric validation data.the logloss calculates negative log-likelihood adopted evaluation metric error represents classification error rate evaluation metric graph optimal prediction p_1 0.1 maximum depth gbtree booster 12 p_2 learning rate 0.3 andt maximum depth gbtree booster 9. 2017-18 39 proactive scheduling distributed machine learning 6.1. node classification prediction accuracy parameter 2. accuracy size proper parameter tuning prediction month exceed 85 proper training size highest prediction month 90 highest accuracy predicting month node performance category reach 100 despite peak accuracy ml-na achieve accuracy extreme 2017-18 40 proactive scheduling distributed machine learning 6.2. accuracy month 6.1. prediction parameter 3. kmeans dbscan step label node node performance group scenario well-known clustering method 1 k-means clustering 2 density-based spatial clustering noise dbscan cluster center k-means clustering 41 2017-18 proactive scheduling distributed machine learning find cluster comparable spatial extent dbscan allows cluster shape dbscan doe require number cluster priori opposed k-means.it find cluster completely surrounded connected cluster 6.3. accuracy kmeans dbscan 6.2 6.2.1 manual tested automated step step execution wa step executed bug 2017-18 42 proactive scheduling distributed machine learning 6.2.2 unit wa tested checked identify misbehavior bug.this revealed nan empty handled issue script tested proved worked well individually 6.2.3 integration integration wa master node execution wa check integration node communicate ssh public key authentication installing hadoop independently node creating multinode cluster code tested integration processed 6.2.4 system-wise library portability flexibility wa tested wide variety computing environment parallelization tree construction cpu core code executed python script optimize wa tested working validated verified load quickness wa checked wa tested platform execution avoid loss node label time node formatted label based scheduling wa executed python script performance real time assignment label node node queue wa tested function iwithout failure wa performed 2017-18 43 proactive scheduling distributed machine learning 6.2.5 automation handle load node accuracy prediction increased time executed considering scenario 1. variation dataset 2. change parameter improving efficiency 3. wa optimized processing asset today improve lesser time processing good efficiency desirable avoid slow running node distributed designed tackle extent 2017-18 44 proactive scheduling distributed machine learning 7 2017-18 45 proactive scheduling distributed machine learning 7.1 outcome achieved avoidance execution job slow node achievement faster job completion machine learning prediction slow node prioritization node job leading reliable job scheduling 7.2 study job distributed faster usual processing improved job execution time straggler avoidance improved usage parameter considering cpu usage ram memory utilization network bandwidth utilization input output disk utilization level number thread job running grouped cpu-intensive io intensive machine utilized prototype making machine straggler intentionally 2017-18 46 proactive scheduling distributed machine learning 1. jeffrey dean sanjay ghemawat mapreduce simplified processing cluster commun acm 51 107113 2008 2. hadoop 2017 online http //hadoop.apache.org 3. matei zaharia andy konwinski anthony d. joseph randy h. katz ion stoica improving mapreduce performance heterogeneous environment osdi 2008 4. ganesh ananthanarayanan srikanth kandula albert greenberg ionstoica yilu bikas saha edward harris reining outlier map-reduce cluster mantri proceeding 9th usenix conferenceon operating esign i10 116 berkeley usa 2010. usenix association 5. q. chen zhang m. guo q. eng s. guo samr adaptive mapreduce scheduling heterogeneous environment proceeding 10th international conference cit 10 washington dc usa 27362743 society 2010 6. x. sun c. y. lu esamr enhanced self-adaptive map reduce scheduling parallel istributed icpa 2012 18th international conference 2012 7. ganesh ananthanarayanan ali ghodsi scott shenker ion stoica effective straggler attack clone nsdi 2013 8. deshmukh s. aghav j. rao k.t rao b.t 2017 avoiding slow running node distributed satapathy s. bhateja v. raju k. janakiramaiah networking internet security lecture note network 5. springer singapore 9. ashwin bhandare jitin george supreet deshpande yash karle `` review straggler handling technique '' international journal science ijcsit 7 5 2016 2270-2276 2017-18 47 proactive scheduling distributed machine learning 10. kumar kumar `` comprehensive review straggler handling mapreduce framework '' international journal grid distributed computing 11. p. garraghan x. ouyang r. yang d. mckee j. xu `` straggler root-cause massive-scale virtualized cloud datacenters '' transaction service computing 2016 12. y. kwon m. balazinska b. howe j. rolia skewtune mitigating skew mapreduce sigmo international conference acm 2012 2536 13. j. li n. k. sharma s. gribble tale tail application-level source tail latency acm symposium cloud computing 2014 114 14. ouyang p. garraghan r. yang p. townend j. xu reducing late-timing failure scale straggler root-cause cloud datacenters fast 46th annual ieee/ifip international conference dependable network 2016 15. ouyang wang yang al 3 author accepted 2017 ml-na machine learning based node performance analyzer utilizing straggler statistic proceeding international conference parallel distributed icpads international conference parallel distributed icpads 15-17 dec 2017 shenzhen china press 16. garraghan ouyang townend j. xu `` timely long tail identification agent based analytics '' symposium real-time computing isorc 19-26 2015 17. xue ouyang peter garraghan changjian wang paul townend jie xu `` approach modeling ranking node-level straggler cloud datacenters '' service computing scc 2016 international conference 673-680 2016. 2017-18 48", "keywords": ["average duration", "avg norm", "avg number", "bhairagond shahista", "cloud datacenters", "cluster hadoop", "cluster node", "completion time", "confidence measure", "csv file", "distributed machine", "distributed machine learning", "duration machine", "evaluation metric", "execution performance", "execution time", "ganesh ananthanarayanan", "heterogeneous environment", "international conference", "international journal", "job completion", "job completion time", "job execution", "job input", "job tracker", "kumari sushmita", "learning technique", "machine learning", "machine learning technique", "machine node", "master node", "mid avg", "mid avg norm", "node execution", "node performance", "normalized duration", "normalized number", "offline analytics", "opencloud cluster", "parameter job", "performance group", "performance heterogeneity", "physical capacity", "prabha bhairagond", "prabha bhairagond shahista", "proactive scheduling", "proactive scheduling distributed", "response time", "review straggler", "review straggler handling", "scheduling distributed", "scheduling distributed machine", "slow running", "speculative copy", "speculative execution", "standard deviation", "straggler avoidance", "straggler detection", "straggler handling", "straggler straggler"], "libraries": ["numpy", "scipy", "spyder", "scikit-learn"], "languages": ["basic", "small", "io", "python"], "frameworks": [], "dbs": []}, "./reports/BE Project Report_28.pdf": {"title": "e-voting: an online election  portal using 3-level authentication and   hybrid aes-des", "filename": "./reports/BE Project Report_28.pdf", "data": "e-voting online election portal 3-level authentication hybrid aes-des e-voting online election portal 3-level authentication hybrid aes-des gayatribadgujar aishwaryadiwan suraj mundalik b120058510 b120058526 b120058571 guidance prof. n.v buradkar 2017-2018 2017-18 e-voting online election portal 3-level authentication hybrid aes-des e-voting online election portal 3-level authentication hybrid aes-des gayatri badgujar aishwarya diwan suraj mundalik b120058510 b120058526 b120058571 bonafide prof. mr. n.v buradkar earlier diploma prof. n.v buradkar dr.sonkamble b.a examiner dr.p.t .kulkarni 2017-18 e-voting online election portal 3-level authentication hybrid aes-des acknowledgement ii iii iv nomenclature title 1.1 1.2 review 2.1 existing 2.2 proposed specification 3.1 defination 3.2 concept 3.3 3.4 3.5 3.5.1 datasets 3.5.2 3.5.3. requiremnts 3.6 3.6.1 split-up 3.6.2 decomposition 3.6.3 3.0 3.6.4 pert 3.6.5 pert 4.1 4.2 4.3 structural 4.4 behavioural 2017-18 1 1 1 2 2 3 4 4 4 5 5 5 7 8 9 9 10 10 10 11 12 12 13 14 14 1 2 3 4 5 6 7 14 15 16 17 17 17 18 19 19 19 22 37 37 37 38 39 39 42 42 42 43 44 45 45 54 e-voting online election portal 3-level authentication hybrid aes-des 4.4.1 4.4.2 4.4.2 4.5 4.5.1 4.5.1.1 pseudocode hashing 4.5.1.2 aes 256 5.1 stage 5.1.1 source code 5.1.2 snapshot 6.1 white box 6.1.1 unit 6.1.2 integration 6.2 black box 6.2.1 7.1 7.2 7.3 base paper plagiarism 2017-18 e-voting online election portal 3-level authentication hybrid aes-des acknowledgement great pleasure acknowledge deep sense gratitude helped completing providing opportunity undertaken b.e course heartiness thanking directly indirectly helped completing gathering finding solution faced gayatri santosh badgujar 4001 aishwarya madan diwan 4004 suraj shamkumar mundalik 4023 2017-18 e-voting online election portal 3-level authentication hybrid aes-des sr.no 1 2 3 4 5 6 7 8. decomposition pert structural 10 11 12 13 14 14 15 16 sr.no 1 2 3. datasets pert 5 9 11 sr.no 2. ov abbreviation full form online voting 2017-18 e-voting online election portal 3-level authentication hybrid aes-des 1. 1.1 e-voting voter his\\her vote registration administrator security reason administration voter special site visited filling registration form voter citizen seeking registration expected contact administrator submit validity citizen maharashtra confirm administrator comparing existing database registrar person citizen registered voter registration voter assigned secret voter he/she log enjoy service provided voting invalid /wrong citizen registered vote 1.2 election essential democratic society hold election election administrative effort cost order circumvent drawback conventional physical election lot people suggested cheaper online voting today lot alternative e-voting proposed fulfil basic security provably secure completely impractical e-voting scandal destroyed people trust voting scheme easy practical secure transparent online voting scheme convince expert citizen lawyer 2017-18 1 e-voting online election portal 3-level authentication hybrid aes-des 2. review 2.1 existing year voting equipment adopted country divided 1. paper-based voting voter blank ballot pen marker indicate vote candidate hand-counted ballot time labor consuming process easy manufacture paper ballot ballot retained verifying common vote 2. lever voting machine lever machine peculiar equipment lever assigned candidate voter pull lever poll favorite candidate kind voting machine count ballot 9 automatically user-friendly training voter 3. direct recording electronic voting machine abbreviated dre integrates keyboard touch screen button voter press poll lay voting record counting vote dre keep voting record doubted accuracy 4. punch card voter metallic hole-punch punch hole blank ballot count vote automatically voter perforation incomplete determined wrongfully 5. optical voting machine voter fill circle correspond favorite candidate blank ballot machine selects darkest mark ballot vote computes total kind machine count ballot rapidly voter fill circle lead error optical-scan year considerable number country adopted e-voting official election country include america belgium japan brazil 2017-18 2 e-voting online election portal 3-level authentication hybrid aes-des 2.2 proposed e-voting click favourable candidate vote development ethernet online voting active area year insecure internet well documented incorrect reported challenge resolved public cast vote secure convenient proposed online voting voting voter his/her voting country 2017-18 3 e-voting online election portal 3-level authentication hybrid aes-des 3. specification 3.1 definition e-voting online voting technique contribute vote voting completely robust secure web multi functionality e-voting reduce time spend making long queue polling station voting enable voter vote globe explained online web internet wastage paper electricity e-voting best solution conducting online voting enhance experience convenience implemented mentioned synopsis vote miscount solved back-end resides well- developed database mysql provide correct 's correctly queried voting process be-open early voter ample time decide vote 3.2 concept main study step streamlining effort develop framework identify property secure trusted online voting satisfy reduce discovery redundancy framework allow evaluate well compare merit existing candidate online voting scheme support multi-user environment fully automated provide concrete security creating assigning privilege capable keep track detailed description client service offered client output online time handle extremely volume i.e database support 3.3 people vote count fairness elective position produce focused studying existing voting maharshtra nashik city sure 2017-18 4 e-voting online election portal 3-level authentication hybrid aes-des le effort le labor intensive primary cost focus primary creating managing running secure web voting portal increasing number voter individual find easier convenient vote abroad 3.4 specific include reviewing existing/current voting process approach maharashtra coming automated voting maharashtra implementing automated/online voting validating ensure legible voter allowed vote 3.5 3.5.1 datasets online voting 2 database calledasevoting uidai comprising schema database evoting schema 1 candidate 2017-18 schema 2 news 5 e-voting online election portal 3-level authentication hybrid aes-des schema 3 otp schema 4 party schema 5 schema 6 schema 7 vote 2017-18 6 e-voting online election portal 3-level authentication hybrid aes-des schema 8 votes_count database uidai schema 9 ward_map 3.5.2 schema 1 aadhar secure storage retrieval voter database enable secure voter non- legitimate voter allowed include aged national maintaining manipulating record database function edit delete view validate verify input output 2017-18 7 e-voting online election portal 3-level authentication hybrid aes-des fig 3.5.2.1 3.5.3software browser support internet explorer 11 google chrome 38 opera 26 safari 8.0 mozilla firefox 35 database mysql editor notepad sublime text atom local web server easy php 2017-18 8 e-voting online election portal 3-level authentication hybrid aes-des memory 512mb ram disk space 750mb free disk space 3.6 3.6.1 split-up voter administrator voter profile adding administrator provide credential voter candidate candidate administrator add candidate participate election allows voter participate election entering voting panel voting panel voter select vote candidate voter vote candidate admin admin complete setting website admin modify complete setting website administrator timing vote display completion scheduled time display candidate voter election 2017-18 9 e-voting online election portal 3-level authentication hybrid aes-des 3.6.2 decomposition fig 5.2.1 decomposition 3.6.3 3.0 working 5th jan 2018 10th jan 2018 18th jan 2018 26th jan 2018 1st feb 2018 10th 2018 14th 2018 6th 2018 coding documentation 2017-18 10 e-voting online election portal 3-level authentication hybrid aes-des 3.6.4 pert predecessor coding documentation 3.6.5 pert duration day 8 7 29 10 70 2017-18 11 e-voting online election portal 3-level authentication hybrid aes-des 4. 4.1 fig 4.1 basically 3-tier client/server 4.1 comprising database server pc station front phase lie client client represent pc center formed country election period represents pc connect server normal working day regular viewing election editing profile middle phase comprises server discussed server consist back-end handle delegated administration server phase comprised storage subsystem database phase communicate formal protocol server communicates directly client storage device clients-databases directly server database connectorhandles database request client side database well response controlled server 2017-18 12 e-voting online election portal 3-level authentication hybrid aes-des 4.2 fig 4.2 online voting dfd administrator voter administrator allow denies voter voter vote filled him\\her correct 2017-18 13 e-voting online election portal 3-level authentication hybrid aes-des 4.3 structural 4.4 behavioral fig 4.3 structural fig 4.4.1 2017-18 14 e-voting online election portal 3-level authentication hybrid aes-des fig 4.4.2 2017-18 15 e-voting online election portal 3-level authentication hybrid aes-des fig 4.4.3 2017-18 16 e-voting online election portal 3-level authentication hybrid aes-des 4.6 4.5.1 security concern 1. security implementing hybrid aes-des 2. authentication implementing 3-level authentication 4.5.1.1 pseudocode password hashing /* method password input generates hash order create strong hash rainbow attack brute force method impossible return hash string parameter password string */ hash generate_authentication_password_hash input 1. read input 2. 0 0 3. whilei length input ascii input 4. newchar char 26 5. hash md5 input+newchar 6. return hash 2017-18 17 e-voting online election portal 3-level authentication hybrid aes-des 4.5.1.2 aes 256 aes based principle substitution-permutation network combination substitution permutation fast hardware.unlike predecessor de aes doe feistel network aes variant rijndael fixed block size 128 bit key size 128 192 256 bit contrast rijndael specification se block key size multiple 32 bit minimum 128 maximum 256 bit aes operates 4 4 column-major order matrix byte termed state version rijndael larger block size additional column state aes calculation finite field key size aes cipher specifies number repetition transformation round convert input called plaintext final output called ciphertext number cycle repetition 10 cycle repetition 128-bit key 12 cycle repetition 192-bit key 14 cycle repetition 256-bit key round consists processing step stage including depends encryption key reverse round applied transform ciphertext original plaintext encryption key 2017-18 18 e-voting online election portal 3-level authentication hybrid aes-des 5 5.1 source code source file deploy directory web root/ assets/ cs img confirm cron/ required/ dashboard election sections/ uidai/ index.php hybrid aes-des root/required/data_privacy.php symmetric key encryption decryption php 2017-18 /* */ define `` aes_key '' `` bcb04b7e103a0cd8b54763051cef08bc55abe029fdebae5e1d417e2ffb2a00a3 '' define `` des_key '' `` abe029fdeb3051cef08bbcb04b7e103a0cd8b5476c55ae5e1d417e2ffb2a00a3 '' /* */ functionaes_encrypt plaintext 19 key pack h* aes_key aes encryption e-voting online election portal 3-level authentication hybrid aes-des iv_size mcrypt_get_iv_size mcrypt_rijndael_256 mcrypt_mode_cbc iv mcrypt_create_iv iv_size mcrypt_rand ciphertext mcrypt_encrypt mcrypt_rijndael_256 key plaintext prepend iv decryption ciphertext iv ciphertext encode cipher text represented string ciphertext_base64 base64_encode ciphertext return ciphertext_base64 key pack h* aes_key iv_size mcrypt_get_iv_size mcrypt_rijndael_256 mcrypt_mode_cbc ciphertext_dec base64_decode ciphertext retrieves iv iv_size created mcrypt_get_iv_size iv_dec substr ciphertext_dec 0 iv_size retrieves cipher text iv_size front ciphertext_dec substr ciphertext_dec iv_size remove 00h valued character plain text plaintext_dec mcrypt_decrypt mcrypt_rijndael_256 key ciphertext_dec aes decryption /* */ functionaes_decrypt ciphertext mcrypt_mode_cbc iv mcrypt_mode_cbc iv_dec return plaintext_dec functiondes_encrypt plaintext 2017-18 de encryption /* */ //generate key hash key md5 utf8_encode des_key //take 8 byte key append key key .=substr key 0 8 //pad pkcs7 blocksize mcrypt_get_block_size 'tripledes 'ecb 20 e-voting online election portal 3-level authentication hybrid aes-des de decryption len strlen plaintext pad blocksize len blocksize plaintext .=str_repeat chr pad pad //encrypt encdata mcrypt_encrypt 'tripledes key plaintext 'ecb return base64_encode encdata /* */ functiondes_decrypt ciphertext random password generator 2017-18 //generate key hash key md5 utf8_encode des_key //take 8 byte key append key key .=substr key 0 8 ciphertext base64_decode ciphertext ciphertext mcrypt_decrypt 'tripledes key ciphertext 'ecb block mcrypt_get_block_size 'tripledes 'ecb len strlen ciphertext pad ciphertext len-1 returnsubstr ciphertext 0 strlen ciphertext pad /* */ function encrypt plaintext /* */ function decrypt ciphertext /* returndes_decrypt aes_decrypt ciphertext returnaes_encrypt des_encrypt plaintext e-voting main decryption e-voting main encryption 21 e-voting online election portal 3-level authentication hybrid aes-des seed= */ functionrandom_password str_split 'abcdefghijklmnopqrstuvwxyz'.'abcdefghijklmnopqrstuvwxyz'.'0123456789 5.2user snapshot shuffle seed pas `` foreach array_rand seed 10 return pas pas .= seed snapshot 1. 2017-18 22 e-voting online election portal 3-level authentication hybrid aes-des snapshot 2. password snapshot 3. otp 2017-18 23 e-voting online election portal 3-level authentication hybrid aes-des snapshot 4. snapshot 5. validation 2017-18 24 e-voting online election portal 3-level authentication hybrid aes-des snapshot 6. eligibility check snapshot 7. aadhar identity verification 2017-18 25 e-voting online election portal 3-level authentication hybrid aes-des snapshot 8. aadhar identity verified snapshot 9. 2017-18 26 e-voting online election portal 3-level authentication hybrid aes-des snapshot 10. otp snapshot 11. otp 2017-18 27 e-voting online election portal 3-level authentication hybrid aes-des snapshot 12. level 2 snapshot 13. level 3 2017-18 28 e-voting online election portal 3-level authentication hybrid aes-des snapshot 14 3 level authentication verify level 2 snapshot 14 3 level authentication verify level 3 2017-18 29 e-voting online election portal 3-level authentication hybrid aes-des snapshot 15. news snapshot 16. election 2017-18 30 e-voting online election portal 3-level authentication hybrid aes-des 0 snapshot 17. setting snapshot 18. voting panel 2017-18 31 e-voting online election portal 3-level authentication hybrid aes-des snapshot 19. confirm vote snapshot 20. admin dashboard 2017-18 32 e-voting online election portal 3-level authentication hybrid aes-des snapshot 21. add candidate snapshot 22. add news 2017-18 33 e-voting online election portal 3-level authentication hybrid aes-des snapshot 23. election snapshot 24. search voter/ candidate 2017-18 34 e-voting online election portal 3-level authentication hybrid aes-des snapshot 25. specific ward snapshot 26. party statistic 2017-18 35 e-voting online election portal 3-level authentication hybrid aes-des snapshot 27. ciphertext vote count hybrid aes-des snapshot 28. ciphertext individualvote hybrid aes-des 2017-18 36 e-voting online election portal 3-level authentication hybrid aes-des 6 6.1 white box 6.1.1 unit unit level individual units/ component tested purpose validate unit performs designed unit smallest testable input single output procedural programming unit individual program function procedure object-oriented programming smallest unit method belong base/ super class class derived/ child class treat unit discouraged individual unit unit framework driver stub mock/ fake object assist unit regard proposed tested unit module/component voter eligible actual outcome voting process legal voter validated eligibility check aadhar identity verification validate valid aadhar card issued govt india bogus registration happen prevent trauma verify aadhar card holder identity otp verification conducted failed voter blocked 1 hour e-voting bypass 3- 3-levels level authentication authentication order access dashboard perform aadhars database aadhar api pas returned voter asked verify his/her identity he/she check eligibility voting success registration process continued voter blocked 1 hour identity verification pas failure asked verify 3-levels authentication level 1 password level 2 rgb pattern level 3 image authentication verification granted access dashboard perform pas 2017-18 37 e-voting online election portal 3-level authentication hybrid aes-des e-voting time password otp vote alternatively access dashboard otp method verifies his/her identity entering 6-digit otp mobile/email supposed verify identity casting vote otp method success his/her vote considered valid vote disabled failure voting process blocked 2 minute asked 6-digit otp method verification granted access dashboard allowed proceed bypass otp validated format 6-digit verify his/her identity casting vote candidate success vote considered valid voting disabled prevent re-voting failure voting process blocked 2 minute prevent failure avoid bottleneck bot pas pas 6.1.2 integration integration level individual unit combined tested group purpose level expose fault interaction integrated unit driver stub assist integration module/component 1. eligibility check 2. aadhar identity verification 1. captcha verify 2. credential verification integration based eligibility check registration process proceed aadhar identity verification success receive credential captcha verify method verifies answer question displayed inside captcha verification image time actual outcome asked check eligibility success forwarded aadhar identity verification verification receives credential failure process blocked 1 hour captcha verification method validates verifies answer correct credential validated verified credential verification pas pas 2017-18 38 1. caste vote 2. disable voting 6.2 black box 6.2.1 t1 e-voting online election portal 3-level authentication hybrid aes-des correct credential verification method called order verify method credential match stored database process redirected verify 2-levels fail authentication caste vote method verify voter identity proceed casting vote database identity verification succeeds disable voting disable voting vote casted casting vote voter asked verify identity otp verification vote casted voting disabled till election voter voted re-voting allowed e-voting pas input url visit eevoting.com t2 responsive_navbar t3 privacy_policy_url t4 username_validate resize browser window compress screen resolution click privacy policy url footer website enter example username expected 200 opening e-voting web portal responsive navbar displayed screen size privacy policy displayed invalid username output status pas pas actual 200 e- voting web portal displayed responsive navbar displayed screen resolution 404 fail invalid username error displayed pas 2017-18 39 e-voting online election portal 3-level authentication hybrid aes-des input box error displayed t5 captcha_validate t6 empty_login_cred t7 login_otp_validate _user t8 login_otp_validate t9 invalid_otp t10 eligibility_check t11 invalid_aadhar enter wrong answer captcha captcha answer input box enter username password captcha click enter username exist enter username click wait otp enter wrong otp otp input box pop- enter 7-digit otp otp input box pop-up visit enter random 12 digit aadhar number click check visit enter 123456 aadhar number input box click check invalid captcha error displayed fill field error displayed error displayed incorrect otp error displayed restricted invalid otp error displayed record uidai record error displayed invalid aadhar number error displayed pop-up invalid captcha error displayed pop-up field error displayed exist error displayed incorrect otp error displayed restricted pas pas pas pas invalid otp error displayed pas record error displayed pas invalid aadhar number error displayed pas 2017-18 40 t12 check_3_attempts e-voting online election portal 3-level authentication hybrid aes-des visit enter valid 12 digit aadhar number click check hit click button verify aadhar identity enter wrong otp 3 time registration process blocked 1 hour registration process blocked 1 hour incorrect 3 otp attempt pas 2017-18 41 e-voting online election portal 3-level authentication hybrid aes-des 7 7.1 online voting manage voter voter voting incorporate voting maintaining voter vote party count total vote party database maintained administrator voter complete stared 18 year 's his\\her database he/she vote he\\she password vote party single time voting store database displayed calculation online voting percentage voting increase decrease cost time voting process easy le time consuming easy debug 7.2 legal bylaw issue check state statute association bylaw sure online voting acceptable election method learning curve process online election method anxiety trepidation member well invest well-planned promotion education strategy properly teach reassure member election process good fit online election best answer association association member computer-savvy member easy access internet expertise building online voting requires programming experience understanding election process association establish online voting staff lack expertise building internally unreasonable strain employee providing support critical piece online voting process providing designated voter support matter well-designed well-thought-out online voting member cant log help perception online process favorable 2017-18 42 e-voting online election portal 3-level authentication hybrid aes-des 7.3 focused studying existing voting maharshtra nashik city sure people vote count fairness elective position produce le effort le labor intensive primary cost focus primary creating managing running secure web voting portal increasing number voter individual find easier convenient vote abroad 2017-18 43 e-voting online election portal 3-level authentication hybrid aes-des 1 virendra kumar yadav saumyabatham mradul jain shivani sharma `` approach electronic voting uidai '' electronics icecs 2014 international conference 1-4 2014 2 anooshmita da manashpratim dutta subhasish banerjee `` vot-el three tier secured state-of-the- art evm pragmatic fingerprint detection annexed nfc enabled voter-id card '' emerging trend science icetets international conference 1-6 2016 3 asif ahmed anik rayeesajameel abul farah anik nowrozeakter `` solar power electronic voting machine '' networking security nsyss 2017 international conference 127-131 2017 4 m. tarekibnziad amr al-anwar yousraalkabani m. watheq el-kharashi hassan bedour `` e- voting attack countermeasure '' advanced networking workshop waina 2014 28th international conference 269-274 2014 5 ashwiniwalake pallavichavan `` efficient voting 22 secret sharing based authentication '' ijc interational journal science 6 1 410-412 2015 6 himanshu agarwal g. n. pandey `` online voting india based aadhaar '' eleventh international conference ict knowledge 2013 7 pranay r. pashine p. ninave mahendra r. kelapure sushil l. raut rahul s. rangari kamal o. hajari `` remotely secured e-voting social governance android platform '' international journal trend ijett 9 13 mar 2014. 2017-18 44 e-voting online election portal 3-level authentication hybrid aes-des base paper 1 approach electronic voting uidai virendra kumar yadav saumyabatham mradul jain shivani sharma `` approach electronic voting uidai '' electronics icecs 2014 internationalconference 1-4 2014. casting vote counting vote electronic constitutes electronic voting creating electronic voting requires robust voting mechanism complex paper concept electronic voting ensures authentication authorization accounting approach collect uidai validating electorate casting electorate vote electronic voting procedure collected uidai significance aaa approach address issue voter fraud voting accuracy reliable voting time delay increasing electorate participation providing friendly providing framework fair election conference 13-14 feb. 2014date xplore 08 2014 isbn electronic isbn 978-1-4799-2320-5cd-rom isbn 978-1-4799-2321-2 inspec accession number 14565971 doi 10.1109/ecs.2014.6892510 publisher ieeeconference location coimbatore india traditional voting based paper process electorate visit physically election center cast vote election center electorate identity proof front election conducting representative center authentication completed electorate allowed representative printing paper stamp his/her choice electorate fold printing paper box popularly ballot box representative mark nail electorate prevent duplicity fraud electorate 2017-18 45 e-voting online election portal 3-level authentication hybrid aes-des keywords keywords mobile nomination election cryptography nspec controlled indexing government processing authorisation acquisition inspec non-controlled indexing evrm electronic_votingsystem uidai votingmechanism authentication authorization accountin collection electorate vote casting aaa electronic voting registration author keywords mi uidai electronic voting registration evrm ev eii 2 anooshmita da manashpratim dutta subhasish banerjee `` vot-el three tier secured state- of-the-art evm pragmatic fingerprint detection annexed nfc enabled voter-id card '' emerging trend science icetets international conference 1-6 2016. india largest democracy election form cornerstone country prominent leader representative chosen country seek search public affair piece legislation constitutional amendment onerous maintain transparency electoral process shield integrity election equitable withstand fraudulence rampage free election critical issue today 's state affair finding needle haystack eye lot money spent ensure election fair unprejudiced privacy election equitable prevent voter coercion intimidation ballot selling nowadays unwanted force indulged bogus voting criticized election irregularity lead ambiguity polling actual verdict people classical poll-site voting method based voting poise administrative logistic challenge term cost voter misinterpretation tally vote paper proposes state-of-the-art electronic voting machine quest election legitimacy provide inexpensive solution based pragmatic biometric fingerprint detection inclusion near-far 2017-18 46 e-voting online election portal 3-level authentication hybrid aes-des published emerging trend science icetets international conference conference 24-26 feb. 2016date xplore 24 2016 isbn electronic isbn 978-1-4673-6725-7 print demand pod isbn 978-1-4673-6726-4 inspec accession number 16409737 doi 10.1109/icetets.2016.7603041publisher conference location pudukkottai india election fundamental defining characteristic democracy upholds meaning governed people expressing choice articulate opinion form voting traditional electoral process vacillates tallying manually time consuming complicated erroneous prone fraudulency keywords keywords recognition nomination fingerprint voting reliability database inspec controlled indexing election authentication electronic privacy fingerprint identification government telecommunication security processing near-field inspec non-controlled indexing state-of-the-art evm near-far pragmatic fingerprint detection nfc enabled voter-id card india public affair legislation amendment constitutional amendment electoral process election free selling election election bogus voter irregularity classical coercion voting method prevention intimidation ballot voting voter poll-site vot-el three integrity rampage secured voting based tier 2017-18 47 e-voting online election portal 3-level authentication hybrid aes-des misinterpretation vote tally electronic voting machine election legitimacy pragmatic biometric author keywords near-far bio-metric electronic voting machine fingerprint 3 solar power electronic voting machine asif ahmed anik rayeesajameel abul farah anik nowrozeakter `` solar power voting machine '' networking electronic 2017 internationalconference 127-131 2017. security nsyss electronic voting machine evm device thatis count ballot record vote manually human record count vote associated manual counting vote laborious erroneous time consuming entire inefficient voting sensitive issue mis-management lead issue complicated political unrest debilitating political unrest eventually lead describing bangladesh developing nation afford held development mis- election hand power starved nation bangladesh gap demand supply electricity remains good majority people deprived basic facility over-dependency electronic device sensitive purpose viable option renewable energy based solution tackling crisis solar powered evm address concern paper discus solar powered evm prototype efficient allows relief laborious vote collection counting remove error digital device biggest concern evm security includes insider threat network vulnerability challenge auditing limit issue prototype developed three stage security encryption keywords electronic voting machine renewable energy solar power microcontroller voting method group meeting electorate decision express opinion discussion debate election campaign democratic nation elect holder 2017-18 48 e-voting online election portal 3-level authentication hybrid aes-des office voting democracy government chosen voting election electorate elect i.e choose candidate rule representative democracy voting method electorate appoints representative government direct democracy voting method electorate directly decision turn bill law 1 2 good majority nation bangladesh democracy making voting integral everyday life developed nation democracy political instability disease plaguing country hindering development year ago bangladesh year started political turmoil opposition party protested demanding free fair election election voting nation ruling government party controversy surrounded election economy bear brunt expert bank bangladesh bank projected gross domestic product gdp lower 6 target 7.2 fy 2014 3 evident political instability contributed situation nation suffered prolonged political crisis inception needle mention election major nation political instability voting mechanism integral election vote cast citizen voting voting consists rule vote considered valid vote counted aggregated yield final voting form allowing individual express vote ranked ballot voting voted order option preferred range voting voter rate option separately scale plurality voting voter select option approval voting select 2 commonly practiced bangladesh plurality voting voter cast vote marking choice piece paper dropping paper sealed box leaf window error theft vote bangladeshi election committee face election matter whichever scale pen paper based stay felony vote counting manually allows room human error mismanagement election challenged mayhem lead nationwide unrest 2017-18 49 e-voting online election portal 3-level authentication hybrid aes-des 4 e-voting attack countermeasure m. tarekibnziad amr al-anwar yousraalkabani m. watheq el-kharashi hassan bedour `` e- voting attack countermeasure '' advanced networking workshop waina 2014 28th international conference 269-274 2014. electronic voting e-voting inuse 1960s e-voting offer advantage compared voting technique introduces security challenge malicious back-doors affect dependability e- voting challenge trojan tamper totally implement e-voting machine study xilinx fpga board inject trojan tamper voting attack depends unused bit pro-vide protection technique overhead introduce attack protection scenario compare selected protection technique technique finally illustrate chosen protection technique incurs negligible power overhead average area delay overhead 4 10 termse-voting spyware trojan security democracy depends election process satisfy pop-ulation election advantage populace choose representative express preference deny integrity election process integrity democracy election robust transparent comprehensible voter candidate accept election hand lot election example manipulated order influence outcome good voting satisfy number competing criterion e-voting election vote checked collected electronically main element component map voting procedure electronically called e-voting e-voting offer advantage voter election administrator described 1 voter prefer electronic voting privacy accessibility 2017-18 50 e-voting online election portal 3-level authentication hybrid aes-des e-voting security topic nowa-days caltech mit voting 2 state security reliability guaran-teeing integrity voting process public confidence people thing confidence 3 yumeng al reviewed electronic voting scheme trustworthy voting sys-tem discussed issue property challenge kumar begum discussed electronic voting machine evm variation 4 5 author presented minimal cryptographically secure electronic voting built low-cost xilinx fpga board called votebox nano basic principle votebox restricting network fit cheap fpga simple running operating consists fpga connected screen vga keypad allow voter choose his/her desired candidate confirm choice paper introduce full e-voting imple-mentation simple scenario untrusted machine affect election introduce protection proposed trojan rest paper organized ii iii original specification iv scenario attack introduced method protection presented v. attack countermeasure introduced sec-tion vi vii discus experimental environment viii final ix concludes 5 ashwiniwalake pallavichavan `` efficient voting 22 secret sharing based authentication '' ijc interational journal science 6 1 410-412 2015. published computing control automation iccubea 2016 international conference conference 12-13 aug. 2016 xplore 23 2017 isbn electronic isbn 978-1-5090-3291-4 2017-18 51 e-voting online election portal 3-level authentication hybrid aes-des print demand pod isbn 978-1-5090-3292-1 inspec accession number 16693071 doi 10.1109/iccubea.2016.7860063 publisher conference location india secure online voting today 's era propose secure authentication online voting biometric steganography voter asked enter password time registration password converted secret message timestamp hashing secret message stored image steganography person vote his/her allocated electorate his/her chosen location nowadays election process play role democratic country election process selection perfect candidate lead nation democracy people choose leader vote india electronic voting voter availability city compulsory major drawback electronic voting online voting solution voter vote keywords keywords server biomedical imaging biological modeling inspec controlled indexing authorisation fingerprint identification politics steganography inspec non-controlled indexing secure authentication secure online voting biometric steganography registration password secret message timestamp process hashing process steganography author keywords authentication online voting biometric steganography 2017-18 52 e-voting online election portal 3-level authentication hybrid aes-des 6 himanshu agarwal g. n. pandey `` online voting india based aadhaar '' eleventh international conference ict knowledge 2013 himanshu agarwal eng indian inst inf technol allahabad india g. n. pandey eng indian inst inf technol allahabad india published ict knowledge ict ke 2013 11th international conference conference 20-22 nov. 2013date xplore 06 2014 isbn electronic issn 2157-099x issn print issn 2157-0981 inspec accession number 14146621 doi 10.1109/ictke.2013.6756265 publisher ieeeconference location bangkok thailand online voting indian election proposed time paper proposed greater security sense voter security password confirmed vote accepted main database election commission india additional voter confirm his/her vote correct candidate/party person vote his/her allotted constituency his/her preferred location proposed tallying vote automatically saving time enabling election commissioner india short period keywords keyword nomination election electronic voting security server database finger inspec controlled indexing security government processing inspec non-controlled indexing 2017-18 53 e-voting online election portal 3-level authentication hybrid aes-des election commission india online voting aadhaar indian election security password author keywords online voting aadhaar based online election electronic voting machine online election plagiarism 2017-18 54", "keywords": ["aadhar identity", "aadhar identity verification", "aadhar number", "access dashboard", "administrator voter", "aesdes evoting", "ahmed anik", "alanwar yousraalkabani", "amr alanwar", "amr alanwar yousraalkabani", "anooshmita da", "anooshmita da manashpratim", "approach electronic", "approach electronic voting", "asif ahmed", "asif ahmed anik", "attack countermeasure", "authentication hybrid", "authentication hybrid aesdes", "biometric steganography", "bit key", "candidate voter", "cast vote", "conference ict", "count ballot", "credential verification", "da manashpratim", "da manashpratim dutta", "digit otp", "dutta subhasish", "election election", "election portal", "election portal level", "election process", "electronic isbn", "electronic voting", "electronic voting machine", "electronic voting uidai", "electronics icecs", "eleventh international", "eleventh international conference", "eng indian", "eng indian inst", "evoting online", "evoting online election", "fpga board", "hybrid aesdes", "hybrid aesdes evoting", "ict knowledge", "identity verification", "indian inst", "inf technol", "input box", "international conference", "international conference ict", "invalid otp", "isbn electronic", "isbn electronic isbn", "level authentication", "level authentication hybrid", "manashpratim dutta", "manashpratim dutta subhasish", "online election", "online election portal", "online voting", "otp error", "pas pas", "political instability", "portal level", "portal level authentication", "protection technique", "rayeesajameel abul", "registration password", "registration process", "saumyabatham mradul", "secret message", "secure web", "shivani sharma", "solar power", "th international", "th international conference", "time registration", "uidai electronics", "uidai electronics icecs", "vote candidate", "voter candidate", "voter vote", "voting attack", "voting biometric", "voting biometric steganography", "voting machine", "voting method", "voting process", "voting scheme", "voting uidai", "voting uidai electronics", "voting voter"], "libraries": [], "languages": ["basic", "php", "cs"], "frameworks": [], "dbs": ["mysql"]}, "./reports/BE Project Report_29.pdf": {"title": "implementing social crm for an online grocery shopping   platform using customer reviews", "filename": "./reports/BE Project Report_29.pdf", "data": "implementing social crm online grocery shopping platform customer review yash agrawal samruddhi kawathekar shraddha sanjay malve shreya malviya b120058505 b120058542 b120058559 b120058621 guidance prof. s. d. shelke sr. 27 pune-satara road bharati vidyapeeth college dhankawdi bharati vidyapeeth campus dhankawdi maharashtra-411043 2017-2018 implementing social crm online grocery shopping platform customer review implementing social crm online grocery shopping platform customer review yash agrawal b120058505 samruddhi kawathekar shraddha sanjay malve shreya malviya b120058542 b120058559 b120058621 bonafide prof. s.d shelke .this earlier diploma prof. s. d. shelke dr. b. a. sonkamble prof. d. d. londhe co-ordinator dr. p. t. examiner 2017-18 implementing social crm online grocery shopping platform customer review acknowledgement express deep sincere gratitude prof. s. d. shelke unflagging support continuous encouragement guidance persistent help greatest appreciation prof. v. r. jaiswal prof. v. b. bhosle tremendous support help encouragement guidance materialized willingness motivate contributed tremendously warm faculty helped view encouraging directly indirectly helped completion seminar yash agrawal samruddhi kawathekar shraddha sanjay malve shreya malviya 2017-18 implementing social crm online grocery shopping platform customer review topic sr. 1 2 3 4 acknowledgement abbreviation 1.1 1.2 review 2.1 2.2 specification existing proposed 3.1 3.2 3.3 3.4 3.5 3.5.1 3.5.2 3.5.3 3.5.4 3.5.5 3.6 3.6.1 3.6.2 3.6.3 3.6.4 3.6.5 3.6.6 definition concept datasets non- split decomposition role responsibility 4.0 pert pert 4.1 4.2 4.3 4.4 4.4.1 4.4.2 4.4.3 4.5 4.5.1 er structural structural class deployment behavioral ii iii vi 1 2 3 4 8 9 10 11 11 12 12 12 12 13 14 15 15 17 17 18 19 20 21 22 23 24 25 26 27 27 28 29 30 30 2017-18 implementing social crm online grocery shopping platform customer review 5 6 workflow 4.5.2 4.5.3 4.5.4 4.6 4.6.1 5.1 5.2 5.3 evaluation stage elaboration issue 6.1 6.1.1 6.1.2 6.2 experiment detailed discussion experiment experiment 6.2.1 white box 6.2.1.1 unit 6.2.1.2 integration 6.2.1.3 6.2.1.4 6.2.2 black box 6.3 6.3.1 6.3.2 6.4 strategy tested 7 7.1 7.2 7.3 review sheet 31 32 33 34 37 38 39 40 41 42 43 42 43 44 44 44 45 45 45 46 46 46 46 47 49 50 50 51 52 53 54 2017-18 implementing social crm online grocery shopping platform customer review sr. 3.1 6.1 pert sr. 3.1 3.2 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 4.10 4.11 4.12 3.0 pert er structural class deployment state workflow abbreviations* abbreviation crm hr scrm po sql jdk hdfs full-form customer human social customer speech structured query language java development kit hadoop distributed file 2017-18 implementing social crm online grocery shopping platform customer review twenty-first century stage began prevailing business orientation focused customer crm customer wa treated individually uniquely depending preference social crm defined social medium service technique enable engage customer business strategy supported platform business rule process social characteristic designed engage customer collaborative conversation company response customer ownership conversation numerous study benefit integrating social media/networks crm social crm benefit real ability transform aspect customer allows knowledge extracted customer converted effective secure scalable real business keywords customer social customer 2017-18 implementing social crm online grocery shopping platform customer review 1 2017-18 1 implementing social crm online grocery shopping platform customer review 1. 1.1 decade customer strategic approach company supervise customer behavior gathering customer tracking customer transaction wa crm ascertain individual customer 's thinking 1 now-a- day social network node individual group crm sale biggest gain productivity moving crm sale marketing embedding business hr customer service supply-chain start selling rule sale prospect well interest kind service today best understand keeping track prospect social medium people post update twitter facebook google+ talk product business major influencers decision-making product/service consider 5 social crm crm 2.0 grew change empowerment customer customer product service experience sculpt individual interactive company satisfies agenda 3 customer engagement strategy effective support social crm process mutually derived benefit planned social crm simply add social dimension customer 2017-18 2 implementing social crm online grocery shopping platform customer review 1.2 social crm philosophy business strategy supported platform business rule process social characteristic designed engage customer collaborative conversation order provide mutually beneficial trusted transparent business environment 1 incorporating analytics social crm popular company harnessing power analytics apply customer overcome difficulty involved understanding extracting relevant knowledge kind 2 real ability transform aspect customer providing company competitive advantage competitor allows knowledge extracted customer converted effective secure scalable real business 3 familiar story marketing diligently creating publishing tweet facebook post youtube video carefully crafted channel designed encourage sharing retweeting customer engagement audience doesnt 4 customer facebook twitter conversation organisation discussing recommending complaining desperately talk answer 3 social crm customer platform integrates social medium access level insight traditional channel ability social communicating internally 4 monitor track benchmark social medium familiar dashboard metric social crm customer heart organisation forcing customer channel prefer losing track issue change channel engage respond customer individually choose compromising ability track manage global scale youll broad brand reach granular detailed view customer interaction 2017-18 3 implementing social crm online grocery shopping platform customer review 2 2017-18 4 implementing social crm online grocery shopping platform customer review 2. review fatima zohra ennaji abdelaziz el fazziki mohamed sadgal social intelligence framework extracting analyzing opinion social crm 2015. paper discus understand social medium gathering social fusing crm customer driven company appreciate customer enhance development procedure item administration multi-agent framework proposed extraction online product reputation mentioning social medium brought consider colossal volume sergio orenga-rogl ricardo chalmeta social customer advantage web 2.0 springerplus 2016 paper discus overcome difficulty involved understanding extracting relevant knowledge kind real ability transform aspect customer providing company competitive advantage competitor allows knowledge extracted customer converted effective secure scalable real business customer company reveal hidden knowledge customer turning opportunity maximize business customer preventively improve customer satisfaction identify opportunity predict tendency intention profile paper discus company harnessing power analytics apply customer 2017-18 5 implementing social crm online grocery shopping platform customer review fatima zohra ennaji abdelaziz el fazziki hasna el alaoui el abdallaoui abderahmane sadiq mohamed sadgil djamal benslimane multi-agent framework social crm extracting analyzing opinion 2016. paper collect social integrates crm customer lead company understand customer improves development process product service paper proposes multi- agent framework analyzing extracted opinion social medium development process paper brings consideration volume response time based map/reduce hadoop order perform refinement sentiment sentigem finally study twitter twitter4j api source verify effectiveness proposed framework feng zhao jingyu zhou chang nie heqing huang hai jin smartcrawler two-stage crawler efficiently harvesting deep-web 2015. web crawler extraction specific website paper proposes two-step framework smartcrawler efficient harvesting deep web stage smartcrawler performs site-based searching center help search engine avoiding visiting number achieve accurate focused crawl smartcrawler rank website prioritize highly relevant topic second stage smartcrawler achieves fast in-site searching excavating relevant link adaptive link-ranking eliminate bias visiting highly relevant link hidden web directory paper discus designing link tree achieve wider coverage website jibran mir muhammad usman effective aspect based opinion mining social review icdim 2015. aspect-based opinion mining combination natural language processing sentiment three main level sentiment document level sentence level 2017-18 6 implementing social crm online grocery shopping platform customer review aspect level paper focus aspect level sentiment aspect based opinion mining analyzing aspect based opinion mining factor considered implicit aspect multi-aspect sentence comparative sentence domain language adaptability accuracy factor help analyzing effective aspect based opinion paper effective aspect based opinion mining cover critical factor effective opinion mining sunny kumar paramjeet singh shaveta rani sentimental social medium language hadoop rhadoop 2016. growth wide web changed expressing people view opinion sentiment blog social site online discussion lead generation massive amount paper leverage sentimental twitter language helpful collecting sentiment form positive score negative score extraction petabyte performed focus shifted paper performance estimation platform language rhadoop 2017-18 7 implementing social crm online grocery shopping platform customer review 2.1 existing reached point social medium hit maturity realize connect customer example retailer 1000 customer crm solution find social piece connect existing customer 2 business turn customer advocate manage customer social standpoint allows recognize effective drive sale combine customer email address social network build customer interact build allow customer interact 1 social piece extremely valuable time personable reason consumer social crm great build existing crm collect publically social network better understanding customer view domain restaurant industry platform existing implementing crm fully developed social crm 2 hasnt researched implemented field online grocery shopping platform bigbasket grofers proposed aim target platform perform analytics help company realize strength shortcoming 2017-18 8 implementing social crm online grocery shopping platform customer review 2.2 proposed dire properly functioning social customer service company 1 positive fruitful customer company major company success customer satisfaction complaint extremely seriously gauged company betterment 2 proposed aim caters field online grocery shopping bigbasket manager company proposed gather extract publically customer review company he/she perform analytics aspect based sentiment finally gauge customer response satisfaction 4 manager analyze customer reaction company term cost service delivery product he/she understand customer satisfaction level 6 extremely betterment company manager understand company functionally well proposed help sale marketing development 2017-18 9 implementing social crm online grocery shopping platform customer review 3 2017-18 10 implementing social crm online grocery shopping platform customer review 3. specification 3.1 definition implementing social crm online grocery shopping platform customer review 3.2 concept requires manager online grocery shopping platform bigbasket manger retrieval customer review grocery shopping view review proposed consumer review website i.e bigbasket identify product aspect shallow parser determine consumer opinion aspect sentiment classifier 4 develop aspect ranking identify aspect simultaneously considering aspect frequency influence consumer opinion aspect opinion 5 apply aspect ranking document-level sentiment classification improve performance product review perform sentiment i.e find positive negative neutral sense aspect product review number comment comment minute order handle review apache hadoop framework 7 visualization manager company study betterment company 2017-18 11 implementing social crm online grocery shopping platform customer review 3.3 fetch i.e customer review online grocery shopping platform bigbasket help web scrapper 5 web scrapper api extract meaningful website review collected social networking site mouthshut.com refined analyzes respect aspect based categorization sentiment aspect price delivery product return policy review performed sentiment i.e find positive negative neutral sense aspect review 6 company ability view review platform perform view 3.4 1. collection customer review social networking website 2. pre-processing 3. aspect based categorization 4. sentiment 3.5 3.5.1 dataset stored customer review mysql database 2017-18 12 implementing social crm online grocery shopping platform customer review 3.5.2 1. review gathering approach fetch review website web scrapper 5 web scraper api extract meaningful website web scraping help retrieved faster object oriented api sends command directly browser 2. preprocessing input scanned remove extra white space url comparing http \\\\ special character word semantic meaning entire input retained remaining unnecessary removed 6 a. tokenization i. split sentence word b. normalization i. remove word input text c. part-of-speech po tagging i. detects word token noun verb adjective apply stanford nlp separate speech sentence 6 porter stemmer applied root word adjective remove commoner morphological inflexional word english step a. rid plural ing suffix b. turn terminal vowel stem c. map double suffix single -ization -ational d. deal suffix -full -ness e. -ant -ence f. remove final 2017-18 13 implementing social crm online grocery shopping platform customer review 3. aspect based categorization stage recognizes aspect customer review regard bigbasket price delivery return policy product sold 6 4. sentiment sentiment realized review word based approach word input file compared word database depending word sentiment displayed positive negative neutral 7 5. extraction a. afinn dictionary finding word sense b. finding negative annotation sentence reverse weightage c. calculating weightage dictionary approach d. calculate weightage emoticon approach sum draw final 3.5.3 1. performance speed process requested parallel quick response wait process completion accuracy correctly execute process display analyze sense review accurately 2. ensured arranging secure reliable transmission medium 2017-18 14 implementing social crm online grocery shopping platform customer review 3. security secure access confidential credential etc. security protecting unauthorized access disclosure disruption modification destruction provide secure access password account database encrypted format term security security assurance frequently incorrectly interchangeably field interrelated share common protecting confidentiality integrity availability subtle difference password stored encrypted form security reason accessible higher authority personnel access controlled usernames password 3.5.4 mentioned development parameter considered optimization cost integrity intel p4 ram min ram 1024mb hard disk hdd 80 gb 3.5.5 1. ide eclipse 2017-18 15 implementing social crm online grocery shopping platform customer review eclipse source community building framework creating general purpose popular usage eclipse java development environment eclipse focused building development platform comprised extensible framework runtimes building deploying managing lifecycle eclipse foundation not-for-profit member supported corporation host eclipse help cultivate source community ecosystem complementary product service general eclipse foundation service eclipse community 1 infrastructure 2 ip 3 development process 4 ecosystem development full-time staff associated area greater eclipse community assist meeting stakeholder 2. platform jdk 1.6 editor enhancement code completion hint 3. mysql database simplified connection wizard guided installation jdbc driver editing deployment stored procedure 4. mysql gui browser 1.2 simplified connection wizard guided installation jdbc driver writing executing sql query editing deployment stored procedure 5. hadoop hadoop open-source framework allows storage processing distributed environment cluster simple programming fordeveloping executing distributed process amount designed scale single server 2017-18 16 implementing social crm online grocery shopping platform customer review machine offering local computation storage apache hadoop 2.7.1 minor release 2.x.y release building previous release 2.7.0. stable release apache hadoop 2.6.x short major improvement 2.6.x release drop support jdk6 runtime jdk 7+ hdfs support file truncate support quota storage support file variable-length block yarn yarn authorization pluggable automatic shared global caching yarn localized beta mapreduce ability limit running map/reduce job speed fileoutputcommitter job output file 6. friendly option fetch comment ecommerce site upload pre processing sentiment view graphical 3.6 3.6.1 split retrieval gathering phase pre-processing filtering phase analytics phase visualization phase 2017-18 17 implementing social crm online grocery shopping platform customer review 3.6.2 fuctional decomposition major 2 component 1. retrieval i.e customer review extracted social networking website www.mouthshut.com review stored mysql database 2. pre-processing analytics filtered pre-processed remove unnecessary unimportant output preprocessing stage input semantic meaning unnecessary word special character white space punctuation removed review form paragraph/ multiple paragraph broken separate singular sentence proper manner preprocessing analytics stage aspect based categorization sentiment play category product sold return policy delivery price considered aspect sentiment word input file compared word database depending word sentiment displayed positive negative neutral opinion review analyzed studied help sentiment calculating word rating dictionary approach calculate rating emoticon approach 2017-18 18 implementing social crm online grocery shopping platform customer review sum draw final finally positive negative neutral sense product comment calculated finally sentiment review displayed manager 3.6.3 role responsibility complete wa group people contributed initially distributed gathering preprocessing storage connectivity ide database analytics provide input wa helped time wa issue term total review development phase waterfall decided target review completed target suggestion time phase development worked retrieval web scrapper storage focused second phase focused database connectivity second started preprocessing third phase worked coding analytics i.e sentiment phase refined entire sentiment 2017-18 19 implementing social crm online grocery shopping platform customer review 3.6.4 4.0 fig 3.1 4.0 3.1 time division description proposed time time wa executed time proposed sequential manner 2017-18 20 implementing social crm online grocery shopping platform customer review 3.6.5 pert 1 2 3 4 5 6 7 8 9 10 11 predecessor duration day 1 1 2 3 4 5 6 7 8 9 10 15 8 15 15 10 20 15 8 15 23 8 total 152 day description 3.1 pert pert pert 3.1 mentioned pert 2017-18 21 implementing social crm online grocery shopping platform customer review 3.6.6 pert fig 3.2 pert 3.2 division description involved divided gathering storage study actual analyzed gathering step creating identify phase involved step phase analyzing phase explained crawler needed actual crawler step front development require complete front view preprocessing refined refining step integrate analyze implemented simultaneously integration front backend final step display output 2017-18 22 implementing social crm online grocery shopping platform customer review 4 2017-18 23 implementing social crm online grocery shopping platform customer review 4. describing functionality developed component deployed 4.1 fig 4.1 description 4.1 consists phase review collected extracting refinement 2017-18 24 implementing social crm online grocery shopping platform customer review performed stored database provided visualizing 4.2 fig 4.2 description 4.2 depicts conceptual view proposed stage stage process format help keep track small thing 2017-18 25 implementing social crm online grocery shopping platform customer review 4.3 er fig 4.3 er description er 4.3 basically displaying meta proposed manager enter registering email phone number address password mentioned stored database format delivery price return policy review review website 2017-18 26 implementing social crm online grocery shopping platform customer review 4.4 structural 4.4.1 structural fig 4.4 structural description structural 4.4 showing conceptual modeling proposed showing hierarchy capturing review processing review pre-processing sentiment aspect account visualization displayed ease manager 2017-18 27 implementing social crm online grocery shopping platform customer review 4.4.2 class fig 4.5 class description 4.5 multiplicity class responsibility operation class helpful modularized development component manager manager admin log access complete gathering phase collect web scrapper extract review preprocessing phase performs basic preprocessing step applies porter stemming analytics phase performs sentiment based aspect categorized 2017-18 28 implementing social crm online grocery shopping platform customer review visualization finally displayed i.e manager customer review 4.4.3 deployment fig 4.6 deployment description 4.6 deployment distribution artifact deployment target artifact represent concrete element physical development process 2017-18 29 implementing social crm online grocery shopping platform customer review 4.5 behavioral 4.5.1 use-case fig 4.7 description 4.7 relation actor functionality represents functionality basic functionality provided manager log access/view review visualize benefit leave logging main actor going interact manager -user functionality provided admin manages 2017-18 30 implementing social crm online grocery shopping platform customer review 4.5.2 fig 4.8 description 4.8 starting manager logging manager logging depicts processing 2017-18 31 implementing social crm online grocery shopping platform customer review 4.5.3 fig 4.9 description 4.9 represents scenario manager manager access functionality depicts event time seek component manager script analytics 2017-18 32 implementing social crm online grocery shopping platform customer review proposed time time seek functionality 4.5.4 workflow fig 4.11 workflow description 4.11 workflow depicting entire specification 2017-18 33 implementing social crm online grocery shopping platform customer review 4.6 4.6.1 web scrapper int 1 50 j++ string url= '' http //www.mouthshut.com/product-reviews/bigbasket-com- reviews-925660627-page- '' +j cd.get url int 2 25 i++ webelement click= connectionmanager.insertreview `` bigbasket.com '' cd.clickelement click webelement element cd.findelementbyxpath `` /html/body/form/div 11 /div/div 11 /div 4 /div/div 2 div/div 1 /div 4 /div `` +i+ '' /div/div 2 /div 2 /a '' cd.findelementbyxpath `` /html/body/form/div 11 /div/div 11 /div 4 /div/div 2 div/div 1 /div 4 /div `` +i+ '' /div/div 2 /div 2 '' element.gettext catch exception out.close cd.close catch exception system.out.println `` error accessing div `` +i system.out.println `` \\n '' porter stemming rule rule example lower step 1a caress caress pony poni tie ti caress caress cat cat ss 2017-18 34 implementing social crm online grocery shopping platform customer review ate bl ble iz ize conflat conflate troubl trouble siz size 0 eed ee *v* *v* ing feed feed agreed agree plastered plaster bled bled motoring motor sing sing step 1b second third rule step 1b rule map single letter removal double letter pair -e -at -bl -iz suffix -ate -ble -ize recognised removed step 4. step 1c step 1 deal plural participle subsequent step straightforward step 2 *d *l *s *z single letter m=1 *o hopp ing hop tann tan fall ing fall hiss ing hiss fizz fizz fail ing fail fil ing file happy happi sky sky *v* 0 ational ate 0 tional tion 0 enci ence 0 anci ance 0 izer ize 0 abli 0 alli al relational relate conditional condition rational rational valenci valence hesitanci hesitance digitizer digitize conformabli conformable radicalli radical 2017-18 35 implementing social crm online grocery shopping platform customer review 0 entli ent 0 eli 0 ousli ous 0 ization ize 0 ation ate 0 ator ate 0 alism al 0 iveness ive 0 fulness ful 0 ousness ous 0 aliti al 0 iviti ive 0 biliti ble differentli vileli vile analogousli analogous vietnamization vietnamize predication predicate operator operate feudalism feudal decisiveness decisive hopefulness hopeful callousness callous formaliti formal sensitiviti sensitive sensibiliti sensible string s1 fast program switch penultimate letter word tested fairly breakdown string s1 fact s1-strings step 2 presented alphabetical order penultimate letter technique applied step step 3 0 icate ic 0 ative 0 alize al 0 iciti ic 0 ical ic 0 ful 0 ness step 4 1 al 1 ance 1 ence 1 er 1 ic 1 1 ible 1 ant 1 ement 1 ment 1 ent 1 *s *t ion 1 ou 1 ism 1 ate triplicate triplic formative form formalize formal electriciti electric electrical electric hopeful hope goodness good revival reviv allowance allow inference infer airliner airlin gyroscopic gyroscop adjustable adjust defensible defens irritant irrit replacement replac adjustment adjust dependent depend adoption adopt homologou homolog communism commun activate activ 2017-18 36 implementing social crm online grocery shopping platform customer review 1 iti 1 ous 1 ive 1 ize angulariti angular homologous homolog effective bowdlerize bowdler suffix removed remains tidying step 5a 1 m=1 *o step 5b 1 *d *l single letter probate probat rate rate cease ceas controll control roll roll 4.2 fig 4.12 description 4.11 complete proposed step consists manager logging find review review background appropriate displayed i.e manager 2017-18 37 implementing social crm online grocery shopping platform customer review 5 2017-18 38 implementing social crm online grocery shopping platform customer review 5. consists review categorizing predefined aspect sentiment word calculated sentiwordnet dictionary 5.1 stage 1. fetching stage stage customer 's review fetched web scrapper web scrapper api extract meaningful website review collected social networking site mouthshut.com selenium help drive web fetching social networking site 2. processing stage semantic meaning entire input retained remaining unnecessary review removed called preprocessing stage purpose manually written code processing implemented porter stemmer stemming operation i.e bringing word root form stage stage 3. stage stage aspect based categorization sentiment play sentiment word input file compared word database depending word sentiment displayed positive negative neutral opinion review analyzed studied help sentiment word based approach 4. display stage displayed form 2017-18 39 implementing social crm online grocery shopping platform customer review 5.2 elaboration gathering review web scraper web scraper api extracting meaningful website review extraction selenium selenium help drive web fetching social networking site selenium apache source advantage text optimization code reuse-ability consists i. selenium-rc remote control selenium-rc supported browser injects javascript function browser javascript drive aut browser older version optimized ii selenium web driver webdriver designed provide simpler concise programming addition addressing selenium-rc api selenium-webdriver wa developed better support dynamic web element change reloaded webdrivers supply well-designed object-oriented api improved support modern advanced web-app phase request send web browser review optimize technique gathering review stored database processing preprocessing step operation performed remove white space pre-processing technique remove white space scan document input dataset remove url step pre-processing remove url input document scanned compared http \\\\ ... comment url deleted remove word move word removal scanned word removed noun adjective i.e word semantic meaning retained preprocessing step nlp extraction apply stanford nlp separate speech sentence porter stemmer process removing commoner morphological inflexional word english step 2017-18 40 implementing social crm online grocery shopping platform customer review i. rid plural -ed -ing suffix ii turn terminal vowel stem iii map double suffix single -ization -ational iv deal suffix -full -ness v. -ant -ence vi remove final sentiment understand exact sense preprocessing step tree word formed parent word root word child word sense word calculating weight sense word afinn dictionary word based approach word input file compared word database depending word sentiment review displayed finding negative annotation sentence reverse weight sentiwordnet dictionary antonym word fount 5.3 issue issue faced relevant actual meaning main issue wa applying porter stemmer step removing character actual meaning word lost doe accurate loss 2017-18 41 implementing social crm online grocery shopping platform customer review 6 2017-18 42 implementing social crm online grocery shopping platform customer review 6. evaluation 6.1 experments performed experiment review extraction phase experiment performed extraction phase review wa needed extracted web crawler implementing wa preliminary stage retrieve limited amount review review aspect bigbasket improved web crawler amount review 5 initial method wa efficient wa specific specific wa i.e porter stemmer improved accuracy well efficiency 6.1.1 detailed discussion experiment 1. experiment web crawler initial working web crawler wa limited extract review wa accurate analyzing change web crawler customer review scale experiment increased accuracy phase 30 2. experiment improvement defined manager analyze review 2 i.e delivery product faced wa review talking delivery neglected wa proving accurate increase number specific accurate outcome manager proper view website well product 2017-18 43 implementing social crm online grocery shopping platform customer review 6.1.2 experments performed specific strategy develops accuracy le frequently talked neglected avoiding review defined 6.2 aimed evaluating capability program determining meet running program intention finding fault parameter single yardstick applicable circumstance unique critical area altogether critical deployed program tester remains art limited understanding principle difficulty stem complexity purpose assurance verification validation reliability estimation generic metric well trade-off budget time purpose discover error process discover conceivable fault weakness product check functionality component sub-assembly assembly and/or finished product process exercising intent ensuring meet expectation doe fail unacceptable manner address specific 6.2.1 white box white box tester knowledge inner working language purpose purpose 6.2.1.1 unit unit involves validate program logic functioning properly program input produce valid output proposed performed white box check functionality individual component review emoticon considered special character removed emoticon unit ensure unique path business process performs accurately documented specification clearly defined input expected 2017-18 44 implementing social crm online grocery shopping platform customer review 6.2.1.2 integration integration designed integrated component determine program event driven concerned basic outcome screen field integration demonstrate component individually satisfaction unit combination component correct consistent integration aimed exposing combination component 6.2.1.3 provide systematic demonstration function tested business documentation manual 1. centered item 2. valid input identified class valid input accepted 3. invalid input identified class invalid input rejected 4. function identified function exercised 5. output identified class output exercised 6. systems/procedures interfacing procedure invoked preparation focused key function special addition systematic coverage pertaining identify business process field predefined process successive process considered complete additional identified effective current determined 6.2.1.4 ensures entire integrated meet configuration ensure predictable example configuration oriented integration based process description emphasizing pre-driven process link integration point 2017-18 45 implementing social crm online grocery shopping platform customer review 6.2.2 black box black box method examines functionality peering working proposed performed black box check functionality individual component preprocessed review displayed final sentiment displayed better convenience black box focus input output bothering knowledge performed 6.3 strategy strategy approach field performed manually written 6.3.1 1. field entry properly 2. activated identified link 3. entry screen message response delayed 6.3.2 tested 1. verify entry correct format 2. duplicate entry allowed 3. link correct 2017-18 46 implementing social crm online grocery shopping platform customer review 6.4 performed depending stage performed expected actual status 01 fetch review review black pas review product box product 02 authentication black pas valid password dashboard box username dashboard displayed displayed 03 authentication fail failed re- black fail invalid password re-login wa prompted box username prompted 2017-18 47 implementing social crm online grocery shopping platform customer review 04 pre processing black pas preprocessed preprocessed box step step button button event event 05 finding word black pas sense weight age box weight age website website dictionary dictionary emoticon emoticon approach approach accurate accurate 06 emoticon emoticon emoticon white pas review considered special character removed considered special box character removed 6.1 2017-18 48 implementing social crm online grocery shopping platform customer review 7 2017-18 49 implementing social crm online grocery shopping platform customer review 7. 7.1 social medium aiding company product development cycle help better understanding customer help making good relation social crm help retain customer help process sale marketing enables company better decision business leading implement social crm daily social crm perfect feel customer help fulfilling customer customer engagement strategy effective support social crm process mutually derived benefit planned crm implemented cloud small business start-up 7.2 social medium network e-commerce growing exponentially achieving 100 customer satisfaction difficult focusing customer main promoter social medium e-commerce network thing e-commerce site customer buy product dont buy view product .there customer buy product leave review good bad product people buy product dont leave review ultimately sideline product significance product vanished people ultimately generates i.e gray-sheep recommender plethora option customer plethora review generated limited amount aspect ultimately leaf side rest review 2017-18 50 implementing social crm online grocery shopping platform customer review 7.3 social medium e-commerce boon best key increase valuation site promote better number increase aspect recommender recommender help view item better item currently viewed bought help manager help great extent increase valuation net turn rise rest encounter product ultimately vanished find alternative product he/she currently satisfied 2017-18 51 implementing social crm online grocery shopping platform customer review 1 shenghua liu xueql cheng fuxin li fangtao li tasc topic- adaptive sentiment classification dynamic tweet transaction knowledge 2 fatima zohraennaji abdelaziz el fazziki mohamed sadgal social intelligence framework extracting analyzing opinion social crm aiccsa 2015 ieee/acs 12th international conference 17-20 2015 3 sergio orenga-rogl ricardo chalmeta social customer advantage web 2.0 springerplus 2016 5 1462 4 fatima zohraennaji abdelaziz el fazziki hasna el alaoui el abdallaoui abderahmanesadiq mohamed sadgil djamalbenslimane multi-agent framework social crm extracting analyzing opinion 2016 5 feng zhao jingyu zhou chang nie heqing huang hai jin smartcrawler two-stage crawler efficiently harvesting deep-web 2015 6 jibranmir muhammadusman effective aspect based opinion mining social review icdim 2015 7 sunny kumar paramjeet singh shaveta rani sentimental social medium language hadoop rhadoop 2016. 2017-18 52 implementing social crm online grocery shopping platform customer review 2017-18 53 implementing social crm online grocery shopping platform customer review review sheet 1 review sheet 2017-18 54 implementing social crm online grocery shopping platform customer review 2 review sheet ii 2017-18 55 implementing social crm online grocery shopping platform customer review 3 review sheet iii 2017-18 56 implementing social crm online grocery shopping platform customer review 4 review sheet iv 2017-18 57 implementing social crm online grocery shopping platform customer review 5 review iv 2017-18 58", "keywords": ["ability transform", "agrawal samruddhi", "agrawal samruddhi kawathekar", "aspect based", "aspect based opinion", "aspect customer", "based categorization", "based opinion", "based opinion mining", "black box", "black pas", "caress caress", "crm customer", "crm online", "crm online grocery", "customer engagement", "customer review", "customer satisfaction", "development process", "effective secure", "effective secure scalable", "el fazziki", "emoticon approach", "emoticon emoticon", "engage customer", "fatima zohra", "fatima zohraennaji", "feng zhao", "grocery shopping", "grocery shopping platform", "ing suffix", "input file", "kawathekar shraddha", "kawathekar shraddha sanjay", "negative neutral", "networking website", "online grocery", "online grocery shopping", "opinion mining", "paper discus", "platform bigbasket", "platform customer", "platform customer review", "porter stemmer", "positive negative", "positive negative neutral", "preprocessing step", "product service", "real ability", "real ability transform", "real business", "return policy", "review review", "sale marketing", "samruddhi kawathekar", "samruddhi kawathekar shraddha", "scalable real", "scalable real business", "secure scalable", "secure scalable real", "semantic meaning", "sentiment aspect", "shopping platform", "shopping platform bigbasket", "shopping platform customer", "shraddha sanjay", "single letter", "social crm", "social crm online", "social customer", "social medium", "social network", "social networking", "social networking website", "special character", "stage stage", "stored database", "web crawler", "web scrapper", "white box", "white space", "word input", "word input file", "yash agrawal", "yash agrawal samruddhi", "zhou chang"], "libraries": [], "languages": ["beta", "javascript", "basic", "small", "java"], "frameworks": ["angular"], "dbs": ["mysql"]}, "./reports/BE Project Report_31.pdf": {"title": "management of medical records for patient\u2019s   healthcare.", "filename": "./reports/BE Project Report_31.pdf", "data": "medical record patient healthcare ronit chougule sakshi mutha pankaj wajire rajat raushan b120058521 b120058573 b120058639 b120058596 guidance prof. k.y.digholkar sr. 27 pune-satara road bharati vidyapeeth college dhankawdi bharati vidyapeeth campus dhankawdi maharashtra-411043 2017-2018 medical record patient healthcare medical record patient healthcare ronit chougule sakshi mutha pankaj wajire rajat raushan b120058521 b120058573 b120058639 b120058596 bonafide prof. k.y.digholkar earlier diploma prof. k.y.digholkar dr. sonkamble b.a examiner dr. p.t.kulkarni 2 2017-18 medical record patient healthcare acknowledgement effort kind support help individual extend sincere highly indebted mrs. k.y.digholkar guidance constant well providing support completing greatest appreciation prof. j.b.jagdale prof. s.d.pande cant tremendous support help encouragement guidance materialized willingness motivate contributed tremendously gratitude p.t.kulkarni support hod dr. b.a.sonkambale guidance express special gratitude lab attendant attention time express gratitude parent member kind co- operation encouragement helped completion appreciation colleague developing people willingly helped ability ronit chougule sakshi mutha pankaj wajire rajat raushan 3 2017-18 medical record patient healthcare sr. topic 1 2 3 4 5 acknowledgement abbreviation 1.1 1.2 review 2.1 2.2 specification existing proposed 3.1 3.2 3.3 3.4 3.5 3.5.1 3.5.2 3.5.3 3.5.4 3.6 3.6.1 3.6.2 3.6.3 3.6.4 definition concept non- split role responsibility 3.0 4.1 4.2 4.3 structural behavioral 5.1 5.2 5.3 stage technique issue 4 2017-18 2 3 4 5 6 6 7 8 9 10 11 14 16 17 18 18 19 19 20 20 20 21 21 22 22 23 24 25 26 27 27 28 30 31 34 34 35 36 36 36 37 37 38 39 39 39 40 41 42 49 50 medical record patient healthcare 6 evaluation 6.1 6.1.1 6.2 6.2.1 6.2.2 experiment detailed discussion experiment white box black box 7 7.1 7.2 7.3 base paper plagiarism review sheet sr. 2.1 2.2 3.1 3.3 3.4 3.6 health 5 2017-18 medical record patient healthcare sr. 3.1 3.2 4.1 4.2 4.3 4.3.1 4.3.2 4.3.3 split 3.0 structural use-case class sequential abbreviations* abbreviation btc eth site pow sha full-form bitcoin ether website proof secure hash 6 2017-18 medical record patient healthcare blockchain decentralized transaction developed btc cryptocurrency reason interest blockchain central provide security anonymity integrity third party control transaction creates interesting area perspective challenge blockchain poised exciting internet connects enable business based online business process help resolve trust issue efficiently network computing focusing blockchain healthcare blockchain constructing ledger include medical record patient medical practitioner decision based record keywords blockchain healthcare ledger 7 2017-18 medical record patient healthcare 1 8 2017-18 medical record patient healthcare 1. 1.1 blockchain decentralized distributed ledger record transaction record altered retroactively alteration subsequent block collusion network 1 buzz hype cryptocurrencies bitcoin btc ripple xrp verge xvg ether eth obvious attraction blockchain capacity blockchain limitless limited cryptocurrencies key blockchain security field supply chain validating ownership universal passport paper dive aspect blockchain including basic working definition key term today moving technological advancement innovation reflects modern era innovation multiple life mankind better easy blockchain innovation suggests blockchain basically chain block block continuously growing ledger record block linked secured cryptography blockchain limit medical negligence outdated prevent health issue early stage lead extensive saving merit cost hand allows medical expert involved track interaction patient physician 9 2017-18 medical record patient healthcare 1.2 bitcoin demonstrated trusted auditable computing blockchiain accompanied shared ledger additionally blockchain storage security encryption blockchain explored include smart contract healthcare trading blockchain healthcare revolutionary india spends 2.5 gdp healthcare le compared developed country improve health care service assist small economy country increase livability decided implement healthchain blockchain storing critical network node called blockchain hacker compromise stored hacking breaching security central server fraudulent transaction blockchain achieved majority network compromised 50 hacking single server difficult trained experienced cybercriminals compromise server falsify record blockchain practically impossible hacker breach node simultaneously medical sensitive privacy provided blockchain tamper impossible preach central client- server database main target source server hacked leaked method prevent cyber attack hospital safe secure 6 7 10 2017-18 medical record patient healthcare 2 review 11 2017-18 medical record patient healthcare 2. review proposed functionality implemented vary programming language method managing medical digital record comparison paper author summary medshare trust-less medical sharing cloud service provider blockchain 2016. blockchain healthcare revolution start 2017. medrec blockchain medical access permission 2016 2nd international conference fqi xia emmanuel boateng sifah kwame omono asamoah jianbin gao xiaojiang du mohsen guizan matthias mettler asaph azaria ariel ekblaw thiago vieira andrew lippman dissemination patient medical record diverse patient privacy malicious record severe damage reputation finance party directly indirectly blockchain considerable adaptability year variety market sector sought incorporating ability operation face critical innovation personalization science prompt patient engage healthcare restore agency medical medrec enables emergence economics supplying empower researcher engaging patient provider choice release metadata 2.1 existing aim patient innovative description lacking day day life busy hectic difficult medical appointment person maintain proper health care main shafaq malik nargis bibi sherish khan razia sultana abdul rauf provide ease comfort patient booking appointment doctor resolve issue patient face making appointment android app mr.doc client database doctor patient appointment maintained website server 2 12 2017-18 medical record patient healthcare iosrjournals md.abdul majid mohammad jahangir alam md nurul mustafa proposed paper smart doctor appointment prescription service doctor patient doctor appointment prescription connects doctor patient website android patient search doctor his/her appointment well prescription android smartphone allows doctor previous history patient prescribe medication basis history patient main wa connect doctor patient easily remote location involvement third party doctor patient easily registering doctor prescribe patient based disease listed medicine number day notifies doctor patient apps request doctor appointment prescription shortest time 3 conference paper patient fuzzy logi easier dynamic appointment gate gopal chandra bala moinul islad shamim al mamun proposed patient ai help countering issue queue solution referring patient doctor including prescription short period time solution based fuzzy logic.according patient long complained wait time doctor office day bangladesh patient day week month ago hospital appointment doctor exist corruption serial patient called bribe patient face difficulty hearing hospital that- doctor late doctor meeting today patient financial loss directly associated time spent waiting 4 13 2017-18 medical record patient healthcare 2.1 existing play store doe patient health record centralized prone medical leak breach privacy patient achieve real time appointment booking explains comparison existing healthcare practo zocdoc mfine consult online doctor order medicine online medicine reminder book lab online find doctor location convenient map read doctor professional learn education language speak keep track physician easily follow-up appointment medical homepage stay top checkup wellness reminder consult online follow health record stored app account reminder medicine continuous 2.2 health medical patient health india worldwide patient book appointment access better consultancy cross verify prescribed medication doctor community connect doctor doctor medical background patient studied compared provide online booking slot ordering medicine online finding lab storing medical record decentralized nature security blockchain well-known listed 14 2017-18 medical record patient healthcare doctor physician 1. epocrates doctor app drug interaction find provider consults referral calculate patient measurement bmi 2. uptodate chock full medical knowledge allows answer clinical question point 3. doximity official app social network doctor doximity claim 40 u.s. physician member joining free app allows access network on- the-go find communicate doctor network send hipaa-secure fax phone follow news trend specialty 4. read qxmd centralizes medical journal magazine format allows read download study journal article host source including access journal pubmed paper linked institution 5. nejm week access article view image medical condition listen audio video summary article app trusted england journal medicine patient 1.goodrx better medical apps non-medical people goodrx app buying comparing drug include allowing compare drug prescription price finding deal helping find best medication budget course doctor buy medication good educate experience generally positive app free advertising in-app purchase 2.mysugr mysugr diabetes logbook app help keep track diabetes diabetes keep accurate log matter version 're dealing include quick logging insulin calculator free version basic subscription pay scanner app 's io device 15 2017-18 medical record patient healthcare 2.2 proposed provide proper security patient managing health patient health-care proposed patient inviting doctor smart contract implementing smart contract java platform source blockchain implementing platform smart contract contract header includes version number previous blockn header hash merkle root hash time stamp nonce doctor accepting invitation write prescription contract digitally signing proceed entering blockchain pow document entering blockchain processed hashing secure hash sha 256 pow miner node find nonce node find correct nonce broadcast network nonce node verify block 51 node verify blockchain cryptography convert encrypted format pharmacy public key patient view latest prescription blockchain 5 include signup patient doctor pharmacy patient allowed his/her profile send invitation doctor appointment doctor accepted invitation he/she reply patient appointment time time appointment doctor prescription blockchain doctor unable diagnose doctor refer doctor prescription patient medicine pharmacy his/her patient doctor patient history diagnose properly patient add buddy buddy access patient account emergancy help maintain patient record blockchain securely 16 2017-18 medical record patient healthcare 3 specification 17 2017-18 medical record patient healthcare 3. specification 3.1 definition focusing blockchain healthcare blockchain constructing ledger include medical record patient medical practitioner well making decision based record 3.2 concept include signup patient doctor pharmacy patient allowed his/her profile send invitation doctor appointment doctor accepted invitation he/she reply patient appointment time time appointment doctor prescription blockchain healthchain allows patient doctor share internet third party immutable timestamp record identity complete transparency authorized doe n't authority append authorized chain help maintain complete history patient birth death initially health direct blockchain stage health provide service patient well clinical tracked existing health standard field patient public redirected blockchain stage transaction completed uniquely identified smart contract process incoming transaction transaction stored blockchain patient public health institution directly query blockchain non-identifiable patient age gender illness viewable patient share identity health patient private key link identity blockchain key shared health help key uncover patient secure remain non-identifiable key 18 2017-18 medical record patient healthcare 3.3 1. implemented digital medical record health sector 2. website web storing medical block providing security restricting access limited people 3. provided patient laptop 4. security ensured actor server 1. security 2. cyber attack restriction 3. providing security storing decentralized format digital medical record web window 7 patient doctor decentralize 3.1 3.4 1. online platform store medical record digitally 2. provide transparency transacting party 3. cyber attack prevention provide transparency patient medical motto ledger patient 's medical diagnosis purpose prescription process paperless provide security medical blockchain rely security purpose 19 2017-18 medical record patient healthcare 3.5 3.5.1 provide business account major category provide security text process format major class inserted blockchain blockchains health care public incorporate technological solution three vital element scalability privacy access security term scalability distributed blockchain health record image document storage implication well throughput bitcoin blockchain member distributed network healthcare blockchain posse copy single health record individual united state practical storage perspective replicating health record member network strain bandwidth health dynamic expansive mention throughput concern order healthcare benefit blockchain access-control manager health record 8 3.5.2 going website patient public healthcare responsibility window opearating version window 7 higher required.the browser laptop pc internet needed opening site unique hash generated session ensure security stored decentralized server speed internet capability database operation performed mysql 20 2017-18 medical record patient healthcare 3.5.3 mentioned development parameter considered optimization cost integrity 1.devices 2.ram 3.power supply specification laptop operating window version 7 4 gb 5v 3.3 3.5.4 mentioned coding development server side well client parameter considered optimization integrity modular nature ides best efficiency 1. eclipse eclipse development java program 1. native environment development block blockchain java 2. database 1. mysql implemented mysql database storage purpose store format doe require structured format database scalable reliable 21 2017-18 medical record patient healthcare 3. programming language 1. java implemented java language coding block cross-platform compatible easy understand language development object-oriented language modularize code achieve reusability 4. connectivity connectivity hibernate 3.6 split-up responsibility defined 3.6.1 3.6.1.1 proposed developed website platform storing medical functionality pre appointment well component 1.devices 2.ram 3.6.1.2 specification laptop operating window version 7 4 gb 3.5 proposed developing website developed eclipse hibernate html cs mysql specification 64 bit version 10.0.0 html 5 version 5.0.28 3.6 22 2017-18 medical record patient healthcare 3.6.1.3 human group people contributed responsibility wa assigned help review timely manner assigned conduct review response additional suggestion 3.6.2 split fig 3.1 split 3.6.2.1 website doctor writes prescription patient block block store ledger format access website home/ office internet connection complete history previous medical record 23 2017-18 medical record patient healthcare 3.6.2.2 block block blockchain record book ledger bitcoin block consists magic number block size block header transaction counter transaction magic number 4 byte long arbitrary number signal bitcoin block bitcoin client identifies client number block block size long block block header 80 byte block header consists version 4 byte hash previous block header 32 byte hash merkel root 32 byte timestamp 4 byte target bit nonce 3.6.2.3 block verification storing critical network node called blockchain hacker compromise stored hacking breaching security central server fraudulent transaction blockchain achieved majority network compromised 50 add block blockchain ensured block version truth help consensus protocol 3.6.2.4 registration 3.6.2.4.1 doctor registration provided doctor 3.6.2.4.2 patient registration provided patient 3.6.4 role responsibilties complete wa group people contributed initially distributed website development block development connection client side coding connectivity frontend backend time input wa help time wa issue term total review development phase waterfall decided target review completed target suggestion time 24 2017-18 medical record patient healthcare 3.6.5 3.0 fig 3.2 3.0 25 2017-18 medical record patient healthcare 4 26 2017-18 medical record patient healthcare 4. 4.1 fig 4.1 4.2 fig 4.2 27 2017-18 medical record patient healthcare 4.4 structural behavioural 4.4.1 use-case fig 4.4.1 4.4.2 class fig 4.4.2 class 28 2017-18 medical record patient healthcare 4.4.3 transmission server fig 4.4.3 transmission server 29 2017-18 medical record patient healthcare 5 30 2017-18 medical record patient healthcare 5. cover stage include creation block storing blockchain cryptographic best security compared stage elaborate issue technique 5.1 5.1.1 block creation 1. blockchain chain/list block block blockchain digital signature digital signature previous block block doesnt hash block hash calculated previous hash previous block changed previous block hash change calculated turn hash block calculating comparing hash allow blockchain invalid import java.util.date public class block public string hash public string previoushash private string private long timestamp //block constructor public block string string previoushash this.data this.previoushash previoushash this.timestamp .gettime 31 2017-18 medical record patient healthcare import java.security.messagedigest 256 '' messagedigest digest messagedigest.getinstance `` sha- byte hash digest.digest input.getbytes `` utf-8 '' stringbuffer hexstring stringbuffer int 0 hash.length i++ public class stringutil public static string applysha256 string input hex.length == 1 hexstring.append 0 hexstring.append hex string hex integer.tohexstring 0xff hash catch exception return hexstring.tostring throw runtimeexception 5.1.2 cryptography algoriths 1. apply sha256 helper method block class calculate hash calculate hash block dont tampered block include previoushash timestamp public string calculatehash previoushash string calculatedhash stringutil.applysha256 long.tostring timestamp return calculatedhash 32 2017-18 medical record patient healthcare 5.1.3 mining block import java.util.date this.data this.previoushash previoushash this.timestamp .gettime this.hash calculatehash public class block public string hash public string previoushash private string private long timestamp private int nonce public block string string previoushash public string calculatehash public void mineblock int difficulty string calculatedhash stringutil.applysha256 return calculatedhash previoushash long.tostring timestamp integer.tostring nonce string target string char difficulty .replace '\\0 0 hash.substring 0 difficulty .equals target system.out.println `` block mined `` hash nonce ++ hash calculatehash 33 2017-18 medical record patient healthcare 5.2 stage 1. block creation stage stage block created java aspect block defined phase hash previous well current block 2. security provision stage cryptography applied provide security generated hash key hash generated shared access block 3. stage designed web developed html cs gui retrieve provided hash key view share person 5.3 technique issue implemented cryptography secure medical considering security measure block creation java major operation insertion block validation retrieval performed java connectivity hibernate implementing blockchain block created time block validation programming complexity increased hash key generation development java hibernate html cs eclipse 34 2017-18 medical record patient healthcare 6 evalutions 35 2017-18 medical record patient healthcare 6. evaluation proposed patient medical record stored blockchain encryption help secure understood third party record blockchain doctor patient doctor doctor registration prescription timestamp record timestamp include time record blockchain medical record patient created account till pe blockchain immutable viewed doctor permission patient authorize doctor view his/her medical history doctor write prescription patient blockchain identification patient provided patient 6.1 experments performed number experiment development phase wa evaluated checked output experiment contract key account contract creation wa checked adding record blockchain initial phase 6.1.1 detailed discussion experments 1. experiment creation contract contract written java wa checked validated contract address wa generated getter setter functioning properly 2. experiment adding record blockchain experiment wa performed adding record blockchain contract running responsible proper functioning adding record timestamp generated wa checked correctness 6.2 investigation conducted provide product delivered performed strategy proposed key check point development process performed number prototype adding short long prescription keeping field empty check accuracy percentage 36 2017-18 medical record patient healthcare 6.2.1 white box white box method phase tested proposed coding infrastructure tested contract correctness based functioning tested addition block blockchain 6.2.2.1 unit basically unit single snippet code functionality performed unit getter setter code written java contract 6.2.2.2 integration integration level individual unit combined tested group purpose phase expose fault integration integrated unit proposed integrated unit contract local server web performed integration checked integrated unit working properly created patient doctor account doctor wa authorized add record blockchain patient filed filled doctor record wa blockchian timestamp permission view medical record doctor wa patient wa checked integration 6.2.2 black box black box method examines functionality peering working proposed performed black box check functionality individual component initially add record blockchain authorized doctor view record permission view medical doctor view medical record wa checked initial phase adding medical record blockchain wa tested 37 2017-18 medical record patient healthcare 7 38 2017-18 medical record patient healthcare 7.1 7. blockchain address interoperability challenge based standard shared distributed view health achieve widespread acceptance deployment industry utilization proposed health blockchain described potential engage individual health care provider health care medical researcher share vast amount genetic diet lifestyle environmental health guaranteed security privacy protection 7.2 individual concerned health health sensitive difficult keep prescription proper reason patient lose his/her prescription patient forget bring his/her prescription bring le appointment doctor inconvenience patient appointment advance electronic medical record security issue patient hacked leaked find solution aiming provide healthchain based blockchain healthchain security patient database resolved patient safe proper collection prescription patient mobile access his/her prescription patient appointment well advance patient history authorized aiming provide healthchain patient account history stored account patient secured restricted access 7.2 now-a-days health issue increasing proper treatment disease proper treatment keeping track checkup prescription disease doctor preferred patient history safe considering point proposed help patient keep medical track proposed patient keep medical record securely access authorized patient concern appropriate doctor cure disease patient doctor appointment prescription patient his/her block help maintain medical history patient history doctor treatment order proposed help patient manage medical record live healthy life 39 2017-18 medical record patient healthcare 1 armstrong stephen `` move bitcoin started '' wired archived original 8 2016. retrieved 9 2016 2 shafaq malik nargis bibi sehrish khan razia sultana sadaf abdul rauf science fatima jinnah woman rawalpindi pakistan 2016. blockchain 3 iosr journal iosr-jce e-issn 2278-0661 p- issn 2278- 8727 volume 19 issue 6 ver iii nov.- dec. 2017 85-91 www.iosrjournals.org md abdul majid1 mohammad jahangir alam2 md nurul mustafa3 science southern bangladesh chittagong bangladesh 4 gopal chandra bala moinul islam jahangirnagar dhaka bangladesh email gopal.cb live.com moinul39.iit gmail.com shamim al mamun jahangirnagar dhaka bangladesh email sam juniv.edu 2013 5 satoshi nakamoto bitcoin peer-to-peer electronic cash satoshin gmx.com www.bitcoin.org 2008 6 asaph azaria ariel ekblaw thiago vieira andrew lippman medrec blockchain medical access permission 2016 2nd international conference 978-1-5090-4054-4/16 31.00 2016 doi 10.1109/obd.2016.11 7 matthias mettler blockchain healthcare revolution start 18th international conference e-health networking service healthcom 2016. link 8 http //www.innovecs.com/ideas-portfolio/blockchain-optimizes-health-software- development-health-related-research/ 40 2017-18 medical record patient healthcare 41 2017-18 medical record patient healthcare base paper 42 2017-18 medical record patient healthcare 43 2017-18 medical record patient healthcare 44 2017-18 medical record patient healthcare 45 2017-18 medical record patient healthcare 46 2017-18 medical record patient healthcare 47 2017-18 medical record patient healthcare plagiarism 48 2017-18 medical record patient healthcare review sheet 49 2017-18 medical record patient healthcare 50 2017-18 medical record patient healthcare 51 2017-18 medical record patient healthcare 52 2017-18 medical record patient healthcare 53 2017-18", "keywords": ["abdul rauf", "al mamun", "alam md", "alam md nurul", "andrew lippman", "appointment doctor", "ariel ekblaw", "bala moinul", "black box", "block block", "blockchain healthcare", "blockchain healthcare revolution", "blockchain medical", "chandra bala", "chandra bala moinul", "chougule sakshi", "chougule sakshi mutha", "digital medical", "digital medical record", "doctor appointment", "doctor patient", "doctor prescription", "hash block", "hash key", "health care", "health record", "healthcare revolution", "history patient", "international conference", "jahangir alam", "jahangir alam md", "malik nargis", "matthias mettler", "md nurul", "md nurul mustafa", "medical record", "medical record patient", "mohammad jahangir", "mohammad jahangir alam", "mutha pankaj", "mutha pankaj wajire", "nurul mustafa", "pankaj wajire", "patient appointment", "patient doctor", "patient healthcare", "patient history", "patient medical", "patient public", "permission view", "permission view medical", "prescription patient", "previous block", "prof kydigholkar", "public string", "record blockchain", "record patient", "record patient healthcare", "ronit chougule", "ronit chougule sakshi", "sakshi mutha", "sakshi mutha pankaj", "smart contract", "time appointment", "view medical"], "libraries": [], "languages": ["html", "cs", "revolution", "io", "basic", "small", "java"], "frameworks": [], "dbs": ["mysql"]}, "./reports/BE Project Report_33.pdf": {"title": "secured layer mechanism for web based portals", "filename": "./reports/BE Project Report_33.pdf", "data": "secured layer mechanism web based portal secured layer mechanism web based portal atharva junagade jagannath gawali jaykumar kothikar shivprasad kate b120058534 b120058528 b120058546 b120058541 guidance prof. t.a.rane sr. 27 pune-satara road bharati vidyapeeth college dhankawdi bharati vidyapeeth campus dhankawdi maharashtra-411043 2017-2018 secured layer mechanism web based portal secured layer mechanism web based portal atharva junagade jagannath gawali jaykumar kothikar shivprasad kate b120058534 b120058528 b120058546 b120058541 bonafide prof. t.a.rane earlier diploma prof. t.a.rane dr. sonkamble b.a examiner dr. p.t.kulkarni 2 2017-18 secured layer mechanism web based portal acknowledgement effort kind support help individual extend sincere highly indebted mrs. t.a.rane guidance constant well providing support completing greatest appreciation prof. p.p.jadhav prof. v.bhosale cant tremendous support help encouragement guidance materialized willingness motivate contributed tremendously express special gratitude lab attendant attention time express gratitude parent member kind co- operation encouragement helped completion appreciation colleague developing people willingly helped ability atharva junagade jagannath gawali jaykumar kothikar shivprasad kate 3 2017-18 secured layer mechanism web based portal sr. topic 1 2 3 4 5 6 acknowledgement 1.1 1.2 review 2.1 2.2 specification existing proposed definition concept non- 3.1 3.2 3.3 3.4 3.5 3.5.1 3.5.2 3.5.3 3.5.4 4.1 4.2 4.3 4.4 4.4.1 4.4.2 4.5 5.1 5.2 5.3 structural behavioral 2.0 pert pert 6.1 2 3 4 6 6 7 8 8 10 11 11 11 14 14 14 15 15 16 16 16 17 17 18 18 19 20 21 21 22 23 24 24 25 25 26 26 4 2017-18 secured layer mechanism web based portal 7 evaluation 7.1 7.2 7.2.1 7.2.2 7.2.3 7.2.4 white box unit integration black box 28 28 28 28 28 29 29 screenshot 30 base paper 37 37 38 39 5 2017-18 secured layer mechanism web based portal fig 4.1 4.2 4.3.1 4.4.1.1 4.4.1.2 4.4.1.3 4.4.1.4 4.4.2.1 4.4.2.2 4.4.2.3 4.4.2.4 5.1 5.5 6 sr. 2.2.1 5.1 comparison existing proposed pert class registration chanting group recommendation registration chanting group recommendation split-up pert 2017-18 secured layer mechanism web based portal web based scale globally threatened attack steal confidential gain mandatory secure attract interest malicious third party wasting hacker time time spent attacking safe time spent hacking damage hacker succeeds secondly setting honeypot attacking method good robustness defense install protect real attack thirdly attack honeypot frustrate hacker hacking real increasing traffic e-commerce e-transaction portal mandatory provided assurance confidential safe hand hacker attacker .development mechanism monitor prevent counteract malicious attack intrusion web based utmost number people electronic transaction nowadays cumbersome traditional making transaction keywords security secured layer mechanism honeypot encryption intrusion detection 7 2017-18 secured layer mechanism web based portal 1. 1.1 security play role managing internet 's including banking vulnerable attack sql injection url injection brute force attack cross site scripting sql injection attacker access database modifies injection attacking occurs flaw sql database sql library operating employee seemingly credible file hidden command injection unknowingly theyve allowed hacker gain unauthorized access private social security number credit card number financial cross site scripting attack occurs url request file packet web browser window bypassing validation process script triggered deceptive property compromised specific website legitimate cross site request forgery attack logged session account hacker opportunity send forged http request collect cookie cookie remains valid long attacker stay logged account website log account finished expire session browser session compromised hacker generate request differentiate valid hacker brute force attack trial-and-error method password identification number pin brute force attack automated generate number consecutive guess desired brute force attack criminal crack encrypted security analyst 's network security lot scenario brute force attack occurs password administrator compromised ground weak vulnerable dictionary attack website web portal database-backed platform executes numerous php server-side- script vulnerable series attack url injection malicious link insertion command web portal url parameter hacker easily warp abuse causing web portal authorization misinterpret job simple term url injection individual attempt manipulate online database command url form hacking involves creation website hacker dangerous bit code spam link site security visitor 2017-18 8 created packed full code re-directs visitor dangerous location allows web server participate attack aware common web portal hacker doe website gain access leave serious trouble secured layer mechanism web based portal attack occurring protect sensitive proposed secured layer mechanism protect web based portal scenario discussed mechanism encryption honeypot mechanism mechanism alert administrator intrusion notification compromised physically 9 2017-18 secured layer mechanism web based portal 1.2 ease connecting internet carrying e-commerce e-transactions internet threat internet attack improve security numerous intrusion detection implemented main wa overcome shortcoming intrusion detection currently web based scale globally threatened attack steal confidential gain mandatory secure attract interest malicious third party three good reason consideration deployment security mechanism prevent web portal unauthorized access malicious attack wasting hacker time time spent attacking safe time spent hacking damage hacker succeeds secondly setting security mechanism attacking method good robustness defence install protect real attack thirdly attack honeypot frustrate hacker hacking real developing wa unavailability notify administrator physically monitor 2017-18 10 secured layer mechanism web based portal 2. review 2.1 existing improvement security mechanism web based portal previous systematic review empirical system-level vulnerability metric actual attack 1 highlighted benefit shortcoming strength method explored implication review imitating better empirical study development review strictly covered aspect security surrounding vulnerability detection method addressed circumstance development efficient regard security review conducted 2 stressed security review chooses study assimilated security stage construction paying attention security development lifecycle review mentioned address issue building security entire lifecycle web security development systematic review conducted aspect web area association current systematic review building security development lifecycle instance 3 conducted systematic review identify discus existing vulnerability small medium web company propose vulnerability detection method order measure company success blanco al systematic view identify extract analyze main security ontology review addressed question appropriate security technique mitigating vulnerability web 2.2 proposed propose security mechanism detect deflect manner counteract attempt unauthorized address question appropriate security technique mitigating vulnerability web based improvement existing development real-time notification administrator notified attacker attack gain unauthorized access proposed measure counteract malicious action attacker real time 11 2017-18 secured layer mechanism web based portal sr.no paper title author description 1. encryption aware physical layer security ozge cepheli guido dartmann gunes karabulut kurt 2017 2. honeypot testbed network defence strategy evaluation jana medkov martin husk martin vizvry pavel celeda 3. development honeypot trap leksey a. egupov sergey v. zareshin igor m. yadikin3 dmitry s. silnov layer security framework paper encryption-aware physical proposed framework allocates distinct enabling tune power consumption secrecy level paper describe network defence strategy bed utilized strategy decision logic simulated attack real attacker main advantage logic needed order strategy decision trap article observes possibility protection network malicious attack service stimulate ssh overviewed main attack analyzed existing solution basic opportunity improvement addition described author solution attractiveness ssh honeypot working ubuntu principle increase working 12 2017-18 secured layer mechanism web based portal 4. detecting voip fuzzing attack honeypot h. hakan kln ugur agal study discus discovery vulnerability sip based voip fuzzing exploitation vulnerability describe honeypot illegal fuzzing voip environment share 2.2.1 13 2017-18 secured layer mechanism web based portal 3. specification 3.1 definition provide secured layer web based portal implement secured layered mechanism prevent attack cross side scripting sql injection distributed denial url injection brute force attack main eradicate vulnerability web based allow smooth functioning transaction designed honeypot provide mechanism detect deflect counteract attempt unauthorized send notification administrator real time unauthorized access malicious attack detection prevention attack listed compromise security entire geographical locations- sql injection attack url injection attack brute force attack cross site scripting attack 3.2 concept conceptual aim protect web based malicious attack unauthorized access honeypot mechanism encryption aes 128.aes 128 symmetric block cipher wa u.s government protect classified nation hand hacker enemy honeypot security mechanism detect deflect manner counteract attempt unauthorized based criterion honeypot classified 1. pure honeypot full-fledged production attacker monitored casual tap installed honeypot link network 2. high-interaction honeypot imitate production host variety service attacker allowed lot service waste time 3. low-interaction honeypot simulate service frequently requested attacker mentioned concept prevent attacker malicious attack unauthorized access 2017-18 14| secured layer mechanism web based portal 3.3 detect vulnerability web based prevent attack happening encryption prevent brute force password cracking dictionary attack advanced encryption standard aes declare security protocol beneficial protecting malicious tactic played hacker attacker making strategy encryption completely foolproof intended attack providing mechanism attacker intrude steal modify database database saved secure encryption mechanism attacker cross site scripting action falsified fault detecting implement .same sql injection url injection cover mechanism real time notification deployment administrator physically monitor 3.4 main proposed detect hacker intruder prevent carrying malicious attack secured layer mechanism helpful protecting transaction based banking e-commerce portal online shopping portal portal e- transaction site store critical financial attacker access lead catastrophic loss perspective 1.bill payment electricity bill income tax mobile recharge 1.sql injection 2.brute force attack 3.url injection 4.cross site scripting attack 1.customer proposed applied banking online transaction 2.fund transfer stage measure detection prevention multiple attack like- customer stored database encrypted format proposed dynamic password pin generation verification prevents man-in-the middle attack transaction notification message ensure transaction transaction genuine fraudulent account mini facility provided view transaction history 2017-18 15| secured layer mechanism web based portal 2. admin administrator point view admin approve reject creation account admin search customer account number customer access functionality check log attack provided provided 1. admin log-in form 2. registration form 3. fund transfer form 4. bill payment form provided 5. mini 6. administrator log file hacker 3.5 3.5.1 validation checking provided correct form provision providing form fund transfer bill payment log file generation generating log file administrator attempt breach security security importantly providing secured layer mechanism carry transaction safely 3.5.2 performance web based carry request transaction speedily responsiveness ensures ready respond 's input scalability scalability hoe well web portal deal increase traffic size usability relates easily people measure usability time completely familiar web portal maintainability deal effort keep running 16| 2017-18 secured layer mechanism web based portal 3.5.3 1.6 ghz central processing unit ii 4 gigabyte random access memory iii core i3 processor iv 100 gb hard disk drive hdd 3.5.4 java java tested refined extended proven dedicated community java developer architect enthusiast java designed enable development portable high-performance widest range computing platform making heterogeneous environment business provide service boost end-user productivity collaborationand dramatically reduce cost ownership enterprise consumer -apache tomcat apache tomcat deploy java servlets jsps java build war short web archive file drop deploy directory tomcat basically apache http server serving http tomcat servlet jsp server serving java tomcat web server servlet/java server container server strictly web-based doe include entire suite capability java ee server supply link apache tomcat -database -mysql mysql popular source relational sql database mysql best rdbms developing web-based mysql developed marketed supported mysql ab swedish company mysql popular source relational sql database mysql enterprise edition includes comprehensive advanced database 's popular source database fast-growing web property isv enterprise mysql cost-effectively help deliver performance scalable database applications.it popular choice database web central component lamp source web stack mysql query analyzer optimize performance visualizing query fixing sql code 17| 2017-18 secured layer mechanism web based portal 4. 4.1 fig .4.1 18| 2017-18 4.2 dfd fig.4.2 19| 2017-18 secured layer mechanism web based portal 4.3 structural fig.4.3.1 class 20 2017-18 secured layer mechanism web based portal 4.4 behavioural 4.4.1 fig.4.4.1 21 2017-18 secured layer mechanism web based portal 4.4.2 fig.4.4.2.1 22 2017-18 secured layer mechanism web based portal 4.5 advanced encryption standard popular adopted symmetric encryption encountered nowadays advanced encryption standard aes time faster triple de replacement de wa needed key size wa small increasing computing power wa considered vulnerable exhaustive key search attack triple de wa designed overcome drawback wa slow aes symmetric key symmetric block cipher 128-bit 128/192/256-bit key stronger faster triple-des provide full specification implementable java aes iterative feistel cipher based substitutionpermutation network comprises series linked operation involve replacing input specific output substitution involve shuffling bit permutation interestingly aes performs computation byte bit aes treat 128 bit plaintext block 16 byte 16 byte arranged column row processing matrix de number round aes variable depends length key aes 10 round 128-bit key 12 round 192-bit key 14 round 256-bit key round 128-bit round key calculated original aes key process decryption aes ciphertext encryption process reverse order round consists process conducted reverse order add round key mix column shift row byte substitution sub-processes round reverse manner feistel cipher encryption decryption separately implemented closely relate 23 2017-18 5.1 2.0 secured layer mechanism web based portal 5. fig.5.1 gantt 2.0 24 2017-18 secured layer mechanism web based portal 5.2 pert searching gathering planning modelling ui designing validation duration 5 day 5 day 10 day 5 day 10 day 10 day 5 day fig.5.2 pert 5.3 pert fig.5.3 pert 25 2017-18 secured layer mechanism web based portal 6.implementation consists java server proxy server apache tomcat server apache tomcat version 8 host local server proxy server intermediary request client seeking server client connects proxy server requesting service file connection web server proxy server evaluates request simplify control complexity proxy invented add encapsulation distributed consists registration admin control bill payment fund transfer generating time password generating mini database mysql 6.1 6.1.1 java server 6.1.1.1 admin administrator control website admin search customer functionality approve/ reject applicant provided administrator entire customer provided administrator thing listed graphical provided administrator 6.1.1.2 customer customer provide aadhar card pan card email-id .the password auto generated registered email-id person transfer fund mini generated functionality provided update profile functionality pay electricity bill insurance mobile recharge 6.1.1.3 otp transfer fund require time password otp deployed send otp registered mobile number 2017-18 26 secured layer mechanism web based portal 6.1.2 local server 6.1.2.1 consists security purpose encrypted security breach database attacker retrieve confidential encrypted 27 2017-18 secured layer mechanism web based portal 7. evaluation 7.1 expected proposed securely transfer fund view mini care prevent form malicious designing phase break signifies working expected performing function transferring fund account helping recharge mobile pay bill insurance securely administrator concerned view customer approve/deny request attack ddos sql injection brute force wa prevent attack 7.2 functionality find loophole needed manner attacker .to basic checked basic aim correct input term aadhar card pan card mobile number attempt brute force password wa automatically block ip address attempt sql injection wa hindered useless 7.2.1 white box white box method phase tested proposed coding infrastructure white box focus input output input entry phase input wa tested source destination checked database retrieving correct mechanism deployed block ip brute force wa tested snippet sql code wa injected form wa detect attempt sql injection prevented attack .lastly proxy server wa tested prevent man-in-the-middle attack 7.2.2 unit basically unit single snippet code functionality unit wa snippet code example automatically password generated email address account 28 2017-18 secured layer mechanism web based portal 7.2.3 integration integration level individual unit combined tested group purpose phase expose fault integration integrated unit respect deployed achieve .in order achieve wa intended coordinate coordination utmost passing .in integration tested connectivity java server 7.2.4 black box black box method examines functionality peering working .for proposed black box wa performed check functionality individual component black box focus input output bothering knowledge wa performed .in phase tested website working intended 2017-18 29 screenshots secured layer mechanism web based portal 30 2017-18 secured layer mechanism web based portal 31 2017-18 secured layer mechanism web based portal 32 2017-18 secured layer mechanism web based portal 33 2017-18 secured layer mechanism web based portal 34 2017-18 secured layer mechanism web based portal 35 2017-18 secured layer mechanism web based portal 36 2017-18 secured layer mechanism web based portal implemented web secured transaction money transfer billing recharge prevented attack distributed denial service brute force attack sql injection n't deployed io multiple encryption increase database size server fast multiple transaction parallel 37 2017-18 secured layer mechanism web based portal 38 2017-18 secured layer mechanism web based portal 1 cachia e. micallef m. 2007 multi-tier multi-role security framework e-commerce 14th annual international conference workshop computer-based tucson 26- 29 2007 422-432 2 lipner s. 2004 trustworthy computing security development lifecycle 20th annual security conference washington 6-10 2004 2-13. http //dx.doi.org/10.1109/csac.2004.41 3 sulayman m. mendes e. 2009 systematic review process improvement small medium web company advance springer berlin heidelberg 1-8. http //dx.doi.org/10.1007/978-3-642-10619-4_1 ... ... ... ... ... ... ... ... ... ... 4 hugo sequeira paulo carreira thomas goldschmidt philipp vorst -energy cloud real-time cloud-native energy monitor analyze energy consumption multiple industrial site 2014 5 bin nie honggang zhang yong liu social interaction based video recommendation ecommending youtube video facebook 2014 6 zhou xing marzieh parandehgheibi fei xiao nilesh chris pouliot-content-based recommendation podcast audio-items natural language processing technique 2016 7 yanfeng wang mingyang ding zhiyong chen ling luo-caching placement recommendation cache-enabled mobile social network 2016 8 craig a. d. human feeling aware trend cognitive science 2004 9 craig a. d. feelnow anterior insula human awareness nature review neuro- science 2009 10 yao-chang huang shyh-kang jeng-an audio recommendation based audio signature description 2004 international conference multimedia 39 2017-18 icc2017 wt04-5thieee international workshop smart protocol scpa 2017 encryption aware physical layer security ozge cepheli guido dartmann gunes karabulut kurt gerd ascheid wireless laboratory istanbul turkey irmakoz gkurt itu.edu.tr applied science trier germany chair integrated signal processing rwth aachen germany g.dartmann umwelt-campus.de ascheid ice.rwth-aachen.de layer physical abstractdue broadcast nature wireless vulnerable physical layer security technique developed current security solu- tions based encryption technique paper analyzes relation encryption technique physical layer security approach proposes encryption-aware mul- tilayer security framework proposed framework optimizes transmit power adopted encryption technique account guaranteeing service qos level legitimate receiver secrecy constraint eavesdropper numerical symmetric encryption technique encryption de advanced encryption aes standard numerical proposed encryption-aware physical layer security achieves better power efciency compared classical physical layer security approach termsphysical layer security eavesdropping encryption aware multi-layer security power allocation i. fig 1 classical technique proposed framework traditional security technique network implemented second upper layer well-known interconnection osi 1 rst layer physical layer wa considered secure wireless network specically vulnerable physical layer osi broadcast nature wireless channel physical layer security drawing lot attention area 2 4 legitimate transmitter sending secret in- formation signal legitimate receiver presence eavesdropper approached solution candidate physical layer secrecy enhancing guaranteeing technique optimize transmission example beamforming articial noise 3 4 theoretical security study secrecy capac- ity difference capacity legitimate illegit- imate channel considered main performance supported tubitak grant 115e827 metric practical based bit error rate ber proposed 5 7 study security gap wa rst introduced klinc al 5 dened ratio legitimate illegitimate channel achieve sufcient level physi- cal layer security ensuring reliable reception legitimate physical layer security technique target decrease avail- ability transmitted illegitimate aim shared encryption main exception encryption technique assume encrypted transmit signal captured illegitimate party sure difcult ideally impossible- gather encrypted signal key decryption arises encryption physical layer technique meet isolated functionality layer 2 encryption technique assume error- 978-1-5090-1525-2/17/ 31.00 2017 icc2017 wt04-5thieee international workshop smart protocol scpa 2017 fig 2. encryption-aware physical layer framework rst encrypted transmitted physical wireless proposed input physical layer security block encryption block free insecure transmission physical layer legitimate illegitimate party full transmitted denitely wireless channel transmission error handled physical layer hand physical layer technique upper layer technique account secrecy based signal measure signal noise ratio snr signal interference noise ratio sinr ber main stem fact multi-layer tech- niques proven provide better aspect error performance 8 transmission security unied framework connects encryption physical layer security remains challenge fig 1. paper propose encryption-aware physical layer security framework improve power efciency main contribution paper stated 1 encryption physical layer security analyzed 2 framework combine physical layer security scheme encryption proposed framework optimizes power allocation scheme scenario transmitter legitimate receiver eavesdropper service qos secrecy constraint addition classical qos based physical layer security scheme 2 consider encryption block fig 2. paper encryption analyzed ii iii formulate encryption-aware secrecy opti- mization exemplary scenario order effectiveness proposed framework iv increased power efciency secrecy performance encryption awareness simulation numerically proposed adaptive security technique guarantee secrecy le power conventional non- encryption-aware physical layer security finally ii encryption physical layer security physical layer security technique aim provide secrecy degrading signal reception eavesdropper guaranteeing minimizing/maximizing selected performance measure snr ber eavesdropper minimum error rate dened link properly established minimum level 5 cryptography technique generally consider phys- ical aspect end-to-end channel assume error-free transmission aspect great inuence error behavior avalanche property cryptosystems refers enabling error ciphertext key signicant change output word cryprosystem expected highly error sensitive ideally half ciphertext erroneous bit input text changed 9 error-sensitive property physical link considered error-free cyrptosystems channel error assumed corrected physical layer main reason physical layer security technique meet full cryptosystems physical layer security technique aim error eavesdropper cryptosystems assume error-free transmission performed legitimate illegitimate receiver word perfect physical layer transmission error-sensitive property cryptosystems affect change error property affect unexpected cryp- tosystem physical layer error handled separately existence avalanche error property change error level received physical layer error ct ct fig 2 error rate cr cr nature change encryption block numerical monte carlo simulation snr 10 trial icc2017 wt04-5thieee international workshop smart protocol scpa 2017 openssl 10 matlab wireless channel simple additive white gaussian noise awgn channel quadrature phase shift keying qpsk modulated symbol fig 3 channel snr ber cryptosystems de cipher block chaining mode cbc de electronic codebook ecb mode de output feedback mode ofb desx 128 bit 256 bit key length aes ecb cbc mode reader refer 11 mode fig 3 aes de error performance error rate remain 0.5 channel snr 6db unencrypted reach 102. fig 4 input-output ber cryptosystems gure ber gap encrypted encrypted visible notice gap larger input ber region corresponds eavesdropper channel help physical layer security technique decrease higher input ber region legitimate operates lead phenomenon better manage physical layer security optimization 2015 statistically dened block cipher 9 statistical encryp- tion applied physical layer security optimization technique straightforward manner introduce encryption-aware physical layer security framework fig 4. input ber vs. output ber crypto-systems input ber refers ber performance channel transmitter receiver output ber refers ber including encryption decryption block guaranteeing secrecy level eavesdropper minimum power consumption 12 physical layer security optimization scheme power minimization stand good candidate benet encryption-awareness sense power efciency suppose legitimate transmitter alice sends unit energy signal signal legitimate receiver bob eve passively eavesdropping alice nt antenna transmission bob eve nb ne receive antenna transmitted signal cnt transmit beamforming vector alice received signal bob eve stated nb ne rb fb fe 1a 1b fb fe receive beamforming lters further- nb ne independent identically distributed additive noise vector ni cn 0 2 ini hb cntnb cntne dene channel matrix link alice bob eve wireless channel assumed static symbol transmission channel assumed node cid 0 hh cid 0 hh cid 1 cid 1 fig 3. channel snr vs. output ber crypto-systems instantaneous snrs bob eve dened snrb snre iii proposed encryption-aware physical layer security framework three node mimo multi-antenna legitimate transmitter alice multi-antenna legitimate receiver bob multi-antenna eavesdropper eve considered qos based physical layer security framework optimizes transmit parameter satisfy qos constraint legitimate 2 snrb whrbw x|2 |fbhh 2 x|2 |fehh 2 dene rb hbhh hehh ber received signal representing difference ct ct fig 2 denoted pb pe whrew snre 2 2 -5051015snr db 10-710-610-510-410-310-210-1100berno-encryptiondes-cbcdes-ecbaes-cbc-128aes-cbc-256aes-ecb-128aes-ecb-256des-ofbdesx10-610-510-410-310-210-1ber 10-610-510-410-310-210-1ber no-encryptiondes-cbcdes-ecbaes-cbc-128aes-cbc-256aes-ecb-128aes-ecb-256des-ofbdesx icc2017 wt04-5thieee international workshop smart protocol scpa 2017 bob eve snr-ber relation technique coding modulation mathematically depicted channel affect order generalize framework ev- ery scheme assume mapping function uk ber map ber snr function scheme convex mapping additive white gaussian noise awgn channel 2 dimension 13 coding effective ber signal calculated comparison cr cr fig 2 denoted cid 15 cid 15 bob eve pb cid 15 snrb qos constraint legitimate receiver optimization pe cid 15 snre secrecy constraint eavesdropper cid 48 berin mapping function map input ber output ber encryption method cid 48 example mapping function cid 48 berin encryption scheme fig 4. function numerically recursive error weight distribution driven 9 calculate output ber input ber order exemplary closed form relation exponential mixture curve tting dened function cid 48 berin cid 88 iexp iberin 3 classical qos based power optimization de- ned min |w|2 s.t pb pe s1 |w|2 total transmit power qos constraint legitimate transmission bob bermax secrecy constraint eavesdropper evebermin assume snr-ber mapping selected 2 dimensional constellation scheme re-write optimization snr constraint min s1 |w|2 s.t snrb snre 8 turn convex in- stantaneous snr considered snr based optimization considered study 3 12 proposed encryption aware optimization stated 7 8 9 min s.t s2 |w|2 cid 15 cid 15 constrained sign cid 48 berin increasing function aes de cipher fig 4. charac- teristic effective ber qos secrecy constraint order guarantee ber constraint guarantee physical layer ber constraint mapped snr constraint optimization written proposition 1. function 3 convex concave s2 min |w|2 s.t cid 48 cid 15 cid 48 cid 15 10 proof proof straightforward second derivative function non-negative non-positive cid 48 cid 48 cid 48 berin cid 48 cid 48 cid 48 berin exp iberin 0 0 exp iberin 0 0 cid 88 cid 88 i2 i2 4 5 function cid 48 berin convex second deriva- tive non-negative concave non- positive equation specic encryption method cid 48 calculate ber bob eve cid 15 cid 48 pb cid 15 cid 48 pe 6a 6b cid 48 berin convex preserve convexity instantaneous snrs solved off-the-shelf solver sedumi 14 iv numerical demonstrate performance proposed de- veloped simulation environment matlab simulation platform sedumi optimization engine openssl wa aes de encryption decryption number monte-carlo 1000. predened threshold selected 20 db bob 0 db eve fig 5 secure region classical method gure expected correspond pb pe ber encryption decryption corresponds unencrypted real icc2017 wt04-5thieee international workshop smart protocol scpa 2017 proposed encryption aware classical framework proposed achieves ber eve bob le power consumption gure observe power gain 2.32 db scenario satisfying qos secrecy constraint v. future-work paper encryption-aware physical layer security framework proposed framework allocate distinct enabling tune power consumption secrecy level exemplary scenario generalized framework numerical proposed encryption aware achieves higher power efciency classical physical layer security proof concept planned 1 h. zimmermann osi iso interconnection transaction communica- tions 28 4 425432 1980 2 a. mukherjee s. fakoorian j. huang a. swindlehurst principle physical layer security multiuser wireless network tutorial 16 3 15501573 third 2014 3 g. dartmann o. cepheli g. karabulut kurt g. ascheid beam- forming aided interference improved secrecy correlated channel vehicular conference 2014 4 o. cepheli v. lucken g. dartmann g. k. kurt g. ascheid adaptive physical layer security framework wireless 2015 81st vehicular conference vtc spring 2015 15 5 d. klinc j. s. w. mclaughlin j. barros b. j. kwak ldpc code gaussian wiretap channel transaction forensics security 6 3 532540 sept 2011 6 m. baldi m. bianchi f. chiaraluce coding scrambling concatenation harq awgn wire-tap channel security gap transaction forensics security 7 3 883894 2012 7 i. m. kim b. h. kim j. k. ahn ber-based physical layer security nite codelength combining strong converse error amplication transaction 64 9 38443857 sept 2016 8 w. y. zibideh m. m. matalgah modied-des encryption algo- rithm improved ber performance wireless 2011 radio wireless symposium jan 2011 219222 9 j. wang j. mu s. wei c. jiang n. c. beaulieu statistical characterization decryption error block-ciphered transaction 63 11 43634376 nov 2015 10 openssl openssl source toolkit ssl/tls 2016 www.openssl.org 11 l. knudsen m. robshaw block cipher companion ser springer berlin heidelberg security cryptography 2011 12 w.-c. liao t.-h. chang w.-k. c.-y chi qos-based transmit beamforming presence eavesdropper optimized articial-noise-aided approach transaction signal process- ing 59 3 1202 1216 2011 13 s. loyka v. kostina f. gagnon convexity error rate digital transaction theory 59 10 65016516 oct 2013 14 j. f. sturm sedumi 1.02 matlab toolbox optimization symmetric cone optimization method 1999. fig 5. ber versus changing snr eve channel bob channel snr 10 db fig 6. power consumption proposed compared classical effective ber cid 15 cid 15 e. secrecy gain encrypted unencrypted change snr dened minimum ber level eve eve bermin region remains secure unencrypted region require physical layer security precaution increase ber eve bermin encryption secure region extended ab insecure requires security enhancement fulll eve bermin minimum ber threshold eve reached higher snr encrypted unencrypted expected aforementioned error property encryption ensuring security encrypted classical optimization ineffective example region power invested increase security encryption fig 6 transmit power -20-15-10-50510channel snr eve00.10.20.30.40.50.6bereve expectedeve realbob expectedbob realsecrecygaineve bermincba-20-15-10-50510channel snr eve19.52020.52121.52222.523transmit power db classical systemproposed", "keywords": ["aadhar card", "advanced encryption", "apache tomcat", "attack cross", "based portal", "based portal secured", "ber cryptosystems", "ber eve", "berin convex", "black box", "block cipher", "bob eve", "brute force", "brute force attack", "counteract attempt", "cross site", "cross site scripting", "development lifecycle", "encryption decryption", "encryption technique", "encryptionaware physical", "encryptionaware physical layer", "error property", "error rate", "eve bermin", "force attack", "fund transfer", "gawali jaykumar", "gawali jaykumar kothikar", "injection brute", "injection brute force", "input ber", "international workshop", "international workshop smart", "jagannath gawali", "jagannath gawali jaykumar", "java server", "jaykumar kothikar", "karabulut kurt", "kurt ascheid", "layer mechanism", "layer mechanism web", "layer security", "layer security framework", "layer security optimization", "layer security technique", "le power", "legitimate illegitimate", "legitimate receiver", "malicious attack", "mechanism web", "mechanism web based", "output ber", "pan card", "physical layer", "physical layer security", "popular source", "portal secured", "portal secured layer", "power consumption", "power efciency", "proposed framework", "protocol scpa", "proxy server", "qos constraint", "scripting attack", "secrecy constraint", "secured layer", "secured layer mechanism", "security development", "security development lifecycle", "security framework", "security mechanism", "security optimization", "security technique", "server proxy", "server proxy server", "site scripting", "site scripting attack", "smart protocol", "smart protocol scpa", "snrb snre", "sql database", "sql injection", "systematic review", "unauthorized access", "url injection", "vulnerability web", "web based", "web based portal", "web portal", "web server", "white box", "white gaussian", "wireless channel", "workshop smart", "workshop smart protocol"], "libraries": [], "languages": ["php", "io", "basic", "small", "matlab", "java"], "frameworks": [], "dbs": ["mysql"]}, "./reports/BE Project Report_34.pdf": {"title": "landmark recognition and signboard translation", "filename": "./reports/BE Project Report_34.pdf", "data": "landmark recognition signboard translation fulfilment karan singh rathore b120058539 mandar laxmikant mahajan b120058556 kailash satyanarayan malani b120058558 rahul sunil chaudhari b120058594 guidance prof. naman buradkar sr. 27 satara road bharti vidyapeeth college maharashtra 411043 2017 2018 landmark recognition sign board translation landmark identification sign board translation karan singh rathore mahajan mandar laxmikant malani kailash satyanarayan rahul sunil chaudhari b120058539 b120058556 b120058558 b120058594 bonafide prof. naman buradkar complete fulfilment earlier diploma prof. naman buradkar prof. d. d. londhe co-ordinator dr. b. a. sonkamble dr. p. t. examiner 2017-18 landmark recognition sign board translation acknowledgement opportunity express heart-felt gratitude dr. prahlad providing infrastructure complete express deepest gratitude dr. b. a. sonkamble thankful prof. naman buradkar unflagging support continuous encouragement guidance persistent help faculty member mr. vishal bhosale support constant help reviewer mrs. sumitra jakhete continuous evaluation suggestion improve warm faculty helped view encouraging thankful directly indirectly contributed helped complete karan rathore mandar mahajan kailash malani rahul chaudhari 2017-18 landmark recognition sign board translation sr. topic nomenclature chapter-1 1.1 1.2 chapter-2 2.1 existing 2.2 image classification optical character recognition 2.1.1 2.1.1 proposed 2.2.1 2.2.2 image classification optical character recognition chapter-3 specification 3.1 3.2 3.3 3.4 3.5 definition concept 3.5.1 3.5.2 3.5.3 3.5.4 dataset 2017-18 iii iv 1 2 2 3 4 4 4 5 6 6 6 7 7 7 7 8 8 8 8 9 9 landmark recognition sign board translation 3.6 3.5.5 3.5.6 3.6.1 3.6.2 landmark recognition signboard translation android split-up 3.6.2.1 3.6.2.2 3.6.2.3 decomposition role responsibility pert 3.6.3 3.6.4 3.6.5 chapter-4 4.1 4.2 4.3 4.4 4.5 structural behavioural 4.4.1 4.4.2 4.4.2.1 4.4.2.2 landmark recognition signboard translation 4.4.3 4.4.3.2 4.4.3.1 landmark translation signboard translation 4.5.1 4.5.2 4.5.3 convolutional neural network tesseract ocr engine android chapter-5 5.1 2017-18 stage 9 10 10 10 11 11 11 11 11 12 12 13 13 13 14 14 14 15 15 15 16 16 16 17 17 17 18 20 20 landmark recognition sign board translation 5.1.1 5.1.2 dataset acquisition dataset augmentation preparation 5.1.1.1 5.1.1.2 processing 5.1.2 5.1.2.2 5.1.2.3 5.1.2.4 5.1.2.5 training cnn deploying convolutional neural network server setting configuring tesseract ocr engine server developing android basic code optimisation inbuilt android studio 5.2 issue chapter-6 evaluation 6.1 6.2 experiment 6.1.1 6.1.2 6.2.1 detailed discussion experiment unit integration white box 6.2.1.1 6.2.1.2 black box 6.2.2.1 6.2.2.2 summary black box 6.2.2 chapter-7 7.1 7.2 7.3 base paper review sheet 2017-18 20 20 22 23 23 25 26 26 27 31 33 33 33 33 34 34 34 35 35 36 37 38 38 38 39 40 41 41 42 landmark recognition sign board translation 1 2 3 4 review sheet review sheet-ii review sheet-iii review sheet-iv 42 45 47 49 2017-18 landmark recognition sign board translation title 2.1.1 2.2.1 3.5.3 3.6.5 4.1 4.2 4.3 4.4.1 4.4.2.1 4.4.2.2 4.4.3.1 4.4.3.2 4.5.1 4.5.3 5.1.1.1 5.1.1.2 5.1.2.1.1 5.1.2.1.2 5.1.2.1.3 5.1.2.4 5.1.2.5.1 5.1.2.5.2 5.1.2.5.3 5.1.2.5.4 5.1.2.5.5 5.1.2.5.6 5.1.2.5.7 image net challenge error rate 2010-2015 convolution inception pert proposed structural landmark recognition signboard translation landmark recognition signboard translation inception v3 android studio image dataset example augmentation training image-1 training image-2 training image-3 layout gradle android studio screenshot 1 opening screenshot 2 option selection screenshot 3 image selection screenshot 4 preview image upload screenshot 5 image upload screenshot 6 display screenshot 7 view browser 2017-18 4 6 9 12 13 13 14 14 15 15 16 16 17 19 21 23 24 24 25 27 28 28 28 28 29 29 29 landmark recognition sign board translation 5.1.2.5.8 screenshot 8 option selection signboard translation 5.1.2.5.9 5.1.2.5.10 5.1.2.5.11 5.1.2.5.12 5.1.2.5.13 6.1.2.1 6.1.2.2 6.1.2.3 6.1.2.4 screenshot-9 source language selection screenshot 10 crop image screenshot 11 preview cropped image upload screenshot 12 upload cropped image screenshot 13 display screenshot 1 landmark identification screenshot 2 signboard translation source language english screenshot 3 signboard translation source language marathi screenshot 4 signboard translation source language hindi 30 30 30 30 31 31 33 33 34 34 2017-18 ii landmark recognition sign board translation title 6.1.2.1 description 36 2017-18 iii landmark recognition sign board translation nomenclature abbreviation cnn ocr api ilsvrc ai lstm sdk cuda ram php cpu 2d osd xml pb rest json http xp pert full form convolutional neural network optical character recognition programming imagenet scale visual recognition challenge artificial intelligence long-short term memory development kit compute unified device random access memory hypertext pre-processor central processing unit 2 dimensional orientation script detection extended markup language protocol buffer representational state transfer javascript object notation hypertext transfer protocol extreme programming electrical electronics engineer program evaluation review technique 2017-18 iv landmark recognition sign board translation tourist sight-seeing hire introduce landmark face language barrier travel android aim eliminate providing landmark recognition well translation capability deep learning landmark recognition convolutional neural network wa trained tensorflow framework landmark dataset 10 landmark india web scraping translation support english marathi hindi optical character recognition performed tesseract ocr engine text translated google translation api keywords landmark android landmark-recognition deep neural network optical character recognition tensorflow 2017-18 1 landmark recognition sign board translation 1 1.1 tourist exploring travel location landmark recognize landmark landmark language unknown android travelate tourist identify historical landmark clicking image landmark front travelate ability translate signboard english marathi hindi language translation language i.e text english language provide translation marathi hindi language develop android facilitate translation field tourism firstly identify notable landmark read relevant real-time secondly translate sign board english marathi hindi language android real-time landmark recognition acquired dataset consisting 10 landmark scraping website bing instagram gettyimages image augmented introduce variation colour add blur final dataset consisted 2200 image class image trained convolutional neural network cnn wa modelled inception v3 rented google cloud server trained wa uploaded second tesseract ocr engine wa setup server image captured android cropped include text region image translate cropped image uploaded server tesseract ocr engine obtains text digital format text translated google translation api translated text displayed 2017-18 2 landmark recognition sign board translation 1.2 associated interesting landmark recognition tourist capture angle well lighting depending time day challenging achieve dataset consist myriad image angle lighting machine learning identify landmark sufficient confidence tourist destination obtaining train neural network sufficient accuracy happen time currently dataset cover wide variety destination acquired dataset 10 landmark web-scraping solution integrate geo-tagging landmark recognition help android identify landmark train neural network better efficiency translation arose unavailability devanagari google translate doe image capture support devanagari script decided provide translation support english marathi hindi language image travelate currently provide functionality landmark recognition signboard detection assist tourist visit tourist destination navigation barrier posed sign board read landmark mobile phone 2017-18 3 landmark recognition sign board translation 2 2.1 exististing methodolgy 2.1.1 image classification image classification deal extraction class multi-brand raster image mentioned dr. bhattacharya lecture iit bombay image classification deal assigning pixel image category class interest training varying error rate facilitate image classification supervised learning support vector machine k- nearest neighbour classification serving image classification decade major learning face over-fitting i.e visual complex generated tend high- dimension parameter lot fit limited consequently accuracy produced 2.1.1 image net challenge error rate 2010-2015. image rate error vertical axis year wa year minimum error rate horizontal axis 2017-18 4 landmark recognition sign board translation imagenet scale visual recognition challenge ilsvrc evaluates object detection image classification scale image-net challenge focused creating largest image dataset 22 000 category 14 000 000 image field ai starting 2010 error rate challenge irrespective wa 28.2 25.8 successive year year 2012 error rate dropped severely 16.4 winning year wa convolutional neural network error rate decreasing year image year error rate fell 3.57 average human error rate 5.1 convolutional neural network popular wa deep learning error rate fallen critically field image classification dealt address landmark detection main ideology convolutional neural network 2.1.2 optical character recognition amount document paper form corporation faster processing text human efficient storing text physical form process text scanned image document arose optical character recognition ocr optical character recognition development early 1960s primitive nature recognize constrained shape language wa performed field optical character recognition newer method introduced structural approach optical character recognition wa developed handwritten document well today optical character recognition neural network based cnn convolutional neural network lstm long short-term memory 2017-18 5 landmark recognition sign board translation 2.2 proposed 2.2.1 image classification stated 2.1.1 deep learning proven perform well image classification deep learning involves convolutional neural network deep consisting number convolutional layer fully connected layer proposed deep learning inception 48 layer consisting 11 33 55 convolution 33 max pooling 2.2.1 convolution inception 2.2.2 optical character recognition proposed utilizing tesseract ocr engine android tesseract ocr engine utilizes lstm based neural network optical character recognition propose english marathi hindi training tesseract ocr engine facilitate android text digital format image consisting english marathi hindi text 2017-18 6 landmark recognition sign board translation 3 specification 3.1 definition android identifying notable landmark real-time provide historical provide translation image english marathi hindi text 3.2 concept image recognition employed deep convolutional neural network convolutional neural network cnns trained achieve real-world level accuracy recognizing image training suitable datasets appropriate hyper-parameters deep learning landmark recognition deep learning trained tensorflow framework image dataset 10 landmark taj mahal red fort india gate gateway india qutub minar lotus temple charminar aga khan palace shaniwarwada golden temple cnn output landmark captured camera display historical cultural landmark translation prompted choose source language text tesseract ocr engine optical character recognition fetch character image captured text fed google translation api translated text language displayed 3.3 current targeted identifying landmark taj mahal red fort india gate gateway india qutub minar lotus temple charminar aga khan palace shaniwarwada golden temple require capture image landmark sufficient lighting suitable position capture remarkable landmark 2017-18 7 landmark recognition sign board translation translation requires choose source language text identify language text translate require correctly crop text region image marathi character translation image clicked sufficient resolution cropping letter maintain legibility image translation skew 3.4 tourist landmark unknown indication historical/cultural landmark rich history cultural significance landmark tourist face language barrier sign-posts language unknown e.g marathi hindi unable understand unnecessary trouble aim provide solution mentioned 3.5 3.5.1 datasets android deep convolutional neural network landmark recognition deep learning generally require image datasets consisting 1000 image class satisfactory accuracy require landmark image dataset consisting 1000 image class proposed dataset web-scraping website bing google gettyimages instagram 3.5.2 identify image landmark well-light proper angle 2017-18 8 landmark recognition sign board translation relevant concise landmark providing interesting fact landmark provide accurate translation signboard image captured 3.5.3 3.5.3 3.5.4 non-functional time recognizing image minimum android well-optimized battery usage 3.5.5 android phone ram 2gb camera 8.0mp+ 2017-18 9 landmark recognition sign board translation pc training neural network ram 8 gb gpu nvidia geforce gtx 750ti processor intel core i5 5th gen server hosting trained cnn ocr engine ram 3.75gb cpu platform intel haswell hard disk 20gb 3.5.6 android phone android 4.4+ pc training neural network tensorflow 1.3 python 3.0+ opencv server php apache tensorflow opencv tesseract ocr engine 3.6 3.6.1 necessity completing utilized helped order complete image augmentation library imgaug tensorflow library android sdk tesseract ocr engine cuda toolkit supporting apis google 2017-18 10 landmark recognition sign board translation translate api wikipedia api bing api gettyimages instagram fastsave major training apart firstly nvidia geforce gtx 750ti graphic processor compute capability 5.0 wa training deep learning secondly google cloud server ram 3.75gb cpu platform intel haswell storage 20gb wa lastly mobile device android version kitkat lolipop marshmellow nougat oreo android provided constant improvement 3.6.2 split-up 3.6.2.1 landmark recognition deep neural network dataset scraping web dataset train deep neural network landmark recognition landmark image 3.6.2.2 signboard translation prompt source language text tesseract ocr engine optical character recognition text source language text recovered image text recovered google translate api translated text english 3.6.2.3 android linked front-end android android developed android studio sdk 3.6.3 decomposition decomposition process complex process breaking smaller simpler decomposition android described firstly ensure device connected internet secondly select option landmark recognition signboard translation select 2017-18 11 landmark recognition sign board translation image upload device storage click real time image image uploaded background server server pass image processing server sends display option summing basic function decomposition select option select image upload upload receive display 3.6.4 role responsibility mixed control mixed-control attempt combine benefit centralized decentralized control minimizing avoiding disadvantage comprised 4 number regular follow helped improving initial stage helped finalize analyzing alternative wa divided module- wise ultimately 3.6.5 pert 3.6.5 pert 2017-18 12 landmark recognition sign board translation 4 4.1 4.1 proposed 4.2 4.2 2017-18 13 landmark recognition sign board translation 4.3 structural 4.3 structural 4.4 behavioural 4.4.1 4.4.1 2017-18 14 landmark recognition sign board translation 4.4.2 4.4.2.1 landmark recognition 4.4.2.1 landmark recognition 4.4.2.2 signboard translation 4.4.2.2 signboard translation 2017-18 15 landmark recognition sign board translation 4.4.3 4.4.3.1 landmark recognition 4.4.3.1 landmark recognition 4.4.3.2 signboard translation 4.4.3.2 signboard translation 2017-18 16 landmark recognition sign board translation 4.5 4.5.1 convolutional neural network convolutional neural network comprised convolutional layer fully connected layer standard multilayer neural network cnn designed advantage 2d input image 2d input speech signal achieved local connection tied weight form pooling translation invariant benefit cnns easier train fewer parameter fully connected network number hidden unit convolutional neural network modelled inception v3 inception v3 extremely deep convolutional neural network consisting 48 layer train deep neural network scratch solve utilised checkpoint file trained imagenet dataset wa initialise weight convolutional neural network 4.5.1 inception v3 4.5.2 tesseract ocr engine tesseract source text recognizer ocr engine apache 2.0 license directly programmer api extract printed text image support wide variety language 2017-18 17 landmark recognition sign board translation utilizes tesseract ocr engine optical character recognition image text tesseract segmentation mode 0 orientation script detection osd 1 automatic segmentation osd 2 automatic segmentation osd ocr 3 fully automatic segmentation osd default 4 assume single column text variable size 5 assume single uniform block vertically aligned text 6 assume single uniform block text 7 treat image single text 8 treat image single word 9 treat image single word circle 10 treat image single character 11 sparse text find text order 12 sparse text osd 13 raw treat image single text bypassing hack tesseract- specific mode mode mode 7 i.e treat image single text mode 8 i.e treat image single word tesseract 4.00. includes neural network subsystem configured text recognizer consists c++ based lstm long short-term memory 4.5.3 android android travelate comprises single supporting class help carry operation responsible preparing performs operation network connectivity main performs major operation including network requests/responses controlling layout providing appropriate display interacting 2017-18 18 landmark recognition sign board translation xml layout file file help interact 4.5.3 android studio image file image left file app file gradle file gradle setting local property image file src folder main code directory consists image layout manner android structured 2017-18 19 landmark recognition sign board translation 5 implemenatation 5.1 stage 5.1.1 preparation 5.1.1.1 dataset acquisition decided landmark taj mahal red fort india gate gateway india qutub minar lotus temple charminar aga khan palace shaniwarwada golden temple acquired image dataset technique 1. bing image api implemented python script bing image api image keywords majority portion dataset wa acquired script 2. fatkun batch download image extension web browser google chrome scrape image website gettyimages 3. fastsave instagram android image social medium app instagram quick manner technique 350 image class totaling 3500 image number image sufficient achieving accuracy neural network augmentation image wa image gettyimages fatkun batch download image extension increasing size datasets 2017-18 20 landmark recognition sign board translation introducing color variation sunny overcast random blur image dataset example acquired image class 2017-18 21 5.1.1.1 image dataset landmark recognition sign board translation 5.1.1.2 dataset augmentation landmark dataset web scraping wa sufficient size achieving good accuracy deep learning mined image sufficient variation color theme account landmark image captured weather condition sunny overcast moonlit dataset augmentation wa introduce needed variation dataset augmentation python library imgaug library performs image augmentation library opencv numpy scipy scikit-image applied augmentation adding random gaussian blur image scaling image adding random amount red tint image adding random amount green tint image adding random amount blue tint image adding random amount red+green yellow tint image adding random amount red+blue purple tint image adding random amount blue+green cyan tint image 2017-18 22 landmark recognition sign board translation 5.1.1.2 example augmentation performing dataset augmentation size dataset greatly increased initially dataset consisted 350 image class augmentation amounted 2200 image class i.e 22000 image training cnn 5.1.2 processing 5.1.2.1 training convolutional neural network gpu training convolutional neural network speed training process tremedously training wa locally desktop powered nvidia geforce gtx 750 ti gpu training convolutional neural network gpu facilitated cuda toolkit nvidia cuda toolkit 9.0 wa installed desktop gpu cnn wa trained landmark image dataset consisting 22 000 image gpu training 1 hour 20 minute protocol buffer .pb file wa output training file represents trained landmark image dataset 2017-18 23 landmark recognition sign board translation 5.1.2.1.1 training image 1 5.1.2.1.2 training image 2 2017-18 24 landmark recognition sign board translation fig 5.1.2.1.3 training image 3 training process 4000 step validation accuracy 99.0 wa cross-entropy loss 0.055. compared expectation typical accuracy achieved wa attain remarkably accuracy 5.1.2.2 deploying convolutional neural network server android uploads image captured server classification performed image upload trained server protocol buffer .pb file output training wa uploaded google cloud server classification performed tensorflow environment wa image tensorflow wa server classification performed android displayed 2017-18 25 landmark recognition sign board translation 5.1.2.3 setting configuring tesseract ocr engine server travelate android asks source language text uploads cropped image text source language server character identified image tesseract ocr engine wa server proper configuration tesseract file wa performed php script wa written perform ocr tesseract uploaded image script executes tesseract ocr engine recognizes character image output file server google translate translates text language language selected e.g selects marathi source language marathi text image translated language i.e hindi english translated text android 5.1.2.4 developing android common library android library addition library android.net network request response assist framework retrofit retrofit rest client android java square easy retrieve upload json structured rest based web service retrofit configure converter serialization typically json gson add custom converter process xml protocol retrofit okhttp library http request snapshot app gradle presented 2017-18 26 landmark recognition sign board translation 5.1.2.4 layout gradle android studio gradle retrofit simple json transmission android-image-cropper enabling cropping image 5.1.2.5. basic code optimization inbuilt android studio check network connectivity selects landmark recognition signboard translation selects image camera gallery uploads image server sends appropriate response depending option selected output displayed code optimization performed inbuilt android studio analyze option menu option inspect code code cleanup analyze perform code optimization 2017-18 27 landmark recognition sign board translation 5.1.2.5.1 screenshot 1 opening 5.1.2.5.2 screenshot 2 option selection 5.1.2.5.3 screenshot 3 image selection 5.1.2.5.4 screenshot 4 preview image 2017-18 28 landmark recognition sign board translation 5.1.2.5.5 screenshot 5 image upload 5.1.2.5.6 screenshot 6 display 5.1.2.5.7 screenshot 7 view browser 2017-18 29 landmark recognition sign board translation 5.1.2.5.8 screenshot 8 option selection 5.1.2.5.9 screenshot 9 source language signboard translation selection 5.1.2.5.10 screenshot 10 crop image 5.1.2.5.11 screenshot 11 preview image 2017-18 30 landmark recognition sign board translation 5.1.2.5.12 screenshot 12 upload cropped 5.1.2.5.13 screenshot 13 display image 5.2 issue initially dataset acquisition 350 image mined training neural network dataset poor accuracy smaller dataset caused overfitting solution solve landmark image dataset wa augmented introduce color variation blur augmentation caused dataset size increase time 350 image class 2200 image class android development default android network-related library library increased complexity android greatly numerous function call thesis library support compression image third party library solution alternative library retrofit rest client developed square inc. wa solved provided simpler method making post request server in-built support image compression eliminating compression 2017-18 31 landmark recognition sign board translation retrofit received json format processing easier second translation initially entire image wa uploaded server tesseract ocr perform image text solution solve cropper wa implemented android facilitated crop region image text upload server performance tesseract improved 2017-18 32 landmark recognition sign board translation 6 evaluation 6.1 experiment 6.1.1 detailed discussion developing travelate android experimented check functionality experiment included landmark recognition image landmark tested translation image text english marathi hindi language 6.1.2 experiment 6.1.2.1 screenshot 1 landmark 6.1.2.2 screenshot 2 signboard identification translation source language english 2017-18 33 landmark recognition sign board translation 6.1.2.3 screenshot 3 signboard 6.1.2.4 screenshot 4 signboard translation source language hindi translation source language marathi 6.2 6.2.1 white box 6.2.1.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine fit unit entire function procedure unit wa performed performance classifier 2017-18 34 landmark recognition sign board translation wa trained needed performed check output real image purpose unit wa performed landmark recognition android initially i.e landmark recognition translation wa developed separately developed unit tested separately ease debugging refactoring code 6.2.1.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision android initially developed landmark recognition translation separately developed wa needed integrate sure integration wa performed integration 6.2.2 black box black box behavioral method structure/design/implementation item tested tester non-functional android wa developed integrated server black box wa performed distributed android closed group asked bug 2017-18 35 landmark recognition sign board translation 6.2.2.1 tid01 tid02 tid03 tid04 tid05 tid06 running network connectivity running network connectivity uploads image consists small landmark uploads image consists lit image landmark including notable uploads image translation good contrast text background uploads image translation contrast text background expected output actual output well well success display error display error success correctly identifies incorrectly identifies failure correctly identifies correctly identifies success correct translation correct translation success correct translation incorrect translation failure 2017-18 36 6.1.2.1 description landmark recognition sign board translation 6.2.2.2 summary black box black box wa performed 6 6 4 executed 2 failure wa expected 2017-18 37 landmark recognition sign board translation 7 7.1 tourist today rely heavily tourist location visit familiar language tourist provided accurate tourist time consuming process coping native language surfing internet time time landmark deep learning help tourist identify landmark read historical apart functionality tourist translate image english marathi hindi text help tourist navigate tourist location easily consequently major chunk issue faced tour bypassed 7.2 developed android performs landmark recognition 10 class extended adding image landmark retraining proposed larger dataset 100 class performance accuracy reliability proposed improved integrating geo-tagging android helpful landmark e.g monument bibi ka maqbara identical replica taj mahal bibi ka maqbara located aurangabad taj mahal agra geo-tagging help android identifying access geo-tags image android support translation image english marathi hindi text extended include wide variety language effort travelate android requires crop image consist text region extended eliminate burden automatically detecting text region image 2017-18 38 landmark recognition sign board translation 7.3 travelate android deep learning classification landmark trained tensorflow typical tensorflow 10 second perform classification image class real-world travelate pose wait 15 second travelate android currently support landmark recognition 10 landmark travelate doe upload image landmark 10 selected landmark translation travelate requires cropped image consist contrast text background image condition met optical character recognition performs unpredictably output incorrect text 2017-18 39 landmark recognition sign board translation 1 yan-tao zheng ming zhao yang song hartwig adam ulrich buddemeier alessandro bissacco fernando brucher tat-seng chua hartmut neven `` tour building web-scale landmark recognition engine '' 2009 society conference vision pattern recognition workshop 2009 miami florida usa 2 m. sun t. x. han ming-chang liu a. khodayari-rostamabad `` multiple instance learning convolutional neural network object recognition `` 2016 23rd international conference pattern recognition icpr cancun 2016 3 s. albelwi a. mahmood `` automated optimal deep convolutional neural network image recognition `` 2016 15th international conference machine learning icmla anaheim 2016 4 y. yin z. liu r. zimmermann `` geographic weakly- supervised deep learning landmark recognition '' 2017 international conference multimedia expo icme hong kong 2017 5 christian szegedy wei liu yangqing jia pierre sermanet scott reed dragomir anguelov dumitru erhan vincent vanhoucke andrew rabinovich going deeper convolution 2014 ilsvrc 6 andrew crudge thomas kaiyuan zhu landmark recognition machine learning 7 m. pak s. kim `` review deep learning image recognition `` 2017 4th international conference processing caipt kuta bali indonesia 2017 1-3 8 f. ertam g. aydn `` classification deep learning tensorflow `` 2017 international conference science ubmk antalya 2017 775-778. 2017-18 40 landmark recognition sign board translation base paper 1 christian szegedy wei liu yangqing jia pierre sermanet scott reed dragomir anguelov dumitru erhan vincent vanhoucke andrew rabinovich going deeper convolution 2014 ilsvrc 2 andrew crudge thomas kaiyuan zhu landmark recognition machine learning 2017-18 41 landmark recognition sign board translation review sheet 1 review sheet 2017-18 42 landmark recognition sign board translation 2017-18 43 landmark recognition sign board translation 2017-18 44 landmark recognition sign board translation 2 review sheet-ii 2017-18 45 landmark recognition sign board translation 2017-18 46 landmark recognition sign board translation 3 review sheet-iii 2017-18 47 landmark recognition sign board translation 2017-18 48 landmark recognition sign board translation 4 review sheet-iv 2017-18 49", "keywords": ["aga khan", "aga khan palace", "android android", "android deep", "android studio", "basic code", "black box", "board translation", "board translation screenshot", "character recognition", "cloud server", "convolutional neural", "convolutional neural network", "dataset augmentation", "deep convolutional", "deep convolutional neural", "deep learning", "deep neural", "deep neural network", "english marathi", "english marathi hindi", "error rate", "fatkun batch", "gate gateway", "golden temple", "google cloud", "google cloud server", "google translation", "google translation api", "hindi language", "hindi text", "image class", "image classification", "image dataset", "image english", "image english marathi", "image landmark", "image recognition", "image single", "image text", "image upload", "india gate", "india gate gateway", "india qutub", "india qutub minar", "international conference", "karan singh", "khan palace", "khan palace shaniwarwada", "landmark image", "landmark recognition", "landmark recognition deep", "landmark recognition landmark", "landmark recognition sign", "landmark recognition signboard", "landmark recognition translation", "landmark taj", "landmark taj mahal", "language text", "lotus temple", "lotus temple charminar", "mahajan kailash", "mahal red", "mahal red fort", "marathi hindi", "marathi hindi language", "marathi hindi text", "minar lotus", "minar lotus temple", "naman buradkar", "network optical", "network optical character", "neural network", "neural network optical", "ocr engine", "optical character", "optical character recognition", "option selection", "palace shaniwarwada", "palace shaniwarwada golden", "preview image", "qutub minar", "qutub minar lotus", "recognition deep", "recognition landmark", "recognition sign", "recognition sign board", "recognition signboard", "recognition signboard translation", "recognition translation", "red fort", "region image", "review sheet", "screenshot option", "screenshot option selection", "shaniwarwada golden", "shaniwarwada golden temple", "sign board", "sign board translation", "signboard translation", "signboard translation source", "source language", "source language text", "taj mahal", "taj mahal red", "temple charminar", "tesseract ocr", "tesseract ocr engine", "text english", "text region", "text region image", "tint image", "training image", "translation api", "translation image", "translation screenshot", "translation signboard", "translation source", "translation source language", "travelate android", "uploads image", "wide variety"], "libraries": ["numpy", "scipy", "opencv", "tensorflow"], "languages": ["php", "python", "xml", "c++", "javascript", "basic", "small", "java"], "frameworks": [], "dbs": []}, "./reports/BE Project Report_36.pdf": {"title": "node-nector for daily enpowerment", "filename": "./reports/BE Project Report_36.pdf", "data": "node-nectar daily empowerment node-nector daily enpowerment b120058598 rupali ransing b120058615 ashwini shelar b120058641 snehal waydanade guidance prof. m. r. khodaskar sr 27 pune-satara road bharti vidyapeeth college college dhankwadi maharashtra 411043 2017-2018 2017-18|| node-nectar daily empowerment node-nectar daily empowerment rupali ransing ashwini shelar snehal waydande b120058598 b120058615 b120058641 bonafide prof. m. r. khodaskar savitribaiphule earlier diploma prof. m. r. khodaskar dr. b..a.sonkamble dr.p.t.kulkarni examiner 2017-18|| node-nectar daily empowerment industry 2017-18|| node-nectar daily empowerment acknowledgement opportunity express heart-felt gratitude dr. p. t. providing infrastructure complete express deepest gratitude dr. b. a. sonkamble express deep sincere gratitude prof. manish khodaskar unflagging support continuous encouragement guidance persistent help mentor mr. toshan nimai da guidance warm faculty directly indirectly helped completion seminar rupali ransing ashwini shelar snehal waydande 2017-18|| sr. 1 2 3 4 node-nectar daily empowerment topic industry acknowledgement nomenclature 1.1 1.2 review 2.1 2.1.1 2.1.2 existing automatic question generation recommendation definition 3.1 3.2 concept 3.3 3.4 3.5 3.5.1 3.5.2 3.5.3 4.1 4.2 4.3 4.3.1 4.4.1 4.4.2 4.4.3 4.4 4.5 structural class behavioral 5 6 implimentation 5.1 5.2 evaluation stage snapshot ii iii iv 1 2 2 3 3 3 3 4 4 4 5 5 5 5 6 6 7 7 8 8 9 11 11 12 13 14 15 21 27 29 2017-18|| node-nectar daily empowerment 6.1 6.1.1 6.1.2 white box 6.1.1.1 unit black box 6.1.2.1 7 7.1 7.2 7.3 plagiarism review sheet 30 30 30 31 31 33 34 34 35 36 37 38 39 2017-18|| node-nectar daily empowerment fig 4.1.1 fig 4.2.1 fig 4.3.1 class fig 4.4.1 fig 5.2.1 fig 5.2.2 fig 5.2.3 fig 5.2.4 fig 5.2.5 fig 5.2.6 fig registration dashboard article article course plagiarism 11 12 13 17 27 27 27 27 28 28 38 2017-18| 1 node-nectar daily empowerment 4.5.1 technique 5.4.1 pert 14 16 table.6.2.2.1 32 2017-18| 2 node-nectar daily empowerment nomenclature abbreviation illustration nlp ahk xml json qg natural language processing program unified modeling language extended markup language javascript object notation question generation 2017-18| 3 node-nectar daily empowerment daily text/audio bookmark daily post suggestion based post stress daily life style suggestion improve mental physical stability mining deep study recommendation base question generation qg text natural language processing qg generate elementary sentence input syntactic parser e-learning course track based apply platform location api android location event registration android sdk integration android-service keywords base natural language processing mining question generation parsing location apis 2017-18| 4 node-nectar daily empowerment 1.introduction 2017-18| 1 node-nectar daily empowerment 1.1 android free platform built linux source solution mobile device offering complete stack including operating middleware key mobile node daily text/audio bookmark daily post stress daily lifestyle suggestion improve mental physical stability mining deep study recommendation based automatic question generation aqg text natural language processing nlp aqg generate elementary sentence input syntactic parser e-learning course track based apply platform location api android location event registration android sdkintegration paypal android service query availability device runtime require specific camera declare requires market google play store allow installation device support 1.2 wa interest undertaking challenging .this opportunity learn area computing key aspect help field customer help communicating people interest 2017-18| 2 node-nectar daily empowerment 2. review 2017-18| 3 node-nectar daily empowerment 2.1 existing 2.1.1 question generation qg creating question manual effort question generation generation question reducing effort cost generate question help create wider variety question input source nlp area researcher presented area achieve higher accuracy researcher going nlp question generation education examination conducted judge caliber conduct examination educator generate question manually time consuming process researcher decided develop automatic question generated time effort reduced develop automatic question generation researcher presented proposed generate automatic question sentence text paper review generate question automatic inputted text paper review respect phase question generation 2.1.2 recommendation recommend logical thing find people interest analyze behavior recommend item item bought earlier recommend product internet number choice overwhelming filter prioritize efficiently deliver relevant order alleviate overload created potential internet recommender solve searching volume dynamically generated provide personalized service 2017-18| 4 node-nectar daily empowerment collect relevant generate profile prediction including behavior access recommendation agent function accurately profile/model well constructed order provide reasonable recommendation onset recommends predicts kind item prefer directly based dataset collected collection phase memory based based observed 2017-18| 5 node-nectar daily empowerment 3. 3.1 definition 2017-18| 6 node-nectar daily empowerment android nectar daily empowerment node includes daily text/audio automated question generation e-learning course event registration 3.2 concept daily text/audio question based text answering question point bookmark daily post based post bookmarked suggestion comment article commenting point e- learning course progress tracked course carry credit point completion course gamification learning event registration option notification event receive find nearby course happening choice 2017-18| 7 node-nectar daily empowerment course find nearby choice course find nearby course learning 3.3 implemented devotee lord krishna daily text/audios course minimum running android version 5.0 3.4 provide daily text/audio provide course provide quiz understand daily post provide event notification upcoming event nearby area 3.5 3.5.1 daily text/image e-learning course learning event registration bookmark social poll e-learning 3.5.2 mobile device laptop 2017-18| 8 node-nectar daily empowerment 3.5.3 react native react native framework developed facebook creating native-style apps io android common language javascript sql maintaining database trello managing bitbucket version control 2017-18| 9 node-nectar daily empowerment 4. 4.1 2017-18| 10 node-nectar daily empowerment conceptual defines behavior view formal representation organized support reasoning behavior fig 4.1.1 fig 4.1.1 three administrator going upload text/audio course web server stored database administrator manage customer administrator strode database .for ionic 2 framework mysql database digital ocean virtual private server android io mobile phone customer going view daily text/audio web server 4.2 2017-18| 11 node-nectar daily empowerment fig 4.2.1 fig 4.2.1 graphical representation `` '' modeling process aspect firstly daily text/audio quiz comment share message course quiz store database 4.3 structural 4.3.1 class class class class method constraint static describing exists behavior 2017-18| 12 node-nectar daily empowerment generalization aggregation association valuable reflecting inheritance composition usage connection class class interaction class showcase conceptual class view oriented based functionality class individual class built specific singular purpose help understand interaction fig 4.3.1 class 2017-18| 13 node-nectar daily empowerment fig 4.3.1 class class 1. admin class authority upload daily text/audio course quiz class upload upload text/audio course administrator 2. customer class attend daily text/audio uploaded administrator attend quiz that.he attend course nearest 3. admin class highest authority class manage admin customer stored database 4. daily text/audio class uploading daily text audio administrator bookmark depend class 5. course class uploading course administrator 4.4 behavioural 2017-18| 14 node-nectar daily empowerment 4.4.1 common kind interaction focus message interchange number lifeline object sequential fig 4.4.1 process fig 4.4.1 entail are- 1. registration web server stored database 2. administrator view text/audio course administrator approving 3. approve admin upload web server 2017-18| 15 node-nectar daily empowerment stored database 4. customer web server stored database 5. customer view daily text/audio course attend quiz webserver stored database 6. administrator manage customer admin stored database 4.4.2 fig 4.4.2 showing behavior action action single step component manipulation occurs archetype action kind operation functionality function involved execution fig 4.4.2 4.4.3 2017-18| 16 node-nectar daily empowerment element build describe functionality built constraint interacts associated capture behavior group functionality perspective fig 4.4.3 fig 4.4.3 actor upload access functionality upload administrator web server upload quiz course administrator customer attend daily text/audio course quiz 2017-18| 17 node-nectar daily empowerment display web server administrator manage customer administrator stored database 4.5 sr. 1 2 3 4 title improving effectiveness collaborative filtering anonymous web usage technique profile aggregation clustering personalized recommender based web usage mining decision tree induction expert decision tree induction association rule mining fast clustering scalability solved overcome sparsely scalability hybrid recommender dynamic web international journal multimedia image processing rating technique prediction improve automatic question generation automatic multiple choice question generation extract sentence prepare question measure similarity question sentence sentence knowledge base table.4.5.1 2017-18| 18 node-nectar daily empowerment 2017-18| 19 node-nectar daily empowerment 5. implimentation 5.1 stage source file deploy directory web window 7 command prompt sudo npm start android studio wait building gradle android emulator android studio 2017-18| 20 node-nectar daily empowerment drop myapp.apk file source code page/ source code import react component 'react import stylesheet text view statusbar touchableopacity 'react-native import logo '../components/logo import form '../components/form import action 'react-native-router-flux export default class extends component signup actions.signup dashboard actions.dashboard render return view style= styles.container logo/ form type= '' '' view style= styles.signuptextcont 2017-18| 21 node-nectar daily empowerment text style= styles.signuptext n't ac- count /text style= styles.signupbutton signup /text /touchableopacity touchableopacity onpress= this.signup text /view /view const style stylesheet.create container backgroundcolor 455a64 flex 1 alignitems 'center justifycontent 'center' signuptextcont flexgrow 1 alignitems 'flex-end justifycontent 'center paddingvertical 16 flexdirection 'row' signuptext signupbutton color ffffff fontsize 16 fontweight '500' color 'rgba 255 255 255 0.6 fontsize 16 sign page/ import react component 'react import stylesheet text view 2017-18| 22 node-nectar daily empowerment statusbar touchableopacity 'react-native import logo '../components/logo import form '../components/signupform import action 'react-native-router-flux export default class signup extends component goback actions.pop render return account /text view style= styles.container logo/ form type= '' signup '' view style= styles.signuptextcont text style= styles.signuptext style= styles.signupbutton sign /text /touchableopacity touchableopacity onpress= this.goback text /view /view const style stylesheet.create container backgroundcolor 455a64 flex 1 alignitems 'center justifycontent 'center' signuptextcont flexgrow 1 alignitems 'flex-end justifycontent 'center paddingvertical 16 flexdirection 'row' 2017-18| 23 node-nectar daily empowerment color 'rgba 255 255 255 0.6 fontsize 16 signuptext signupbutton color ffffff fontsize 16 fontweight '500' article page/ import react component 'react import stylesheet view statusbar text listview touchablehighlight touchableopacity image flatlist activityindicator 'react-native import action 'react-native-router-flux import customurl '../constatnts export default class article extends component constructor prop super prop console.debug props.loginuser this.state loading 0 this.fetcharticles this.fetcharticles.bind this.articlesdetails= this.articlesdetails.bind this.fetcharticles articlesdetails datasource console.debug datasource.id 2017-18| 24 node-nectar daily empowerment actions.articledetails datasource.id loginuser this.props.loginuser renderview datasource return view style= borderwidth 2 padding 10 margin 10 backgroundcolor 'rgba 255 255 255 0.2 text style= fontsize 18 fontweight `` bold '' color ffffff onpress= this.articlesdetails datasource datasource.name /text text style= color ffffff datasource.description /text /view fetcharticles const url customurl.curl `` article '' fetch url method 'get header accept 'application/json 'content-type 'application/json' .then response response.json .then responsejson this.setstate responsejson loading .catch error console.error error render return view style= styles.container statusbar backgroundcolor= '' 1c313a '' barstyle= '' light-content '' this.state.loading activityindicator size= '' '' color= '' 00ff00 '' flatlist data= this.state.data keyextractor= item item.id renderitem= item this.renderview item /view 2017-18| 25 node-nectar daily empowerment const style stylesheet.create container backgroundcolor 455a64 flexgrow 1 justifycontent 'center alignitems 'center' text flexdirection 'row flexwrap 'wrap alignitems 'flex-start marginleft 12 fontweight 'bold fontsize 22 padding 12 padding 10 flexdirection 'row alignitems 'center sectionname fontsize 50 marginleft 10 5.2 snapshot 2017-18| 26 node-nectar daily empowerment fig 5.2.1 registration 5.2.2 dashboard fig article fig 5.2.3 dashboard fig 5.2.4 article article course 2017-18| 27 node-nectar daily empowerment fig 5.2.5 article fig 5.2.6 course 2017-18| 28 node-nectar daily empowerment 6. evaluation 6.1 evaluation 2017-18| 29 node-nectar daily empowerment 6.2 process detect difference behav- ior desired behavior stipulated specification advantageous firstly defect help process making reliable secondly defect corrected reliable thirdly time record defect reveals common kind defect developing appropriate preventive measure training proper reviewing 6.2.1 white box white-box allows access source code method effective localize bug 6.2.1.1 unit unit unit code program coding unit com- pleted integration program desired fit program cor- rect ensures meet stated specification acceptance ascertain developed correct implementa- tion specification hierarchical manner ensure component correct assembly/combination component correct 6.2.2 black box 2017-18| 30 node-nectar daily empowerment black box item viewed black box knowledge behavior input condition based specifica- tions input condition presented 6.2.2.1 described description expected actual remark remark sr. 1 2. description correct password incorrect password 3 4 5 6 7 8 9. fill field click submit button field filled change password form enters incorrect current password password confirm password entering character mobile number field entering admin panel upload button update category click button displayed click log item expected admin displayed error message telling incorrect username password displayed message-displaying category displayed field cleared message-displaying field message telling incorrect password actual expected expected expected expected expected incorrect mobile number file uploaded editing category canceled expected expected expected sign displayed expected 2017-18| 31 10. sign click return link node-nectar daily empowerment displayed expected table.6.2.2.1.test 2017-18| 32 node-nectar daily empowerment 7. 7.1 purpose node create harmony physical vital mental psychological spiritual aspect human share thought develop mental power reading good thought listening music devotee knowledge lord krishna bhagavad geeta course help devotee acquires knowledge daily read listen good thought happiness 2017-18| 33 node-nectar daily empowerment 7.2 thing android android discus android android phone io change google account account access app admin upload video 200 mb difficult store format uploading image form jpeg png network connection android phone app 7.3 android automatic question generation perform function enhanced functionality included e-commerce wide area thing provide functionality budget client discus enhancement enhancement access upload event location relevant event held iskon community 2017-18| 34 node-nectar daily empowerment 1 katarya rahul vermaomprakash privacy- preserving secure recommendation enhance k-nn social tagging -ieee science delhi technological delhi india vol.41 july.2017 pp.52-57 2 shirude totala nikhar dr. attar automated question generation structured data-ieee college vol.43 2015 pp.1546-1551 vahida.comp coep.ac.in 2017-18| 35 node-nectar daily empowerment 3 almasim.moei hemmati frasergordon arcuriandrea benefelds industrial evaluation unit generator finding real fault financial application-ieee science calgary canada vol.42 july.2017 pp.263- 272. almasi cs.umanitoba.ca 4 http //www.reactjs.org 2017-18| 36 node-nectar daily empowerment plagarism 2017-18| 37 node-nectar daily empowerment fig plagiarism 2017-18| 38 node-nectar daily empowerment review sheet 2017-18| 39 node-nectar daily empowerment 2017-18| 40 node-nectar daily empowerment 2017-18| 41 node-nectar daily empowerment 2017-18| 42 node-nectar daily empowerment 2017-18| 43 node-nectar daily empowerment 2017-18| 44", "keywords": ["action reactnativerouterflux", "alignitems center", "apply platform", "apply platform location", "automatic question", "automatic question generation", "bookmark daily", "bookmark daily post", "class class", "color ffffff", "daily empowerment", "daily empowerment fig", "daily post", "daily textaudio", "default class", "elearning course", "empowerment fig", "event registration", "export default", "export default class", "fig article", "fig fig", "flexdirection row", "import action", "import action reactnativerouterflux", "import react", "import react component", "import stylesheet", "justifycontent center", "language javascript", "language processing", "logo form", "natural language", "natural language processing", "nodenectar daily", "nodenectar daily empowerment", "platform location", "post stress", "post stress daily", "question generation", "react component", "react import", "react import stylesheet", "reactnative import", "return view", "stored database", "stress daily", "style stylescontainer", "web server"], "libraries": [], "languages": ["xml", "io", "sr", "javascript"], "frameworks": ["react", "ionic"], "dbs": ["mysql"]}, "./reports/BE Project Report_38.pdf": {"title": "auto scheduler and deployer for enterprise   test framework", "filename": "./reports/BE Project Report_38.pdf", "data": "auto scheduler deployer enterprise framework arun shukla kalra rahul sangvikar b120058509 b120058535 b120058607 guidance prof. v. r. jaiswal sr. 27 pune-satara road bharati vidyapeeth college dhankawdi bharati vidyapeeth campus dhankawdi maharashtra-411043 2017-2018 auto scheduler deployer enterprise framework arun shukla kalra rahul sangvikar b120058509 b120058535 b120058607 bonafide prof. v. r. jaiswal earlier diploma dr. sonkamble b.a dr. p.t.kulkarni prof. v.r.jaiswal examiner sponsorship letter acknowledgement opportunity express heart-felt gratitude dr. p. t. providing infrastructure complete express deepest gratitude dr. b. a. sonkamble prof. vishal jaiswal unflagging support continuous encouragement guidance persistent help greatest appreciation reviewer prof. k. y. digholkar prof. j. k. kamble cant tremendous support help encouragement guidance materialized willingness motivate contributed tremendously express deep sincere gratitude mentor dell emc mr. vihaj banday mrs. taiseen shaikh constructive input guidance warm faculty helped view encouraging directly indirectly helped completion seminar arun shukla kalra rahul sangvikar topic sr. 1 2 3 4 5 6 acknowledgement 1.1 1.2 review 2.1 2.2 specification existing proposed 3.1 3.2 3.3 3.4 3.5 3.5.1 3.5.2 3.5.3 3.5.4 definition concept non- 4.1 4.2 4.3 4.4 4.5 class 5.1 5.2 5.3 5.4 evaluation split decomposition 2.0 pert 6.1 6.2 6.2.1 6.2.2 experiment white box black box ii iii iv vi 1 2 2 3 4 4 5 6 6 6 6 7 7 7 8 9 10 11 12 13 14 15 16 17 17 18 18 19 20 20 20 21 6.3 6.4 6.5 evaluation 7 7.1 7.3 plagiarism review sheet 21 21 22 25 26 26 27 29 sr. 3.1 3.2 5.1 5.2 gantt pert sr. 4.1 4.2 4.3 4.4 4.5 6.1 6.2 6.3 6.4 6.5 6.6 class deployer image creation image deployment deployment error log deployed error deploying rule business automation applied efficient operation magnify efficiency amount time wasted setup synchronization deployment ignored manager manual deployment waste time ultimately money addition manually performing prone error uninterrupted uptime production continuous integration continuous delivery ci/cd cited pillar devops establish optimize ci/cd development reap benefit company build effective pipeline automate build integration process developed based docker platform containerizing technique docker create image aim automate image creation deployment developed enterprise development lifecycle configuration file generated automatically consisting input provided gui initiating process file automatically validated processed setup environment deploy remote machine network validation error-log updated error operation aborted presence error deployment status generated issued developed dell emc adopted company keywords docker devops continuous integration continuous delivery auto deployment auto scheduler deployer enterprise framework 1 1 2017-18 auto scheduler deployer enterprise framework 1. 1.1 current industry scenario demanding process hire individual effort time continuous integration increase code putting extra burden developer ci developer commit depending developer repository code started developer commit code ci support individual commits check code handled server automatically reported parallel build support split build process machine finish faster locally consume le local power continue working build 1.2 common issue faced engineer situation pas machine fail 's well ci avoid issue push code branch ci server care running development lifecycle devotes upto 30 development time product reduce time invested utilize time development product product built tester doesnt in-depth knowledge tester effort chance cover complete code framework doesnt tester care framework minimum human intervention 2 2017-18 auto scheduler deployer enterprise framework 2 3 2017-18 auto scheduler deployer enterprise framework 2. 2.1 existing product developed developer tested engineer i.e.. tester specialized setup complete environment install apis package product requires lot term time effort cost lot product suite tested environment setting environment hectic tester configuration deployed network tester complete process condition handled automatic approach deploy product 2.2 proposed aim automate existing process minimal human intervention tester initiate providing parameter framework ui provided rest care framework i.e setting environment deploy product network selection io peripheral purpose execution finally generation product require sort environment platform proposed platform independent modular additional product tested product minor change code 4 2017-18 auto scheduler deployer enterprise framework 3 5 2017-18 auto scheduler deployer enterprise framework 3. specification 3.1 definition automate existing process develop individual enterprise click investing effort time select device deploy existing pool 3.2 concept concept docker developer deploy product term docker image image deployed network purpose product initiate well scheduler developed existing scheduler jenkins robot 3.3 office dell emc reduce cost itll help utilize manpower productive automatic well 3.4 1. develop initiate component framework 2. develop deployer deploy product environment product 3. execution framework generate send 4. framework modular support existing scheduler jenkins robot 6 2017-18 auto scheduler deployer enterprise framework 3.5 3.5.1 describes 1. scheduling purpose functionality provide input time environment happen purpose automated server jenkins engineer considering network traffic bandwidth executed automatically assigned environment platform time 2. deploying order number deployed upped configuration build running environment .by automatic deployer docker image generated distributed node docker image self-contained environment configured doe manual step .this reduce time consumed setting environment docker image created deploy network choose node assigned address suite 3. generation step generate statistic order analyze performing 3.5.2 funtional specifies function non-functional 1. performance reduction manual setup environment machine help docker image performance increased time consumed suite setting 7 2017-18 auto scheduler deployer enterprise framework 2. security modular approach doe full access bed secure manipulation changing suite image deployed secure network 3. scalability scale major replace manual reduce phase click .it server fetching remote server 4. cost cost minimal source i.e docker jenkins cost handling maintaining server server 5. reusability developed form i.e deployer scheduler incorporated reuse functionality 6. platform compatibility developed linux based well window covering majorly 3.5.3 fulfilled implementing machine server memory live server 4gb ram hard drive 10gb processor atleast i3 processor 3.1 8 2017-18 auto scheduler deployer enterprise framework 3.5.4 proposed developed operating win linux 64 bit programming language source platform wide functionality python 2.7.x python handling collected python library manipulation python angular 4 docker jenkins/robot apache tomcat server 3.2 9 2017-18 auto scheduler deployer enterprise framework 4 10 2017-18 auto scheduler deployer enterprise framework 4. 4.1 architectural level view environment scheduler initiator initiator establishes connection docker deploy image intended container image executed evaluated final generated fig 4.1 11 2017-18 auto scheduler deployer enterprise framework 4.2 describes provided automated framework initiating framework scheduling operation deploying choosing preferred network generating final 4 4 fig 4.2 12 2017-18 auto scheduler deployer enterprise framework 4.3 class engineer pass parameter scheduler framework doe enter parameter default parameter forwarded scheduler deploy call executor initiate process fig 4.3 class 13 2017-18 auto scheduler deployer enterprise framework 4.4 illustrates event order execution deployment process fig 4.4 scheduler 14 2017-18 auto scheduler deployer enterprise framework 4.5 drawn display state image undergo deployment fig 4.5 deployer 15 2017-18 auto scheduler deployer enterprise framework 5 16 2017-18 auto scheduler deployer enterprise framework 5. 5.1 split split 1. scheduler framework initiate scheduler adaptive existing scheduler jenkins robot itll built 2. deployer deployer interact scheduler initiator environment deploy tested docker backbone 3. generator generator generate execution share framework ui 5.2 decomposition function decomposed 4 segment 1. scheduling scheduled initiated sends 2. deploying product tested deployed form docker image developer image deploying function deploy environment 3. execution image deployed deployer step framework execute cover complete code 4. execution final function framework in-depth documented standard manner released 17 2017-18 auto scheduler deployer enterprise framework 5.3 2.0 image denotes i.e proposed gantt fig 5.1 gantt 5.4 pert denotes pert fig 5.2 pert 18 2017-18 auto scheduler deployer enterprise framework 6 19 2017-18 auto scheduler deployer enterprise framework 6. evaluation 6.1 experments performed number experiment development phase hosted local server company contributor contributor web deployment process entered initiator entered configuration file validated itll deploy 6.2 investigation conducted provide product delivered .we performed strategy proposed key check point development process performed number prototype changing weight seat bus check accuracy percentage 6.2.1 white box white box method phase tested proposed coding infrastructure white box focus input output tested input initiator checked going correctly local server tested input source destination checked deployer retrieving correct 6.2.2.1 unit basically unit single snippet code functionality unit process development small individually tested unit individually tested integrating help unit amount error removed good built 20 2017-18 auto scheduler deployer enterprise framework 6.2.2.2 integration integration level individual unit combined tested group purpose phase expose fault integration integrated unit proposed integrated unit scheduler deployer generator performed integration checked integrated unit working properly 6.2.2 black box black box method examines functionality peering working .for proposed performed black box check functionality individual component black box focus input output bothering knowledge performed 6.3 evaluation wa completely implement met completely correctly met al correctly 6.4 wa completely implement met completely correctly met al correctly 21 2017-18 auto scheduler deployer enterprise framework 6.5 fig 6.1 image creation fig 6.2 image deployment 22 2017-18 auto scheduler deployer enterprise framework fig 6.3 deployment fig 6.4 error log 23 2017-18 auto scheduler deployer enterprise framework fig 6.5 deployed fig 6.6 error deploying 24 2017-18 auto scheduler deployer enterprise framework 7 25 2017-18 auto scheduler deployer enterprise framework 7.1 7. concluded dell emc enterprise help utilization time itll save effort cost perform increase efficiency modular minor/no change 7.2 area improvement improved firstly transferring file complex secure deploy cloud 26 2017-18 auto scheduler deployer enterprise framework plagiarism 27 2017-18 auto scheduler deployer enterprise framework review sheet 28 2017-18 auto scheduler deployer enterprise framework 29 2017-18 auto scheduler deployer enterprise framework 30 2017-18 auto scheduler deployer enterprise framework 31 2017-18 auto scheduler deployer enterprise framework 32 2017-18", "keywords": ["auto scheduler", "auto scheduler deployer", "black box", "dell emc", "deployer enterprise", "deployer enterprise framework", "docker image", "enterprise framework", "existing scheduler", "image creation", "integrated unit", "kalra rahul", "kalra rahul sangvikar", "rahul sangvikar", "scheduler deployer", "scheduler deployer enterprise", "white box"], "libraries": [], "languages": ["small", "io", "python"], "frameworks": ["angular"], "dbs": []}, "./reports/BE Project Report_5.pdf": {"title": "an hierarchical reinforcement learning  approach for developing a generalized   game-playing agent", "filename": "./reports/BE Project Report_5.pdf", "data": "hierarchical reinforcement learning approach developing generalized game-playing agent shivam natthani abhijeet ohol chinmay shirore suhavan gupta b120058575 b120058577 b120058619 b120058625 guidance dr. a.m. bagade sr. 27 pune-satara road bharti vidyapeeth college maharashtra 411043 2017-2018 hierarchical reinforcement learning approach developing generalized game-playing agent shivam natthani abhijeet ohol chinmay shirore suhavan gupta b120058575 b120058577 b120058619 b120058625 bonafide dr. a. m. bagade earlier diploma dr. a. m. bagade dr. b. a. sonkamble examiner dr. p. t. prof. d. d. londhe coordinator acknowledgement success lot guidance assistance people extremely privileged completion owe deep gratitude dr. a. m. bagade keen interest guided providing developing good dr. b. a. sonkamble opportunity providing facility indispensable completion preliminary respect dr. p. t. immense support extremely thankful providing nice support guidance forget remember k. y. digholkar prof. s. s. pande encouragement timely support guidance till completion thankful fortunate constant encouragement support guidance teaching staff helped completing extend sincere esteem staff laboratory timely support nomenclature 1 1.1 1.2 2 review 2.1 existing 2.2 proposed 3 specification 3.1 definition 3.2 concept 3.3 3.4 3.5 3.5.1 datasets 3.5.2 ucd 3.5.3 3.5.4 3.5.5 3.6 3.6.1 3.6.2 decomposition 3.6.3 role responsibility ii iii iv 1 1 2 3 3 4 6 6 6 6 6 7 7 7 7 7 7 8 8 8 9 3.6.4 3.0 3.6.5 pert 3.6.6 pert 4 4.1 4.2 4.2.1 class 4.2.2 4.2.3 4.3 4.3.1 reinforcement learning 4.3.2 markov property markov decision process 4.3.3 deep reinforcement learning 4.3.4 hierarchical reinforcement learning 4.3.5 temporal abstraction 4.3.6 option 4.3.7 actor-critic 4.3.8 option-critic 5 5.1 stage 5.1.1 collection 5.1.2 preprocessing 5.1.3 processing 6 evaluation 6.1 experiment 9 10 10 12 12 13 13 14 15 16 16 17 19 19 20 20 21 23 26 26 26 26 27 28 28 6.1.1 discussion experiment 6.1.2 experiment 6.2 6.2.1 white box 6.2.1.1 unit 6.2.1.2 integration 6.2.2 black box 6.2.2.1 phoenix 6.2.2.2 seaquest 6.2.2.3 summary black box 7 7.1 7.2 28 28 31 31 31 32 32 33 33 34 35 35 35 36 3.1 3.2 3.3 4.1 4.2 4.3 4.4 4.5 4.6 4.7 5.1 6.1 6.2 6.3 6.4 6.5 6.6 decomposition pert proposed class agentenvironment interaction rl actor-critic action-critic intra-option q-learning deep neural network seaquest initial state game agent shooting enemy 8 9 11 12 13 14 15 16 22 25 27 28 29 output terminal display current 29 state option agent chosen phoenix initial state game second level game phoenix option-critic dqn phoenix 30 30 31 pert phoenix seaquest 10 33 33 3.1 3.2 3.3 ii nomenclature acronym full form rl ai hrl lm adp td hac lac ptc mdp smdp cmtc dmtc reinforcement learning artificial intelligence hierarchical reinforcement learning square adaptive dynamic programming temporal difference higher abstraction control lower abstraction control primitive controller markov decision process semi-markov decision process continuous time markov chain discrete time markov chain iii real generally deal complex varying environment state explore completely building robust space tree enormous impractical reinforcement learning environment arduous time consuming time traditional rl fails learn optimal policy lack sufficient exploration environment tackle framework option sutton precup singh 1999 precup 2000 hierarchical reinforcement learning framework single-agent multiple option focusing aspect learn control policy directly deep learning high-dimensional sensory input reinforcement learning apply method multiple atari 2600 game arcade learning environment adjustment learning three-level hierarchical control framework implementing agent condition effectively action-critic learns policy lower-level option learn primitive atomic action satisfy higher level keywords reinforcement learning hierarchical reinforcement learning autonomous agent iv 1 1.1 artificial intelligence ai described study intelligent agent applied industry domain range science development heavy-duty critical area transportation medicine ai approach researcher developer allows ai adapted moulded specific scenario example ai approach include capable handling level operation optimisation analysing understanding unorganised human generated news source social networking approach follow optimising core behaviour agent-based achieve form intelligent decision making decision harder environment complex varying time training traditional rl lead suboptimal policy considered intractable insufficient exploration state space primitive step le discovery novel method solve subtasks generated completely uninterpretable human built human intervention approach implement deep hrl break smaller subtasks making tractable multiple agent build smaller subtasks primitive control layer lower abstraction control layer trained subtasks achieve larger subtasks final higher abstraction control layer final major train agent understand dynamic game employing multiple agent learn build subtasks main develop agent complex environment breaking subtasks individually solve subtasks aim extend method practical simulating dynamic real training agent handle complexity environment efficiently 1.2 motive reinforcement learning based framework complex find optimal policy game help understand complex broken smaller manageable chunk aim understand advantage approach real scenario 2 review 2.1 existing 9 reinforcement learning ai formulation naturally investigated ale framework paper presented benchmark sarsa traditional technique model-free reinforcement learning reinforcement learning agent doe access game dynamic time step agent selects action receives reward observation agent aim maximize accumulated reward experiment paper augmented sarsa epsilon-greedy exploration constructed game training training game parameter tuning well refinement game final evaluation method parameter search involved finding suitable parameter sarsa i.e learning rate exploration rate discount factor decay rate linear replacing trace approximation function hyperneat evolutionary 10 applied atari platform wa evolve separately distinct game neural network representing strategy game article address challenge learning play video game domain specific knowledge introduces neuro-evolution approach general atari 2600 game playing 3 presented deep learning learn control policy directly high-dimensional sensory input reinforcement learning wa convolutional neural network trained variant q-learning input raw pixel output function estimating reward prior approach wa neural fitted q-learning nfq nfq optimises loss function rprop update parameter q-network batch update computational cost iteration proportional size paper consider stochastic gradient update constant cost iteration scale data-sets applied reinforcement learning end-to-end directly visual input learned discriminating action-values q-learning directly relevant combined experience replay simple neural network starting low-dimensional state raw visual input 2.2 proposed lot existing reinforcement learning focused markov decision process optimal policy optimality doe account agent assumed access lot computation time option help agent overcome allowing policy computed faster temporal abstraction rich history ai presented mechanism variety affect ai setting including generate shorter speed planning improve generalization yield better exploration increase robustness mis-specification observability reinforcement learning option sutton al 1999b provide framework represent learn temporally extended action paper 11 derives policy gradient theorem option proposes option-critic capable learning policy termination condition option tandem policy option provide additional reward subgoals option-critic applied arcade learning environment ale deep neural network approximate critic represent intra-option policy termination function configuration 3 convolutional layer network 32 convolutional filter size 88 stride 4 layer 64 filter size 44 stride 2 second 64 33 filter stride 1 third layer output third layer fed dense shared layer 512 neuron learning rate intra-option policy termination gradient wa fixed 0.00025 rmsprop critic intra-option policy represented linear-softmax fourth dense layer output distribution action conditioned current observation termination function defined sigmoid function output neuron termination critic network wa trained intra-option q-learning experience replay option policy termination updated on-line epsilon-greedy policy option epsilon 0.05 phase 3 specification 3.1 definition developing generalized ai agent complex environment hierarchical reinforcement learning play multiple atari 2600 game extend real scenario bicycle balancing 3.2 concept major concept involved 1. reinforcement learning enables agent learn environment human intervention knowledge 2. hierarchical rl allows agent breakdown complicated subtasks easier quicker convergence solution 3. deep rl allows directly pixel input pas underlying neural network preprocessing 3.3 wide range hierarchical reinforcement learning deep learning method allows complex traditional rl handle 3.4 outline major accomplishment needed attained appropriately ass proposed include understanding concept milestone major development 1. achieving understanding hierarchical reinforcement learning hrl approach ale game environment 2 3. achieve strong performance complex unexplored environment 4. evaluation deeper concept discovered 3.5 3.5.1 datasets trained reinforcement learning environment seaquest phoenix arcade learning environment 3.5.2 ucd 1. cnn extract amount image 2. training time le compared 3. perform number game 4. score better 3.5.3 1. robustness 2. accuracy 3. scalability 4. convergence 3.5.4 1. gpu nvidia geforce gtx 750ti 2. processor intel core i7 5th gen 3 8gb ram 3.5.5 1. python 2. tensorflow/keras/theano 3. openai gym 4. arcade learning environment 5. cuda toolkit 6. linux ubuntu 16.04 3.6 3.6.1 necessity completing utilized helped order complete tensorflow/keras library arcade learning environment pybrain cuda toolkit supporting library openai gym rlpy framework cudnn major learning apart firstly nvidia geforce 750ti graphic processor compute capability 3.0 wa training deep learning secondly cpu ram 8gb core i7 storage 50gb wa provided constant improvement 3.6.2 decomposition decomposition process complex process breaking smaller simpler learning rl requires process interacting environment training agent optimizing training time agent fig 3.1. decomposition mixed control 3.6.3 role responsibility attempt combine benefit centralized mixed-control decentralized control minimizing avoiding disadvantage comprised 4 2 regular follow helped improving initial stage helped finalize analyzing alternative wa divided module-wise ultimately reviewed time suggested change help improving 3.6.4 3.0 gantt 3.2 fig 3.6.5 pert 3.1 program evaluation review technique pert divided elicitation level proof concept review 2 documentation predecessor duration day elicitation level prototype preliminary review preliminary complete complete final review final 3.1 pert 3.6.7 pert 7 21 4 12 15 9 28 70 30 14 fig 3.3 program evaluation review technique pert divided three phase planning documentation pert organize coordinate represented form network illustrates combination time completion fig 3.3 pert 4 4.1 4.1.1 proposed fig 4.1 proposed framework decomposes main subproblems delineate tractable introduces hierarchical layer allows higher level decision bothering lower primitive fig 4.1 proposed 4.2 4.2.1 class fig 4.3 illustrates class class smdp independently exist class agent turn dependant environment class fig 4.2 class 4.2.2 fig 4.4 depicts object involved scenario message exchanged object needed complex environment game battle city fig 4.3 4.2.3 fig 4.5 illustrates dynamic aspect swimlanes add dimension order precisely illustrate individual role abstraction layer policy optimization process fig 4.4 4.3 4.3.1 reinforcement learning reinforcement learning computational approach learning interaction environment reinforcement learning focused goal-directed learning interaction approach machine learning reinforcement learning dohow map situation actionsso maximize involve learning numerical reward signal 5 learner told action form machine learning discover action yield reward interesting challenging action affect reward situation subsequent reward 5 challenge reinforcement learning kind learning trade-off exploration exploitation lot reward reinforcement learning agent prefer action effective producing reward 6 discover action action selected agent exploit order reward explore order better action selection interaction agent environment agent specific action time state st environment reward rt state st+1 fig 4.5 agentenvironment interaction reinforcement learning 5 agent environment identify main element reinforcement learning policy reward signal function optionally environment policy defines learning agent behaving time roughly speaking policy mapping perceived state environment action state reward signal defines reinforcement learning time step environment sends reinforcement learning agent single number reward agent sole maximize total reward receives long reward signal defines good bad event agent 5 reward signal indicates good sense function specifies good long roughly speaking state total amount reward agent expect accumulate starting state reward determine intrinsic desirability environmental state indicate long-term desirability state account state follow reward state fourth final element reinforcement learning environment mimic behavior environment generally allows inference environment behave method learning planning called model-based reinforcement method opposed simpler model-free method explicitly trial-and-error learner 6 4.3.2 markov property markov decision process stochastic process markov property conditional distribution state process conditional state depends state event preceded consider general environment respond time t+1 action time 2 general causal response depend happened earlier dynamic defined complete joint distribution t1 1 t+1 0 t+1 s0 0 1 ... ... 4.1 t1 s0 st1 state signal markov property hand event ... ... 0 0 1 environment response t+1 depends state action representation environment dynamic defined t+1 0 t+1 4.2 |s 0 markov decision process consists state action transition function sa 0 1 .. 4.3 reward function 4.4 function policy defined expected return 0 4.5 t+1 0 action-value function t+1 4.6 0 1 discount factor policy greedy respect action-value function 0 iff argmax discrete mdp optimal policy greedy respect action-value function 11 0 0 0 0 markov property reinforcement learning decision assumed function current state order effective informative state representation informative reinforcement learning satisfies markov property called markov decision process mdp state action space finite called finite markov decision process finite mdp 5 4.3.3 deep reinforcement learning breakthrough vision speech recognition relied efficiently training deep neural network training approach trained directly raw input lightweight update based stochastic gradient descent feeding sufficient deep neural network learn better representation handcrafted success motivate approach reinforcement learning connect reinforcement learning deep neural network operates directly rgb image efficiently process training stochastic gradient update tesauros td-gammon starting point approach update parameter network function directly on-policy sample experience drawn interaction environment self-play backgammon approach wa outperform best human backgammon player 20 year ago natural wonder decade improvement coupled modern deep neural network scalable rl produce progress 4.3.4 hierarchical reinforcement learning reinforcement learning suffers curse dimensionality hierarchical reinforcement learning ease state explosion markov decision discover hierarchical 2 aim hierarchical reinforcement learning hrl discover subsequently exploit hierarchical control natural approach low-level controller llc desired fine time scale predominately primitive larger timescale high-level controller hlc suitable guiding movement achieve longer-term anticipating best strategy described 1 ideal hierarchical reinforcement learning method provide benefit hierarchy faster learning subtask sharing reuse maintaining benefit reinforcement learning optimality online learning environment autonomy reinforcement learning hierarchical method hierarchical network state abstraction method provide exponential reduction computational cost finding good 13 4.3.5 temporal abstraction temporal abstraction allows representing knowledge course action time scale hrl temporal abstraction time well number action needed child complete concern parent parent outcome child abstracting time action performed lower level hierarchy 11 temporal abstraction represented regular mdp extension mdps needed extension called semi-mdp 4.3.6 option temporally extended action represented behaving policy termination condition action represented called option option easily incorporated mdps allowing agent existing controller heuristic picking action learned course action behaving option predicted multi-time learned interacting environment option framework formalizes temporally extended action initiation terminal function triple 0 1 i.e option described markovian option intra-option policy note 11 14 mdp endowed option semi-markov decision process optimal function option option-value function option function written |s ... 4.7 state-option pair executing action context executing 1 4.8 entering state 4.9 11 existence underlying mdp offer possibility learning option parallel intra-option learning 4.3.7 actor-critic actor-critic learn policy function combining benefit policy iteration iteration actor component learns policy critic component learns policy currently actor order criticize actor action choice critic td learn state-value function actor current policy function allows critic critique actor action choice sending td error actor positive action wa good led state better-than-expected negative action wa bad led state worse-than-expected based critique actor continually update policy fig 4.6 actor-critic 5 fig 4.6 actorcritic artificial neural network actor adjusts policy based td error receives critic critic adjusts state-value parameter critic produce td error reward signal current change state actor doe direct access reward signal critic doe direct access action 4.3.8 option-critic option-critic framework proposed 11 learning option stochastic gradient descent based theorem theorem 1 intra-option policy gradient theorem markov option stochastic intra-option policy differentiable parameter gradient expected discounted return respect initial condition s0 0 starting .. 4.10 discounted weighting state-option pair trajectory a|s 0 0 0 0 .. 4.11 0 0 0 0 0 0 t=0 theorem 2 termination gradient theorem markov option stochastic termination function differentiable parameter gradient expected discounted return respect initial condition 1 0 1 0 4.12 discounted weighting state-option pair 1 0 1 0 t+1 1 0 .. 4.13 1 0 t=0 option-critic analogous actor-critic intra-option policy termination function policy option belong actor critic consists described 11 prototypical option-critic intra-option q-learning learning rate critic intra-option policy fig 4.7. termination function fig 4.7 option-critic intra option q-learning 11 5. 5.1 stage cover stage include creating agent agent interacting environment collecting preprocessing training reinforcement learning option critic best accuracy compared elaborate issue technique 5.1.1 collection implemented stage reinforcement learning interacting environment interacting environment state reward state reward form training trained apply rl game state represented frame pixel 5.1.2 preprocessing game frame state frame 210*160 pixel convolutional neural network cnn preprocess pixel image remove unwanted pixel frame state represent frame simpler trained working directly raw atari frame 210160 pixel image 128 color palette computationally demanding apply basic preprocessing step aimed reducing input dimensionality raw frame preprocessed converting rgb representation gray-scale down-sampling 11084 image configuration 3 convolutional layer network 32 convolutional filter size 88 stride 4 layer 64 filter size 44 stride 2 second 64 33 filter stride 1 third layer 5.1.3 processing state environment preprocessing input neural network optimisation technique speed training output third layer fed dense shared layer 512 neuron learning rate intra-option policy termination gradient wa fixed 0.00025 rmsprop critic intra-option policy represented linear-softmax fourth dense layer output distribution action conditioned current observation termination function defined sigmoid function output neuron termination critic network wa trained intra-option q-learning experience replay option policy termination updated on-line epsilon-greedy policy option epsilon 0.05 phase fig 5.1 deep neural network 6. evaluation 6.1 experiment 6.1.1 discussion experiment applied multiple atari 2600 game seaquest phoenix generalised multiple complicated environment game complex environment understand dynamic game efficient testbed understand responds situation dynamically agent wa trained gpu 6.1.2 experiment fig 6.1 seaquest initial state game fig 6.2 agent shooting enemy fig 6.3 output terminal display current state option agent chosen fig 6.4 phoenix initial state game fig 6.5 second level game phoenix fig 6.6 option-critic dqn phoenix 6.2 process nding error program function called key checkpoint process determine met 6.2.1 white box white box method item tested tester 6.2.1.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine fit unit entire function procedure unit wa performed 1. environment created 2. performance rl agent environment 6.2.1.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision environment integrating rl agent loophole environment code removed 6.2.2 black box black box behavioral method structure/design/implementation item tested tester non-functional 6.2.2.1 phoenix expected actual move left move status success enemy bullet approaching top shield enemy bullet approaching top shield active enemy bullet approaching left enemy approaching enemy bullet approaching move left stay stay success move stay move shoot move left stay move left stay stay success move doe n't shoot failure move left success 6.1 phoenix 6.2.2.1 seaquest expected actual status shoot enemy submarine move shoot enemy submarine move shoot enemy success move success move left shoot enemy move left shoot enemy success 6.2 seaquest enemy submarine submarine enemy submarine submarine enemy submarine coming submarine facing left 6.2.2.3 summary black box black box wa performed 5 phoenix 3 seaquest game 5 phoenix 4 executed 1 failure seaquest 3 executed wa expected 7 7.1 hierarchical complex environment utilised decompose substructure solution efficient hierarchical deep reinforcement learning generalised complex environment actor-critic method handling delayed sparse reward wa implemented multiple game atari 2600 suite game prove good ground quantifiable reward increasing level complexity option solve subproblems choose optimal option 7.2 extended real bicycle domain mujoco environment environment provide complicated prove better ground compared atari 2600 game variation option framework actor critic prove efficient kind environment 1 xue bin peng glen berseth kangkang yin michiel van de panne deeploco dynamic locomotion skill hierarchical deep reinforcement learning acm trans graph 36 4 article 41 2017 16 doi http //dx.doi.org/10.1145/3072959.3073602 2 barto andrew g. mahadevan sridhar advance hierarchical reinforcement learning 2003 doi http //doi.org/10.1023/a 1025696116075 3 volodymyr mnih koray kavukcuoglu david silver alex graf ioannis antonoglou daan wierstra martin riedmiller playing atari deep reinforcement learning arxiv preprint arxiv 1312.5602 2013 4 clare chen vincent ying dillon laird `` deep q-learning recurrent neural network '' 5 r. sutton a. barto reinforcement learning mass cambridge 1988 6 s. russell p. norvig artificial intelligence modern approach prentice hall jersey 2003 7 h. seijen m. fatemi j. romoff r. laroche separation concern reinforcement learning arxiv 1612.5159v2 28 2017 8 r. makar s. mahadevan m. ghavamzadeh hierarchical multi-agent reinforcement learning acm 1-58113-x/01/0005 9 marc bellemare yavar naddaf joel veness michael bowling arcade learning environment evaluation platform general agent journal artificial intelligence 47 253279 2013. 10 matthew hausknecht risto miikkulainen neuro-evolution approach general atari game playing 2013 volume 6 issue 4 355-356 2014 doi 10.1109/tciaig.2013.2294713 option-critic stone 11 pierre-luc bacon peter jean harb doina precup corr volume abs/1609.05140 2016 doi http //arxiv.org/abs/1609.05140 12 thomas g. dietterich hierarchical reinforcement learning maxq decomposition corr volume cs.lg/9905014 1999 doi http //arxiv.org/abs/cs.lg/9905014 13 sutton r. precup singh s. p. 1999 mdps semi-mdps framework temporal abstraction reinforcement learning artificial intelligence 112 1- 2 18121", "keywords": ["abstraction control", "actionvalue function", "agent environment", "arcade learning", "arcade learning environment", "artificial intelligence", "atari game", "black box", "complex environment", "decision process", "deep neural", "deep neural network", "deep reinforcement", "deep reinforcement learning", "enemy bullet", "extended action", "game phoenix", "hierarchical reinforcement", "hierarchical reinforcement learning", "initial state", "initial state game", "interacting environment", "intraoption policy", "intraoption qlearning", "learning environment", "learning option", "learning reinforcement", "markov decision", "markov decision process", "markov property", "neural network", "optimal policy", "policy termination", "reinforcement learning", "reinforcement learning environment", "reward signal", "shoot enemy", "state action", "state game", "state reward", "stochastic gradient", "stride layer", "summary black", "summary black box", "support guidance", "sutton precup", "td error", "temporal abstraction", "temporally extended", "temporally extended action"], "libraries": [], "languages": ["basic", "python"], "frameworks": [], "dbs": []}, "./reports/BE Project Report_6.pdf": {"title": "cross cloud disaster recovery", "filename": "./reports/BE Project Report_6.pdf", "data": "cross cloud disaster recovery chaitanya sanjay bhangale shreyash rajendra devan piyush balshiram doke rom sanjay ghewari b120058515 b120058523 b120058527 b120058530 guidance prof. r. r. chhajed s. 27 satara road 411043 2017-2018 cross cloud disaster recovery cross cloud disaster recovery chaitanya sanjay bhangale shreyash rajendra devan piyush balshiram doke rom sanjay ghewari b120058515 b120058523 b120058527 b120058530 bonafide prof. r. r. chhajed earlier diploma prof. r. r. chhajed dr. b. a. sonkamble examiner dr. p. t. prof. d. d. londhe coordinator 2017-18 1 sr. cross cloud disaster recovery topic sponsorship industry acknowledgement abbreviation nomenclature title 1 2 3 4 1.1 1.2 1.3 2.1 3.1 4.1 4.2 4.3 4.4 4.5 background relevance undertaken background review specification description description class 2017-18 order ii iii iv vi vii 9 10 10 10 12 13 13 15 15 16 16 16 17 18 19 2 cross cloud disaster recovery 5. preparation aws instance backup preparation eb volume preparation azure virtual machine version control azure evaluation experimental setup strategy a. base paper b. plagiarism c. review sheet 6 7 5.1 5.2 5.3 5.4 6.1 6.2 6.3 6.4 6.5 7.1 7.2 20 20 22 23 26 27 27 27 27 28 28 29 29 30 32 2017-18 3 cross cloud disaster recovery sponsorship industry 2017-18 4 cross cloud disaster recovery acknowledgement immense pleasure satisfaction carrying titled cross cloud disaster recovery opportunity express heartfelt gratitude dr. p. t. sir providing facility infrastructure complete express deepest gratitude appreciation dr. b. a. sonkamble constant sincerely thankful ms. r. r. chhajed unflagging support continuous encouragement phase guidance persistent help grateful reviewer k. a. sultanpure s. r. warhade update suggestion co-ordinator d. d. londhe well-managed timely concern sponsorship warm faculty helped view encouraging express deepest gratitude dell emc recognizing potential granting sponsorship thankful mentor dell emc ganesh ghodake saurav haloi guidance helping learning process directly indirectly seminar worked completion 2017-18 chaitanya bhangale shreyash devan piyush doke rom ghewari 5 cross cloud disaster recovery fig 4.1 4.3 4.4 4.5 5.1.1 cross cloud ... diagram.. class incremental snapshot ... 16 17 18 19 21 2017-18 6 2.1 cross cloud disaster recovery paper cloud backup 13 2017-18 7 cross cloud disaster recovery abbreviation abbreviation illustration aws rto vm eb ec2 s3 io amazon web service disaster recovery recovery time virtual machine snapshot elastic block storage elastic compute cloud simple storage service input/output 2017-18 8 cross cloud disaster recovery cloud computing latest growing rapidly collaboration sale support business remote access anytime cloud platform care protection cloud backup security site failure service unavailability lead secondary site reason cross cloud backup appliance backup aws cloud azure cloud purpose snapshot aws cloud create volume snapshot snapshot mounted disk mounting snapshot transferred azure written volume created virtual machine created volume access incremental consistent 2017-18 9 cross cloud disaster recovery 1. 1.1 background reliance service cloud justified benefit lower operating capital cost extensive support mobile remote working infrastructure flexibility disaster recovery area cloud computing gathered attention industry robust nature remarkable on-demand service reliability scalability availability security elasticity service expanding area ranging file storage migration backup disaster recovery individual well corporate level 1.2 relevance cost center concept building private center specialized organisation thing good reason greenberg al 1 includes purchasing server infrastructure maintaining facility employing human impractical fact running cost standby cost maintaining high-end infrastructure rapid growing service requires upgrade modification ultimately center built cutting edge today worth considerably le financial standpoint tomorrow service provider chooses build disaster recovery center entail investment idling infrequent disaster recovery 2017-18 10 cross cloud disaster recovery pay-as-you-go provided cloud service provider utilise cost efficient platform number service on-demand nature cloud computing vastly reduces cost recovery disaster peak demand higher average demand cost building maintaining private disaster recovery center utilising existing cloud perform recovery proved wood al 2 increasing cloud computing area associated 1. disaster unavailability cloud service 2. vendor lock migration cloud vendor unavailability service provided primary cloud secondary cloud lead transfer business 3. attack instance ransomware 4. denial service attack 5. loss cloud service provider backup solution situation crisis solution include approach backup region backup region service customer maintain multiple replica maintaining backup provide security service running cloud stopped occurence mentioned event 2017-18 11 cross cloud disaster recovery 1.3 undertaken propose practical dual cloud disaster recovery service cross-cloud disaster recovery utilises provided prominent cloud service aws amazon web service microsoft azure consistent incremental backup service aws azure 2017-18 12 cross cloud disaster recovery background methods/algorithms advantage 1 xu liu xiaoqiang di jinqing li hui qi huamin yang ligang cong conference 2016 international conference telecommunication cits 2 d. kanapram g. lamanna m. repetto 2017 second international conference fmec 3 weiwei wu member jianping wang member kejie wen qi feng lu member member junzhou luo member transaction service computing 4 yu gu dongsheng wang chuanyi liu tsinghua science volume 19 issue 1 feb. 2014 stackelberg game framework compute optimal backup strategy equilibrium price strategy source backup node cloud backup cloud disaster recovery framework exploring trade-off performance energy consumption cloud service cost backup cloud vendor chosen help energy efficient scheduling approximation profit maximization cloud service help maximize profite backup recovery scheduling strategy cloud disaster recovery service provider explored recovery pozdniakova dalius 5 olesia mazeika 2017 conference level virtualization solaris zone sand boxing cloud service security perspective 2017-18 13 cross cloud disaster recovery electrical electronic science estream 6 quratulain alam saif u. r. adnan malik member akhunzada kim kwang raymond choo senior transaction forensics security volume 12 issue 6 2017 crms activation cloud cross-tenant mediation service ctac delegation 7 rafael moreno vozmediano ruben s. montero eduardo huedo society 8 s. suguna dr. a. suhasini 2014 international conference embedded icices 2014 hfc hybrid fog cloud interconnection framework security distribution rake parity service cloud technique efficient routing cloud service multi-domain access control sharing mechanism tenant elastic secure support connectivity virtual network recovery time recovery point cloud service solution interconnect geographically distributed cloud fog infrastructure review backup technique cloud computing platform 2.1- paper cloud backup 2017-18 14 cross cloud disaster recovery specification 3.1 1. aws account 2. azure account 3. good internet connection 2017-18 15 cross cloud disaster recovery 4.1 4.2 description fig.1 cross cloud initially ec2 appliance e1 created configured amazon aws account ec2 instance account listed select ec2 instance back-up snapshot volume attached selected ec2 instance eb volume retrieved eb volume attached mounted ec2 appliance e1 mounting amazon s3 2017-18 16 cross cloud disaster recovery storage transferred mount point deduplication dd transfer vm azure created ec2 appliance transferred newly created vm rsync completion instance migrated aws azure 4.3 fig 2 2017-18 17 cross cloud disaster recovery 4.4 class fig 3 class 2017-18 18 cross cloud disaster recovery 4.5 fig 4. 2017-18 19 cross cloud disaster recovery 5. divided 1 describes snapshot ec2 instance vm business enterprise running converting volume 2 explains attaching mounting volume appliance copying amazon s3 storage eb volume 3 creation spinning virtual machine microsoft azure transfer mbr rsync discussed 4 describes snapshot disk restored vm microsoft azure order restore previous version 5.1 preparation aws instance backup business enterprise running business service cloud virtual machine amazon aws virtual machine running aws cloud environment called ec2 instance instance eb volume/s attached backup virtual machine backed mbr considered well consistent incremental snapshot eb volume backup procedure snapshot copy volume specific moment time called point-in-time snapshot snapshot pointer stored amazon s3 storage full directory volume snapshot incremental fashion handled internally aws 5.1.1. incremental snapshot snapshot volume initially eb volume stored amazon s3 storage consistent incremental snapshot 2017-18 20 cross cloud disaster recovery stored form block size block decided aws volume updated snapshot aws store updated block pointer point block havent changed snapshot visualized better help example suppose snapshot eb volume 5th aws store eb volume s3 storage block assume initial size eb volume 4 gb aws store 4 gb 4 block size 1 gb block 1 block 2 block 3 block 4. fig 5 incremental snapshot 6th suppose 1 gb eb volume i.e total size eb volume 5 gb 1gb block 1 block 2 modified aws add block block 5 additional 1 gb block 1 block 2 modified snapshot 6th point newly block 1 block 2 block 5 2017-18 21 cross cloud disaster recovery block 3 4 previous snapshot incremental snapshot adding 5 gb s3 storage 3gb additional 7th 1 gb eb volume modification block 2 3. mentioned aws add block block 6 newly 1 gb add modified block 2 3. snapshot point newly block 2 3 6 block 1 4 5 previous snapshot fashion backed incrementally python library boto3 provided aws api call create_volumes create_snapshots create_instance snapshot api call create_snapshot volume_id volume 5.1.2 creation volume snapshot eb volume created snapshot earlier step availability zone backup appliance help api call create_volume snapshot_id snapshot 5.1.3 status check volume snapshot creation snapshot volume volume snapshot time additional function checking snapshot entered completed status volume 5.2 preparation eb volume volume created existing eb snapshot load lazily background aws volume created snapshot wait transfer amazon s3 eb volume attached instance start accessing volume instance access n't loaded volume downloads requested amazon s3 continues loading rest background storage block volume restored snapshot initialized pulled amazon s3 written volume access block 2017-18 22 cross cloud disaster recovery transferred aws azure vm initialization block initialization entire volume forced volume attached mounted mount point initialized deduplication dd 5.2.1 volume attachment appliance attaching volume appliance api call attach_volume device instanceid volumeid parameter device disk partition newly created eb volume instanceid instance volume attached volumeid volume attached 5.2.2 mount volume appliance firstly mount point created /mnt folder appliance src volume attached mount point i.e /mnt/src call parameter mount point device volume attached passed call 5.2.3 deduplication mentioned earlier fetched amazon s3 storage mounted volume accessible exported aws azure call dedup dd device block size parameter copying s3 eb 5.3 preparation azure virtual machine backup ec2 instance virtual machine azure vm requires vm created azure vm created virtualnet subnet vm associated network nic assigns unique ip address vm nic allows interconnection vm public/private network azure account backup configured virtualnet subnet everytime instance backed nic 2017-18 23 cross cloud disaster recovery created virtualnet subnet newly created nic vm spawned backup process library python azure api call 5.3.1 network creation create_nic vnet subnet ip address ipconfig function create network parameter 5.3.2 virtual machine creation create_vm username password nicid function create virtual machine microsoft azure parameter username password authentication purpose nic provided 5.3.4 rsync consider file update a. obvious method copy b. imagine file machine connected slow link example dial ip link copying gain factor 2 4. assume derived original file order speed thing advantage similarity common method difference link send difference reconstruct file normal method creating difference file rely read file require file link machine copied file difference rsync address rsync efficiently computes source file match existing destination file link needed destination file source file 2017-18 24 cross cloud disaster recovery matched verbatim receiver construct copy source file existing destination file verbatim material trivially receiver compressed range common compression rsync suppose general purpose alpha beta alpha access file beta access file '' slow link alpha beta rsync consists step 1. beta split file series non-overlapping fixed-sized block size byte block shorter byte 2. block beta calculates checksum weak rolling '' 32-bit checksum described strong 128-bit md4 checksum 3. beta sends checksum alpha 4. alpha search find block length byte offset multiple weak strong checksum block b. single pas special property rolling checksum 5. alpha sends beta instruction constructing copy a. instruction block literal literal match block b. copy piece small amount checksum block link requires round trip minimises link latency 2017-18 25 cross cloud disaster recovery 5.3.3. copy rsync copied newly created virtual machine complete backup process rsync employed incremental copy remote machine disk mounted appliance file folder excluded copying mount point volume directory azure virtual machine exclude file written exclude file passed parameter rsync command 5.4 version control azure component configuration version control change document revision control source control program web site collection change identified number letter code termed `` revision number '' `` revision level '' simply `` revision '' cloud service identified snapshot backup process completed snapshot restored vm snapshot vm restored version help consistent incremental backup process vm maintaining snapshot azure cloud well help saving overhead caused copying aws azure copied 2017-18 26 cross cloud disaster recovery evaluation 6.1 experimental setup purpose disaster recovery appliance aws account ec2 instance recovery appliance ec2 instance configured code installation backup process 1. select ec2 instance backup 2. keep .pem file aws ec2 instance 3. keep azure account ready backup process 6.2 strategy ec2 instance installation transfer performed backup process installation checked migrated 6.3 1. 1 a. select ec2 instance backup wa b. ec2 instance c. d. e. backup process check thing add file instance installation install i. file transferred ii installation migrated 2017-18 27 cross cloud disaster recovery 2. 2 a. select ec2 instance makeup b. change file add c. d. backup process check thing install i. modified file transferred ii installation migrated 6.4 installation aws cloud transferred microsoft azure cloud amount time needed transfer instance time 1 gb minute second backup cycle time reduces exponentially 6.5 1. poor internet connection increase recovery time 2. time backup snapshot input/output operation performed missed backup process 2017-18 28 cross cloud disaster recovery 7.1 backup main aspect disaster tolerance apart traditional method cloud backup divide backup process transfer step customer source node aws second source node backup node azure employ incremental fashion backup cross cloud virtual machine created snapshot site access cloud time disaster crisis primary site 7.2 time transfer rsync improved improving backup installation file time needed chose file installation backup problematic scenario solution process speed 2017-18 29 cross cloud disaster recovery 2016 international conference 2017 second international 1 xu liu xiaoqiang di jinqing li hui qi huamin yang ligang cong conference telecommunication cits stackelberg game framework compute optimal backup strategy equilibrium price strategy source backup node 2 d. kanapram g. lamanna m. repetto conference fmec framework exploring trade-off 3 weiwei wu member jianping wang member kejie lu member wen qi feng member junzhou luo member transaction service computing energy efficient scheduling approximation profit maximization 4 yu gu dongsheng wang chuanyi liu tsinghua science volume 19 issue 1 feb. 2014 backup recovery scheduling strategy cloud 5 olesia pozdniakova dalius mazeika 2017 conference electrical electronic science estream 6 quratulain alam saif u. r. malik member adnan akhunzada kimkwang raymond choo senior transaction forensics security volume 12 issue 6 2017 7 rafael moreno vozmediano ruben s. montero eduardo huedo society 2017-18 30 cross cloud disaster recovery 8 s. suguna dr. a. suhasini embedded icices 2014 2014 international conference 2017-18 31 cross cloud disaster recovery base paper dr-cloud multi-cloud based disaster recovery service rapid popularity cloud computing paradigm disaster recovery cloud attractive approach paper practical multi-cloud based disaster recovery service cloud dr-cloud multiple cloud service provider utilized cooperatively disaster recovery service provider simple unified exposed customer dr-cloud adapt heterogeneity cloud service provider involved disaster recovery service process cloud invisible customer dr-cloud proposes multiple optimization scheduling strategy balance disaster recovery reliability backup cost short recovery time transparent customer scheduling strategy based dr-cloud suitable kind disaster recovery scenario experimental dr-cloud cooperate cloud service provider parameter effectively scheduling strategy achieve optimization efficiently applicable disaster recovery kind service highest reliability perform disaster recovery service cloud computing paradigm maximizing reliability reducing cost challenge difference cloud computing encounter bug fault network intrusion human-caused damage natural disaster lead cloud service interruption loss ensure reliability cloud service provider deployed protection strategy example popular distributed storage cloud platform currently amazon s3 google gfs apache hdfs adopted 3-replicas redundant mechanism default entire center failure lost avoid cloud service provider geographical dispersion protect critical center location owned cloud service provider stack infrastructure purchased bulk operation mechanism multiple center failure period common center number center owned cloud 2017-18 32 cross cloud disaster recovery service provider limited unreachable surviving center applicable customer long distance geography network emergency restoring disaster matter preventive measure possibility reliability disruption cloud ignored public advanced cloud service encountered time wide area outage public service best solution disaster recovery service utilize multiple center tsinghua science cloud service provider pattern cloud service provider disaster recovery service public lease cloud service provider pay-as-you- mode disaster recovery longer limited center cloud service provider disaster recovery service provider selectively backup center cloud service provider center appropriate backup scheduling strategy disaster recovery service provider achieve better minimize cost promoting service paper 4 practical multi-cloud based disaster recovery service proposed called dr-cloud disaster recovery dr-cloud utilizes multiple cloud service provider cooperatively customer deal dr-cloud common unified service 2017-18 33 cross cloud disaster recovery review sheet 2017-18 34 cross cloud disaster recovery review sheet 2017-18 35 cross cloud disaster recovery review sheet 2017-18 36 cross cloud disaster recovery review sheet 2017-18 37", "keywords": ["amazon storage", "amazon web", "aws cloud", "aws store", "azure cloud", "backup process", "bhangale shreyash", "block size", "center cloud", "center cloud service", "cloud backup", "cloud computing", "cloud disaster", "cloud disaster recovery", "cloud service", "cloud service provider", "cross cloud", "cross cloud disaster", "destination file", "devan piyush", "disaster recovery", "disaster recovery service", "eb volume", "ec instance", "huamin yang", "incremental snapshot", "instance backup", "international conference", "junzhou luo", "lamanna repetto", "li hui", "mount point", "newly created", "qi feng", "qi huamin", "qi huamin yang", "raymond choo", "recovery service", "recovery service provider", "recovery time", "scheduling strategy", "service cloud", "service provider", "snapshot eb", "snapshot eb volume", "snapshot volume", "source file", "virtual machine", "volume snapshot", "wen qi", "wen qi feng"], "libraries": [], "languages": ["small", "beta", "io", "python"], "frameworks": [], "dbs": []}, "./reports/BE Project Report_7.pdf": {"title": "intelligent draft assistant", "filename": "./reports/BE Project Report_7.pdf", "data": "intelligent draft assistant kanchi swanand ramchandra jadhav rohan vijay tapan jindal thorat akshay anil b120058537 b120058532 b120058628 b120058632 guidance prof. k. y. digholkar 2017-2018 intelligent draft assistant intelligent draft assistant kanchi swanand ramchandra jadhav rohan vijay tapan jindal b120058537 b120058532 b120058628 b120058632 thorat akshay anil bonafide prof. k. y. digholkar fulfilment earlier diploma prof. k.y digholkar dr. balwant a. sonakamble 2 intelligent draft assistant acknowledgement great pleasure satisfaction presenting intelligent draft assistant express deep sense gratitude prof. k.y digholkar support encouragement helped complete express special gratitude dr. p.t dr. b.a sonkamble prof. d.d londhe guidance constant well providing support completing those4 directly indirectly helped completion mr. kanchi swanand ramchandra mr. jadhav rohan vijay mr. tapan jindal mr. thorat akshay anil 3 intelligent draft assistant sr. topic acknowledgement abbreviation 1 1.1 1.2 2 review 2.1 2.2 existing proposed 3 specification 3.1 3.2 3.3 3.4 3.5 3.5.1 3.5.2 3.5.3 3.5.4 3.6 3.6.1 3.6.2 3.6.3 3.6.4 definition concept non- split role responsibility 3.0 4 4.1 4.2 structural behavioural 5 5.1 5.2 stage 4 2 3 4 5 6 6 7 8 8 8 9 9 9 11 11 11 11 12 12 12 12 12 13 13 13 14 14 14 15 15 16 21 21 24 intelligent draft assistant 5.3 technique issue 24 31 31 31 31 32 33 33 33 33 34 35 6 evaluation 6.1 6.2 experiment 6.2.1 white box 6.2.2 black box 7 7.1 7.2 7.3 base paper review sheet 5 intelligent draft assistant class 16 17 18 19 6 intelligent draft assistant aim improve game performance viability pick based depth evaluation player skill based hero dota2 preference player suggestion directed improvement pick statistically favourable well skill matching initiative lead increased chance player consistently improving win rate skill bracket potential indispensable casual player well professional help create absolute tangible advantage start playing help player target improve strategy experimenting solution based draft pick keywords dota2 hero skill 7 intelligent draft assistant 1 1.1 dota 2 free-to-play multiplayer online battle arena moba video game developed published valve corporation dota 2 played match player occupying defending separate base map ten player independently control powerful character `` hero '' unique ability differing style play match player collect experience point item hero order battle opposing 's hero attempting win destroy located opposing 's base called `` ancient '' intelligent draft assistant allows choose hero maximize winning chance skill input opponent hero good hero counter opponent start match suggestion based skill hero pool strength weakness opponent hero 1.2 playing multiplayer game lower ranked bracket grew frustrated lack skill level prevalent group dota2 game complex consideration choosing hero difficult player manually select hero winning decrease aim improve skill level ability realise potential drafting well-managed draft advantage secured game begun complexity hero choice moba game 8 intelligent draft assistant 2 2.1. existing 1 r. herbrich t. minka t. graepel 'trueskiiltm bayesian skill rating `` advance neural processing 20 mit press 569- 576. calculate rating multiple player multiple match microsoft developed trueskill trueskill player 's skill represented gaussian distributed variable trueskill rating incorporate tie extension trueskill proposed variable size selecting function performance infer entire time-series skill player smoothing time filtering incorporation subgroup rating 's rating 2.2. proposed 1. approach comparable trueskill approach difference 2. modified version acarus context aware rating 3. proposed modification performed t2he rating adjustment i.e increase decrease player 's rating match calculated final step rating process existing rating 4. evaluate acarus collected real match player rating dota2 statistic api statistical match player hero item game 5. retrieved http implement php script collect save database 9 intelligent draft assistant 6. statistical match e.g hero player lost history played match player retrieved mentioned api 7. acarus scale retrieved rating scale 10 8. rating parameter player hero pool hero play 10 intelligent draft assistant 3 specification 3.1 definition focusing skill hero pool rating scaling skill w.r.t previous match hero pool scale 10. rating best counter hero maximize winning 3.1.1 build suggestion hero dota2 maximize winning acarus 3.2 concept steam logging fetch previous match record opendota api asked input opponent hero display best counter hero build efficient winning strategy 3.3 1. dataset limiting consideration 2. selection predefined selecting doe contribute 3. implemented rating moba game 4. best counter hero defeat opponent 5. player game 6. limited game 11 intelligent draft assistant 3.4 provide best hero counter opponent motto rate based skill help build strategy beat opponent start match drafting process easy efficient 3.5 3.5.1 dataset source opendota dataset segregation dataset www.opendota.com 3.5.2 provide good winning strategy account skill steam opponent hero 3.5.3 non-functional requirments performance throughput response time utilization scalability capacity availability reliability manageability 3.5.4 intel core i3 processor higher 2 gb ram 12 intelligent draft assistant 3.5.5 ubuntu 16.04 64 bit web browser docker container 3.6 split-up responsibility defined 3.6.1 3.6.1.1 proposed developed website platform storing medical functionality pre appointment well component specification 1.devices 2.ram laptop operating window version 7 4 gb 3.5 3.6.1.2 proposed developing website developed eclipse hibernate html cs mysql specification 64 bit version 10.0.0 html 5 version 5.0.28 3.6 3.6.1.3 human group people contributed responsibility wa assigned help review timely manner assigned conduct review response additional suggestion 13 intelligent draft assistant 3.6.2 split 1 gui web interaction allows player match receiving suggestion requesting alternative suggestion 2 received live api collection occurs generation suggested hero 3 logic retrieved analysed provide suggestion acarus 3.6.4 role responsibilties complete wa group people contributed initially distributed website development block development connection client side coding connectivity frontend backend time input wa help time wa issue term total review development phase waterfall decided target review completed target suggestion time 3.6.5 3.0 14 intelligent draft assistant 4 15 4.1 intelligent draft assistant 4.2 structural class 16 intelligent draft assistant 4.3 behaviorial 17 intelligent draft assistant 18 intelligent draft assistant 19 intelligent draft assistant 4.4 context aware rating acarus .. illustration acarus 's logic player 's performance rating 20 intelligent draft assistant 5 cover stage include collection storing acarus best compared stage elaborate issue technique 5.1 5.1.1 gui creation graphical allows interact electronic device graphical icon visual indicator secondary notation text-based typed command label text navigation gui introduced curve command-line cli require command typed keyboard action gui performed direct manipulation graphical element perceived steep learning reaction doctype html html lang= '' en '' title intelligent draft assistant /title meta charset= '' utf-8 '' meta name= '' viewport '' content= '' width=device-width initial- scale=1 '' link rel= '' stylesheet '' href= '' http //maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap min.css '' link rel= '' stylesheet '' href= '' style.css '' script src= '' http //ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.j '' /script script src= '' http //maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.mi n.js '' /script /head nav class= '' navbar navbar-inverse navbar-static-top '' div class= '' container-fluid '' ul class= '' nav navbar-nav '' li class= '' active '' href= '' '' /a /li li href= '' '' hero suggestion /a /li li href= '' '' view record /a /li li href= '' http //www.opendota.com '' visit opendota /a /li li href= '' '' /a /li /ul /div 21 input type= '' text '' class= '' form-control '' span button type= '' button '' class= '' btn btn- intelligent draft assistant /div /div div class= '' input-group '' h3 intelligent draft assistant /h3 div class= '' form-group '' /nav body div class= '' container '' placeholder= '' enter steam '' align= '' bottom '' success '' /button /span /div /body /html body html /* full height */ height 100 main_input_bar left 100px top 150px background-image url `` 474206.jpg '' height 100 width 100 position absolute 22 intelligent draft assistant 5.1.2 collection collected opendota collected restful apis function request var 'https //api.opendota.com/api/players/129922340/heroes against_hero_id=4 1 var http_request xmlhttprequest url http_request.open `` '' url http_request.send var raw json.parse http_request.response p=raw 5.1.3 acarus function request var 'https //api.opendota.com/api/players/129922340/heroes against_hero_id=1 url var http_request xmlhttprequest http_request.open `` '' url http_request.send var raw json.parse http_request.response p=raw var flg=0 var max=0 var i=0 114 i++ var .win .games =0 23 intelligent draft assistant var rate=w/g rate max flg=i max=rate function request var 'https //api.opendota.com/api/players/129922340/heroes against_hero_id=4 1 var http_request xmlhttprequest url http_request.open `` '' url http_request.send var raw json.parse http_request.response p=raw var flg=0 var max=0 var i=0 114 i++ var .win .games =0 var rate=w/g rate max flg=i max=rate function request 24 intelligent draft assistant var 'https //api.opendota.com/api/players/129922340/heroes against_hero_id=4 89 1 url var http_request xmlhttprequest http_request.open `` '' url http_request.send var raw json.parse http_request.response p=raw var flg=0 var max=0 var i=0 114 i++ var .win .games =0 var rate=w/g rate max flg=i max=rate function request var 'https //api.opendota.com/api/players/129922340/heroes against_hero_id=4 89 671 url var http_request xmlhttprequest http_request.open `` '' url http_request.send var raw json.parse http_request.response p=raw var flg=0 var max=0 25 intelligent draft assistant var i=0 114 i++ var .win .games =0 var rate=w/g rate max flg=i max=rate function request var 'https //api.opendota.com/api/players/129922340/heroes against_hero_id=4 89 67 56 1 url var http_request xmlhttprequest http_request.open `` '' url http_request.send var raw json.parse http_request.response p=raw var flg=0 var max=0 var i=0 114 i++ var .win .games =0 var rate=w/g 26 intelligent draft assistant rate max flg=i max=rate 5.1.4 match // making api call opendota var id_list '129922340 var oppheroid var request var player var var winrate id_list request request id_list function cmp function request var url 'https //api.opendota.com/api/players/129922340/matches var http_request xmlhttprequest http_request.open `` '' url http_request.send var raw json.parse http_request.response p=raw document.getelementbyid `` '' .getelementsbyclassname 'name 0 .inn erhtml `` match `` 0 .match_id `` hero `` 0 .hero_id+ '' kill `` +p 0 .kills+ '' death `` +p 0 .deaths+ '' assist '' +p 0 .assists+ '' win `` +p 0 .radiant_win document.getelementbyid `` '' .getelementsbyclassname 'name 0 .inn erhtml `` match `` 1 .match_id `` hero `` 1 .hero_id+ 27 intelligent draft assistant '' kill `` +p 1 .kills+ '' death `` +p 1 .deaths+ '' assist '' +p 1 .assists+ '' win `` +p 1 .radiant_win document.getelementbyid `` three '' .getelementsbyclassname 'name 0 .i nnerhtml `` match `` 2 .match_id `` hero `` 2 .hero_id+ '' kill `` +p 2 .kills+ '' death `` +p 2 .deaths+ '' assist '' +p 2 .assists+ '' win `` +p 2 .radiant_win document.getelementbyid `` '' .getelementsbyclassname 'name 0 .in nerhtml `` match `` 3 .match_id `` hero `` 3 .hero_id+ '' kill `` +p 3 .kills+ '' death `` +p 3 .deaths+ '' assist '' +p 3 .assists+ '' win `` +p 3 .radiant_win document.getelementbyid `` '' .getelementsbyclassname 'name 0 .in nerhtml `` match `` 4 .match_id `` hero `` 4 .hero_id+ '' kill `` +p 4 .kills+ '' death `` +p 4 .deaths+ '' assist '' +p 4 .assists+ '' win `` +p 4 .radiant_win 5.1.5 favourite hero var id_list '129922340 var oppheroid var request var player var var winrate id_list request request id_list function cmp function request var url 'https //api.opendota.com/api/players/129922340/heroes var http_request xmlhttprequest http_request.open `` '' url http_request.send var raw json.parse http_request.response p=raw 28 intelligent draft assistant var flg=0 var max=0 var i=0 114 i++ var rate =0 var .win .games =0 rate=w/g rate 0 .winrate rate p.sort function return b.winrate-a.winrate var i=0 =10 i++ console.log .hero_id console.log .winrate document.getelementbyid `` '' .getelementsbyclassname 'name 0 .innerhtml `` best hero `` 0 .hero_id `` win rate `` 10 .winrate+ `` 1 '' document.getelementbyid `` '' .getelementsbyclassname 'name 0 .innerhtml `` best hero `` 1 .hero_id `` win rate `` 10 .winrate+ `` 1 '' document.getelementbyid `` three '' .getelementsbyclassname 'name 0 .innerhtm `` best hero `` 2 .hero_id `` win rate `` 10 .winrate+ `` 1 '' document.getelementbyid `` '' .getelementsbyclassname 'name 0 .innerhtml `` best hero `` 3 .hero_id `` win rate `` 10 .winrate+ `` 1 '' 29 intelligent draft assistant document.getelementbyid `` '' .getelementsbyclassname 'name 0 .innerhtml `` best hero `` 4 .hero_id `` win rate `` 10 .winrate+ `` 1 '' document.getelementbyid `` sa '' .getelementsbyclassname 'name 0 .innerhtml `` best hero `` 5 .hero_id `` win rate `` 10 .winrate+ `` 1 '' document.getelementbyid `` sa '' .getelementsbyclassname 'name 0 .innerhtml `` best hero `` 6 .hero_id `` win rate `` 10 .winrate+ `` 1 '' document.getelementbyid `` sa '' .getelementsbyclassname 'name 0 .innerhtml `` best hero `` 7 .hero_id `` win rate `` 10 .winrate+ `` 1 '' document.getelementbyid `` sa '' .getelementsbyclassname 'name 0 .innerhtml `` best hero `` 8 .hero_id `` win rate `` 10 .winrate+ `` 1 '' document.getelementbyid `` sa '' .getelementsbyclassname 'name 0 .innerhtml `` best hero `` 9 .hero_id `` win rate `` 10 .winrate+ `` 1 '' 5.2 stage 1. collection stage stage created restful apis stored database 2. acarus stage acarus applied provide best hero 3. stage designed web developed html cs gui input opposition hero view collection best hero 5.3 technique issue implemented acarus choose best hero considering parameter collection javascript major operation collection storing manipulation retrieval performed javascript.. development javascript docker html cs eclipse 30 intelligent draft assistant 6 evaluation proposed best hero ascending order help select best hero maximize wining hero hero win percentage hero calculated based player win percentage opposition hero selection 6.1 experments performed number experiment development phase wa evaluated checked output experiment contract key account 6.2 investigation conducted provide product delivered performed strategy proposed key check point development process performed number prototype adding short long prescription keeping field empty check accuracy percentage 6.2.1 white box white box method phase tested proposed coding infrastructure acarus selection opposition hero 6.2.2.1 unit basically unit single snippet code functionality performed unit collection retrieval apis 6.2.2.2 integration integration level individual unit combined tested group purpose phase expose fault integration integrated unit proposed integrated unit apis local server web performed integration checked integrated unit working properly 31 intelligent draft assistant collected player player entered opposition hero selection i.e best hero ascending order help select best hero maximize wining calculated wa checked integration 6.2.2 black box black box method examines functionality peering working proposed performed black box check functionality individual component 32 intelligent draft assistant 7 7.1 acarus mobas based principle player role match minor adjustment aim machine learning find coefficient relate parameter role yield precise 7.2 percentage based aggregate represent current skill indicator skill deteriorates time patch complexity endeavour dependent player requires good execute actual game strategy lead noise record bad teammate player throw game 7.3 aim machine learning find coefficient relate parameter role yield precise construct method exact role detection compare acarus rating 33 intelligent draft assistant 1. mirko suznjevic jelena konfic ericsson nikola tesla context based player skill evaluation moba game 2015 international workshop network support game netgames 2. anders drachen matthew yancey john maguire derrek chu iris yuhui wang tobias mahlmann matthias schubert diego klabajan skill-based difference spatio-temporal behaviour defence ancient 2 dota 2 2014 game medium entertainment 3. r. herbrich t. minka t. graepel 'trueskiiltm bayesian skill rating `` advance neural processing 20 mit press jan. 2007 569-576 34", "keywords": ["apiopendotacomapiplayersheroes againstheroid", "best counter", "best counter hero", "best hero", "counter hero", "div class", "draft assistant", "function request", "function request var", "hero maximize", "hero pool", "httprequest xmlhttprequest", "httprequestsend var", "httprequestsend var raw", "https apiopendotacomapiplayersheroes", "https apiopendotacomapiplayersheroes againstheroid", "intelligent draft", "intelligent draft assistant", "jadhav rohan", "kanchi swanand", "ky digholkar", "match player", "maxrate function", "mit press", "moba game", "opponent hero", "opposition hero", "player skill", "raw jsonparse", "request var", "url httprequestsend", "url httprequestsend var", "var httprequest", "var raw", "var raw jsonparse"], "libraries": [], "languages": ["php", "html", "cs", "javascript"], "frameworks": [], "dbs": ["mysql"]}, "./reports/BE Project Report_8.pdf": {"title": "prevention and detection of sybil attacks in   wsn", "filename": "./reports/BE Project Report_8.pdf", "data": "prevention detection sybil attack wsn mitesh arora yashvardhan pawar sachi shambharkar ujjwal agrawal b120058508 b120058587 b120058614 b120058504 guidance prof. v.r jaiswal sr. 27 pune-satara road bharati vidyapeeth college dhankawdi bharati vidyapeeth campus dhankawdi maharashtra-411043 2017-2018 prevention detection sybil attack wsn mitesh arora b120058508 yashvardhan pawar b120058587 sachi shambharkar b120058614 ujjwal agrawal b120058504 record bonafide v.r jaiswal fulfilment earlier diploma prof. v.r jaiswal dr. b. a. sonkamble prof. d. d. londhe co-ordinator dr. p. t. examiner 2017-18 ii prevention detection sybil attack wsn acknowledgement opportunity express heart-felt gratitude dr. prahlad providing infrastructure complete express deepest gratitude dr. sonkamble b. a. express deep sincere gratitude prof. v.r jaiswal unflagging support continuous encouragement guidance persistent help highly indebted prof. a.g. dhamankar prof. r.v encouragement constructive suggestion constant support warm faculty employee tweeny helped view encouraging directly indirectly helped completion seminar 2017-18 mr. mitesh arora mr. yashvardhan pawar mr. sachi shambharkar mr. ujjwal agrawal iii prevention detection sybil attack wsn fig 1.1 2.1 2.2 3.1 3.2 3.3 4.1 4.2 4.3 5.1 5.2 5.3 5.4 5.5 sensor node gateway sybil attack proposed selection cluster residual energy splitup initial flowchart sample code defining parameter node configuration node node creation node deployment sybil attack initialised iv 2017-18 prevention detection sybil attack wsn calculating neighbor node clustering agent definition residual energy calculation network formation formed cluster malicious code packet transfer detection sybil attack sybil node detected sybil attack detection sybil node blacklisted fig 5.6 5.7 5.8 5.9 5.10 5.11 5.12 5.13 5.14 5.15 6.1 6.2 2017-18 prevention detection sybil attack wsn 2.1 simulation parameter 2017-18 vi prevention detection sybil attack wsn acknowledgement 1 2 1.1 1.2 2.1 3 4 5 6 2.2 2.3 3.1 3.2 3.3 3.4 3.5 3.6 4.1 4.2 5.1 5.2 5.3 title attack wsn sybil attack existing proposed specification definition concept behavioural processing ns2 animator evaluation ii iii 1 3 3 4 6 6 9 12 17 17 17 19 20 20 21 24 24 25 28 28 30 33 37 2017-18 vii prevention detection sybil attack wsn 6.1 7.1 7.2 38 40 40 41 43 7 2017-18 viii prevention detection sybil attack wsn wireless sensor network wsn wireless network consisting spatially distributed autonomous device sensor monitor physical environmental condition wsn incorporates gateway wireless connectivity wired distributed node sensing shared sensor node distributed estimation reliability accuracy flexibility cost effectiveness ease deployment field wireless sensor network wsns sybil attack considered researcher security wsns sybil attack node identity network countermeasure detection sybil attack complete detection purpose implemented clustering method approach malicious cluster harm network starting sybil attack method simple secure detect sybil node blacklist network suitable sensor network keywords wireless sensor network wsns sybil attack sybil node clustering 2017-18 1 prevention detection sybil attack wsn 1 2017-18 2 prevention detection sybil attack wsn 1 1.1 wireless sensor network wsn wireless network consisting spatially distributed autonomous device sensor monitor physical environmental condition wsn incorporates gateway wireless connectivity wired distributed node sensing shared sensor node distributed estimation reliability accuracy flexibility cost effectiveness ease deployment 1.1 sensor node gateway sybil attack variant node replication attack malicious node attempt falsify node identity location secret key material malicious node virtually creates replica network making difficult identify actual node wireless sensor network wsn clustering characterized aggregation cluster reduces traffic cost hierarchical requires main method periodic selection cluster chs assignment node multiple 2017-18 3 prevention detection sybil attack wsn cluster wireless sensor network wsns vulnerable security attack node primary concern aim detect prevent sybil attack wsns detecting eliminating sybil node network 1.2 wireless sensor network deployed unattended environment monitor event associated process interest network composed small sensor node limited lack tamper proof body unattended hostile deployment lead physical capturing vulnerability security attack security attack wireless sensor network node replication attack severe compromised node network disrupt network sybil attack variant node replication attack malicious node attempt falsify node identity location secret material difficult uncover malicious node varying signal strength claim existence solution proposed address sybil attack existing solution good efficiency limited detect prevent attack processed genuine clustering proposed approach detection sybil node detection sybil node network cluster blacklist node network reason wa address wireless sensor network protection primary wireless sensor network intended outcome 2017-18 4 prevention detection sybil attack wsn 2 2017-18 5 prevention detection sybil attack wsn 2 2.1 attack wsn sybil attack attack wsn wireless sensor network vulnerable security attack broadcast nature transmission medium attack categorized active passive attack attack passive attack attack attacker watch network happening eavesdropping common violence privacy interfering attacker simply learn traffic delivers control configuration sensor network comprises hypothetically thorough location server snooping eavesdropping behave efficiently confidentiality traffic message transferred network vulnerable encrypted possibility pattern sensor expose sufficient opponent malevolent harm wireless sensor network active attack attack attacker alter network entering network dosattack denial service attack devastating targeted server putting extra traffic server maximum processing limit attack typically performed overwhelming targeted node 2017-18 6 prevention detection sybil attack wsn excessive request overload legitimate request answered scheme wsn device typically favor reduced cost enlarged capability basic sensor network device susceptible attack masquerade attack attack refers usage fake personality gain illegal access attacker unauthorized gain access increase greater masquerade attack typically involves active attack example verification arrangement illegitimate person access illegally replay attack involves passive imprisonment unit succeeding retransmission generate unauthorized consequence adversary originator interrupt retransmits wormhole attack basically serious attack intruder record stream bit packet specific position wireless network channel location capturing retransmitting bit stream packet selective manner wormhole attack eavesdropping selective forwarding attack detection problematic combination sybil attack security main anxiety wireless sensor network wsn designer extensive precarious network lot issue remaining explored hand wsn fully matured progress numerous protocol developed wsn maturely satisfied security threat hand protocol wsn difficult develop solid security scheme supporting cost wsn fruitful direction worked account sybil attack tackled 2017-18 7 prevention detection sybil attack wsn making network secure sybil attack matter critical consternation network security leading fake identity disruption network sybil attack occurs broadcasting function individual verification identity comparison attacker node acquire identity endeavour influence sybil attacker awareness message channel attacker node launched inside route well wireless sensor network node specially identifies attacker node unicast well multicast scenario propose authentication framework ensure hindrance sybil attack wireless sensor network sybil attack node device identity lawful doe impersonate node fast assumes identity node causing redundancy routing protocol sybil attack degrade integrity security utilization perform storage routing mechanism air allocation misbehaviour detection sensor network sensor node form network wireless sensor node pass central station node communicate node number encryption technique prevent attack node node network mount attack insider attack called sybil attack node spoof node called sybil node normal node proper node communicate node form node launch attack network sybil node communicate neighboring node identity normal node process single node identity area node network illegal sybil node formed identity pilfering legal identity considered additional 2017-18 8 prevention detection sybil attack wsn misbehaving node confusion network collapsed 2.1 sybil attack sybil attack classified form basis manner attack network direct attack indirect attack direct attack real node communicate directly sybil node indirect attack malicious node ii fabricated attack stolen identity attack legal identity node create illegal node sensor node 16-bit integer creates 16 bit fabricated node stolen sybil node destroyed checking identity replication 2.2 existing 2.2.1 detection prevention sybil attack wireless sensor network employing random password comparison method security imperative sensor network unsafe assault sensor impromptu sybil attack node illegitimately asserts numerous character attack legal node converted sybil node replica node personality lead leakage integrity violation existing node detect suspect node checking node 2017-18 9 prevention detection sybil attack wsn neighbourhood i.e range neighbor node exchange detect sybil node misleading sybil node detected directly checking node paper random password comparison rpc method proposed facilitates deployment control position node preventing sybil attack rpc method dynamic accurate detecting sybil attack method improves transmission network increase throughput paper proposed address traffic level security consideration transmission wireless sensor network network base station comprises number node deployed randomly generates routing rtable-rpc store node time password intermediate node route identified source destination intermediate node compared rpc database match node considered normal node node considered sybil node sybil node submit dynamic password assigned node network 2.2.2 review paper detection prevention sybil attack wsn centralizedids spite vitality proficiency vast majority wsn 's group based directing convention vulnerable security danger paper misuse detection proposed malicious cluster intention causing sybil attack wireless sensor network proposed misuse detection technique simple secure suitable sensor proposed tend modify centralized scheme based misuse detection detect malicious cluster intention causing sybil attack wireless sensor network 2017-18 10 prevention detection sybil attack wsn 2.2.3 lightweight sybil attack detection framework wireless sensor network field wireless sensor network wsns sybil attack considered researcher existing solution lightweight limited accomplish author lightweight sybil attack detection framework lsdf paper framework component evidence collection second evidence validation node network collect evidence observing neighboring node evidence validated running sequential hypothesis decide neighboring node benign node sybil node extensive simulation wa revealed lsdf detect sybil accurately evidence 2.2.4 novel code attestation scheme sybil attack wireless sensor network wireless sensor network wsn distributed nature vulnerable insider attack classic cryptographic measure protect attack extent fail defend insider attack involving node compromise compromised node launch attack sybil attack prominent paper carryout detailed review defense proposed sybil attack identify strength weakness propose novel code attestation protocol owcap wireless sensor network economical secure code attestation scheme protects sybil attack majority insider attack code attestation considered scheme protect dimension sybil attack protects attack involving change code scheme considered computation compared pairwise key distribution scheme scheme proposed 2017-18 11 prevention detection sybil attack wsn 2.2.5 novel sybil attack detection scheme wireless sensor network year advance microelectronics wireless promote rapid development power price multifunction sensor wireless sensor network general node scenario security issue major obstacle development wireless sensor network sybil attack major attack wireless sensor network paper proposed sybil detection method based ranging wireless sensor network proposed detect sybil attack anchor node location finally theoretical experiment confirm method effectively detect sybil attack improve security wireless sensor network distance node polar coordinate le small node sybil attack node add node location blacklist experimental proposed detection method average detection improve security wireless sensor network 2.3 proposed sybil attack degrade integrity security utilization perform storage routing mechanism air allocation misbehavior detection aim detect prevent sybil attack wsns detecting eliminating sybil node network 2017-18 12 prevention detection sybil attack wsn 2.2 process detection sybil node clustering prevention random password creation described flowchart 2017-18 13 prevention detection sybil attack wsn step 1 building network node step 2 clustering node step 3 selection cluster residual energy node highest residual energy network construction cluster step 4 detecting sybil node cluster base station base station sybil node detecting cluster network blacklist step 5 sybil node cluster base station selects cluster node node prohibited network step 6 dual verification base station sends hello pack node time delay password node network rpc method step 7 base station creates routing node time delay source node destination node selected shortest path step 8 node path verified routing sybil node detected shortest path account step 9 sybil node detected eliminated dual verification achieved 2017-18 14 prevention detection sybil attack wsn 2.1 simulation parameter simulator examined protocol mac simulation time area node propagation transmission range transmission power receive power pt_ traffic bandwidth packet security attack ns-2.35 leach 802.15.4 100 second 100 100 meter 50 shadowing 10 meter 0.0522 mw 0.0522 mw 0.001 cbr udp 100 kbps 64 byte sybil attack 2017-18 15 prevention detection sybil attack wsn 3 2017-18 16 prevention detection sybil attack wsn 3 specification 3.1 definition develop framework detect malicious node network mitigate sybil attack wireless sensor network 3.2 concept concept clear title detection prevention sybil attack wsns crucial find solution identity node compromised wsns identity node key thing communicate network proposed efficient provide simple secure solution proposing overcome drawback previous clustering detection sybil node blacklist prevention random password comparison method continuously check attack selecting cluster basis residual energy remaining amount energy node node highest energy selected cluster sybil node cluster gain identity cluster communicate network member cluster join cluster node receiving message join cluster 2017-18 17 prevention detection sybil attack wsn 3.1 selection cluster residual energy formation cluster network cluster send control packet base station single hop control packet location cluster well location member receiving control packet base station detect malicious cluster basis condition sybil node compromised cluster cluster located base station check cluster received control packet multiple node base station store location suspect base station send message node cluster select cluster sybil node exhibit cluster newly 2017-18 18 prevention detection sybil attack wsn selected cluster send control packet base station location cluster well location member base station receive multiple node base station compare location received control message location received location sybil node base station detect received control packet cluster located position cluster base station inform member node location sybil node communicate base station select cluster member received control packet prevention sybil attack rpc method implemented method simply check random password stored routing node password generated generator password doe match node eliminated network 3.3 detect prevent sybil attack clustering method detect sybil node network eliminate blacklisting initial protection sybil attack achieved providing dynamic password node network storing password base station rpc method comparison method compare dynamic password password stored database efficiency increased method simple secure proposed method detects sybil node eliminates effectiveness efficiency intrusion detection increased 2017-18 19 prevention detection sybil attack wsn 3.4 1. wa implement sybil attack 2. primary wa detect prevent sybil attack clustering 3. blacklisting sybil node making network free sybil node 4. generation script selection cluster routing 5. increasing efficiency effectiveness designed wa difficult major 3.5 3.5.1 condition wireless sensor network sensor prone vulnerability sybil vulnerability node-replication vulnerability proposed detect prevent sybil attack wsns simulation proceeds step step network node deployed clustering method protocol leach protocol attacker node attack detected sybil node blacklisted network smoothly start simulation time 3.5.2 proposed wsn deployed region network simulator easy proposed support privacy law 2017-18 20 prevention detection sybil attack wsn 3.5.3 network simulator 2 ns2 omnet++ discrete event simulator nam animator x-graph 3.5.4 32/64-bit processor ram min 4gb rom max 10 gb 3.6 3.6.1 split-up module-wise split-up network created leach protocol attacker initialized attacker attack clustering method implemented detect prevent sybil attack wsns 1 creation network module2 attacking network sybil attack module3 detection sybil attack clustering module4 prevention sybil attack 3.2 splitup 2017-18 21 prevention detection sybil attack wsn 3.6.2 3.2 2017-18 22 prevention detection sybil attack wsn 4 2017-18 23 prevention detection sybil attack wsn 4 4.1 4.1 initial wa proposed predict developed proposed network simulator 2 leach protocol nam animator detect sybil attack 4.1 initial 2017-18 24 prevention detection sybil attack wsn 4.2 behavioural happening sender receiver representation interaction involved extended meaningful independent extending saving reviewing mandatory previous planning managing itinerary included meaning compulsory sense executed 4.2 2017-18 25 prevention detection sybil attack wsn 4.3 flowchart 2017-18 26 prevention detection sybil attack wsn 5 2017-18 27 prevention detection sybil attack wsn 5 5.1 processing 5.1 sample code define parameter sensor node network 5.1 sample code defining parameter node 2017-18 28 prevention detection sybil attack wsn 5.2 configuration defined node topology defined earlier configure node 5.2 configuration node 5.3 node creation network 5.3 node creation 2017-18 29 prevention detection sybil attack wsn 5.4 topological deployment node environment 5.4 node deployment 5.2 ns2 5.5 code sybil attack initialization 5.5 sybil attack initialized 2017-18 30 prevention detection sybil attack wsn 5.6 code calculating neighbor node 5.6 calculating neighbor node 5.7 code formation cluster network 5.7 clustering 2017-18 31 prevention detection sybil attack wsn 5.8 code defining agent purpose 5.8 agent defination 5.9 code selecting cluster basis residual energy 5.9 residual energy calculation 2017-18 32 prevention detection sybil attack wsn 5.3 animator 5.10 network formation 5.10 network formation 5.11 cluster formation 5.11 formed cluster 2017-18 33 prevention detection sybil attack wsn 5.12 sample code checking malicious behavior node 5.12 malicious code 5.13 created network 5.13 packet transfer 2017-18 34 prevention detection sybil attack wsn 5.14 detection sybil node network 5.14 detection sybil attack 5.15 sybil node detected 2017-18 35 prevention detection sybil attack wsn 6 2017-18 36 prevention detection sybil attack wsn 6 evaluation manual manual includes manually i.e automated script tester role end-user identify unexpected behaviour bug stage manual unit integration acceptance automation automation tester writes script product process involves automation manual process automation re-run scenario performed manually repeatedly manual method black-box technique knowledge interior working called black-box tester oblivious doe access source code white-box white-box detailed investigation logic code white-box called glass open-box order perform white-box tester working code grey-box mixture white black box black box function tested input unit unit unit field 2017-18 37 prevention detection sybil attack wsn 6.1 sybil node network detected blacklisted network network created sybil node 6.1 6.2 sybil node detected blacklisted 2017-18 38 prevention detection sybil attack wsn 7 2017-18 39 prevention detection sybil attack wsn 7 7.1 domain wa discussed finalized domain finalized wa wireless sensor network wa finalized brainstorming current security issue sensor network wa conducted find existing method formulate feasible method find solution existing method detection sybil attack studied existing method clustering wireless sensor network wa discussed finalized network simulator 2.35 wa discussed finalized tcl language wa finalized basic language protocol file modified integrated tcl file proposed method securely efficiently detection prevention sybil node wireless sensor network eliminate rid difficulty sybil attack alteration malfunction method overcomes existing efficient security network 2017-18 40 prevention detection sybil attack wsn 7.2 simulation implemented protocol improved detection technique clustering development handling scalability improve efficiency detection technique provide quick better simulation real time factor missing change condition detection sybil attack wireless sensor network better simulation upgrade extremely helpful detection prevention security attack 2017-18 41 prevention detection sybil attack wsn 2017-18 42 prevention detection sybil attack wsn 1 v. m.mehta security wireless sensor network ganpat journal 1 3544 2011 2 a. modirkhazeni n. ithnin m. abbasi secure hierarchical routing protocol wireless sensor network security international journal network 2 616 2012 3 r. amuthavalli dr. r. s. bhuvaneswaran detection prevention sybil attack wireless sensor network employing random password comparison rpc method 4 prabhjotkaur aayushi chada sandeep singh review paper detection prevention sybil attack wsn centralizedids 5 shaohe lv xiaodong wang xin zhao xingming zhou detecting sybil attack cooperatively wireless sensor network 2008 international conference computational intelligence security 6 p. raghu vamsi krishna kant lightweight sybil attack detection framework wireless sensor network 2014 7 shaohe lv xiaodong wang xin zhao xingming zhou detecting sybil attack cooperatively wireless sensor network 2008 international conference computational intelligence security 8 dai jing li routing protocol wireless sensor network proc international conference circuit volume 1 27-30 2005 9 prabhudutta mohanty sangram panigrahii nityananda sarmaand siddhartha sankar satapathy security issue wireless sensor network gathering protocol journal theoretical applied 2005 2010 jatit 10 pareek anamika mayank sharma `` detection prevention sybil attack manet mac address '' international journal 122 21 2015 2017-18 43", "keywords": ["attack attack", "attack detection", "attack wireless", "attack wireless sensor", "attack wsn", "attacker node", "base station", "cluster basis", "cluster network", "clustering method", "code attestation", "comparison method", "control packet", "detect prevent", "detect prevent sybil", "detect sybil", "detection prevention", "detection prevention sybil", "detection sybil", "detection sybil attack", "dynamic password", "insider attack", "leach protocol", "leach protocol attacker", "malicious cluster", "malicious node", "mitesh arora", "neighboring node", "network simulator", "network sybil", "network sybil attack", "network wireless", "network wireless sensor", "network wsn", "node location", "node network", "node replication", "node replication attack", "node time", "password comparison", "prevent sybil", "prevent sybil attack", "prevention detection", "prevention detection sybil", "prevention sybil", "prevention sybil attack", "protocol attacker", "random password", "random password comparison", "replication attack", "residual energy", "sachi shambharkar", "sample code", "security attack", "security issue", "security wireless", "security wireless sensor", "selection cluster", "sensor network", "sensor network wsn", "sybil attack", "sybil attack detection", "sybil attack wireless", "sybil attack wsn", "sybil node", "sybil node network", "vr jaiswal", "wireless sensor", "wireless sensor network", "wsns sybil", "wsns sybil attack", "yashvardhan pawar"], "libraries": [], "languages": ["basic", "small", "tcl"], "frameworks": [], "dbs": []}, "./reports/BE_Project_Final_Report_31_Latex_final.pdf": {"title": "prerequisites-a communtiy driven search engine", "filename": "./reports/BE_Project_Final_Report_31_Latex_final.pdf", "data": "prerequisites-a communtiy driven search engine ashish gadkari rahul kadam gorakh lonkar aditya pingle 80058535 80058554 80058568 80058593 guidance prof. p. p. jadhav b. e. 2013 411043 afliated 411043 dissertation prerequisites-a community driven search engine rahul kadam record year 2012-2013 guidance prof. p. p. jadhav prof. emmanual m. dr. p. t. hod examination examiner acknowledgement profoundly grateful prof. p. p. jadhav expert guidance con- tinuous encouragement target commencement completion express deepest appreciation dr. p. t. prof. emmanual m. hod prof. manish r. khodaskar coordinator invaluable guidance sup- ported completing express sincere heartfelt gratitude staff member in- formation helped directly indirectly course ashish gadkari rahul kadam gorakh lonkar aditya pingle prerequisites-a community driven search engine ashish gadkari rahul kadam gorakh lonkar aditya pingle 80058535 80058554 80058568 80058593 sponsorship soft corner ms. pradnya baviskar mr.swapnil farande ms.sushma sandbhor completed ms.pradnya baviskar mr.swapnil farande ms.sushma sandbhor engineer soft corner engineer soft corner engineer soft corner prerequisite search engine allows search precondition query displayed graphical form better understanding step query provided benet better understanding graph le time traverse graph community driven i.e contribute search add/update path existing authentication mechanism google facebook rate comment path displayed rank ranking effective indexing solr provide le time javascript library displaying graphically prerequisite search engine helpful search community driven query efciently easily keywords search engine django 1 1.1 1.2 basic concept prerequisite 1.2.1 1.2.2 community driven search engine 1.2.3 1.2.4 extended 1.2.5 1.2.6 security flexibility 2 2.1 introductory 2.1.1 market basket search 2.1.2 2.1.3 2.1.4 2.1.5 neo4j mysql django filter jquery ajax cs bootstrap html solr lucene apache server side 2.2.1 disadvantage 2.2 advantage 3 proposed 3.1 3.2 3.3 4 4.1 purpose 4.1.1 4.1.2 4.1.3 1 1 2 2 2 3 3 3 3 5 5 5 6 6 6 6 7 7 8 8 8 9 10 10 10 10 10 4.3 4.2 4.1.4 description 4.2.1 dfd 4.3.1 4.3.2 4.3.3 4.3.4 diagram-1 4.3.5 4.3.6 diagram-1 4.3.7 deployment 5 5.1 experimental setup 5.2 snapshot 5.2.1 5.2.2 5.2.3 5.2.4 strategy 5.2.5 5.2.6 5.2.7 screen 5.2.8 registration form 5.2.9 add path 5.2.10 graph 5.2.11 5.2.12 step 6 scheduling 6.1 proposed 6.2 planning 7 7.1 7.2 11 13 13 15 15 16 17 18 19 20 21 22 22 23 23 23 23 23 26 26 27 28 29 30 31 32 42 42 44 45 45 45 46 1.1 proposed 4.1 proposed 4.2 dfd level-0 4.3 dfd level-1 4.4 dfd level-2 4.5 4.6 4.7 diagram-0 4.8 diagram-1 4.9 diagram-0 4.10 diagram-1 4.11 deployment 5.1 5.2 5.3 screen 5.4 registration form 5.5 add path 5.6 graph 5.7 5.8 step 4 11 13 13 14 15 16 17 18 19 20 21 22 26 27 28 29 30 31 32 1 1 society search basic query internet basically request point internet easily community community process book single difcult guideline internet topic prerequisite focus guide- community driven topic role internet response query form text read spend time simple search prerequisite provide response form graph easy clear prerequisite basic searching community driven 1.1 prerequisite search engine engine help community search prerequisite thing daily passport driving license day search engine difcult thing directly internet search thing location website difcult tedious search internet term graph single web visitor developing prerequisite search engine create graph prerequisite community driven society search basic query internet basically request point internet easily community community process 1 1 book single difcult guideline internet topic prerequisite focus guideline community driven topic role internet response query form text read spend time simple search prerequisite provide response form graph easy clear prerequisite basic searching community driven 1.2 basic concept ensure correctness prerequisite search engine effective fast searching main aim provide exible usable efcient product society people form society easily usable 1.2.1 prerequisite wiki provision update add pre- requisite thing stored server provided requested displayed us- ing graph hierarchical accomplishing .the searching based keywords factor location query generated 1.2.2 community driven search engine community driven search engine peo- ple community prerequisite easily internet rule community suppose passport tough searching internet confuse pre- requisite provide exact appropriate graphical le complex manner reduce time complexity 2 1 1.2.3 flexibility prerequisite exible easy graphical gui graphical representation prerequisite providing maximum exibility product twitter bootstrap cs gui prerequisite standard gui easily prerequisite facility move node time exible access website chance expand node time number node prerequisite response prerequisite best provide exibility prerequisite add le enter mail easily add prerequisite search engine 1.2.4 extended prerequisite extended online advertisement ad respective search query prerequisite searched query search prerequisite maser inteligently searching coaching class gre display advertise gre coaching class current location search engine predict search session query manipulate display advertisement recognizing 1.2.5 security prerequisite provide security unauthorized prerequisite updating invalid community driven search engine people contribution engine involve people help solve 1.2.6 community driven search engine helpful community community people prerequisite professional people single people community prerequisite engine 3 1 1.1 proposed 4 2 2 2.1 introductory refered book search engine paper conclude search engine build graph query website help community single click searched build search engine maintain provide prerequisite thing passport provide prereq- uisites build graph easy summarize thing af- ter deciding topic searched total topic searched 2.1.1 market basket search term market basket retail business refers retailer understand purchase behaviour buyer enable retailer understand buyer rewrite store layout develop cross-promotional program capture buyer cross-selling concept apocryphal early illus- trative example wa super market chain discovered customer bought diaper bought beer well diaper beer cooler sale increased dramatically urban legend example professor illustrate concept explanation imaginary phenomenon father buy diaper buy beer well reward kind 5 2 supposedly example mining 2.1.2 filter document indexed individual eld subject analyz- ing tokenizing lters transform normalize eld example removing blank space removing html code stemming removing par- ticular character replacing indexing time well query time similiar operation 2.1.3 jquery ajax cs bootstrap html cascading style sheet cs style sheet language describing presentation semantics formatting document written markup language common style web written html xhtml language applied kind xml document including plain xml svg xul asynchronous javascript xml group interrelated web development technique client-side create asynchronous web ajax web send retrieve server asyn- chronously background interfering display behavior existing 2.1.4 solr lucene apache server side apache lucene free/open source retrieval library originally created java doug cutting supported apache foundation released apache license 2.1.5 neo4j mysql django django free source web framework written python modelviewcontroller architectural pattern lightweight standalone web server development djangos primary ease creation complex database-driven website topic learnt developing prerequisite community driven search engine society neo4j open-source graph database implemented java.the developer de- scribe neo4j embedded disk-based fully transactional java persistence engine 6 2 store structured graph neo4j popular graph database 2.2 advantage prerequisire search engine rst search engine help- full search requisite query form graph.one avail- web site freebase.com community stored form text main aim display short graph format grasp concept easily 2.2.1 disadvantage prerequisite search engine going display form graph main constraint exible display great manner best display best graphical format talk search engine effort fast searching compare existing search engine 7 3 proposed 3 proposed 3.1 prerequisite online community driven engine assist nding precondition varied thing pre-requisites birth certicate passport driving license pursuing master abroad baking pizza search prerequisite display form graph 3.2 wiki provision update add pre- requisite thing stored server provided requested displayed us- ing graph hierarchical accomplishing .the searching based keywords factor location query generated prerequisite extended online advertisement ad respective search query prerequisite searched query search prerequisite maser inteligently searching coaching class gre display advertise gre coaching class current location search engine predict search session query manipulate display advertisement recognizing 8 3 proposed 3.3 business focus implementing thing 1. developing search engine help nding query requisite fast possible.. 2. graph display query output 3. simple implement actual environment 4. ensure simulation process represented 5. accomplish business time parameter 9 4 4 4.1 4.1.1 purpose purpose document provide spec- ication sr prerequisite-a community driven search engine developed b.e document faculty in- ternal document detailed description context usage scenario object description description performance issue de- sign constraint interfacing description 4.1.2 django 2.0 mysql eclipse 4.2.2 ubuntu 12.04 lts lucene python pysolr 4.1.3 2 10 4 cpu core2duo+vt extension memory 1gb disk space 50gb 4.1.4 description basic functionality provided 4.1 proposed step prerequisite search engine basically starting theoretical study decided proved decided implement three step highly intuitive gui developing search engine rst highly intuitive gui prove attractive started gui gui twitter bootstrap main aim prerequisite perfect web product concentrating highly intuitive gui attract search engine gui prerequisite easy understand time happen confused web search complex 11 4 didnt prerequisite minimize providing highly gui simple manner easily understand feel interesting maximum fast backend processing search engine fast impor- tant decide backend efcient traditional sql time exible search engine prerequisite search engine neo4j graph base store graphical format easy retrieval prerequisite web search engine lucene solr apache server full text search le success website search engine depends quick responds query prerequisite care prerequisite complex complex graphical database search fast prerequisite database server serve query fast provide response prerequisite advance tech- nology satisfy watching performance prerequisite indexing search fast ajax call call processing fast ranking displaying graphically fast backend processing query display web form response rank priority decided priority function calculate rank response display rank thinking ranking ranking prefect appropriate manner advantage meaningless ranking connected query search ranking prerequisite going parameter ranking prerequisite consider parameter hit post parameter point view considering parameter improve usability exibility simplicity help save time 12 4 4.2 4.2.1 dfd dfd-0 dfd graphical representation dfd provide clear representation business function 4.2 dfd level-0 context prerequisite search engine main projected multiple client access time dfd-1 4.3 dfd level-1 elaborate picture ow main component retrival 13 4 dfd-2 4.4 dfd level-2 dfd level 2. domain specic main component query filter keyword mapping schema creation keyword storage 14 4 4.3 document describes architectural explains constraint consideration performance characteristic 4.3.1 expected behavior functioning respect actor focus description actor actor special kind class represents static view 4.5 15 4 4.3.2 represents business step-by-step workows component ow control gure 4.6 16 4 4.3.3 parallel vertical process object live simultaneously horizontal arrow message exchanged order occur allows simple runtime scenario graphical manner 4.7 diagram-0 17 4 4.3.4 diagram-1 4.8 diagram-1 18 4 4.3.5 interaction object term sequenced message represent combination class describing static dynamic behavior 4.9 diagram-0 19 4 4.3.6 diagram-1 4.10 diagram-1 20 4 4.3.7 deployment deployment unied modeling language phys- ical deployment artifact nodes.to describe web site example deploy- ment component node exist e.g.a web server server database server component ar- tifacts node e.g web database piece connected e.g jdbc rest rmi 4.11 deployment 21 5 5 implemented django base web ap- pication framework.the api introduced social collaborator authentication purpose facebook gmail mysql database storage provided indexed solr regular basis automatically manually situation suited 5.1 experimental setup experimenatal setup consists laptop machine wireless access.one machine treated server machine acting client server operate prerequisite search engine gure 5.1 22 5 5.2 5.2.1 element re- ferred verication validation verication refers ensure correctly implement specic function validation refers differ- ent ensure built satises customer help knowing function perform average help accurate considered unavoidable 5.2.2 critical element assurance rep- resents ultimate review code generation process involves executing program intent nding error adaptive scheduler includes individual component in- terfaces local boundary condition identify properly integrating individual component simultaneously per- forming regression side integration finally tested 5.2.3 developed afrming validating proper func- tioning search engine product tested keeping mind primary accuracy efciency convenience functionality keywords indexing retrival 5.2.4 strategy unit unit initially focus component individually ensuring function properly unit heavy white-box test- ing technique step conducted parallel multiple component 23 5 unit-testing strategy include local struc- tures boundary condition independent path unit component retrival indexing keywords update integration integration construction individually tested component integrated com- plete package black box technique prevalent integration top-down integration incremental approach con- struction program verifying major control decision point early process bottom integration construction test- ing atomic i.e component lowest level program struc- ture regression re-execution subset conducted ensure change propagated unintended side searching query indexer tokenizer classier integrated product wa tested included specications product white box white box specic input order expose shortcoming analyzing inter- face handle general logical ow control arrive validate robustness white box performed going path check reachable code tested performing removal generic element supplying input absurd 24 5 black box black box ordinary input order verifying reacts consistent concise manner knowledge word term input output presumed knowledge le 5.1 25 5 5.2.5 snapshot 5.2.6 5.2 26 5 5.2.7 screen 5.3 screen 27 5 5.2.8 registration form 5.4 registration form 28 5 5.2.9 add path 5.5 add path 29 5 5.2.10 graph 5.6 graph 30 5 5.2.11 5.7 31 5 5.2.12 step 5.8 step 32 5 code snippet 1 2 3 view 4 5 6 7 8 9 httpresponse querydict 10 db 11 form 12 summ addnew 13 14 15 db 16 prqmethodstep 17 18 19 common common de 20 21 prqmethod prqpath upload file path 22 23 24 25 26 27 29 28 message .debug 30 31 32 33 add 34 add 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 add method method== post frm=addnew post form frm path post pname post post frm frm add permanent addnew html val 33 5 post post html val post frm path frm =frm permanent path addnew html val frm=addnew form frm addnew html val debug frm=addnew form frm addnew html val 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 =none 8 9 8 3 method == method =0 +1 == method method append method method html val post == post permanent =true 34 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 5 101 =none 102 debug gui 8 9 8 3 method == frm=summ frm commit= == requisite reqname= append reqname == step stepname append stepname form frm html req temp= =prqmethod 1 =prqmethod =prqmethod 1 =none methodid =0 post post ==\\n ==13 temp ==1 =2 temp2= temp2+temp temp==temp2 ==0 prqmethodstep 35 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 5 1 prqmethodstep 1 1 =none 1 method 1 1 temp= ==0 =1 ==2 =0 temp=temp+ 171 172 173 =none 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 locname =0 =0 locname 1 method == post post permanent post combo check frm post post frm loc post post post combo frm loc == frm12= append 36 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 5 append loc html frm12 post post == append check username == check password append frm post loc post post post q= post combo 1 == +1 append +1 1 append 1 +1 =0 1 == +1 append +1 1 locname append 1 +1 frm 37 5 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 frm locname commit=true =prqmethod 0 0 post permanent permanent frm2 frm html val frm frm2 frm html val 276 277 278 279 280 method 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 myflag =1 item locname =0 =0 locname 1 debug method == post item post item post post 1 == +1 append +1 38 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 5 1 append 1 +1 =0 1 == +1 append +1 1 locname append 1 +1 post modalsave frm post frm locname commit=true =1 permanent =true post permanent post morereq frm post frm frm locname method commit= == 1 a= b= c=a+b+ d=c+ 1 d=d+ 0 permanent methid 39 5 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 methid methid methid 0 0 methid permanent form frm html val post frm post frm == 2 req post post =req show1 method permanent frm locname method commit=true == 1 show1 method permanent permanent form frm html val post nomorereq frm post post frm frm locname method commit =true == 1 show1 method permanent 40 5 0 0 permanent =true frm= form frm html val == 2 frm 0 0 frm form frm html val 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 upload file path tmp chunk chunk wb+ wb+ chunk 444 445 446 views1.py 41 6 scheduling 6 scheduling 6.1 proposed 1. identication- searching identifying nalizing 2. detailed design- stage level designing 3. coding- actual start stage coding three coding 10- 12 week 4. unit testing- sender host receiver host tested separately text rst image audio 5. integration testing- integrated integrated performed includes evaluation 6. testing- product wa tested context entire performance monitored 7. documentation- detailed document prepared stage 42 6 scheduling gathering initial wa understanding understanding current scenario enterprise gathering gathering preparing preliminary workow deciding execution 43 6 6.2 planning scheduling 6.1 planning 44 7 7 7.1 1. credit score associated 2. motivate add requisite suggestion he/she sponsored path e.g girikand path passport highest ranking 3. android app 4. analytics admin 5. advertise 7.2 1. improve enhance search efciency searching 2. community driven 3. searching center focus 4. gui engineered visualization pre-requisites 45 7 1 relation-based rank semantic web search engine lamberti f. sanna a. demartini c. knowledge transaction volume 21 issue 1 digital object identier 10.1109/tkde.2008.113 publication year 2009 123 136 2 market basket mining method trnka a. networking icnit 2010 publication year 2010 446 450 3 mining market basket dr. m. dhanabhakyam dr. m. punithavalli global journal science volume 11 issue 11 version 1.0 2011 4 social network-based meta search engine ghaderi m.a 2010 5 web search engine rend capra r.g iii 2005 6 http //docs.djangoproject.com/en/dev/intro/tutorial01/ 7 http //twitter.github.com/bootstrap/ 8 http //www.jquerytutorial.in/ 9 http //lucene.apache.org/solr/tutorial.html 10 retrieval william b. frakes ri- cardo baeza-yates pearson education 11 lucene action authors- michael mccandless erik hatcher otis gospod- netic edition 12 jquery action authors- bear bibeault yehuda katz 46", "keywords": ["addnew html", "addnew html val", "apache server", "baviskar mrswapnil", "community community", "community driven", "community driven search", "dfd level", "diagram diagram", "driven search", "driven search engine", "form frm", "form frm html", "form text", "frm frm", "frm html", "frm html val", "frm locname", "frm locname method", "frm post", "frm post frm", "frm post post", "gadkari rahul", "gorakh lonkar", "gorakh lonkar aditya", "graphical representation", "html val", "html val post", "kadam gorakh", "kadam gorakh lonkar", "locname method", "locname method commit", "lonkar aditya", "lucene apache", "main aim", "market basket", "method commit", "post frm", "post frm frm", "post post", "post post frm", "prerequisite search", "prerequisite search engine", "query form", "search engine", "search prerequisite", "solr lucene", "solr lucene apache", "val post", "web search", "web search engine"], "libraries": [], "languages": ["xhtml", "cs", "python", "xml", "sr", "javascript", "basic", "html", "java"], "frameworks": ["django"], "dbs": ["neo4j", "mysql"]}, "./reports/combinepdf.pdf": {"title": "visualization of news", "filename": "./reports/combinepdf.pdf", "data": "visualization news nikhil channa examination seat b120058518 anushree godbole examination seat b120058538 akshay honap gunjan lohiya examination seat b120058554 examination seat b120058584 guidance prof. s.s.pande 2015-2016 visualization news nikhil channa anushree godbole akshay honap gunjan lohiya examination seat b120058518 examination seat b120058538 examination seat b120058554 examination seat b120058584 bonafide prof. s.s. pande fulfilment earlier diploma prof. s.s. pande examiner dr. emmanuel m. acknowledgement great pleasure satisfaction presenting visualization news web single screen happening lot people completely unaware critical news going privilege duty acknowledge kind help guidance received people preparation prepare form valuable help cooperation guidance prof. s. s. pande special prof. v.r jaiswal prof. shantanu pathak mr. sridhar pathak mr. praful ilamkar valuable support.we directly indirectly helped completion submission mr. nikhil channa ms.anushreegodbole mr.akshayhonap ms. gunjanlohiya ii -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- acknowledgement -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- ii -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- iii -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- iv abbreviation -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 1 1.1 1.2 1.3 title background relevance undertaken 1 2 2 3 2 3 background review framework 2.2.1 foundation 2.2.2 java spring 1.4 2.1 2.2 2.3 programming language 2.3.1 java 2.3.2 javascript 2.3.3 java servlet 2.3.4 html 2.3.5 cs 2.4 platform 2.4.1 amazon web service 2.4.2 amazon ec2 2.4.3 amazon s3 2.5 2.5.1 eclipse ide 3.1 3.1.1 purpose 3.1.2 3.1.3 3.2 general descripction 3.2.1 product function specification 4 5 6 6 7 8 8 8 9 10 11 11 11 12 12 13 13 14 14 15 15 16 16 4 5 3.2.2 general constraint 16 3.2.3 17 3.3 specific 3.4 3.5 3.6 3.7 4.1 3.3.1 3.3.2 3.3.2 non-functional constraint logical database 4.1.1 term block 4.2 4.3 4.4 5.1 class pert 5.1.1 5.2 5.2.1 server side 5.2.2 middle layer 5.2.3 ui layer 5.3 implemented 5.3.1 categorization 5.3.2 prioritization 17 17 17 18 18 19 20 20 21 21 22 24 26 27 28 28 28 28 29 29 29 30 6 7 6.1 6.2 5.3.3 zooming 5.3.4 5.3.5 news resemblance 5.3.6 location evaluation status testig strategy 6.2.1 white box 6.2.2 black box 6.2.3 regression 6.2.4 integrated 31 31 32 32 33 36 36 36 36 37 38 39 3.4.1 4.1.1 4.2.1 class middle layer 4.2.2 class server 4.3.1 server side 4.3.2 ui side 4.4.1 5.1.1 6.1.1 website deployed aws 17 20 21 22 23 24 27 26 33 6.1.2 website deployed aws 34 6.1.3 website deployed aws zooming 6.1.4 website deployed aws weather 34 35 iii illustration 4.4.1 27 iv abbreviation simple storage service elastic beanstalk cloud compute amazon web service hyper text mark-up language asynchronous javascript xml cascade style sheet java script object notation hypertext transfer protocol integrated development environment development toolkit web platform java enterprise edition document object s3 ec2 aws html ajax cs json http ide sdk wtp javaee dom visualization news visualize news collect news website display collectively map pictorial animated format news happening animated fashion people completely unaware critical news going visualizing news quick news people view trending news region screen short help people visualize trending news globe frame going collect news publicly news website trending news map pictorial format keywords news map animation visualization parsing categorization web techonology 2015-16 1 visualization news 1. 1.1. background lot thing happening day people interested thing thing people thing news day innovation disaster tournament thing happening people updated thing today news leading source knowledge global affair people people view website searching news website provide single screen showing news segregate news region switch region view news area national news website provide news country news news provided textual format read understanding happened 1.2. relevance website provide news single screen google news map viral nova news textual format news map news arrange form grid difficult search news understand viral nova site viral news news doe graphically visualize news focus visualizing news form image video animation pictorial visualization news allows understand news glance techonology 2015-16 2 visualization news example visualizing suppose ipl cricket league going india map symbol/icon ipl displayed india flood russia icon depicting flood water read news understand visualization visualization quick better understanding 1.3 undertaken view website map showing top news pictorial/animated format clicking icon news read clicking read window showing clicked icon website option provided read news news website switch website visit website provided single screen interested news region zooming map region functionality provided categorization categorizes news interested viewing news sport select sport category news sport displayed second functionality provided functionality dated news previous news functionality provided website search news title news yesterday functionality provided ultimate provide news single view categorization news reading dated news reading news website visualize news techonology 2015-16 3 visualization news 1.4 organized 2 background 3 4 state 5 describes description 6 7 summarizes achieved techonology 2015-16 4 visualization news 2. background review 2.1 syrvey based paper paper understand ultimately help build product 2.1.1 feng zhao jingyu zhou chang nie heqing huang hai jinsmartcrawler two-stage crawler efficiently harvesting deep-web interfacesieee transaction service computing 2015 paper discus deep web deep web search engine google deep web amount precious accessed registered web engine sparse changing address solve paper proposed stage crawler 2.1.2 hai dong member farookhkhadeer hussain self- adaptive semantic focused crawler mining service discoveryieee transaction industrial informatics 10 2 2014 paper discus heterogeneity ubiquity ambiguity encountered scrapping website paper proposes self-adaptive semantic focused sasf crawler mine selective pattern web ontology learning method gather variety internet 2.1.3 shixia liu weiwei cui yingcaiwu mengchen liu visualization advance challenge springer-vis comput 2014 published 10 2014. techonology 2015-16 5 visualization news paper discus visualization study transforming visual representation visualizing map technique ability interact prompt change map quantitative well qualitative difference number reason advantage animation provided richer visualization static textual technique 2.2 framework 2.2.1 foundation foundation responsive front-end framework foundation responsive grid html cs ui component template code snippet including typography form button navigation component well optional javascript extension foundation maintained zurb.com source foundation emerged zurb develop front-end code faster better 2011 zurb released foundation 2.0 open-source mit license 2012 zurb released major update foundation 3.0.in 2013 zurb released major update foundation 4.0.in 2013 zurb released major update foundation 5.0. working version foundation site released spring 2015.foundation email wa released 2013. foundation apps wa released 2014.foundation wa designed tested numerous browser device mobile responsive framework built sass/scss designer best practice rapid development framework includes common pattern needed rapidly prototype responsive site sas mixins foundation component easily styled simple extend version 2.0 support responsive graphic web adjusts dynamically account characteristic device pc tablet mobile phone additionally 4.0 mobile-first techonology 2015-16 6 visualization news approach designing developing mobile device enhancing web larger screen foundation source github developer encouraged participate contribution platform 2.2.2 java spring spring framework framework inversion control container java platform framework 's core java extension building web top java ee platform framework doe impose specific programming popular java community alternative replacement addition enterprise javabeans ejb spring framework source version wa written rod johnson released framework publication book expert one-on-one j2ee development 2002. framework wa released apache 2.0 license 2003. milestone release 1.0 wa released 2004 milestone release 2004 2005. spring 1.2.6 framework jolt productivity jax innovation 2006. spring 2.0 wa released 2006 spring 2.5 2007 spring 3.0 2009 spring 3.1 2011 spring 3.2.5 2013. spring framework 4.0 wa released 2013. notable improvement spring 4.0 included support java se 8 groovy 2 aspect java ee7 websocket spring framework 4.2.0 wa released 31 2015 wa upgraded current latest version spring framework 4.2.1 wa released 01 sept 2015. `` compatible java 6 7 8 focus core refinement modern web capability '' release candidate version spring framework 4.3 expected 2016. `` final generation general spring 4 java 6+ servlet 2.5+ prepared extended 4.3.x support life 2019 '' techonology 2015-16 7 visualization news programming language 2.3 2.3.1 java object oriented java object java easily extended based object platform independent programming language including c++ java compiled compiled platform specific machine platform independent byte code byte code distributed web interpreted virtual machine jvm whichever platform simple java designed easy learn understand basic concept oop java easy master secure java 's secure enables develop virus-free tamper-free authentication technique based public-key encryption architectural-neutral java compiler generates architecture-neutral object file format compiled code executable processor presence java runtime portable architectural-neutral dependent aspect specification java portable compiler injava written ansi clean portability boundary posix subset robust java effort eliminate error prone situation emphasizing compile time error checking runtime checking 2.3.2 javascript javascript simple versatile effective language extend functionality website range screen visual processing calculating web ease well extended functionality website third party script advantage javascript executed client side code executed 's processor web server saving bandwidth strain web server techonology 2015-16 8 visualization news javascript fast code executed 's processing completed instantly depending javascript web simple prevent memory hog doe processed site 's web server consuming local well server bandwidth javascript easy language javascript language easy learn comprises syntax english dom plenty prewritten functionality object making breeze develop script solve custom purpose extended functionality web third party add-on grease monkey enable javascript developer write snippet javascript execute desired web extend functionality website require included write add-on grease monkey implement web disadvantage security issue javascript snippet appended web execute client server exploit 's restriction modern web standard browser malicious code executed complying restriction javascript rendering varies layout engine render javascript differently inconsistency term functionality latest version javascript rendering geared universal standard variation exist website usability consultant living difference enrages developer daily basis 2.3.3 java servlet techonology 2015-16 9 visualization news java servlet java program extends capability server servlets respond request commonly implement hosted web server web servlets java counterpart dynamic web php asp.net advantage servlets provide generate dynamic document easier write faster provide powerful java exception handling garbage collection servlet enables easy portability web server servlet communicate servlet server web stateless protocol servlet api maintain session disadvantage designing servlet difficult slows writing complex business logic difficult understand java runtime environment server servlets cgi completely language independent protocol write cgis language including java 2.3.4 html html hypertext markup language markup symbol code inserted file intended display wide web browser markup web browser display web 's word image individual markup code referred element people refer tag element pair indicate display advantage advantage browser support html language .easy learn default window n't purchase extra techonology 2015-16 10 visualization news disadvantage create static plain dynamic html write lot code making simple webpage security good html write long code making webpage produce complexity 2.3.5 cs cs stand cascading style sheet style layout font color web file code web easily maintain website requires basic html code generating cs website advantage time saving website attraction loading simplifying html alignment positioning disadvantage changing alignment browser 2.4 platform 2.4.1 amazon web service aws amazon web service aws on-demand computing service cloud pay-as-you-go pricing example server aws log configure secure server 's sitting front aws purchasing electricity power company running generator techonology 2015-16 11 visualization news benefit capacity exactly match pay economy scale lower cost service provided vendor experienced running large-scale network advantage store public private host static website website client-side html cs javascript display doe n't change frequently static website doe n't require server-side php asp.net host dynamic website web app website include classic three-tier web database tier support online training program process business scientific handle peak load 2.4.2 amazon ec2 amazon elastic compute cloud amazon ec2 web service resizable compute capacity cloud designed web-scale cloud computing easier developer amazon ec2s simple web service allows configure capacity minimal friction complete control computing amazon proven computing environment amazon ec2 reduces time boot server instance minute allowing scale capacity computing change amazon ec2 change economics computing allowing pay capacity amazon ec2 developer build failure resilient isolate common failure scenario 2.4.3 amazon s3 techonology 2015-16 12 visualization news amazon simple storage service amazon s3 developer secure durable highly-scalable object storage amazon s3 easy simple web service store retrieve amount web amazon s3 pay storage minimum fee setup cost amazon s3 offer range storage class designed including amazon s3 standard general-purpose storage frequently accessed amazon s3 standard infrequent access standard ia long-lived le frequently accessed amazon glacier long-term archive amazon s3 offer configurable lifecycle policy managing lifecycle policy automatically migrate appropriate storage class change amazon s3 aws service amazon elastic compute cloud amazon ec2 aws identity access iam well third party storage repository gateway amazon s3 cost-effective object storage wide variety including cloud distribution backup archiving disaster recovery analytics 2.5 2.5.1 eclipse ide eclipse integrated development environment ide base workspace extensible plug-in customizing environment eclipse written java primary developing java develop programming language plugins released term eclipse public license eclipse sdk free open-source eclipse support development tomcat glassfish server eclipse web platform wtp extension eclipse platform developing web java ee techonology 2015-16 13 visualization news 3. specification 3.1 visualization news based completely news glob document focus complete divided three layer sever side layer middle layer front layer server side layer focusing collecting news website bbc news collected news filtered middle layer responding request front layer front layer display news graphical format 3.1.1 purpose purpose document detailed description news visualization explain purpose constraint operate react stimulus visualize amount web single screen happening lot people completely unaware critical news going visualization news intended audience developer sponsorship stakeholder techonology 2015-16 14 visualization news 3.1.2 news visualization news reader designed maximize news reader view local news global news search internet maximizing website efficiency rich meet reader remaining easy understand designed allow read news view category news zoom functionality facilitate browser storage news location 3.1.3 understand product clear sr help view understand proposed purpose analyze focus non-functional general description document functionality product describes informal establish context specification third specific document written developer describes term functionality product document describe product entirety intended audience language techonology 2015-16 15 visualization news 3.2 general description 3.2.1 product function scraper scarper scrape website internet selects webpage title location image body news json creator json creator creates json array news location json array news specific location .json time json file created location .same json file updated news scraped json file dumped aws s3 bucket display news fetching news s3 bucket request front display map 3.2.2 general constraint website website company specific purpose webpage website parsing webpage difficult .to overcome write logic web thick ui layer functionality front .the functionality zoom zoom heavy .index time load heavy function load main challenge ui layer thin making website fast light weight responsive ui today tablet smart phones.computing power mobile phone tablet capable handle load wa early responsive browser compatibility browser responds differently cs cs key rich ui provide browser browser compatibility tackle carefully computing power generated server side layer tb compute amount fast speed computing techonology 2015-16 16 visualization news computation cost cost performance server expensive 3.2.3 2g network bandwidth 16 kb/s 250 mb ram internet access device browser support google map api 3.3 specific 3.3.1 single website google map layout google map api v3 zoom level map view map icon form animation displayed map display news choose category news select drop box provided upper corner functionality click icon provided clicking icon tooltip describes news read link provided div showing description news.3.3.2 device supporting laptop mobile phone tablet browser support hypertext transfer protocol http layer protocol logical link hyperlink node text 3.3.2 device supporting laptop mobile phone tablet browser support hypertext transfer protocol http layer techonology 2015-16 17 visualization news protocol logical link hyperlink node text 3.3.3 product communicate amazon web service s3 bucket dynamo db ec2.ec2 web service resizable computing capacity i.e server amazon canter s3 dynamo db provide storage 3.4 describes specific desired use-case format listed fig.3.4.1 techonology 2015-16 18 visualization news 1 description news displayed viewed primary actor secondary actor server precondition 1. hit website url main 1. log 2. server display map news icon 3. click icon view news 4. short description news displayed 5. click read view news 6. selects category news 7. chooses view backdated news postconditions 1. website alternative 3.5 non-functional news visualization server speed internet capability physical machine determined sponsorship developed assumes apache tomcat8.0 connection web s3 bucket speed reader connection depend characteristic techonology 2015-16 19 visualization news website pc tablet mobile device browser access web performance performance website depending internet connection device reliability backup news server fails reason middle layer source news inside s3bucket availability 24 7 updating .server refresh 10 minute 3.6 constraint robot.txt parsing news website website file located folder server robot.txt file rule regulation access webpage file allows bot parser code scraping request 2000ms bot multiple request server news website denial service bot news trending twitter feed changing millisecond difficult find news tweet follow robot.txt rule computation cost server expensive load balancing technique provided aws cost 60 hour 3.7 logical database text image excellent icon dynamically assigned news map dynamo db database mining relate text icon techonology 2015-16 20 visualization news 4. 4.1 fig.4.1.1 4.1.1 term block cloud cloud word represents internet cloud website news collected crawling web web crawling visiting web website fetching news parser parser par web script format jsoup library api techonology 2015-16 21 visualization news server continuously fetch news converted json file format middle layer middle layer filter json file sort location front display news map requesting news demand s3bucket service provided amazon web service file storage .s3bucket le response time 4.2 class fig 4.2.1 class middle layer techonology 2015-16 22 visualization news fig.4.2.2 class server techonology 2015-16 23 visualization news 4.3 fig 4.3.1 server side techonology 2015-16 24 visualization news fig 4.3.2 ui side techonology 2015-16 25 visualization news 4.4 pert process evaluation review technique fig 4.4.1 duration week sr. 1 2 3 4 5 6 7 8 9 start planning gathering environment setup development iterative code optimization enhancing ui 10 4.4.1project 1 3 2 1 6 1 5 5 techonology 2015-16 26 visualization news 5. 5.1 fig 5.1.1agile 5.1.1 size better small provide small punctual deliverable short period time order build gradually final product good complex customer techonology 2015-16 27 visualization news difficulty define subject change frequently change frequently flexible approach prototype customer fixed time-scale allowing modification deliverable iteration estimation planning iteration planning unit iteration deliverable completed deliverable iteration totally correct refine iteration planned deliverable completed iteration functionality reduced rescheduled 5.2 5.2.1 server side parsing parser news website collect desired i.e title location news description news news image news news stored json file key format parser rule robot.txt news website parsed 5.2.2 middle layer collected parser stored single json file middle layer separate news location news store news location single json file separating news json file location json file named location news e.g news india separated stored field named india.json techonology 2015-16 28 visualization news middle layer communicates ui layer ajax call click icon map middle read json file location sends news title description image news 5.2.3 ui layer ui layer responsible loading displaying google map browser ui layer display icon news news middle layer ui layer responsible displaying news title description map returned middle layer ajax call ui layer display news category select category news desire ui layer filter display news selected category 5.3 implemented 5.3.1 categorization categorization nave bayes classifier naive bayes classification text categorization method classifying news category training category weather sport input program appropriate processing category news predicted naive bayes classifier classifying news category multinomial naive bayes classification multiple unstable weak naive bayes merged create powerful ensemble training intersection completely mutually exclusive training knowledge predict category news theorem level description classifier implemented described navebayes class techonology 2015-16 29 visualization news main text classifier implement method train predict responsible training classifier prediction class responsible calling appropriate method pre-process tokenize document training/prediction navebayesknowledgebase object output training naivebayesknowledgebase object store naive bayes classifier document object training prediction text internally stored document object document object store token word document statistic target classification document featurestats object featurestats object store statistic generated extraction phase statistic joint count class class count total number observation training featureextraction class class responsible performing extraction class calculates internally statistic classification stage stats cached returned featurestats object avoid recalculation texttokenizer class simple text tokenization class responsible preprocessing clearing tokenizing original text converting document object 5.3.2 prioritization news website visited destination web news portal created daily basis preference news detecting unbiased news keep happening hard distinguish news news portal preference reporting event techonology 2015-16 30 visualization news property detecting ranking news time awareness piece news change time dealing stream fresh news story considered news article clustered event partially covered source news article weighted size cluster belongs measure authority source assign news source news article produce piece news coming bbc authoritative article coming gossiping portal bbc producing good story visually news occupies visually homepage headline news diversity event reported number source news reporting event covered small number source 5.3.3 zooming view map news popped regional news region zooming functionality zooming functionality provided news region consider example india interested indian news zoom india regional news zooming functionality provided country level 5.3.4 news portal provide search bar functionality backdated title term news search bar read news happening previous day yesterday news day yesterday news reason functionality implemented techonology 2015-16 31 visualization news selected happened functionality everydays scrapped news stored s3 bucket bucket day mapping ui s3 bucket dynamodb selected query dynamodb fired dynamodb mapped bucket 5.3.5 news resemblance people read news news portal picture differ portal portal news diverting people portal news resemblance functionality fulfil news news channel clicking read option form logo news portal read news site frame 5.3.6 location visualizing news putting map exact location news happened news channel provide news continent wise exact location purpose created bag word country city time country news title title input code matched bag word location extracted mapped csv file store lac city country exact latitude longitude news mapped location techonology 2015-16 32 visualization news 6 evaluation 6.1 status completed mark developed decided phase built functionality deployed aws ec2 instance snapshot current development deployed aws fig 6.1.1 screenshot website deployed aws techonology 2015-16 33 visualization news fig 6.1.2 screenshot website deployed aws news fig 6.1.3 screenshot website deployed aws zooming techonology 2015-16 34 visualization news fig 6.1.4 screenshot website deployed aws weather snapshot showing animated icon visualizing news map news fetched website bbc toi cnn huffington post provided functionality selecting category news option directly reading news news portal provided techonology 2015-16 35 visualization news strategy 6.2 6.2.1 white box white-box clear box glass box transparent box structural method working opposed functionality i.e black-box white-box perspective well programming skill tester chooses input exercise path code determine appropriate output analogous node circuit e.g in-circuit ict .white-box applied unit integration level process white box checked parser checked parameter news location news body title wa retrieved correctly checked empty field repetition field checked correctly inputted database 6.2.2 black box black-box method examines functionality peering working method applied virtually level unit integration acceptance typically comprises higher level dominate unit well specific knowledge 's code/internal programming knowledge general tester aware supposed aware doe checked basic working naive bayes classifier comparing actual category news wa satisfactory level 80 accuracy wa achieved 6.2.3 regression regression seek uncover bug regression existing non-functional area techonology 2015-16 36 visualization news change enhancement patch configuration change purpose regression ensure change mentioned introduced fault main reason regression determine change affect website parsed regression check code desired output middle layer code wa tested phase checked news database wa correctly fetched classification correctly displayed browser window 6.2.4 integrated integration called integration abbreviated phase individual combined tested group occurs unit validation integration input unit tested group larger aggregate applies defined integration aggregate delivers output integrated ready parsing website independently performed integration check code wa working functionality implemented correctly checked hidden uncovered bug error code techonology 2015-16 37 visualization news 7. focus gathering news news source web displaying news form visualization achieved mark fetch display news form animation channel bbc toi cnn huffington post complex variant naive bayesian classification news classified category help ensemble ranking news top priority displayed news article news portal single frame backdated news zooming country level regional news achieved deployed aws fetch news site enable zooming functionality city level display news techonology 2015-16 38 visualization news 8. 1. feng zhao jingyu zhou chang nie heqing huang hai jin smartcrawler two- stage crawler efficiently harvesting deep-web transaction service computing 2015 2. hai dong member farookh khadeer hussain self-adaptive semantic focused crawler mining service discovery transaction industrial informatics 10 2 2014 3. shixialiu weiweicui yingcaiwu mengchen liu visualization advance challenge springer-vis comput 2014 published 10 2014 4. http //aws.amazon.com 5. http //blog.datumbox.com/developing-a-naive-bayes-text-classifier-in-java 8.1 bibliography 1. parsing news website www.jsoup.org/cookbook 2. reading/writing json file org.json.simple manual techonology 2015-16 39", "keywords": ["amazon ec", "amazon web", "amazon web service", "bayes classifier", "category news", "click icon", "cs cs", "description news", "display news", "document object", "examination seat", "general constraint", "hai dong", "huang hai", "hypertext transfer", "hypertext transfer protocol", "java servlet", "json file", "layer display", "location news", "map news", "middle layer", "mobile phone", "naive bayes", "naive bayes classifier", "news article", "news category", "news fig", "news form", "news location", "news location news", "news map", "news map news", "news news", "news news portal", "news portal", "news region", "news resemblance", "news title", "news website", "nikhil channa", "programming language", "read news", "regional news", "screenshot website", "semantic focused", "single screen", "source news", "spring framework", "techonology visualization", "techonology visualization news", "transfer protocol", "trending news", "ui layer", "view news", "visualization news", "visualizing news", "web platform", "web server", "web service", "website website", "zhou chang", "zooming functionality"], "libraries": [], "languages": ["php", "clean", "cs", "xml", "c++", "small", "sr", "javascript", "basic", "html", "java"], "frameworks": ["react"], "dbs": []}, "./reports/DecentralizedFileSharing_FinalReport.pdf": {"title": "decentralized file sharing", "filename": "./reports/DecentralizedFileSharing_FinalReport.pdf", "data": "decentralized file sharing sharayu shinde examination seat b120058633 pooja patil examination seat b120058607 jayashree saraf examination seat b120058624 guidance prof. m.r.khodaskar 2015-2016 decentralized file sharing sharayu vikas shinde examination seat no.b120058633 pooja parmeshwar patil examination seat no.b120058607 jayashree ramdas saraf examination seat no.b120058624 bonafide prof. m.r.khodaskar earlier diploma m.r.khodaskar dr. emmanuel m. dr. p.t examiner ii acknowledgement great pleasure satisfaction presenting decentralized file sharing prof. m.r.khodaskar advice guidance tireless support ensuring completion mentor mr. prashant sachdev guidance help great honor presenting dr. p.t.kulkarni forgetting hod dr. emmanual m. committee member staff friend scalable job providing modern latest special prof. s.s.pande valuable support ms. sharayu vikas shinde ms. pooja parmeshwar patil ms. jayashree ramdas saraf iii 4.1 decentralized file sharing 15 4.2 class decentralized file sharing 16 4.3 sign 17 4.4 file selection 18 4.5 file uploading 19 4.6 pert char 21 5.1 file segmentation encryption 25 5.2 sha256 25 5.3 aes step 27 5.4 dht example 28 6.1 snapshot file uploaded 29 iv illustration 4.1 pert 20 6.1 unit account maintenance 30 6.2 unit file encryption/decryption 31 6.3 unit segment file piece 31 6.4 unit distributes hash generation 32 6.5 integration 1 32 6.6 integration 2 33 abbreviation p2p peer peer rwd responsive web tl transport layer security ssl secure socket layer tcp transmission control protocol ip internet protocol dht dynamic hash html hyper text markup language cs cascading style sheet ftp file transfer protocol gui graphical sha secure hash aes advanced encryption standard decentralisation process redistributing dispersing function power people thing central location authority decentralization area response centralized motive create platform allows share store network centralized server text audio contact image loaded distributed network decentralized apps dapps potential self-sustaining empower stakeholder invest development dapps conceivable decentralized apps payment storage bandwidth cloud computing day surpass valuation multinational corporation visa dropbox comcast amazon currently active space keywords decentralization sharing storing distributed network -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- acknowledgement -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- ii -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- iii -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- iv abbreviation -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- title 1 1 1.1 background 2 1.2 relevance 3 1.3 undertaken 4 1.4 4 2 background review 2.1 5 2.2 framework 8 2.2.1 tomp2p 8 2.2.2 zend framework 1.11.0 8 2.3 programming language 9 2.3.1 php 9 2.3.2 java 9 2.3.3 html/css 9 2.4 platform 10 2.5 10 2.5.1 github 10 3 specification 3.1 11 3.2 general descripction 11 3.3 specific 12 3.3.1 12 3.3.2 12 3.4 12 3.5 non-functional 12 3.6 constraint 13 3.7 logical database 14 4 4.1 15 4.2 class 16 4.3 17 4.4 pert 20 5 5.1 22 5.1.1 file segmentation-slice 22 5.1.2 hashing sha-256 22 5.1.3 distributed hash 22 5.1.4 pastry 23 5.2 24 5.2.1 account maintenance 24 5.2.2 segment file block 24 5.2.3 generating unique key 25 5.2.4 encryption/decryption 26 5.2.5 distributed hash 27 6 evaluation 6.1 status 29 6.2 testig strategy 29 6.2.1 unit 30 6.2.2 integration 32 7 34 35 decentralized file sharing technology-information technology-2015-16 1 1. decentralisation process redistributing dispersing function power people thing central location authority decentralization area response centralized create platform allows share store network centralized server text audio contact image loaded distributed network decentralized apps potential self-sustaining empower stakeholder invest development dapp conceivable decentralized apps payment storage bandwidth cloud computing day surpass valuation multinational corporation visa dropbox comcast amazon currently active space 1.1 background decentralised theory lower level component operate local accomplish global global pattern behaviour emergent property dynamical mechanism local component indirect central ordering influence 05 decentralized computing allocation individual workstation office location contrast centralized computing exists majority function remote centralized location decentralized computing trend modern day business environment opposite centralized computing decentralized file sharing technology-information technology-2015-16 2 wa prevalent early day decentralized benefit conventional centralized network 05 peer-to-peer p2p computing networking distributed partition workload peer peer equally privileged equipotent participant form peer-to-peer network node peer portion processing power disk storage network bandwidth directly network participant central coordination server stable host peer supplier consumer contrast traditional client-server consumption supply divided emerging collaborative p2p going era peer thing sharing diverse peer bring unique capability virtual community empowering engage greater accomplished individual peer beneficial peer p2p domain wa popularized file sharing napster originally released 1999. concept inspired philosophy area human interaction distributed networking distributed computing network `` distributed '' programming worked spread implemented network .prior emergence low-cost desktop power computing wa generally centralized centre exist distribution networking operate efficiently mix desktop workstation local area network server regional server web server server popular trend client/server computing principle client decentralized file sharing technology-information technology-2015-16 3 provide capability request provide service client 05 responsive web rwd approach web aimed crafting site provide optimal viewing interaction experienceeasy reading navigation minimum resizing panning scrollingacross wide range device desktop monitor mobile phone responsive web amount mobile traffic account half total internet traffic trend prevalent google begun boost rating site mobile friendly search wa mobile device net penalizing site mobile friendly developing decentralized distributed p2p responsive web sharing contact file message image music .this based creating decentralized allow store share file block-chain network peer-to-peer file-sharing network enable publish share file file music video distributed downloads provide protection robust downloading experience split file multiple destination allow cooperation downloader 's file broken encrypted stored network 1.2 relevance developing web control security file sharing decentralized file sharing property transparent wide storage distributed network file uploaded decentralized file sharing technology-information technology-2015-16 4 third party interference decentralized centralized server needed interference third party 1.3 undertaken developing decentralized distributed p2p responsive web sharing contact file message image music .this based creating decentralized allow store share file block-chain network peer-to-peer file-sharing network enable publish share file file music video distributed downloads provide protection robust downloading experience split file multiple destination allow cooperation downloader 's file broken encrypted stored network 1.4 waterfall .model start gathering gather developing .then planning designed pert optimistic pessimistic behaviour designing actual coding unit .after completion performs finally delivery industrial purpose covered background includes three defines specification evaluation mentioned 6. finally decentralized file sharing technology-information technology-2015-2016 5 2. background litrature review 2.1 2.1.1 modeling drop box client behavior glauber gonc 2014 01 i. dropbox currently major player cloud storage market google trend 2 volume search dropbox surpassed search service 2010 suggesting dropbox currently cloud storage service volume traffic generated increasing fast rate example reported dropbox account 4 total traffic network i.e third youtube traffic current focus dropbox major component identified dropbox control server controlled dropbox ii storage server outsourced amazon dropbox store client file amazon cloud sub-domains dropbox.com identify service offering specific functionality 01 file transferred dropbox client server compressed client side order reduce transfer time difference 2 consecutive version file exchanged duplicated file transferred finally transfer encrypted tls/ssl refer dropbox protocol well capability dropbox client decentralized file sharing technology-information technology-2015-2016 6 ii hierarchical dropbox order characterize dropbox client synchronization behavior propose layer hierarchical deconstruct observed workload collection session breaking 1 graphical view proposed client behavior client session start action device identified ip address 3 logout action refer time 2 consecutive session ip address inter-session time 01 dropbox client keep tcp connection notification server continuously opened receiving change performed client start transfer tcp connection ip address notification server identify client presence network session client alternate transfer idle time transfer start client contacting specific dropbox sub-domain file synchronization process transfer broken multiple start short time interval file synchronization startup idle waiting file short time interval i.e 60 second define minimum time threshold consecutive identify transfer client session consecutive ip address time interval 60 second grouped single transfer total synchronization time transfer referred time time interval consecutive transfer session referred intra-session time time 01 sum client behavior component higher session layer client behavior characterized term session duration inter-session time number transfer well time lower transmission layer number transfer well duration volume decentralized file sharing technology-information technology-2015-2016 7 key parameter discus collect datasets dropbox traffic infer parameter 2.1.2 metadisk block chain-based decentralized file storage shawn wilkinson jim lowry contributor tome bolshevik white paper 2014 02 i. metadisk serf non-technical well development plat-form storj network metadisk web api securely upload download file network 02 file encrypted client-side upload process private key provided metadisk web offer assist generating private key metadisk communicates network find storage transfer _le three separate location maintain three time 3x redundancy considered industry standard cloud storage add redundancy extra cost devised record-keeping method offer efficient functionality blockchain store uploads file record upload blockchain explained titled blockchain metadata store file encrypted find sha-256 hash serf unique identifier detect file tampering alteration file occurs uploaded hash fact underlying platform storj network spot check file access directly client hashing ensure received file authentic hash stored blockchain entry 3 storage location file generate hash metadata inserted blockchain protected unauthorized reading copying public key encryption metadata entering network decentralized file sharing technology-information technology-2015-2016 8 encrypted verify hashing malicious spy fake modify 02 ii blockchain metadata store datacoin cryptocurrency blockchain metadata store metadisk network temporary measure replaced point solution storj platform datacoin stored blockchain forever retrieved transaction hash identifier 02 lead blockchain bloat full node store copy transaction blockchain storing megabyte blockchain scale unmanageable size storing single movie file cost uploading dollar worth datacoin flood network credit file stored datacoin network uncensorable survive encyclopedia principle scientific knowledge scalable nature 2.2 framework 2.2.1 tomp2p tomp2p advanced dht store multiple key peer disk-based memory-based store single queried updated secondary key underlying framework java nio handle concurrent connection 2.2.2 zend framework 1.11.0 zend framework source object oriented web framework php 5. zend framework called 'component library decentralized file sharing technology-information technology-2015-2016 9 loosely coupled component le independently zend framework advanced model-view-controller mvc establish basic zend framework 2.3 programming language 2.3.1 php php server-side scripting language designed web development general-purpose programming language php code embedded html code combination web template web web framework php developing web front processing encryption decryption hash generation 2.3.2 java java general-purpose programming language concurrent class-based object-oriented designed intended developer `` write '' wora meaning compiled java code platform support java recompilation java implementing source routing named pastry 2.3.3 html/css html markup language describing web document web html stand hyper text markup language markup language markup tag html document described html tag cascading style sheet cs style sheet language describing presentation document written markup language cs designed enable separation document document presentation decentralized file sharing technology-information technology-2015-2016 10 including aspect layout colour font html cs developing website 2.4 platform operating platform- linux microsoft window platform- java jdk 2.5 2.5.1 github github web-based git repository hosting service offer distributed revision control source code scm functionality git well adding git strictly command-line github web-based graphical desktop well mobile integration access control collaboration bug tracking request decentralized file sharing technology-information technology-2015-16 11 3. requirment specification 3.1 file sharing practice sharing file internet common form file sharing ftp file transfer protocol p2p peer-to-peer file sharing network common form sharing file internet upload file website allow download website decentralized computing allocation individual workstation office location contrast centralized computing exists majority function remote centralized location decentralized computing trend modern day business environment decentralized benefit conventional centralized network responsive web rwd approach web aimed crafting site provide optimal viewing interaction experienceeasy reading navigation minimum resizing panning scrollingacross wide range device desktop monitor mobile phone distributed downloads provide protection robust downloading experience split file multiple destination allow cooperation downloader 's file broken encrypted stored network 3.2 general description developing decentralized distributed p2p responsive web sharing contact file message image music decentralized file sharing technology-information technology-2015-16 12 based creating decentralized allows store share file block-chain network peer-to-peer file-sharing network enable publish share file file music video .distributed downloads provide protection robust downloading experience split file multiple destination allow cooperation downloader 's file broken encrypted stored network 3.3 specific reuirements 3.3.1 processor 2.4-3.4 ghz 4 gb 1600 mhz ddr3 ram desktop 3.3.2 browser internet connection xampp notepad editor 3.4 graphical gui ability find node network file loss maintenance logins download file 3.5 non-functional decentralized file sharing technology-information technology-2015-16 13 1 third party interference remain chance broke single point hacking crime 2 single point failure centralized server avoid single point failure provide larger backup server costly maintenance avoid 3 free service access belongs he/she pay central 4 access diversity individual accessing network centralized require access network uniformly process network support flexibility multiple varied 5 security security critical component network centralized create centralized target security measure protect network centralized easier attack decentralized network multiple location support operating offer better safeguard complete neutralization virus attack decentralized file sharing technology-information technology-2015-16 14 3.6 constraint upload download file preserved i.e loss avoided security primary concern easy perform functionality 3.7 logical database logical database stretch multiple physical hard disk file storage unit single database retrieval purpose logical database hard disk file accessible single source decentralized file access file access his/her file stored multiple node splitting assurance provided security file encrypted format decentralized file sharing technology-information -2015-16 15 4. 4.1 designed describes block contributes creating fig 4.1- decentralized file sharing decentralized file sharing technology-information -2015-16 16 4.2 class fig 4.2 class decentralized file sharing class consist main class share file blockchain hash profile operation include sign sign operate profile add remove update operation uploading downloading setting privacy setting public private delete file select file format text contact image music uploading file split decentralized file sharing technology-information -2015-16 17 segment segment encrypted blockchain blockchain maintains transaction record dht maintains intermediate node transaction 4.3 divided three sign second file selection third file uploading network a. sign fig 4.3- sign sign validation valid profile displayed decentralized file sharing technology-information -2015-16 18 b. file selection- fig4.4 file selection file selection select file file setting privacy decentralized file sharing technology-information -2015-16 19 c. file upload network- fig 4.5 file uploading file uploading file encrypted broken segment distributed blockchain network dht maintained transaction record generated decentralized file sharing technology-information -2015-16 20 4.4 pert pert method analyze involved completing specially time needed complete indentify minimum time needed complete total designed pert 6.1 explain developed three 1.optimistic 2.most 3.pessimistic determined expected day complete optimistic pessimistic expected 4m /6 account maintenance 7 10 15 10.33 segment file piece size 16-bits 11 17 26 17.5 encryption/decryption file 12 20 28 20 distributed hash merkle tree 15 23 30 22.83 block-chain based network managing transaction record 15 20 37 22 total 92.66 4.1 pert decentralized file sharing technology-information -2015-16 21 fig 4.6 pert char decentralized file sharing technology-information technology-2015-16 22 5. 5.1 5.1.1 file segmentation-slice segmented file transfer multi-source file transfer allows retrieving file form block source file input block chain node sliced block fixed size size predefined depends efficiency slicing purpose slice method java script file byte slice file input slice block fixed size 04 5.1.2 hashing sha-256 secure hash variable size input generate 256 bit message digest message digest unique key generate block main advantage sha-256 directly text file input number small change input difference generate digest cryptographic hash function operation digital comparing computed `` hash '' output execution expected hash person determine 's integrity 08 example computing hash downloaded file comparing published hash download modified tampered key aspect cryptographic hash function collision resistance find input hash output 5.1.3 distributed hash distributed hash dht class decentralized distributed lookup service hash key pair stored dht participating node efficiently retrieve associated decentralized file sharing technology-information technology-2015-16 23 key distributed network maintain synchronization node dht dht maintained network node maintains link neighbour node called overlay network store pair key .to store node key retrieve key .to avoid larger traffic generate flooding dht 09 handle issue 1 load balance 2 integrity distributed hash dht class decentralized distributed lookup service hash key pair stored dht participating node efficiently retrieve associated key responsibility maintaining mapping key distributed node change participant minimal amount disruption allows dht scale extremely number node handle continual node arrival departure failure dht form infrastructure build complex service cast cooperative web caching distributed file domain service instant messaging multicast peer-to-peer sharing distribution 09 5.1.4 pastry pastry overlay routing network distributed hash dht key-value pair stored redundant peer-to-peer network connected internet host protocol bootstrapped supplying ip address peer network routing dynamically built repaired redundant decentralized nature single point failure single node leave network time warning chance loss protocol capable routing metric supplied program ping traceroute determine best route store routing decentralized file sharing technology-information technology-2015-16 24 packet routed address keyspace peer node packet routed proper circular ring peer node closest desired destination receive packet peer receives packet route send packet examines leaf route directly correct node fails peer consults routing finding address node share longer prefix destination address peer peer doe contact longer prefix contact died pick peer contact length prefix node numerically closer destination send packet peer number correct digit address increase stay stay distance packet destination grows smaller routing protocol converges 5.2 5.2.1 account manage account ui creates graphical non-technical interact option select file text audio contact image sharing includes option public private share maintains unique block chain node allows perform operation choose file upload uploaded file 5.2.2 segment file block file size blocked fixed size byte block transmitted block-chain network generating digest key segmentation slice method javascript file byte dividing byte 04 decentralized file sharing technology-information technology-2015-16 25 fig 5.1- file segmentation encryption 5.2.3 generating unique key message digest segmented block unique key identification block generated sha-256 message digest algorithm.sha-256 generates based file context file file renamed doesnt affect final digest 08 fig 5.2- sha256 decentralized file sharing technology-information technology-2015-16 26 steps- 1 initialize hash initialize hash initially 2 pre-processing performs operation padding 1 0 0 3 split-it performs splitting message block fixed size block rotated block creates vector size 64 0..64 4 rotation block shifted bit 5 xor-it performs xor block 6 rounding-finally generated rounded generate unique key 5.2.4 encryption/decryption file aes encryption process specially derived key called round key applied operation array hold exactly block encrypted array call state array 11 aes step encryption 128-bit block 1. derive round key cipher key 2. initialize state array block plaintext 3. add initial round key starting state array 4. perform round state manipulation 5. perform tenth final round state manipulation 6. copy final state array encrypted cipher text reason round listed `` final tenth round '' tenth round involves manipulation block encrypted 128 bit aes byte decentralized file sharing technology-information technology-2015-16 27 quantity convert 128 bit 16 byte `` convert `` reality stored operation rsn/aes performed two-dimensional byte array row column start encryption 16 byte round encryption process requires series step alter state array step involve operation called subbytes shiftrows fig 5.3- aes step 5.2.5 distributed hash block-chains bittorrent `` distributed sloppy hash '' dht storing peer contact `` trackerless '' torrent peer tracker protocol based kademila implemented udp note decentralized file sharing technology-information technology-2015-16 28 terminology document avoid confusion `` peer '' client/server listening tcp port implement bittorrent protocol `` node '' client/server listening udp port implementing distributed hash protocol dht composed node store location peer bittorrent client include dht node contact node dht location peer download bittorrent protocol 09 node globally unique identifier `` node '' node chosen random 160-bit space bittorrent info hash `` distance metric '' compare node node info hash `` closeness '' node maintain routing contact small number node routing detailed closer node 's node node dht shave `` '' handful contact node dht send query receive response respond query node node 's routing good node good node node responded query 15 minute fig 5.4- dht example decentralized file sharing technology-information technology-2015-16 29 6. evaluation 6.1 status starting desired form completed cycle development built functionality snapshot developed fig 6.1 snapshot file uploaded snapshot number file uploaded file downloaded member 6.2 strategy phase form development life cycle product tested thoroughly delivered decentralized file sharing technology-information technology-2015-16 30 customer document general strategy adopted product 6.2.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine unit entire function procedure developed input expected output actual output remark 1. registration validation enter registered registration 2. invalid registration enter invalid field registration message pop invalid field display message pop 3. log validation enter password access profile access profile decentralized file sharing technology-information technology-2015-16 31 6.1 unit account maintenance input expected output actual output remark 1. file encryption text file file encrypted encrypted file 2. file decryption encrypted file file decrypted original file 6.2 unit file encryption/decryption input expected output actual output remark 1. file segmentation encrypted text file segment file piece 1kb segmentation 6.3 unit segment file piece 4. invalid log enter incorrect name/ password message pop invalid name/ password display message pop decentralized file sharing technology-information technology-2015-16 32 input expected output actual output remark 1. dht generation segment file distributed hash generated hash distributed hash generated 6.4 unit distributes hash generation 6.2.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision major carrying integration called bottom-up method top-down method bottom integration tested function integrated well initially tested function ui working identifier i1 item encryption file segmentation decentralized file sharing technology-information technology-2015-16 33 input specification select file shared output specification check selected file encrypted proper segmentation environmental network 6.5 integration 1 identifier i2 item encryption file segmentation hash generation input specification generate hash split output specification check hash generated receiver file decrypted downloaded environmental network 6.6 integration 2 decentralized file sharing technology-information technology-2015-16 34 7. 7.1 going develop decentralized responsive web allows share file .this decentralized self-organizing free third party interference allowing third party control source seeking prove distributed decentralization secure efficient propose develop web non-technical seek operate autonomously peer-to-peer network node running open-source code depending public blockchain central database 7.2 extended handle video streaming distributed network centralized server mobile smartphone sharing file block-chain decentralized file sharing technology- technology-2015-16 35 1. glauber gonc modeling dropbox client behavior transaction dropbox 2014 2. shawn wilkinson jim lowry contributor tome boshevski metadisk blockchain-based decentralized file storage white paper 2014 3. olivier heen erwan le merrer christoph neumann stephane onno technicolor rennes france distributed private group transaction distributed 2012 4. http //www.morewords.com/word/storgj/ 5. http //en.wikipedia.org/wiki/decentralised_system 6. http //en.wikipedia.org/wiki/centralized_computing 7. http //en.wikipedia.org/wiki/blockchain 8. http //www.iohash.com/sha 9. http //en.wikipedia.org/wiki/dht 10. http //www.blockchain.com/blockstrap 11. http //www.encryptall.com/encryption-decryption/aes 12. http //www.michaelnielsen.org/ddi/how-the-bitcoin-protocol-actually-works", "keywords": ["aes step", "bittorrent protocol", "block fixed", "block fixed size", "centralized server", "client behavior", "cloud storage", "comcast amazon", "decentralized file", "decentralized file sharing", "distributed hash", "distributed network", "dropbox client", "dropbox comcast", "dropbox comcast amazon", "encrypted stored", "encrypted stored network", "examination seat", "file file", "file piece", "file segmentation", "file selection", "file sharing", "file sharing technologyinformation", "file storage", "fixed size", "hash generation", "jayashree ramdas", "jayashree ramdas saraf", "language php", "markup language", "message digest", "node dht", "parmeshwar patil", "patil examination", "point failure", "pooja parmeshwar", "pooja parmeshwar patil", "programming language", "protocol dht", "ramdas saraf", "responsive web", "segment file", "segment file piece", "sharayu vikas", "sharayu vikas shinde", "share file", "sharing technologyinformation", "sharing technologyinformation technology", "single point", "single point failure", "state array", "stored network", "style sheet", "technologyinformation technology", "text file", "transaction record", "unique key", "vikas shinde", "web rwd", "zend framework"], "libraries": [], "languages": ["php", "cs", "small", "javascript", "basic", "html", "java"], "frameworks": [], "dbs": []}, "./reports/Final Project Report.pdf": {"title": "automatic colorization of gray-  scale images using machine learning", "filename": "./reports/Final Project Report.pdf", "data": "automatic colorization gray- scale image machine learning aditi baraskar akshay arlikatti shivani naik b80058512 b80058504 b80058602 guidance prof. a. m. bagade b.e 411043 affiliated 2014-2015 411043 dissertation automatic colorization gray-scale image machine learning aditi baraskar akshay arlikatti shivani naik b80058512 b80058504 b80058602 record bonafide year 2014-2015 guidance prof. a. m. bagade dr. emmanuel m. hod dr. p. t. examination examiner acknowledgement completion acknowledge people advice impossible complete opportunity prof. a. m. bagade valuable guidance entire duration prof. naman buradkar coordinator prof. m. r. khodaskar providing adept feedback improve express deepest appreciation dr. p. t. dr. emmanuel m. hod providing facility indispensable completion thankful staff member valuable time support comment suggestion persuasion providing facility internet access book aditi baraskar akshay arlikatti shivani naik 1 1 1.1 2 1.2 2 1.3 2 1.4 background 3 1.5 3 2 5 2.1 6 2.2 existing 8 3 proposed 9 3.1 10 3.2 10 3.3 10 3.4 10 3.5 constraint 10 4 12 4.1 step acquire process 13 4.2 subject 13 4.2.1 machine learning 13 4.2.2 image processing 13 4.2.3 lab color 14 4.2.4 detection 15 4.2.5 median filter 16 4.2.6 celery 17 5 18 5.1 19 5.2 19 5.3 dataflow 20 5.4 22 5.5 23 6 30 5.1 31 5.2 experimental setup 33 5.3 screenshots 34 5.4 36 5.5 37 5.6 38 7 41 7.1 approach 42 7.2 8 42 44 8.1 45 8.2 46 9 47 number number 1 comparison method 2 colorization accuracy colorization 8 37 number number 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 dfd level 0 dfd level 1 dfd level 2 class component deployment state machine code snippet extraction code snippet prediction web web upload training image web upload gray-scale image web colorized image quantization predicted output 3 prediction- processing efficiency scheduling gantt 18 18 19 20 21 22 23 23 24 25 26 27 29 30 32 32 33 33 34 36 38 41 symbol abbreviation nomenclature support vector machine red green blue luminance component speeded robust fast fourier transform unified modeling language svm rgb lab pca surf fft dfd automatic image colorization adding color gray-scale image intervention method assigns aesthetically believable color gray-scale image machine learning technique trained extracted colored image trained assign color gray-scale image machine learning technique involve computational time training time involved increase increase resolution image distributed computing order reduce processing time human involvement gray-scale colorization process reduced performance improved distributed environment entertainment sector coloring black white movie vintage image medical mri ct image keywords image colorization machine learning distributed computing gray-scale colorization 1 1 automatic colorization gray-scale image machine learning 1 1 1.1 colorization art adding color monochrome image increase visual appeal image black white photo classic movie scientific illustration coloring grayscale image help better interpretation image range multiple field varying medical entertainment assigning color black-and-white image extremely intricate correct color applied pixel comparing luminance example blue bottle distinguishable green viewed gray-scale year technique ranging completely manual semi-automatic proposed relies human intervention choosing color assigned pixel direction completely automating colorization process machine learning automate process basic principle machine learning machine learn decision 1.2 coloring grayscale image complex involves assigning three-dimensional rgb pixel image indeterminate nature current image colorization technique rely heavily human interaction previous attempt coloring vintage movie time-consuming expensive require inspection single frame ideal coloring require minimum input effort concept machine learning immense direction machine learning approach machine learn provided decision situation basis learnt help saving time effort coloring grayscale image 1.3 despite advance automation process considerable amount manual effort order achieve satisfactory major wa reduce human effort coloring simplify laborious process machine learning intelligently automatic colorization gray-scale image machine learning 2 1 color image based learnt learning performed based image provided coloring video le laborious color multiple frame based training image 1.4 background emphasis machine learning automatic method word devise learning learning automatically human intervention assistance machine learning paradigm viewed programming example machine learning approach clustering k-means optimization pca support vector machine svm classification purpose svms modelled training image provided advantage colorization multifold gray-scale image better interpreted iterative major fixed final product iteration color training image quantized k-means lower color space extracted random pixel stored descriptor descriptor train svms color vs. technique input gray- scale image pixel extracted tested trained svms checking error approximate color pixel assigned 1.5 allow appreciation black white photograph cinema allowing better interpretation modern gray-scale image coloring cctv surveillance footage vintage black white image movie automatic colorization gray-scale image machine learning 3 1 medicine image modality acquire gray-scale image magnetic resonance imaging mri x-ray computerized tomography ct image enhanced color presentation demonstration astronomical photography electron microscopy automatic colorization gray-scale image machine learning 4 2 2 automatic colorization gray-scale image machine learning 5 2 2.1 image colorization comprises recovering colored image grayscale initial color input initial colorization relied heavily interference colorization process performed propagating input colored entire image method quadratic optimization diffusion variational technique main drawback method initialization colorization process completely manually earlier effort color gray-scale image manual pixel assigned specific color deliver precision output time effort involved wa massive attempt automating colorization yielded semi-automatic approach image wa segmented manual input color segment jacob al 1 proposed method semi-automatic segmentation segment image aid colored marker provided color filling method drawback method spatial coherency color transfer lead inconsistent bugeau al 2 proposed patch based method coloring worked principle pixel intensity neighbourhood color approach called exemplar-based method main underlying exemplar-based approach best priori image image point defined domain selecting best match unordered example order best reconstruction missing consists computing weight candidate order realize weighted average drawback approach discontinuity spatial incoherence reconstructed image visible greedy pixel processed independently automatic colorization gray-scale image machine learning 6 2 order eliminate human involvement process effort automating colorizing process ill-posed sense unique colorization gray-scale image prior knowledge common colour prior charpiat al 3 observed automatic segmentation drawback spatial coherency pre-processing step image colorization method allow determine colour area extend image pre-computing segmentation image preferably homogeneous colour region spreading colour user-defined colour point approach involves defining colour function neighbouring pixel typically simple function local gray-scale intensity variation predefined threshold colour edge detected simple efficient framework deal texture image colorization method incorporate texture descriptor satisfactory generally manually criterion edge estimation problematic limited scenario learn variable image colorization modelling order overcome manual assignment fully automatic reduce human intervention coloring process le strenuous colorization approach consists transferring color initial color image considered example color prediction performed luminance channel image final color computed method image statistic machine learning e.g image statistic color transferred minimizing distance based luminance image variation method proposed kabirzadeh sousa blaes machine learning technique hand implemented 4 machine learning colored image input image priori trained image method fall category supervised learning support vector machine color assignment pixel grayscale image preprocessing involve extraction point interest descriptor svms optimization automatic colorization gray-scale image machine learning 7 2 technique pca discard unnecessary descriptor computation involved process proposed distributing computation involved 2.2 existing method manual entire colorization process effort time consuming semi- segmentation automatic thrown shadow texture automatic assignment color color gradient segment decided automatic learn training computational cost proposed image assign color segmented region 1 comparison method colorization automatic colorization gray-scale image machine learning 8 3 proposed 3 proposed automatic colorization gray-scale image machine learning 9 3 3.1 proposed aim building assigns color gray-scale image machine learning approach training extracted training image processing time minimized distributed improves performance 3.2 aesthetically believable color assignment grayscale image reduction processing time distributed environment upload image choice training colorization video colorization 3.3 machine learning technique requires training predicting output purpose require colored image extracted train svms predicting color pixel extended coloring grayscale video principle automatic recognition object pattern implemented 3.4 main reduce human interference process colorizing grayscale image purpose proposed method machine learning automatically color target grayscale image colored training image machine learning time processing distributed computing technique extended colorizing grayscale video well 3.5 constraint constraint automatic colorization gray-scale image machine learning 10 3 proposed requires colored image grayscale image colored input number color color image reduced maximum 32 256 256. automatic colorization gray-scale image machine learning 11 4 4 automatic colorization gray-scale image machine learning 12 4 4.1 step acquire process researching domain learning installing implementing training colorizing input installing perform processing parallel input 4.2 subject 4.2.1 machine learning machine learning subarea artificial intelligence machine learning study learning programming solve directly paradigm seek method hypothesis based example provided emphasis machine learning develop intelligent automating learning based sort observation machine learning comprises training prediction learning categorized supervised unsupervised based input provided supervised learning method training provided input desired output based labelled function prediction designed support vector machine supervised learning classification colored image serve labelled pixel input color treated label support vector machine svms supervised learning example svm training build divide example category trained svms example mapped categorized category built svms number color assigned pixel svm representing color automatic colorization gray-scale image machine learning 13 4 4.2.2 image processing image processing form signal processing input image output image characteristic parameter image represented color rgb hsv lab lab color space image processing 4.2.3 lab color order measure similarity colour metric space colour metric employed associate saturated colour gray level i.e closest unsaturated colour core colour coherency modelling colour space colour expected vary function grey level dark colour projected subset colour share specific brighter grey level colour rgb cmyk xyz l-a-b metric designed express colour coherency psychophysical l- a-b colour space wa historically designed euclidean distance coordinate colour space approximates human perception distance colour accurately l-a-b space three coordinate express luminance lightness consequently grayscale axis stand orthogonal colour axes.the axis extends green -a red +a axis blue -b yellow +b brightness increase bottom top three- dimensional l-channel remains image grayscale input image output colored image quantization k-means image 1 x2 xmn 1 y2 ymn xkn+l ykn+l gray level location euclidean distance 2 d2 automatic colorization gray-scale image machine learning 14 4 choose random center pixel target image pixel clustered center repeat max_iterations pre-defined minimum_error_margin achieved cluster point based minimum euclidean distance chosen center calculate center 4.2.4 detection image include edge corner intensity image detection refers method making local decision specific exists point pixel stored form descriptor surf speeded robust descriptor surf speeded robust robust local detector provide robust description image e.g describing intensity distribution pixel neighbourhood point interest descriptor computed local manner description point interest identified dimensionality descriptor direct computational complexity point-matching robustness/accuracy short descriptor robust appearance variation offer sufficient discrimination positive 128 bit long descriptor good detection account point interest neighbouring pixel window 20x20 pixel considered point interest calculated respect entire window gaussian blur applied window remove noise variance dft calculated window appended descriptor pixel consideration better local extraction pixel region denotes amplitude brightness point automatic colorization gray-scale image machine learning 15 4 variance v= 1/n-1 2 fourier transform image represented frequency component fourier transform encodes amplitude phase frequency component random point channel image generate window extracting point calculate save descriptor point variance fft surf window calculate save color class point 4.2.5 median filter colored image post processing include reducing noise image provide aesthetically smooth image main median filter image entry entry replacing entry median neighboring entry pattern neighbor called window slide entry entry entire image median sorted median m= n+1 /2 n/2 n/2 1 2 odd automatic colorization gray-scale image machine learning 16 4 window surrounding pixel sort neighboring pixel numerical order calculate median neighboring pixel replace target pixel median 4.2.6 celery celery source asynchronous queue based distributed message passing focused real-time operation queue mechanism distribute thread machine queue monitored constantly worker process perform execution unit called executed concurrently worker node celery communicates message broker mediate client worker initiate client add message queue broker delivers worker celery consist multiple worker broker availability horizontal scaling message broker intermediary program translates message formal messaging protocol sender formal messaging protocol receiver rabbitmq source message broker default broker celery automatic colorization gray-scale image machine learning 17 5 5 automatic colorization gray-scale image machine learning 18 5 5.1 server python ver 2.7+ opencv ver 2.4.9+ celery ver 3.1.18+ rabbitmq nodejs cluster node python ver 2.7+ celery ver 3.1.18+ opencv ver 2.4.9+ 5.2 32/64 bit linux clustered processers ethernet network automatic colorization gray-scale image machine learning 19 5 5.3 5.3.1 dfd level 0 1 dfd level 0 5.3.2 dfd level 1 2 dfd level 1 automatic colorization gray-scale image machine learning 20 5 5.3.3 dfd level 2 3 dfd level 2 automatic colorization gray-scale image machine learning 21 5 5.4 1. training 2. coloring training colored image color quantization extraction color quantized k-means reduced pca based number svms trained equal number color coloring target grayscale image trained svms training predict color pixel 4 automatic colorization gray-scale image machine learning 22 5 5.5 5.5.1 5 automatic colorization gray-scale image machine learning 23 5 5.5.2 class 6 class automatic colorization gray-scale image machine learning 24 5 5.5.3 component figure7 component 5.5.4 deployment 8 deployment automatic colorization gray-scale image machine learning 25 5 5.5.5 9 automatic colorization gray-scale image machine learning 26 5 5.5.6 10 automatic colorization gray-scale image machine learning 27 5 5.5.7 11 automatic colorization gray-scale image machine learning 28 5 5.5.8 state machine 12 state machine automatic colorization gray-scale image machine learning 29 6 6 automatic colorization gray-scale image machine learning 30 6 6.1 training pre-processing colored image input training opencv library read training image store channel numpy matrix operation conversion color space rgb lab matrix color space quantization order reduce color space provided image image quantized reduced predefined k-number color apply k- quantization color space reduces number hue 256 256 color color color color label training process extraction extracted n-random keypoints image pixel localized variance surf dft calculated 20x20 window 3 class appended descriptor keypoint pca eliminate redundant reduce number 13 code snippet extraction automatic colorization gray-scale image machine learning 31 6 training initialize k-support vector machine svm quantized color svm trained fit extracted color label coloring preprocessing target gray-scale image input coloring opencv library read target image store single luminance channel numpy matrix extraction training extraction coloring involves generating descriptor pixel grayscale image contrast training descriptor generated single point target image pca eliminate reduce dimensionality prediction pixel error margin trained svm calculated extracted color label associated svm error margin assigned pixel 14 code snippet prediction automatic colorization gray-scale image machine learning 32 6 post processing post processing involves applying median blur assigns median pixel account color neighboring pixel window smoother aesthetic image 6.2 experimental setup distributed computing setup celery parallel computing rabbitmq message broker setup rabbitmq-server namenode server involves adding password host enabling permission rabbitmq-server started listens incoming request order configure node celeryconfig.py file username password host ip address namenode performed parallel configuration file directory source file node celery worker started pick performs rabbitmq queue setup node.js web server serve web port number host web app.js file node server started port number combination server ipaddress portnumber browser network access web automatic colorization gray-scale image machine learning 33 6 6.3 screenshots gray-scale image colorization provided web upload training target image online download colorized output image 15 web web allows upload multiple colored image time image training image 16 web upload training image automatic colorization gray-scale image machine learning 34 6 asked upload target gray-scale image colored 17 web upload gray-scale target image select color option image uploaded process image completion target colorized output image displayed 18 web colorized output automatic colorization gray-scale image machine learning 35 6 6.4 iterative major fixed final product iteration iteration wa separately tested order ensure provide appropriate tested iterative process 1 quantization aim reduce number color image k-means expected output quantization training image aim reduce color space fixed k-number color actual output output image fig 7.0 output quantization comprises n-colors 19 quantization 2 aim training prediction automatic colorization gray-scale image machine learning 36 6 expected output target image assigned roughly appropriate color based training image similarity training image target image play vital role actual output expected 3 aim post processing expected output confirm output prediction optimized actual output noise intermediate image removed extent post processing 6.5 ill-posed nature wa predict color image 20 provided achieve good based localized surrounding individual pixel performance depends training image provided training image target image better highly suitable video colorization automatic colorization gray-scale image machine learning 37 6 20 predicted output 3 6.6 colorization accuracy colorization accuracy wa calculated percentage number pixel wa assign color label matched original colored version gray-scale image 2 accuracy colorization image class image number average accuracy simple object self-images 2 1 96.25 92.15 automatic colorization gray-scale image machine learning 38 6 animal fruit flower cartoon 1 1 2 2 84.89 71.76 62.28 65.75 2 colorization accuracy promising colorization image belonged specific class accuracy coloring simple object self-images architectural image wa wa unable distinguish image plain texture evident cartoon provide lower accuracy prediction automatic colorization gray-scale image machine learning 39 6 performance efficiency distributed processing wa increase efficiency reduce processing time prediction target image wa divided number prediction color label wa separate node 21 time prediction number node processing 21 prediction processing efficiency observed processing time wa reduced 50 2 node perform prediction processing time wa reduced 80 8 node observed prediction time drastically reduces initial increase number node automatic colorization gray-scale image machine learning 40 7 7 automatic colorization gray-scale image machine learning 41 7 6.1 approach phase definition phase ii studying phase iii development training phase iv development colorizing phase parallelizing computational process phase vi performance measurement 6.2 4/ 8 11/ 8 25 /8 8/ 9 29 /9 13/ 10 29/ 10 5/ 1 12 /1 26 /1 2/ 2 finalizing studying concept machine learning image processing review platform selection study opencv python designing 2nd review implement extraction pca 16/ 2 2/3 automatic colorization gray-scale image machine learning 42 7 implementing svm training implementing prediction implementing optimization 3rd review database image implementing video colorization implementing parallel processing celery 2/3 16/ 2 4/ 8 11/ 8 25 /8 8/ 9 29 /9 13/ 10 29/ 10 5/ 1 12 /1 26 /1 2/ 2 22 scheduling gantt automatic colorization gray-scale image machine learning 43 8 8 automatic colorization gray-scale image machine learning 44 8 8.1 color video key-frame colored propagated intermediate frame saving lot effort trained image coloring image training image database training image maintained grayscale image database queried existence image automatic colorization gray-scale image machine learning 45 8 8.2 automatic grayscale colorization help overcome drawback existing automates grayscale image coloring process machine learning technique allows minimal interaction input colored training image segmenting image providing color segment eliminated reducing human intervention entire process ill posed nature wa assign aesthetically believable color gray-scale image class wa provide 90 average accuracy color prediction class wa coloring image variation training image implementing designed coloring video single colored frame training coloring subsequent frame belonging scene provide accuracy minimum effort video colorization order reduce processing time distributed computing prediction processing time wa reduced 75 multiple node distributed platform making viable practical automatic colorization gray-scale image machine learning 46 1 vivek george jacob sumana gupta colorization grayscale image video semi-automatic approach image processing icip 16th international conference 2009 2 bugeau papadakis variational exemplar-based image colorization transaction image processing 23 1 2014 3 charpiat machine learning method automatic image colorization 127 inria sophia-antipolis france 2012 4 austin sousa rasoul kabirzadeh patrick blaes automatic colorization grayscale image stanford electrical 2013 5 t. takahama t. horiuchi h. kotera improvement colorization accuracy partitioning cielab color space advance multimedia processing pcm 2004 5th pacific rim conference multimedia k. aizawa y. nakamura s. satoh 3332 lecture note science tokyo japan 794801 springer 2004 6 t. welsh m. ashikhmin k. mueller transferring color grayscale image siggraph 02 proc 29th annual conf graphic interactive technique san antonio texas 277280 acm press 2002 7 b. scholkopf a. j. smola learning kernel support vector machine regularization optimization cambridge usa mit press 2001 8 s. liu x. zhang automatic grayscale image colorization histogram regression pattern recognit lett 33 13 16731681 oct. 2012. automatic colorization gray-scale image machine learning 47", "keywords": ["actual output", "arlikatti shivani", "arlikatti shivani naik", "assign color", "automatic colorization", "automatic colorization grayscale", "baraskar akshay", "code snippet", "color color", "color grayscale", "color grayscale image", "color image", "color label", "color pixel", "color space", "colored image", "colorization grayscale", "colorization grayscale image", "colorization process", "colour space", "dfd level", "euclidean distance", "grayscale image", "grayscale image machine", "human intervention", "image coloring", "image colorization", "image grayscale", "image machine", "image processing", "learning technique", "machine learning", "machine learning technique", "neighboring pixel", "number color", "output image", "prediction automatic", "prediction automatic colorization", "prediction processing", "process machine", "processing time", "shivani naik", "support vector", "support vector machine", "target grayscale", "target grayscale image", "target image", "trained svms", "training image", "upload training", "vector machine", "video colorization", "web upload", "web upload training"], "libraries": ["numpy", "opencv"], "languages": ["basic", "nodejs", "python"], "frameworks": [], "dbs": []}, "./reports/FINAL PROJECT REPORT_PDF.pdf": {"title": "efficient bandwidth utilization in wireless mesh networks", "filename": "./reports/FINAL PROJECT REPORT_PDF.pdf", "data": "efficient bandwidth utilization wireless mesh network ashish gupta b80058509 chandrika parimoo b80058523 rutuja shah b80058639 sudipto chatterjee b80058526 guidance prof. a. m. bagade b.e 411043 affiliated 2014-2015 411043 dissertation efficient bandwidth utilization wireless mesh network ashish gupta b80058509 chandrika parimoo b80058523 rutuja shah b80058639 sudipto chatterjee b80058526 record bona fide year 2014-2015 guidance prof. a. m. bagade dr. emmanuel m. dr. p. t. hod examination examiner acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting profoundly grateful prof. a. m. bagade expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. naman buradkar coordinator invaluable guidance supported completing grateful mr. abhjit gadgil l3cube entire express sincere heartfelt gratitude staff member helped directly indirectly course ashish gupta chandrika parimoo rutuja shah sudipto chatterjee wireless mesh network wmn emerging couple year cost effective alternative traditional wired access network 802.11s standard wireless mesh network linux kernel form open80211s o11s currently o11s mesh node associated maximum mesh gate single association directs entire traffic node mesh gate associated gate 's bandwidth shared client node consequently throughput client reduced increase number client enabling multipoint-to-multipoint association paper aim improve utilization total bandwidth multiple internet access gateway inside wireless mesh network achieved transparent manner requiring change load network balanced multiple gateway traffic sensitive approach gateway selection conventionally wireless network associating multiple gateway requires multiple wireless nics approach move convention single wireless nic associate multiple internet gateway reducing cost keywords wireless mesh network multi-gateway single radioproposedstep acquire process ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 13 4.2 approachcode snippetfig 2.1 open80211s frame format.. 6 2.2 working hwmp ... 7 5.1 ... 18 5.2 ... ... 19 5.3 ... ... 20 5.4 ... 21 5.5 ... .. 21 5.6 state ... 22 5.7 deployment ... 23 5.8 dfd level 1 ... 23 5.9 dfd level 2 ... 31 6.1 layout experiment ... 32 6.2 experiment 1 graph time v/s link speed ... 33 6.3 experiment 2 graph time v/s link speed ... 33 7.1 gantt 36 6.1 experiment 3 reading 2 clients.. 35 6.2 experiment 3 reading 3 client ... ... 35 1 efficient bandwidth utilization wireless mesh network 1 1 1 efficient bandwidth utilization wireless mesh network 2 1.1 wireless mesh network wmns tremendous growth year reducing wired access network cost effective solution scale deployment emergence community mesh city wide mesh rural deployment demonstrated benefit wireless mesh network existing network addition self-healing self-organizing conventional ad-hoc network wmns superseded network providing capability range extension typical wmn combine fixed network backbone mobile network backhaul wmn mesh station stas called mesh node device 802.11-conformant medium access control mac physical layer phy wireless medium wm mesh station implement mesh facility enhanced function channel access rule frame format mutual authentication method managed object provide transfer autonomously operating station stas direct single instance wireless medium mesh station establish peer-to-peer wireless link forming mesh cloud called mesh basic service mb transfer message mutually mesh station router forwarding traffic mesh station mesh station called mesh gate provide access distribution wireless medium mesh basic service mb open80211s open-source ratified 802.11s wireless mesh standard open80211s wa included linux kernel release 2.6.26 bring wireless mesh networking commodity supported kernel 802.11s consolidate numerous non-interoperable mesh protocol based standard specification 802.11s 802.11s based network hybrid wireless mesh protocol hwmp layer 2 routing based mac address hwmp proactive path selection reactive path selection mesh station transmit frame unknown destination dynamically discover best path destination mesh station proactively discover mb determine best path point mesh cloud needing send frame 1 efficient bandwidth utilization wireless mesh network 3 1.2 order connect network mesh station wmns form layer 3 network associating gateway network traditionally mesh node associated gateway mesh node associate gateway based proximity gateway single association directs entire traffic node mesh gate associated gate 's bandwidth shared client mesh node consequently throughput client reduced increase number client additionally mesh gate common outbound path experience reduction effective link capacity multipoint-to-point nature association additional gateway mesh node effectively wmns self-healing self-configuring layer 3 association mesh node bound gateway dynamic failure mesh gate traffic flowing gateway mesh gate dropped re-routed gateway reached underlying layer 2 network order overcome shortcoming suggests approach effectively capability 802.11s based wireless mesh network efficiently utilize total bandwidth multiple internet access gateway network 1.3 aim multiple mesh gateway network cater mesh client enabling multipoint-to-multipoint association load network balanced multiple gateway traffic sensitive approach gateway selection method route traffic basis mapping mesh gate maintains integrity avoids overhead involved reassembling packet 1 efficient bandwidth utilization wireless mesh network 4 1.4 wmns provide cost solution internet connectivity associating mesh client multiple mesh gate speed response received increase reflected multiple network socket grab file browsing web browser technique bittorrent protocol increase speed acquiring file peer multiple gate leading better utilization bandwidth 2 efficient bandwidth utilization wireless mesh network 5 2 2 efficient bandwidth utilization wireless mesh network 6 1 wireless mesh network discus challenge overcome order leverage benefit state topology control ensure reliable mesh connectivity network self-organization wmns broadband service heterogeneous qos addition end-to-end transmission delay fairness performance metric delay jitter throughput node packet loss ratio considered protocol fig 2.1 802.11s frame format mesh frame format standard 802.11 frame format station indicate parameter main difficulty original source frame final destination frame non-mesh station order mention address mesh frame 6 address 4 address standard 802.11 header 1 2 address specific mesh control field positioned ht control field non-mesh station mesh control field frame body address 1 receiver address ra address 2 transmitter address ta address 3 mesh destination address target mesh station frame ultimate destination address 4 mesh source address mesh originator frame ultimate source address 4 e.g frame mesh source address inside mesh address extension field 2 efficient bandwidth utilization wireless mesh network 7 inside mesh address extension subfield mesh control field address 5 final destination address 6 original source address identical 2 4 address original source final destination mesh station address 4 mesh address extension field host mesh source address 9 hwmp hybrid wireless mesh protocol default routing protocol wlan mesh networking 802.11s compliant device capable routing protocol foundation hwmp adaptation reactive routing protocol aodv layer 2 radio-aware metric called radio metric aodv mesh node mesh portal configured periodically broadcast announcement tree allows proactive routing mesh portal reactive hwmp general concept aodv distance vector method well-known route discovery process route request route reply destination number recognize routing hwmp mac address layer 2 routing protocol ip address hwmp sophisticated routing metric hop count radio-aware metric path metric field included rreq/rrep message cumulative link metric path 10 fig 2.2 working hwmp 2 efficient bandwidth utilization wireless mesh network 8 throughput wireless mesh network increased multiple radio 2 radio associated gateway channel selected frequency diversified high-throughput path improvement throughput capacity selection channel insufficient cost intensive improve capacity reliability network node equipped multiple radio orthogonal channel channel diversity improves performance single-path time increase possibility create multiple interference-free path sender receiver 8 number tcp-flows increase flow-based path allocation superior packet-based allocation tcp equipped mechanism mitigate reordering 3 suggests rann frame order gateway mesh network rann frame captured running monitor mode layer 2 frame lead reception layer 2 frame inspected filter rann frame filtering lead higher processor gateway selection process selects default gateway route traffic node default gateway overloaded change_gateway request associated node node selects gateway 's default gateway effectively single gateway 3 proposed efficient bandwidth utilization wireless mesh network 9 3 proposed 3 proposed efficient bandwidth utilization wireless mesh network 10 3.1 enhance bandwidth utilization wireless mesh network decentralized approach enabling multipoint-to-multipoint association mesh node mesh gate 3.2 establishing proof concept suggested approach gain throughput writing node manager mesh node facilitate mapping gateway choosing efficient method select gateway based capability designing approach collect metric gateway broadcasting client making addition removal gate seamless keeping active consistent selected gateway 3.3 utilizes complete network bandwidth mesh gate routing traffic performed per-flow basis socket opened mesh node mapped mesh gate wmn additional cost single radio mesh support opposed approach mentioned 2 3 8 traffic sensitive routing performed mesh client considering metric broadcasted gate fluid nature mesh gate transparent mesh gate join leave mesh seamlessly fault tolerant network multiple gateway 3 proposed efficient bandwidth utilization wireless mesh network 11 3.4 increase network throughput fault resilience wmns internet bandwidth provided network rectify underutilization bandwidth bridge gap radio level metric higher layer metric effective selection gateway solution transparent 4 efficient bandwidth utilization wireless mesh network 12 4 4 efficient bandwidth utilization wireless mesh network 13 nodeman node wireless mesh network gateway point internet access time nodeman decides on-the-fly gateway request approach adopted nodeman gather network respect gateway sending receiving network internet 4.1 step acquire process collecting gateway capability broadcasting mesh gate frame maintaining mesh gate received mesh gate frame designing node manager provide gate selection logic maintain consistency 4.2 approach multipoint association conventionally wireless mesh network mesh node associated gateway single association directs entire traffic node mesh gate associated gate 's bandwidth shared client node consequently throughput client reduced increase number client additionally mesh gate common outbound path experience reduction effective link capacity multipoint-to-point nature association enabling multipoint-to-multipoint association load network balanced multiple gateway traffic sensitive approach gateway selection based approach order multiple gateway mapped gateway based approach maintains integrity end-to-end semantics tcp traffic overhead involved reassembling packet packet based approach avoided 4 efficient bandwidth utilization wireless mesh network 14 fault tolerant approach fault tolerant approach devised deal unresponsive gateway entire meant inactive gateway routed alternate active gateway transparent exposed failure recovery network delay experienced qos aware traffic sensitive routing characteristic gateway bandwidth latency traffic originating client vary qos mechanism map traffic best gateway capable fulfilling qos incorporated 4.3 1 mesh gate mesh gate collect metric bandwidth latency broadcasted periodic time interval mesh gate bridge wired internet connection wireless mesh gate receives request forwarded mesh client mesh gate forward request destined network wired packet meant gate kernel processing reception response wired mesh gate forward mesh client response meant kernel processing 2 mesh client mesh client process mesh gate frame maintain gate network inactivity gate interval time anti-pong frame mesh gate entry discarded mesh client kerneltap device tap device capture request packet processed kernel node manager 4 efficient bandwidth utilization wireless mesh network 15 node manager encapsulates packet mac header dst mac address selected gate mesh gate selected gate mapping maintained cache packet received node manager checked cache ensure belongs mapped gate packet encapsulated mac header forwarded mesh absence entry cache gate selected gate entry cache packet encapsulated mac header forwarded mesh 5 efficient bandwidth utilization wireless mesh network 16 5 5 efficient bandwidth utilization wireless mesh network 17 5.1 iw version 0.9.4 wpa-supplicant click modular router tc traffic control open80211s gnu/linux kernel version 2.6.26 upwards mesh support ubuntu 14.04 lts 5.2 wireless network card qualcomm atheros ar9285 chipset router ethernet cable pc 32/64 bit 5 efficient bandwidth utilization wireless mesh network 18 5.3 kind mesh node mesh gate mesh gate wired bridged wireless mesh responsible fetching metric attached wired connection bandwidth average latency responsible broadcasting metric mesh network received processed mesh node updating mesh node three 1. gate info maintains mesh gate network 2. gateway selector core component responsible gateway selection basis 3. cache persistent mapping selected gateway 5.1 5 efficient bandwidth utilization wireless mesh network 19 egress traffic mesh node arrives gateway selector selects best gateway consulting gate info cache traffic forwarded selected gateway mesh network network 5.4 fig 5.2 5 efficient bandwidth utilization wireless mesh network 20 fig 5.3 5 efficient bandwidth utilization wireless mesh network 21 fig 5.4 5 efficient bandwidth utilization wireless mesh network 22 fig 5.5 fig 5.6 state 5 efficient bandwidth utilization wireless mesh network 23 fig 5.7 deployment 5 efficient bandwidth utilization wireless mesh network 24 fig 5.8 dfd level 1 fig 5.9 dfd level 2 6 efficient bandwidth utilization wireless mesh network 25 6 6 efficient bandwidth utilization wireless mesh network 26 6.1 order efficiently utilize bandwidth wmn measure gate discovery multipoint multipoint association dynamic addition removal gateway selection gateway fault tolerance considered 1. advertisement gateway broadcasted mac frame conventionally open80211s presence mesh gate detected gate flag broadcasted root announcement rann frame solution mesh gate timely broadcast 's ip address capability mesh node maintain record gateway gateway selection 2. multi-gateway association time mesh node start sending stream socket creation machine local network doe best gate selected basis gate metric node gateway record decide ideal gateway selected based kind egress traffic gateway annotation packet pertaining chosen gateway bound gateway mapping exists till socket transferring gateway fails 's mapping discarded 3. identification unique key differentiate source port machine time serf unique identifier source port number identify packet belongs respecting sending packet specific gateway eliminating overhead packet reassembly 4. persistent mapping maintain dynamic nature mesh network node gate allowed leave join mesh network highlight self-healing self-configuring property mesh network 6 efficient bandwidth utilization wireless mesh network 27 packet routed specific gateway gateway provide better path completion request honour previous mapping source port associated gateway changing gateway confuse machine regard malicious packet packet drop socket avoided mapping port bound gateway local network maintained port remains unused specific timeout interval mapping cleared gateway traffic destined network routed disappearance gate accounted missing layer 2 broadcast received node node wait time interval entry non-broadcasting gate removed gate start broadcasting frame servicing request 5. interoperability solution created compatibility mind existing o11s allows mix node vanilla o11s based solution coexist hitch 6 efficient bandwidth utilization wireless mesh network 28 6.2 code snippet packet processor /* 0 packet destined network received gateway based approach 1 pong beacon gate advertisement beacon gateway metric client maintains gateway mesh network capability 2 antipong beacon broadcasted gateway internet connection client discard entry gateway */ void gatewayselector push int port packet *p packet *q switch port 0 select_gate == null // gate network output 1 .push output 0 .push // gateway assigned packet break 6 efficient bandwidth utilization wireless mesh network 29 1 process_pong kill break 2 process_antipong kill break gateway selector /* port_cache_table store tuple src_port gateway assigned mapped gateway select_gate procedure consult port_cache_table check received packet mapped mapped packet assigned mapped gateway gate assigned cache port_cache_table updated gateway error client */ packet gatewayselector select_gate packet *p int port_index p- has_transport_header 6 efficient bandwidth utilization wireless mesh network 30 uint8_t *ptr uint8_t p- transport_header uint16_t src_port 0 src_port += *ptr //extract src port ptr++ src_port src_port 8 src_port += *ptr //check mapped gateway port_index cache_lookup src_port writablepacket *q p- push_mac_header 14 uint8_t *q_ptr q- uint16_t gates_index // assign mapped gateway port_index -1 gates_index port_cache_table port_index .gates_index // gateway gates.size == 0 gates_index -1 return null // assign gateway update cache 6 efficient bandwidth utilization wireless mesh network 31 gates_index src_port gates.size cache_update src_port gates_index // append ethernet header packet uint8_t 2 0x08 0x00 memcpy q_ptr gate gates_index .mac_address 6 q_ptr+=6 memcpy q_ptr self_mac_address 6 q_ptr+=6 memcpy q_ptr 2 return packet return null nodeman.click //from device classifier fd fd_cl // arp req device // arpresponder resolve request host 's ip // replace host 's ip address mac address fd_cl 0 self_arp_responder queue 1 rrs self_arp_responder 1 discard 6 efficient bandwidth utilization wireless mesh network 32 //arp response device fd_cl 1 1 real_arp_handler /* doe n't sense send arp response kernel fake mac 1 1 1 1 1 1 arp entry entry ip */ //ip device fd_cl 2 print ipfromdevice maxlength 200 checkipheader 14 ipc ipclassifier dst mesh_ip_addr // replace real destination address fake address storeipaddress fake_ip 30 fixchecksums print fd_cl2 maxlength 200 strip 14 etherencap 0x0800 mesh_eth fake_eth kernel_tap //do forward ip packet meant host ipc 1 discard source code repository http //github.com/scar1337/nodeman 6 efficient bandwidth utilization wireless mesh network 33 6.3 order solution experiment emulate working solution real network click modular router o11s base network machine involved client gateway gw1 gw2 server s. client directly reach server communicate gw1 gw2 file stored server client download file fig 6.1 layout experiment experiment 1 mesh network 6.1. link capacity side gw1 gw2 identical varied 100 kbps 1400 kbps downloads 16mb performed link speed gw1 gw2 16 socket ultimately gw1 gw2 simultaneously spitting socket evenly gate scenario server wa mesh network wireless channel wa utilized server leading higher response time client 6 efficient bandwidth utilization wireless mesh network 34 fig 6.2 experiment 1 graph time v/s link speed graph wa created experimental reading clearly gain network download time considered evident graph gain linear underlying link bottleneck 6 efficient bandwidth utilization wireless mesh network 35 experiment 2 setup mesh network 6.1. experiment server wa mesh network server doe participate spectrum sharing 802.11n ht40+ mode wireless networking standard wa order gain higher speed downloads 44.2 mb performed gate gate combined fig 6.3 experiment 2 graph time v/s link speed graph wa plotted experimental reading observed experiment 1 linear gain underlying link capacity bottleneck higher channel capacity 802.11n keeping server network better 6 efficient bandwidth utilization wireless mesh network 36 experiment 3 experiment wa setup experiment 1. client client three client downloading 44.2mb simultaneously time download 44.2 mb 2 client c1 c2 gate gw1 gw2 gw1 gw1+gw2 throttled 600kbps throttle gw1 gw1 gw2 gw1 gw1 gw2 c1 132.1 68.1 62.9 55.4 c2 133 65.6 63.9 66.8 6.1 experiment 3 reading 2 client 3 client c1 c2 c3 gate gw1 gw2 gw1 gw1+gw2 throttled 600kbps throttle gw1 gw1 gw2 gw1 gw1 gw2 c1 186 104 134 89.5 c2 184 103 125 81.3 c3 188 109 139 85.4 6.2 experiment 3 reading 3 client linear gain observed time gate wa le gate time network scale gain reduce gain depend spatial position client gateway 7 scheduling efficient bandwidth utilization wireless mesh network 37 7 7 scheduling efficient bandwidth utilization wireless mesh network 38 week starting 06/2014 07/2014 08/2014 09/2014 10/2014 11/2014 12/2014 01/2015 02/2015 03/2015 04/2015 decide topic exploring current capability wmns deciding 1st review designing solution rough latex implementing node manager bittorrent support experiment performance evaluation 2nd review http support experiment performance evaluation 3rd review packaging final review final fig 7.1 gantt 8 efficient bandwidth utilization wireless mesh network 39 8 8 efficient bandwidth utilization wireless mesh network 40 8.1 patching open80211s code kernel currently solution userspace gateway selection functionality kernel code packet network faster suffer kernel-userspace userspace-kernel cycle basic proposed o11s valuable feedback wa received community http //lists.open80211s.org/pipermail/devel/2015-february/003567.html openwrt openwrt source router firmware approach firmware client process offloaded router help congestion control router-router manage request efficiently balancing load community mesh community multiple internet connection contribute pool aggregated bandwidth reap benefit speed connection 8 efficient bandwidth utilization wireless mesh network 41 8.2 multiple internet access gateway inside wireless mesh network approach unconventional move usual single association gateway measure account multipoint-to-multipoint association include gate discovery gate selection routing fault tolerance fluidity maintaining dynamic self-healing self-organizing nature mesh account gain linear pronounced number p2p file sharing network approach transparently network address translation basis network based open80211s extended b.a.t.m.a.n qos metric ended discussion highly dependent traffic involved require investigation 9 efficient bandwidth utilization wireless mesh network 42 1 ian f. akyildiz xudong wang wireless mesh network magazine 2005 43 s23-s30 2 krishna ramachandran irfan sheriff elizabeth belding-royer kevin almeroth multi-radio 802.11 mesh network acm mobile network 2008 13 issue 1-2 pp132-146 3 stefano maurina roberto riggio tinku rasheed fabrizio granelli tree-based routing multi-gateway association based wireless mesh network 20th annual international symposium indoor mobile radio pimrc'09 2009 1542 1546 4 hiertz g.r.denteneer d.max s.taori r.cardona j.berlemann l.walke 802.11s wlan mesh standard wireless 2010 17 104-111 5 robert morris eddie kohler john jannotti m. frans kaashoek click modular router acm transaction 2000 18 issue 3 263-297 6 open80211s online www.github.com/open80211s 7 click modular router online www.read.cs.ucla.edu/click/click 8 jonas karlsson hurtig giovanni di stasi anna brunstrom andreas kassler interaction tcp reordering mechanism multi-path forwarding wireless mesh network 2012 8th international conference wireless mobile computing networking wimob 2012 276-283 9 jerome henry 80211s mesh networking cwmp white paper 2011 xp002713373 retrieved internet url http //www.cwmp.com/wp-content/uploads/pdf/802.11s_mesh_networking_v1.0.pdf 10 madhusudan singh song-gon lee hoon jae lee non-root based hybrid wireless mesh protocol wireless mesh network international journal smart 2013 7 2 475-483", "keywords": ["address extension", "approach gateway", "approach gateway selection", "associated gateway", "bandwidth utilization", "bandwidth utilization wireless", "efficient bandwidth", "efficient bandwidth utilization", "final destination", "frame format", "gate frame", "gate info", "gate network", "gateway gateway", "gateway mesh", "gateway mesh network", "gateway network", "gateway selection", "gateway single", "gateway single association", "gateway traffic", "gateway traffic sensitive", "gw gw", "hybrid wireless", "hybrid wireless mesh", "internet access", "internet connection", "mac address", "mesh address", "mesh address extension", "mesh client", "mesh gate", "mesh gate frame", "mesh network", "mesh networking", "mesh node", "mesh protocol", "mesh source", "mesh source address", "mesh station", "modular router", "multigateway association", "multiple gateway", "multiple gateway traffic", "multiple internet", "multiple internet access", "multipoint association", "nature mesh", "node manager", "node mesh", "original source", "sensitive approach", "sensitive approach gateway", "single association", "source address", "source port", "traffic sensitive", "traffic sensitive approach", "utilization wireless", "utilization wireless mesh", "wireless medium", "wireless mesh", "wireless mesh network", "wireless mesh protocol"], "libraries": [], "languages": ["basic"], "frameworks": [], "dbs": []}, "./reports/final report.pdf": {"title": "a   nutch+elasticsearch based data retrieval and   reporting of aws service health status", "filename": "./reports/final report.pdf", "data": "nutch+elasticsearch based retrieval reporting aws service health status ms. monika j. deshmukh ms. akanksha a. dhamane mr. niranjan d. ghodke mr. piyush a. golapkar b80058536 b80058538 b80058550 b80058553 guidance prof. k. k. nandedkar b.e 2015 411043 affiliated 2014- 2015 411043 dissertation nutch elasticsearch based retrieval reporting aws service health status ms. monika j. deshmukh ms. akanksha a. dhamane mr. niranjan d. ghodake mr. piyush a. golapkar b80058536 b80058538 b80058550 b80058553 record bonafide year 2014- 2015 guidance prof. k.k.nandedkar dr. emmanuel m. dr. p. t. hod examination examiner acknowledgement profoundly grateful prof. k. k. nandedkar expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing grateful mr. aditya doke e-zest solution allowed company express sincere heartfelt gratitude staff member helped directly indirectly course monika j. deshmukh akanksha a. dhamane niranjan d. ghodake piyush a. golapkar start working amazon cloud service amazon ec2 amazon s3 status service check current status service status previous year currently amazon store 35 day check status 35 day retrieval apache nutch reporting aws health service status aim helping level business view status single service time helpful customer view availability service current time reliability entire active service graphical easy understand manner current status service avail appropriate decision depending status service reliability service scrutinized critical keywords amazon cloud service apache nutch elasticsearch topic ch 1 .. 1.1 need.. 1.2 basic concept 1.3 ... 2 .. 2.1 done.. 2.2 existing 3 proposed 3.1 ... .. 3.2 ... ... 3.3 3.4 ... 4 methodology.. 4.1 step aquire process ... 4.2 approach ... 4.3 5 design.. 5.1 ... ... ... ... 1 2 ... 1 2 2 5 6 7 8 9 10 10 10 11 12 13 13 14 16 17 17 17 5.2 5.3 1 use-case 2 class 3 ... 4 5 6 swim lane ... 7 component ... 8 deployment 9 composite diagram.. 10 interaction ... ... 5.4 database design.. implemetation 6.1 implemetation.. 6.2 ... ... scheduling ... ... ... ... ... ... ... ... .. futire conclusion.. references.. 18 20 20 21 22 23 24 25 26 27 28 29 30 32 33 48 50 52 54 6 7 8 9 fig 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9 5.10 5.11 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9 ... .18 use-case ... ... .20 class ... ..21 diagram..22 ... .23 ... .24 swim lane ... ..25 component ... ... ... ... ..26 deployment ... ... ... ... .27 composite ... ... ... ... ... ... ... ... ... .28 interaction ... 29 nutch script output ... ... ... ... ... ... ... ... ... ... ... ... .38 elasticsearch running output..39 elasticsearch ... .39 crawling screenshot ... 40 elasticsearch plugin console..41 parsing pom.xml file ... ... 42 parsing code snapshot ... .43 generation code snapshot 1 ... .44 generation code snapshot 2 ... .45 6.10 snapshot 1 ... 45 6.11 6.12 6.13 6.14 snapshot 2..46 snapshot 3..46 snapshot 4..47 snapshot 5..47 5.1 7.1 document ... ... ..31 scheduling ... ... .51 1 1 nutch elasticsearch based retrieval reporting aws service health status 1 1 1.1 now-a-days highly rely cloud service store well manipulate cloud provider provide platform service paas service saas infrastructure service iaa amazon web service aws cloud provider cloud service start working amazon cloud service amazon ec2 amazon s3 he/she check service operating status service backtracking service failure decide service aws dashboard service status aim helping level business 1.2 currently amazon store service health 35 day check status 35 day service health longer period provide better check service health current aws dashboard status service check status service he/she entire efficient provide facility query based searching specific 1.3 basic concept amazon amazon web service collection remote computing service cloud computing platform offered internet amazon.com central well-known nutch elasticsearch based retrieval reporting aws service health status 2 1 service amazon ec2 amazon s3 remote computing service offered amazon amazon ec2 amazon s3 amazon rds amazon elasticache amazon elastic mapreduce apache nutch apache nutch source webcrawler crawling website facilitates parsing indexing creating search engine customizing search extensible scalable scalability robustness apache nutch single machine well distributed environment apache hadoop written java find broken link apache nutch create copy visited searching example building find web hyperlink automated manner nutch consists web crawler searcher crawler fetch turn inverted searcher answer search query nutch extensible parse scoring filter custom nutch elasticsearch based retrieval reporting aws service health status 3 1 elasticsearch elasticsearch search server based lucene distributed full text search engine restful web schema- free json document developed java released source distributed multitenant real time search traditional rdbms requires creation reduce execution time query slows process updating overcome issue elasticsearch key concept elasticsearch- node cluster elasticsearch cooperating server collectively server called cluster server forming called node logical elasticsearch store logical divided smaller piece elasticsearch hold located machine spread server built shard shard replica document main stored elasticsearch document analogy relational database document row database document consist field field occur time single document field called multivalued field text number field complex field subdocuments array document stored unique identifier document shard elasticsearch ability subdivide multiple piece called shard shard server spread cluster node nutch elasticsearch based retrieval reporting aws service health status 4 1 replica replica exact copy shard shard replica order increase query throughput achieve availability shard replica 1.4 help find status service time provide graphical format bar graph backtracking service failure assist manner decision service store longer time help access previous record provide support decision making real time nutch elasticsearch based retrieval reporting aws service health status 5 2 2 nutch elasticsearch based retrieval reporting aws service health status 6 2 2.1 apache nutch source web crawler written java find web hyperlink automated manner nutch easy customize search process kind add parameter search depth elasticsearch source full-text search engine written java scalable capable performing real-time search apache solr service currently nutch crawling apache solr complete search engine built top apache lucene combination nutch solr time nutch support integration solr combination nutch crawling extracting solr serving search solr search backend advantage query spell checking suggestion replication easy query time relevancy tuning going elasticsearch integration apache nutch elasticsearch based apache lucene indexer full text search engine key solr elasticsearch solr 1. solr developer community preferred staff maturity 2. solr highly detailed environment wide range plug-in developer community 3. latest version solr 4 designed cloud computing elasticsearch 1. developed focus solr focus extracting generally search nutch elasticsearch based retrieval reporting aws service health status 7 2 2. seek easier create implement search cope '' '' 3. schema-free document-oriented 4. designed cloud era mind 2.2 existing apache nutch highly extensible scalable source web crawler stemming apache lucene main function nutch crawling web indexing currently apache solr addition nutch store crawled major solr real time indexing database integration rich document handling e.g word pdf highly fault tolerent main disadvantage solr scalability impossible achieve scalability solr today rely cloud service saas paas iaa scalable faster fulfill long scalability concerned elasticsearch better alternative solr elasticsearch designed considering cloud overcomes defect solr like- 1. distributed search 2. automatic shard rebalancing 3. nested typing nutch elasticsearch based retrieval reporting aws service health status 8 3 proposed 3 proposed nutch elasticsearch based retrieval reporting aws service health status 9 3 proposed 3.1 nutch elasticsearch based retrieval reporting aws health service status integrate nutch elasticsearch aiming combine nutch web crawler elasticsearch full text search engine analyze crawled nutch elasticsearch generate query output proper gui 3.2 cover generation status service provided amazon service provided amazon categorized geographical region north america south america europe asia pacific aim store current status service i.e service operating wa service resolved service operating explicitly database allowed select region service status selected service selected 3.3 amazon status service check status service he/she search service manually provided amazon store 35 day main availability service status longer period 35 day query based searching generated specific answer query asked form bar graph easy understand nutch elasticsearch based retrieval reporting aws service health status 10 3 proposed 3.4 main develop provide dashboard health service provided amazon attractive friendly format cloud service check status service backtracking failure service health stored period nutch elasticsearch based retrieval reporting aws service health status 11 4 4 nutch elasticsearch based retrieval reporting aws service health status 12 4 researcher status cloud service ranging real time historic number advantage easy quick access relevant query-based output ability store fixed time interval assist decision making 4.1 step acquire process installation ubuntu java apache nutch elasticsearch integration apache nutch elasticsearch crawling link fetching parsing elasticsearch generating json document extracting elasticsearch showing ui 4.2 approach aim provide status cloud service real-time well historic apache nutch crawl website gather elasticsearch search engine amount integrating apache nutch elasticsearch combine crawled injected directly elasticsearch form json object parsing provide answer query approach wa installation ubuntu operating java ant maven installation apache nutch elasticsearch integration apache nutch elasticsearch wa lot tutorial wa complete initially started reading apache nutch elasticsearch understanding working apache nutch elasticsearch helped integration process anticipate happen command wa understanding checking time time making change wa approach integration process nutch elasticsearch based retrieval reporting aws service health status 13 4 major wa setup maven connection elasticsearch server parsing gathered apache nutch included setup maven downloading installing connection parsing examined input json object received apache nutch fixed format output json object generated parsing code implemented logic wa display graphical manner easy view manipulate d3.js javascript library created bar output query involved making java servlets jsp d3.js conjunction relevant making interactive reduce effort searching health status service provide historic assist backtracking failed wa achieved 4.3 1 integration apache nutch elasticsearch integration apache nutch elasticsearch enables store crawled time time elasticsearch integration involves creating environment adding running ant command creates runtime environment apache nutch crawl website gather limit form json object indexed stored elasticsearch crawling indexing scheduled regular interval error occurs error gathered elasticsearch regular gathering help keep elasticsearch up-to-date 2 creating json service parsing crawled elasticsearch form json service bulk separating service associated status involves parsing string elasticsearch maven parsing separate json service status specific service object nutch elasticsearch based retrieval reporting aws service health status 14 4 created indexed elasticsearch maven code java enables separate region provided amazon service separate created enable search operation effective directly assist searching service 3 visualization visualization involves representing status service easy understand manner bar represent status service region status service single graph visualize status service complete day showing variation 24 hour format depend region service selected query based output bar tab switching region javascript library d3.js enables interactive nutch elasticsearch based retrieval reporting aws service health status 15 5 5 nutch elasticsearch based retrieval reporting aws service health status 16 5 5.1 ide eclipse kepler ee 32 bit ubuntu 14.04 lts web crawler apache nutch 1.9 database elasticsearch 1.3.2 server apache tomcat 7.0.57 web browser- google chrome maven repository maven 3.0.5 java 1.6 processor pentium iv processor higher disk space 250 gb hdd higher ram 1 gb higher internet connection mandatory nutch elasticsearch based retrieval reporting aws service health status 17 5 5.2 5.2.1 apache nutch crawling indexing crawled parsed form json object elasticsearch json parsing crawled json object amazon server query processing output generation d3.js fig.5.1 basic nutch elasticsearch based retrieval reporting aws service health status 18 5 amazon health service dashboard fetched apache nutch fetched automatically indexed stored elasticsearch parsed converted json object stored elasticsearch json object generate query output specific query graphical format nutch elasticsearch based retrieval reporting aws service health status 19 5 5.3 5.3.1 use-case fig.5.2 use-case nutch elasticsearch based retrieval reporting aws service health status 20 5 5.3.2 class fig.5.3 class nutch elasticsearch based retrieval reporting aws service health status 21 5 5.3.3 fig.5.4 nutch elasticsearch based retrieval reporting aws service health status 22 5 5.3.4 fig.5.5 nutch elasticsearch based retrieval reporting aws service health status 23 5 5.3.5 fig.5.6 nutch elasticsearch based retrieval reporting aws service health status 24 5 5.3.6 swim lane fig.5.7 swim lane nutch elasticsearch based retrieval reporting aws service health status 25 5 5.3.7 component fig.5.8 component nutch elasticsearch based retrieval reporting aws service health status 26 5 5.3.8 deployment fig.5.9 deployment nutch elasticsearch based retrieval reporting aws service health status 27 5 5.3.9 composite fig.5.10 composite nutch elasticsearch based retrieval reporting aws service health status 28 5 5.3.10 interaction fig.5.11 interaction nutch elasticsearch based retrieval reporting aws service health status 29 5 5.4 database elasticsearch database searching cid 1 concept 1. cluster cluster collection node server hold entire federated indexing search capability node 2. node node single server cluster store participates cluster indexing search capability 3. database relational database mapping defines multiple logical namespace map primary shard replica shard 4. document document basic unit indexed cid 1 database cid 2 cluster amazon_health_services cid 2 node health status cid 2 north_america south_america europe asia_pacific nutch elasticsearch based retrieval reporting aws service health status 30 5 cid 2 document field _id description datatype developer defined unique document service string name+ timestamp service service service status status status service 10 operating 5 wa currently resolved 0 -currently description description status service st start time service failure time service failure 5.1 document string integer string string string nutch elasticsearch based retrieval reporting aws service health status 31 6 6 nutch elasticsearch based retrieval reporting aws service health status 32 6 6.1 aws cloud wide range people client availing aws service individual researcher administrator utility offered aws service historic service easy search understand output graphical format building block apache nutch web crawler elasticsearch server database 1. integration step integration nutch elasticsearch order package integration apache nutch 1.9 elasticsearch 1.3.2 ant jdk 1.6 higher step integrating apache nutch 1.9 elasticsearch-1.3.2 1. download apache-nutch 1.9 source package elasticsearch-1.3.2 package linux 2. install ant package follows- sudo apt-get install ant 3. configure ant needed 4. create folder named directory 5. extract downloaded nutch elasticsearch package 6. apache-nutch 1.9 directory terminal command ant runtime build runtime environment apache nutch cd project/apache-nutch-1.9 ant runtime nutch elasticsearch based retrieval reporting aws service health status 33 6 tree generated directory 7. elasticsearch-1.3.2 directory edit elasticsearch.yml file a. cluster subheading cluster example cluster.name amazon_health_status b. node subheading node example node.name health status c. save file cd project/ elasticsearch-1.3.2/config sudo gedit elasticsearch.yml 8. apache-nutch 1.9 directory edit ivy/ivy.xml file a. add elasticsearch tag org=org.elasticsearch name=elasticsearch rev=1.3.2 conf =*- default version elasticsearch edit rev field appropriate version b. save file cd apache-nutch-1.9/ivy sudo gedit ivy.xml 9. apache-nutch-1.9 conf/nutch-default.xml file note property a. property elasticsearch property b. property plugin.includes c. property http.content.limit cd apache-nutch-1.9/conf nutch elasticsearch based retrieval reporting aws service health status 34 6 sudo gedit nutch-default.xml 10. conf/nutch-site.xml file add property edit add property configuration tag a. add property property http.agent.name /name mynutch /value /property b. elasticsearch property search elastic.host hostname working single machine ip address working cluster tag property elastic.host /name localhost /value description hostname send document transportclient host port defined cluster /description /property c. elasticsearch property search elastic.port port number elasticsearch running tag.default 9300 property elastic.port /name 9300 /value description elasticsearch port number /description /property d. search elastic.cluster add cluster elasticsearch.yml file tag property elastic.cluster /name amazon_health_status /value description cluster discover host potr defined cluster. /description /property nutch elasticsearch based retrieval reporting aws service health status 35 6 e. elasticsearch property search elastic.index valid lowercase tag property elastic.index /name amazon /value f. description default send document to. /description /property elasticsearch property search elastic.max.bulk.docs valid maximum bulk size number document tag property elastic.max.bulk.docs /name 2500 /value description maximum size bulk number documents. /description /property g. elasticsearch property search elastic.max.bulk.size valid maximum bulk size byte tag property elastic.max.bulk.size /name 2500500 /value description maximum size bulk bytes. /description /property h. property http.content.limit field limit byte apache-nutch crawl tag property http.content.limit /name 65536000 /value description length limit downloaded http // protocol byte nonnegative =0 longer truncated truncation confuse setting file.content.limit setting /description /property i. property db.ignore.external.links property nutch elasticsearch based retrieval reporting aws service health status 36 6 db.ignore.external.links /name /value description outlinks leading host ignored limit crawl host seed file /description /property j. property plugin.includes plugin separated property plugin.includes /name protocol-http|urlfilter-regex|parse- html|tika |index- basic|anchor |indexer-elastic|scoring- opic|urlnormalizer- pass|regex|basic /value description regular expression naming plugin directory include plugin matching expression excluded.in include nutch- extensionpoints plugin default nutch includes crawling html plain text http basic indexing search plugins.in order http enable protocol-httpclient aware intermittent theunderlying commons- httpclient library /description /property k. save file cd apache-nutch-1.9/conf sudo gedit nutch-site.xml 11. apache-nutch-1.9 directory terminal command ant runtime build runtime environment apache nutch property ensure active network connection file downloaded cd apache-nutch-1.9 ant runtime nutch elasticsearch based retrieval reporting aws service health status 37 6 12. verify installation nutch apache-nutch 1.9 directory terminal runtime/local folder command bin/nutch cd apache-nutch-1.9/runtime/local bin/nutch expected output fig.6.1 nutch script output 13. apache-nutch-1.9 directory a. runtime/local folder create folder url b. url crawl text document c. example seed.txt url http //status.aws.amazon.com cd apache-nutch-1.9/runtime/local mkdir url touch seed.txt gedit seed.txt 14. start elasticsearch instance follows- nutch elasticsearch based retrieval reporting aws service health status 38 6 cd elasticsearch-1.3.2 bin/elasticsearch expected output follows- fig.6.2 elasticsearch running output 15. web browser load url localhost 9200.you fig.6.3 elasticsearch nutch elasticsearch based retrieval reporting aws service health status 39 6 16. terminal apache-nutch-1.9/runtime/local folder command crawling bin/crawl seeddir crawldir depth noofrounds cd apache-nutch-1.9/runtime/local bin/crawl url crawl depth 3 topn 5 execution command output follows- fig.6.4 crawling screenshot 17. nutch elasticsearch working crawling indexed elasticsearch 18. elasticsearch plugin elasticsearch visualize manage elasticsearch operation install enter command cd elasticsearch-1.3.2 bin/plugin install mobz/elasticsearch-head 19. view elasticsearch browser nutch elasticsearch based retrieval reporting aws service health status 40 6 localhost 9200/_plugin/head fig.6.5 elasticsearch plugin console 20. integration 2. parsing crawled indexed elasticsearch single stream text status aws health dashboard stream needed parsed managed efficiently package parsing eclipse kepler ee maven 3.0.5 jdk 1.6 higher step parsing 1. install maven 3.0.5 sudo apt-get install maven-3.0.5 2. eclipse kepler ee create maven add elasticsearch compiler plugin java version pom.xml file nutch elasticsearch based retrieval reporting aws service health status 41 6 fig.6.6 parsing pom.xml file 3. clean build ensure active network connection downloaded defined pom.xml 4. write code connection elasticsearch create class write parsing code parsing code i. creating 4 region ii crawled text stream parsed entry service crawling iii entry service service status description start time time iv code written java language elasticsearch java apis communicate elasticsearch nutch elasticsearch based retrieval reporting aws service health status 42 6 snapshot parsing code fig.6.7 parsing code snapshot 5. code 3. generation final step generation parsed processing phase designing sophisticated interactive he/she amazon service graphical graphical interpretation informative plain text package parsing eclipse kepler ee maven 3.0.5 apache tomcat 7.0.57 server jdk 1.6 higher programming language java html javascript d3.js servlet nutch elasticsearch based retrieval reporting aws service health status 43 6 step generation 1. eclipse kepler ee create maven add elasticsearch compiler plugin java version pom.xml file 2. clean build ensure active network connection downloaded defined pom.xml 3. write code code i. html jsp designing web ii communicate elasticsearch servlet coding iii draw graph visual interpretation d3.js function control draw interactive graphical shape iv functionality java coding 4. generation code screenshots fig.6.8 generation code snapshot 1 nutch elasticsearch based retrieval reporting aws service health status 44 6 fig.6.9 generation code snapshot 2 5. screenshots fig.6.10 snapshot 1 nutch elasticsearch based retrieval reporting aws service health status 45 6 fig.6.11 snapshot 2 fig.6.12 snapshot 3 nutch elasticsearch based retrieval reporting aws service health status 46 6 fig.6.13 snapshot 4 fig.6.14 snapshot 5 nutch elasticsearch based retrieval reporting aws service health status 47 6 6.2 phase form development life cycle product tested thoroughly delivered customer document general strategy adopted product 6.2.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine working properly unit entire function procedure tested 1 integration apache nutch elasticsearch aim integrate apache nutch elasticsearch crawling amazon service health dashboard expected crawled apache nutch automatically indexed elasticsearch actual expected 2 parsing crawled aim parse crawled format store parsed elasticsearch crawling apache nutch crawled automatically stored elasticsearch crawling expected parsing document elasticsearch parsed stored elasticsearch actual expected 3 generation aim generate bar graph service selected region service selected nutch elasticsearch based retrieval reporting aws service health status 48 6 expected status service asked displayed bar graph actual expected 6.2.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution major carrying integration called bottom-up method top-down method bottom phase combined individual mentioned tested checked operate expected combined nutch elasticsearch based retrieval reporting aws service health status 49 7 scheduling 7 scheduling nutch elasticsearch based retrieval reporting aws service health status 50 7 scheduling duration status study 1st 31st 2014 gathering 1st 20th environment setup 2014 1 integration nutch elasticsearch 20th 21st 2014 working integration 22nd 2014 2nd 2015 2 development maven parsing java 3rd 2015 2015 10th 2015 validation 11th 2015 20th parsing code 2015 3 development gui graph d3.js 21st 15th 2015 integration 16th 31st nutch elasticsearch based retrieval reporting aws service health status 51 8 8 nutch elasticsearch based retrieval reporting aws service health status 52 8 8.1 developed cloud retrieval currently amazon web service source best accuracy easy understand gui apart backtracking failure historic service health easy searching reliability service verified time historic service easily extended cloud service provider easy extensibility apache-nutch web crawler easily configured visit website gathered elasticsearch parsed depending nature practically point mentioned increasing efficiency health service status cloud service provider comparison cloud service provided service provider depending status service alternative service cloud service provider decision making process assisted helping choose best service provider trend 8.2 proposed solution numerous faced cloud service backtracking failed cloud service historic cloud service access reliability service current status service searching status service platform solution easy gui gui interaction extracted elasticsearch backend integration apache nutch elasticsearch form basis gathering storage modified platform discipline individual business nutch elasticsearch based retrieval reporting aws service health status 53 1 oleksii kononenko olga baysal reid holmes michael godfrey mining modern repository elasticsearch acm international conference-2014 2 elasticsearch server 2nd edition rafa ku marek rogoziski 3 amazon web service amazon web service 2014 4 nutch-crawling-and-searching stepwise 5 www.apache.org/nutch 6 www.aws.amazon.com 7 www.mindit.info/integrating-nutch-1-7elasticsearch/ 8 www.elasticsearch.org 54", "keywords": ["akanksha dhamane", "amazon amazon", "amazon cloud", "amazon cloud service", "amazon service", "amazon web", "amazon web service", "apache lucene", "apache nutch", "apache nutch elasticsearch", "apache solr", "apachenutch directory", "aws cloud", "aws dashboard", "aws health", "aws service", "aws service health", "bar graph", "based retrieval", "check status", "cloud service", "cloud service provider", "code snapshot", "directory terminal", "eclipse kepler", "eclipse kepler ee", "elasticsearch based", "elasticsearch based retrieval", "elasticsearch crawling", "elasticsearch form", "elasticsearch integration", "elasticsearch plugin", "elasticsearch property", "elasticsearch property search", "elasticsearch server", "fig snapshot", "fig snapshot nutch", "file cd", "generation code", "graphical format", "health service", "health status", "historic service", "indexing search", "integration apache", "integration apache nutch", "json object", "kepler ee", "niranjan ghodake", "nutch elasticsearch", "nutch elasticsearch based", "parsing code", "piyush golapkar", "pomxml file", "property httpcontentlimit", "property search", "real time", "region service", "reliability service", "save file", "save file cd", "search engine", "service amazon", "service failure", "service health", "service health status", "service historic", "service provider", "service status", "snapshot nutch", "snapshot nutch elasticsearch", "solr elasticsearch", "st th", "status cloud", "status cloud service", "status service", "tag property", "th st", "url crawl", "value description", "web crawler", "web service"], "libraries": [], "languages": ["clean", "javascript", "basic", "html", "java"], "frameworks": [], "dbs": []}, "./reports/FINAL-Project-Report-30-edited-sections.pdf": {"title": "clothing classification system", "filename": "./reports/FINAL-Project-Report-30-edited-sections.pdf", "data": "clothing classification mahendra tanveer singh b-80058591 manali desai sharika khurana b-80058592 b-80058640 guidance prof. v. r. jaiswal fulfilment b.e 2015 411043 affiliated 2014-2015 411043 dissertation clothing classification mahendra tanveer singh b-80058591 manali desai sharika khurana b-80058592 b-80058640 record bona-fide year 2014-2015 guidance __________________ _________________ _________________ prof. v.r jaiswal dr. emmanuel m. dr. p.t hod examination examiner _________________ acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting profoundly grateful prof. v. r. jaiswal expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing grateful mr. danish jahagirdar touchmagix medium pvt ltd. entire express sincere heartfelt gratitude staff member helped directly indirectly course mahendra tanveer singh manali desai sharika khurana ... ii tables.. iii 1. ... 1.1 introduction.. 1.2 1.3 idea.. 1.4 2. survey.. 3. proposed 3.1 ... ... 3.2 ... ... 3.3 ... ... .. 3.4 4. 1 2 2 2 3 4 7 8 8 8 8 9 4.1 step acquire process ... ... 10 4.2 approach.. 10 4.3 ... ... .. 11 5. ... 12 5.1 13 5.2 ... ... .. 13 5.3 block 13 5.4 ... ... .. 14 5.4.1 dfd level 0 14 5.4.2 dfd level 1 15 5.4.3 dfd level 2 15 5.4.4 16 5.4.5 ... 16 5.4.6 ... ... ... ... 17 5.4.7 state ... 17 5.4.8 deployment ... 18 6. 19 6.1 20 6.2 code snippets.. 21 6.3 screenshots ... ... 25 6.4 testing.. 27 6.4.1 unit ... ... ... ... .. 27 6.4.2 integration ... 29 7. 34 8. conclusion.. 36 8.1 37 8.2 ... ... 38 9. references.. 39 extraction real life object making digital purpose aspect finding identifying object interest real-life image properly analyzing crucial purpose exist dont rgba feed real-time image processing identifies individual video feed categorizes his/her clothing based image processing technique identification segmentation well clothing classification basis color pattern provide map real digital prove foundation real-world endeavour assist market trend keywords opencv microsoft visual c++ digital image processing clothing recognition classification 5.1 block diagram.. 14 5.2 dfd level 0 ... 14 5.3 dfd level 1 ... 15 5.4 dfd level 2 ... 15 5.5 diagram.. 16 5.6 5.7 ... .. 16 ... 17 5.8 state 17 5.9 deployment 18 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 screenshot 1 ... 25 screenshot 2 ... 26 screenshot 3 ... 26 screenshot 4 ... 27 error multiple face detected 28 error colour detected correctly.. 29 trend shirt colour ... 32 trend shirt colour ... 32 6.9 trend trouser colour ... 33 7.1 gantt 35 6.1 6.2 6.3 6.4 experiment 1 reading colour pattern shirt static images.. 30 experiment 1 reading trouser colour static image 30 experiment 2 reading colour pattern shirt video feed.. 31 experiment 2 reading trouser colour video feed 31 1 1 clothing classification 1 1 1.1 previous decade witnessed escalation advertisement retail desire people improve standard living well increase financial impetus promotion online shopping impacted market helped increase revenue recognition clothing category appealing emerging intelligent customer profile aided fashion context-aided people identification simple clothing recognition online shopping website flipkart myntra filter colour pattern clothing field attracts increasing interest real-time clothing recognition remains challenging reason involves series difficult sub-problems including face detection tracking human clothing segmentation effective clothing representation second difference clothing category inherently subtle vague human considerable computation discern existing approach 2 focus processing static image single person computational cost tend video contrast strives keep computation affordable video process people real-time proposed tremendous author publish paper coveted conference 1.2 today library exists retrieve raw real-life object real-time classify aim provide retrieve real-time accuracy classify capable exporting format 1.3 initially fetch frame bgr video feed provided webcam digital image processing single optimal frame clothing classification 2 1 implemented opencv library function aimed real-time vision image stored matrix/matrices depending number colour channel respective image pixel intensity fetched matrix/matrices decision making coded c++ real-time availability convenience contour edge detection accurately detecting segmenting human three parts- torso lower body identification classification segmented body lower time complexity classification output stored database respective field 1.4 upcoming field interest clothing detection numerous area 1. marketing trend accumulated clothing recognize pattern trend general public dressing preference beneficial determining clothes sell circumstance 2. security clothing recognize outfit criminal video footage 3. advertisement determining clothes person wearing advertise clothes person 4. gaming entertainment creating avatar profile game analyse clothing avatar 5. online shopping clothing detection detect clothes filter clothing classification 3 2 2 clothing classification 4 2 1. method digital clothing image trace 90 initially people studied segment clothes foreground object region interest provided clothes appearing background rough wa employed context identification finally comprehensive high-level modelling wa presented wa based and-or graph 3 2. opencv opencv source vision library programming function aimed real-time vision library cross platform advantage multi-core processing 2500 optimized includes comprehensive classic state-of-the-art vision machine learning detect recognize face identify object classify human action video track camera movement track moving object find image image database recognize scenery opencv comprehensive source library vision function vision opted matlab 3. visual studio microsoft visual studio integrated development environment ide microsoft source-code editor form designer integrated debugger source-level debugger machine-level debugger opencv configured visual basic coding ease 4. background subtraction technique field image processing vision image 's foreground extracted processing object recognition cue numerous vision example human pose estimation background subtraction generally static background foreground assumed object motion edge detection image processing technique applying background subtraction accurately determine object interest 3 clothing classification 5 2 5. body segmentation clothing segmentation proper human gure alignment prerequisite perform extraction clothing vital recognition accuracy facial recognition detect individual extracted frame identify individual knowledge contour colour edge segment human body three separate torso lower body 1 analysed individually consequent step 6. clothing identification existing texture method focus texture change viewpoint orientation scaling le intra-class pattern intensity variations.for simplicity identify major clothing colour pattern identify basic colour red blue green yellow white black grey cyan purple orange pink addition colour recognize identify pattern category plaid striped plain irregular finally stored file development clothing classification 6 3 proposed 3 proposed clothing classification 7 3 proposed 3.1 create real-time clothing classification image processing library c++ classify human clothes colour pattern 3.2 stage scanning background subtraction body segmentation clothing identification classification storage working rgb video feed normal webcam definition ir camera developing multiple subject single frame optimal selection region interest roi pre-processing image error removal pattern detection wrinkled clothing threshold angle covering maximum colour range clothing 3.3 find appropriate region interest roi background subtraction colour recognition accuracy cover torso region accurate reading percentage colour le additional cost generic rgb feed webcam included portable detection optimized error free condition real-time fluid increase 3.4 intend image processing technique identification segmentation well clothing classification basis colour pattern prove foundation real-world endeavour assist market trend clothing classification 8 4 4 clothing classification 9 4 4.1 step acquire process collecting optimal image frame webcam rgb feed pre-process frame processing computation recognizing roi feeding processing entering classified file 4.2 approach rgb feed input image processing applications/systems ir camera 3d-sensor camera input previous approach clothing classification 2013 3d- sensor camera outcome working rgb feed normal web camera purpose initial capital investment reduced help global scale mass collecting generating accurate real-time approach order flexible developed lower complexity higher accuracy making real time approach eliminates bg subtraction computation heavier approach intelligently locates roi necessity remove background input fault tolerant approach fault tolerant approach devised deal noisy input entire input frame pre- processed reduce noise subject missing computation spending time searching subject frame sure cropped region remains inside image frame avoid erroneous clothing classification 10 4 qos memory leakage awareness extreme circumstance avoid bad experience long time load memory making feasible real-time approach consists releasing previous frame receiving frame dump forward unused avoiding memory leakage 4.3 1 face detection face detection core finding presence subject image frame haar cascade determining presence front facing human frontal face classifier width height face help determining roi processing 2 colour recognition receives cropped roi processing image respective area scanned pixel checked range colour colour recognized displayed form percentage colour amounting maximum percentage higher confidence main colour clothing 3 pattern recognition receives cropped roi processing image hough transform basic pattern recognition source optimized remove error output accurately detects wrinkled clothing optimized pattern recognized categorized vertical stripe horizontal stripe check pattern plain/abstract clothing classification 11 5 5 clothing classification 12 5 5.1 window 7 microsoft visual studio opencv 2.4.8 library 5.2 webcam pc/laptop 32/64 bit 5.3 block consists node collaboration 2 major consists multiple unit i. ii image pre-processing image processing pre-processing play role noise removal optimization factor calculation image processing three unit 1. shirt area detection 2. trouser area detection 3. clothing classification clothing classification 13 5 fig 5.1 block interact svm training calculation svm interacts database store temporary permanent final classified forwarded database 5.4 5.4.1 dfd level 0 fig 5.2 dfd level 0 clothing classification 14 5 5.4.2 dfd level 1 fig 5.3 dfd level 1 5.4.3 dfd level 2 fig 5.4 dfd level 2 clothing classification 15 5 5.4.4 fig 5.5 5.4.5 fig 5.6 clothing classification 16 5 5.4.6 fig 5.7 5.4.7 state fig 5.8 state clothing classification 17 5 5.4.8 deployment fig 5.9 deployment clothing classification 18 6 6 clothing classification 19 6 6.1 primary input provided web camera inbuilt mounted explicitly feed help selecting optimal frame processed worked frame face detection face detection play role selecting optimal frame proper exposure light play crucial role input level essential facial distinctly visible frame face recognition implemented proper maintenance database order avoid redundancy initial image frame video feed processed directly converting image grayscale binary form convert image color space decrease sensitivity image convert rgb image hsv based size face detected bounty factor multiplied size face bounty factor find area interest shirt pant area interest inside square box formed shirt pant area ready classify clothing inside aoi shirt apply color detection hsv detect range lie pre-fed 13 hsv color range color detection percentage color area interest color highest percentage ensuring accuracy pant area interest color detected step pattern detection vertical striped shirt horizontal striped shirt checked shirt plain shirt .the pattern recognized working area interest canny edge detection find edge applied hough area interest detected angle range classify pattern clothing range angle defined detect detected vertical horizontal detected check image continuously multiple people well time pattern clothing visible console color displayed output clothing classification 20 6 window percentage color displayed console window terminated pressing escape key collected text file 6.2 code snippet pixel color 1 intgetpixelcolortype int int int 7 8 int color 9 75 10 color cblack 11 190 27 12 color cwhite 13 53 185 14 color cgrey 15 16 // color 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 14 color cred 25 color corange 34 color cyellow 73 color cgreen 102 color caqua 127 color cblue 149 color cpurple 175 color cpink clothing classification 21 6 33 34 35 // full circle color cred // red 36 return color 37 create shirt region detected face size 1 float shirt_dy 2.1f 2 float shirt_scale_x 1.2f 3 float shirt_scale_y 1.2f 4 5 cvrectrectshirt 6 rectshirt.x rectface.x int 0.5f 1.0f-shirt_scale_x float rectface.width 7 8 rectshirt.y rectface.y int shirt_dy float rectface.height int 0.5f 1.0f-shirt_scale_y float rectface.height 9 10 rectshirt.width int shirt_scale_x rectface.width 11 rectshirt.height int shirt_scale_y rectface.height 12 13 cout `` shirt region `` rectshirt.x `` `` rectshirt.y `` `` rectshirt.x rectshirt.width 1 `` '' rectshirt.y rectshirt.height 1 endl 14 15 // shirt region partly image facebottom rectshirt.y+rectshirt.height-1 16 // shirt region 17 drawrectangle imagedisplay rectshirt cv_rgb 255 255 255 18 detection pattern shirt 1 mat src imageshirt 2 int flag=0 flag1=0 3 mat dst cdst 4 canny src dst 50 200 3 clothing classification 22 6 5 cvtcolor dst cdst cv_gray2bgr 6 7 vector vec2f 8 // detect 9 houghlines dst 1 cv_pi/180 30 0 0 10 11 // draw 12 size_ti 0 lines.size i++ 13 14 float rho 0 theta 1 15 theta cv_pi/180*170 || theta cv_pi/180*10 16 17 18 19 20 21 22 23 24 25 26 point pt1 pt2 double theta sin theta double x0 a*rho y0 b*rho pt1.x cvround x0 1000* -b pt1.y cvround y0 1000* pt2.x cvround x0 1000* -b pt2.y cvround y0 1000* cdst pt1 pt2 scalar 243 16 43 1 cv_aa flag=1 27 theta cv_pi/180*80 theta cv_pi/180*100 point pt1 pt2 double theta sin theta double x0 a*rho y0 b*rho pt1.x cvround x0 1000* -b pt1.y cvround y0 1000* pt2.x cvround x0 1000* -b pt2.y cvround y0 1000* cdst pt1 pt2 scalar 243 16 43 1 cv_aa flag1=1 28 29 30 31 32 33 34 35 36 37 38 39 clothing classification 23 6 iplimage function 1 void drawrectangle iplimage*img cvrect face cvscalar col 2 3 cvpoint p1 p2 4 p1.x face.x 5 p1.y face.y 6 p2.x face.x face.width 7 p2.y face.y face.height 8 cvrectangle img p1 p2 col 2 9 10 11 iplimage *rotateimage iplimage *src iplimage* dst float angle float scale 12 13 // create map_matrix left 2x2 matrix transform 2x1 dimension 14 15 float 6 16 cvmat cvmat 2 3 cv_32f 17 int src- width 18 int src- height 19 20 scale 1.0 scale 1e-20 21 22 scale 1.0f scale 23 0 float scale angle 24 1 float scale sin angle 25 3 -m 1 26 4 0 27 2 w*0.5f 28 5 h*0.5f 29 30 clothing classification 24 6 6.3 screenshots screenshots window display includes 1. main console window window display working size input image number colour channel number face detects break-up colour percentage concerned region pattern shirt displayed console window 2. display window window real-time camera feed faceted human face region interest shirt trouser 3. colour window window video feed converted bgr hsv 4. pattern window small window extreme left pattern classification window region interest canny edge detected output hough window blue fig 6.1 screenshot 1 clothing classification 25 6 fig 6.2 screenshot 2 fig 6.3 screenshot 3 clothing classification 26 6 fig 6.4 screenshot 4 6.4 phase form development life cycle product tested thoroughly delivered customer document general strategy adopted product 6.4.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine unit entire function procedure tested 1 aim check single multiple face video feed clothing classification 27 6 selection image hard disk video camera expected face detected red rectangle drawn face display window actual expected multiple face detected input single image face occurrence error fig 6.5 error multiple face detected 2 aim check colour clothing accurately recognized selection image hard disk video feed expected correct colour detected displayed console window percentage colour actual expected colour detected wa incorrect lighting condition sunlight colour detected blue reality clothing classification 28 6 fig 6.6 error colour detected correctly 3 aim correctly detect pattern shirt expected identifies pattern shirt display console window actual expected button printed shirt pattern wa detected incorrectly 6.4.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision major carrying integration called bottom-up method top-down method bottom clothing classification 29 6 experiment 1 colour pattern static image database 4 shirt plain vertical stripe horizontal stripe checked shirt 280 image colour pattern finding shirt image correct colour percentage correct colour correct pattern percentage correct pattern plain shirt 100 vertical stripe horizontal stripe checked shirt 60 60 60 97 58 55 55 total percentage 280 265 trouser colour 97 96.6 91.6 91.6 94.64 95 47 50 41 233 95 78.33 83.33 69 83.21 clothing image correct colour percentage correct colour trouser 100 92 92 experiment 2 colour pattern detection video feed college event wa live video feed tested finding shirt people correct colour percentage correct colour correct pattern percentage correct pattern plain shirt vertical stripe 56 8 55 8 98.21 100 53 7 94.64 87.5 clothing classification 30 6 horizontal stripe checked shirt 20 16 16 14 total percentage 100 93 trouser colour 80 87.5 93 17 12 89 85 75 89 clothing image correct colour percentage correct colour trouser 100 95 95 trend observed event fig 6.7 trend shirt colour clothing classification 31 6 fig 6.8 trend shirt pattern fig 6.9 trend trouser colour clothing classification 32 7 7 clothing classification 33 7 search sponsorship decide topic deciding 1st review gathering designing rough latex 1 2nd review 2 3 experiment performance evaluation 3rd review final review final jul aug sept oct nov dec jan feb mar apr 2014 2014 2014 2014 2014 2014 2015 2015 2015 2015 fig 7.1 gantt clothing classification 34 8 8 clothing classification 35 8 8.1 detection clothing currently doe detect person wearing shirt t-shirt pant short functionality advantage understanding trend customer additional modification texture clothing detected well gender age complexion customer storage database text file store collected database database method manipulate organize easier processing integration mobile independent laptop extended mobile customer record preference personalized clothing suggestion online retail website clothing classification 36 8 8.2 developed recognize classify clothing basis colour pattern real-time video feed approach unconventional move usual method machine training image matching doe require image stored database save lot space real-time video feed static image process collecting speeded extent compromising accuracy tremendous polishing revolutionary collection analyzing customer retail store mall clothing classification 37 1 yang x. yuan s. tian y. assistive clothing pattern recognition visually impaired people transaction human-machine 44 2 2014 234-243 2 kalantidis y. kennedy l. li l. clothing recognition segmentation automatic product suggestion everyday photo icmr '13 proceeding 3rd acm conference international conference multimedia retrieval 2013 105-112 3 yang m. yu k. real-time clothing recognition surveillance video 18th international conference image processing 2011 2937-2940 4 liu s. song z. liu g. xu c. lu h. yan s. street-to-shop cross-scenario clothing retrieval alignment auxiliary cvpr 2012. clothing classification 38", "keywords": ["background subtraction", "clothing classification", "clothing recognition", "colour clothing", "colour pattern", "colour percentage", "console window", "edge detection", "float scale", "horizontal stripe", "image frame", "image processing", "image processing technique", "microsoft visual", "multiple face", "online shopping", "optimal frame", "pattern clothing", "pattern detection", "pattern recognition", "pattern shirt", "plain shirt", "processing technique", "pt pt", "ptx cvround", "realtime clothing", "roi processing", "shirt region", "static image", "stripe horizontal", "stripe horizontal stripe", "theta cvpi", "trend shirt", "vertical stripe", "vertical stripe horizontal", "video feed", "web camera", "window window"], "libraries": ["opencv"], "languages": ["basic", "small", "matlab", "c++"], "frameworks": [], "dbs": []}, "./reports/final12.pdf": {"title": "geotagging based android application", "filename": "./reports/final12.pdf", "data": "geotagging based android bhushan charkha krishna bhande niketan birhade tushar rathi b80058524 b80058517 b80058520 b80058630 guidance mr. a.m.bagade b.e 411043 affiliated 2014- 2015 411043 dissertation geo-tagging based android bhushan charkha b80058524 krishna bhande niketan birhade b80058517 b80058520 tushar rathi b80058630 record bonafide year 2014-2015 guidance prof. a.m. bagade dr. emmanuel m. dr. p.t hod examination examiner acknowledgement opportunity prof. anant bagade expert guidance continuous encouragement reach target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod valuable guidance providing facility indispensable completion thankful prof. naman buradkar coordinator staff member valuable time support comment suggestion persuasion providing facility internet access book bhushan charkha krishna bhande niketan birhade tushar rathi 1 ii 1 1.1 need.. 2 1.2 basic concept 3 1.3 ... .. 3 2 .. 4 2.1 5 2.2 existing 5 3 proposed .. 6 3.1 ... .. 7 3.2 7 3.3 objectives.. 8 3.4 8 4 .. 9 4.1 step acquire process ... ... 10 4.2 approach ... ... .. 10 5 .. 15 5.1 16 5.2 17 5.3 18 1 use-case ... 18 2 class diagram.. 19 3 20 4 ... 21 5 state 22 6 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 23 7 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 23 8 component 24 9 deployment ... 25 10 package ... 26 11 composite ... 27 6 implemetation .. 28 6.1 implemetation 29 6.2 experimental setup ... 30 6.3 code snippet ... 30 6.2 screen shot ... 34 6.3 ... 38 7 8 9 planning scheduling .. ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. ... 41 43 46 10 bibliography 47 college code 05 b.e.i.t examination oct nov 2014 title geotagging based android group 22 professor a.m. bagade group member area bhushan charkha krishna bhande niketan birhade tushar rathi android platform eclipse wamp server window 7 mysql seat b80058524 b80058517 b80058520 b80058630 rapid growth android converting mobile phone usable device basic necessity making receiving call android industry undergoing transition fuelled geotagging help find wide variety location-specific instance find image location entering latitude longitude coordinate suitable image search engine geotagging-enabled service find location-based news website geotagging location picture medium point view conversely medium platform medium relevant location geo-tagging based android help locate his/her current location example consider shopping mall providing shop offer currently keywords geo-tagging android 1 1 geotagging based android 1 1 1.introduction rapid growth android converting mobile phone usable device basic necessity making receiving call android industry undergoing signicant transition fuelled geo-tagging based android help locate his/her current location example consider shopping mall providing shop oers currently shop manager keep updated latest oers discount shop add product oers remove product oers valid product stock 1.1. applications/websites cur- rently going oers discount mall restaurant doesnt current location availability surrounding site zomato justdial site apps surrounding interior shop mall interior visit shop watch currently going oers shop distance shop current location integration informative apps zomato justdial reduce time searching desired product well cost shop geotagging based android 2 1 1.2. basic concept google map api google map v2 add-on replaces built-in titanium map android google map api v1 google map api v1 deprecated google longer issue map api v1 key 3rd 2013. android google map android api v2 existing v1 api key continue titanium map android transition add-on wamp server wamp server refers stack microsoft window operating created romain bourdon consisting apache web server openssl ssl support mysql database php programming language 1.3 1. people shopping mall restaurant cinema hall 2. shopkeeper keep updated oers shop geotagging based android 3 2 2 geotagging based android 4 2 2.1 1. dial oers address contact asked area proposed step forward oers direction 2. google map address photo review updated 3. his/her current location oers associated requires his/her day purchasing day browse dierent website 2.2 existing 1. currently apps oers restaurant zomato dial contact respective 2. existing app insight shopping mall restaurant oers product mall 3. lot time customer oers product decide buy product time reduced geotagging based android 5 3 3 proposed proposed geotagging based android 6 3 proposed 3.1 geotagging based android mobile mapping service discovery providing dierent located partic- ular radius provide location shopping mall located location clicking provide shop mall sale going shop flick app discover exclusive oers restaurant pub bar food film theatre cheap day retail entertainment health beauty travel hotel automobile property 3.2 shop keeper google map 1. app his/her current location geotagged associated he/she briefed 2. shopkeeper shopkeeper add shop he/she keep updating oers dierent product geotagging based android 7 3 3. google map proposed help google map add location map location shops.shop keeper going google map locate his/her location marker 3.3 1. nearby 2. reduce time product 3. facilitate shopkeeper promote product oers product shop oers 4. shopping experience ease city 3.4 1. easy 2. handle multiple customer 3. scalable 4. faster 5. easily installation 6. generalize geotagging based android 8 4 4 geotagging based android 9 4 4.1 step acquire process 1. installation eclipse ide java android adt bundle wamp server 2. registration google api 3. integration google map android 4. integrate wamp server 5. creating connection sql database php 6. adding shop updating info database 7. extracting database 8. showing ui 4.2 approach aim provide ease customer shopping well thing gps locate current location him/her selects shop oers product shop shop manager add/remove product update oers product shop 4.2.1 congure google map api creating android google map android api v2 requires step step outlined performed handy process adding map android geotagging based android 10 4 1. install android sdk 2. download congure google play service sdk includes google map android api google map mobile sdk download congure google map mobile sdk static library 3. integration google map android 4. api key google developer console signing certicate app 5. add setting manifest 6. add map 4.2.2 congure google map api android app complete step havent created android follow creating hello app creating android google map android api v2 distributed google play service sdk download google play service sdk android sdk manager detailed instruction google play service documentation summary step install google play service sdk add google play service android library google play service apps 4.2.3 download congure google play service sdk access google map server map api add map api key key free call map api support unlimited number geotagging based android 11 4 map api key google developer console providing signing certicate package add key adding element androidmanifest.xml le understanding process registering obtaining key requires knowledge android publishing process summary android signed digital certicate hold private key digital certicates unique provide simple uniquely identifying app tracking google play store tracking google map server 4.2.4 api key map api key linked specic certicate/package pair key certicate matter certicate api key recommended practice sign dierent certicate dierent key obtaining key requires step step outlined described 1. retrieve certicate 2. google developer console add map api service 3. request key 4. add key development geotagging based android 12 4 4.2.5 add setting manifest google play service version step point declaration manifest map api key key conrms youve registered google map service google developer console step point api key manifest permission access android google map server instruction adding setting recommended notication requires opengl version 2. service detect notication exam- ple google play store display device dont opengl version 2. instruction adding setting 4.2.6 add map easiest congured correctly add simple map change le xml le denes apps layout main java le note code setting targeting android api 12 code production example add robust code appear sample code 1. add fragment apps layout xml le created hello app android developer adt package eclipse le res/layout/activity-main.xml replace entire le code geotagging based android 13 4 2. add code mainactivity.java 3. build map dont map conrm youve completed step described geotagging based android 14 5 5 geotagging based android 15 5 5.1 window eclipse ide java 7 wamp server mysql database android sdk android add-on mobile phone android 4.0 ram 512 mb disk space minimum 2 gb geotagging based android 16 5 5.2 fig.5.1 store fig.5.2 consists shopkeeper .it consists google map shop store store registration shop map update fetched map shop consist map gps current location geotagged shop clicking shop product shop geotagging based android 17 5 5.3 5.3.1 use-case fig.5.3 use-case describes functionality point view full functionality complete ow verb actor shopkeeper database functionality search ick .the shopkeeper update product stored database geotagging based android 18 5 5.3.2 class fig.5.4 class class fulll role responsibility speci- class method operate class class shopkeeper restaurant product shop class fulll functionality geotagging based android 19 5 5.3.3 fig.5.5 interaction message passed object lifeline message passed object optionally method call invoked object time dierent message shopkeeper interaction shopkeeper interacts ui specie window geotagging based android 20 5 5.3.4 fig.5.6 message dif- ferent object doe consideration time dierent event interaction shop geotagging based android 21 5 5.3.5 state machine fig.5.7 state machine state machine state resides occur- rence event change state event occurrence event change state input change state guard condition associated sys- tem initially ready state parsing request continuously request change state based administrator interaction geotagging based android 22 5 5.3.6 fig.5.8 shop fig.5.9 view describes logical process function implemented code process describes decision govern geotagging based android 23 5 5.3.7 component fig.5.10 component component physical class describe intent compo- nents represent physical purpose component dene component dene component chunk code resides memory piece component dene allows component communicate component dierent component component dia- gram shopkeeper restaurant database component provide communicate geotagging based android 24 5 5.3.8 deployment fig.5.11 deployment deployment describes physical class describes logical focus deployment node node physical object represents processing human manual process node responsible component object deployment deployed client mobile client communicate server geotagging based android 25 5 5.3.9 package fig.5.12 package package namespace element including package package participate class package derived element contained pair package package package shopkeeper database package database package geotagging based android 26 5 5.3.10 composite fig.5.13 composite composite explore run-time instance intercon- nected instance collaborating link struc- ture including connector structured classier collaboration geotagging based android 27 6 6 geotagging based android 28 6 6.1 app written code gps location detection current location shop restaurant associated select location database fetch location uploaded shopkeeper navigate code written java ui designed xml shop keeper shopkeeper registration facility shopkeeper license number primary key shopkeeper database shopkeeper facility update add newly infor- mation stored database location updated database mysql database backend accesing database php script wamp server database store shopkeeper update-info store updated database shop regular basis gui ui consist shopkeeper .in google map placing geotagged location shop associated clicking symbol access shop shopkeeper registration tab add location shop shopkeeper update product shop geotagging based android 29 6 6.2 experimental setup require mobile phone android operating version 4.0 google api level 14. phone internet facility access current location gps 6.3. code snippet map geotagging based android 30 6 add location geotagging based android 31 6 location info window geotagging based android 32 6 update geotagging based android 33 6 6.4 screen shot 6.4.1 map view screenshot showing map rst loaded map store registered 6.4.2 geotagging based android 34 6 6.4.3 6.4.4 location geotagging based android 35 6 6.4.5 add location 6.4.6 update geotagging based android 36 6 6.4.7 info geotagging based android 37 6 6.5 phase form development life cycle product tested thoroughly delivered customer 6.5.1 incremental integration bottom approach determine functionality wa initially tested shopkeeper tested component 6.5.2 load performance check behavior load wa tested verify sustain load 10 wa conducted check throughput sustained fail prolonged duration performance based tuning parameter decide parameter changing parameter wrong username ultimate throughput wa observed best choice decide nal parameter load performed parameter derived experiment best arrangement tested prevent fall throughput inecient arrangement parameter gps tested throughput wa nalized account parameter aect performance wa veried performing load geotagging based android 38 6 summary precondition execution expected re- step sult locate-1 install verify 1.select 1.click in- applica- stall button tion installed 2.navigate installed menu click newly installed app locate-2 uninstall verify 1.execute 1.click ap- setting plication locate-2 2.select uninstalled newly uninstalled 2. locate- 3.click unin- stall button 4.verify 6.5.3 geotagging based android 39 6 locate-4 memory verify 1.the de- 1.go vice memory app 2.click dis- space in- play proper er- stall button proper er- ror message 20 mb 3.wait till ror message device 2.execute device memory installed memory locate-4 verify note ap- plication memory re- quirement 25 mb geotagging based android 40 7 scheduling 7 scheduling geotagging based android 41 7 scheduling fig.7.1 time geotagging based android 42 8 8 geotagging based android 43 8 8.1 based geo-tagging marking current gps location providing him/her shop cinema hall restaurant including oers additionally provide facility navigate desired location online shopping facility store reduce eorts time browse website checking availability oers his/her day geotagging based android 44 8 8.2 developed providing better convenient locat- ing deciding visit real time continue grow enterprise realize achieve store internet platform android phone gained great hype decade regarded active platform communicate 1. tracking movement respect shop 2. creating directly fetch registered shop website shop manager manually geotagging based android 45 1 mei-yi wu chaun-chi hsu jia hong lee geo tagging scheme image steganography gps authentication intel- ligent hiding multimedia signal processing 2009 iih- msp 09. international conference doi 10.1109/iih-msp.2009.301 publication year 2009 2 r. v. dharskar based retrieval geo-tagged image us- ing wavelet digital forensic icccnt 2013 2013 fourth in- ternational conference computing networking icccnt 2013 fourth international conference com- puting networking icccnt 2013 1-4 doi 10.1109/icccnt.2013.6726824 3 maps.google.com 4 www.zomato.com 5 www.justdial.com geotagging based android 46 bibliography 1. pressman roger s. bibliography practitioner approach roger s. pressman 5th ed.p.cm mcgraw-hill series science isbn 0-07-365578-3 2. herbert schildt java complete seventh edition isbn 978-0-07-163177-8 3. dan pilone neil pitman 2.0 nutshell nutshell o'reilly isbn-13 978-0596007959 geotagging based android 47", "keywords": ["android api", "android bhushan", "android bhushan charkha", "android google", "android google map", "android help", "android sdk", "api google", "api google map", "api key", "based android", "bhande niketan", "bhushan charkha", "bhushan charkha krishna", "charkha krishna", "charkha krishna bhande", "congure google", "congure google map", "current location", "database php", "developer console", "download congure", "geotagging based", "geotagging based android", "google developer", "google developer console", "google map", "google map android", "google map api", "google map server", "google play", "google play service", "krishna bhande", "krishna bhande niketan", "location shop", "mall restaurant", "map android", "map api", "map api key", "map server", "mobile phone", "oers product", "package package", "play service", "play service sdk", "product shop", "sdk android", "service sdk", "shop manager", "shop oers", "shopkeeper database", "shopping mall", "stall button", "wamp server", "xml le", "zomato justdial"], "libraries": [], "languages": ["basic", "php", "xml", "java"], "frameworks": [], "dbs": ["mysql"]}, "./reports/FinalReport29.pdf": {"title": "isp bandwidth aggregation and   optimization", "filename": "./reports/FinalReport29.pdf", "data": "isp bandwidth aggregation optimization harsh baheti shahbaz khan arundhati sawant syed junaid ali b80058559 b80058576 b80058637 b80058647 guidance prof. s. s. pande fulfilment b. e. 411043 affiliated 2014 2015 411043 dissertation isp bandwidth aggregation optimization harsh baheti shahbaz khan arundhati sawant syed junaid ali b80058559 b80058576 b80058637 b80058647 record bonafide him/her year 2014- 2015 guidance prof. s. s. pande dr. emmanuel m. hod dr. p. t. examiner _______________________ acknowledgement profoundly grateful prof. s. s. pande expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing grateful mr. vinay abnave mr. umesh chaudhari wifisoft pvt ltd. allowed company express sincere heartfelt gratitude staff member helped directly indirectly course harsh baheti shahbaz khan arundhati sawant syed junaid ali increasing internet sharing created insatiable demand internet access bandwidth fulfilled single internet connection cable connection workplace keep switching isps time time creates demand bandwidth aggregation principle vpn tunneling achieve bandwidth aggregation lacp controlled addition removal physical link aggregation group frame lost duplicated intended device provide bandwidth aggregation fail service input dsl fail bandwidth input isp aggregated nic bonding attain approximate addition bandwidth failure dsl device enable network stay uninterrupted shift traffic working keywords bandwidth aggregation vpn tunneling link aggregation control protocol nic bonding 1. 1 1.1. 2 1.2. 2 1.3. background 2 1.4. 3 1.5. bandwidth 3 2. 4 2.1. bandwidth aggregation 5 2.2. virtual private network 6 2.2.1. vpn .6 2.2.2. vpn bonding 7 2.3. networking linux bonding driver 7 2.4. network linux 8 3. proposed 10 3.1. 11 3.2. .11 3.3. .11 3.4. 12 4. 13 4.1. step acquire process 14 4.2. approach .14 4.3. 15 5. 16 5.1. specification 17 5.2. specification .17 5.3. 18 5.4. .19 6. 26 6.1. 27 6.1.1. code snippet 27 6.2. screenshots 31 6.3. 33 6.3.1. unit 33 6.3.2. integration 34 7. 8. 36 38 8.1. 39 8.2. 40 41 2.1 bandwidth aggregation 5 2.2 vpn connectivity 6 2.3 vpn tunnel setup bonding 7 2.4 linux network protocol stack 9 5.1 .18 5.2 class .19 5.3 user/administrator client server .20 5.4 client server .21 5.5 22 5.6 main 23 5.7 diagramfor server 24 5.8 deployment 25 6.1 27 6.2 virtual network device 28 6.3 customer 29 6.4 speed 31 6.5 31 6.6 bonding 32 6.7 status 33 6.1 35 1 1 isp bandwidth aggregation optimization 1 1 1.1 context internet term `` bandwidth '' defines net bit rate channel capacity maximum throughput logical physical path digital bandwidth measure maximum throughput network bandwidth bit/s refer consumed bandwidth achieved throughput goodput i.e average rate transfer path reason usage hartley 's law maximum rate physical link proportional bandwidth hertz called frequency bandwidth spectral bandwidth 1 1.2 decade witnessed widespread internet variety advancement increased internet impetus improve bandwidth extensive study improve throughput dsl provided internet service provider time isp increase bandwidth multiple isps concept called nic bonding aid process help load balancing bandwidth multiple bandwidth utilized increasing cumulative bandwidth bandwidth expensive intend device cost solution higher bandwidth 1.3 background bandwidth aggregation individual isp respect ip bandwidth utilize route traffic multiple isp round robin fair distribution provide fail service dsl fail allow traffic shift working properly isp bandwidth aggregation optimization 2 1 1.4 intended device wide arena company educational institution school college number people internet speed bandwidth internet investing expensive bandwidth lease multiple isps bandwidth aggregation higher throughput 1.5. bandwidth increased internet sharing combined graphically rich web site multimedia created virtually insatiable demand internet access bandwidth broadband dsl cable modem deployed rapidly metropolitan area internet access year actively seeking increase bandwidth today broadband access bandwidth single connection 1 connection internet combine accumulate bandwidth technique accomplish collectively referred document `` bandwidth aggregation '' combining single internet connection accumulate bandwidth meet exact aggregate bandwidth advantage disadvantage 2 help load balancing bandwidth multiple bandwidth utilized increasing cumulative bandwidth bandwidth expensive intend device cost solution higher bandwidth isp bandwidth aggregation optimization 3 2 2 isp bandwidth aggregation optimization 4 2 2.1. bandwidth aggregation aggregating bandwidth internet connection internet total bandwidth order increase throughput reliability link redundancy paper performance modeling bandwidth aggregation tcp connection author e. elahi al discussed bandwidth aggregation ba 2.1 bandwidth aggregation ba 7 main 2.1 1. responsible stripping dividing appending header sending called ba scheduler '' maintains observed throughput connection sending send observed throughput order avoid blocking isp bandwidth aggregation optimization 5 2 2. ba re-assembler responsible reception detaching ba header passing receiving received order buffer receive buffer order 7 2.2 virtual private network 2.2.1 vpn virtual private network vpn extends private network public network internet enables network-enabled device send receive shared public network directly connected private network benefiting functionality security policy public network 1 vpn created establishing virtual point-to-point connection dedicated connection virtual tunneling protocol traffic encryption major vpns include openvpn ipsec 2.2 vpn connectivity isp bandwidth aggregation optimization 6 2 2.2.2 vpn bonding vpn bonding technically broadband bonding enables router equipped bonding stripe individual ip session multiple wan transport essence single ip session transmitted pipe receiving broadband bonding router forward packet original form destination requires cutting edge technique optimize throughput latency provide bonded ip tunnel fast sum wan link bonded vpn bonding continuity wan link failure tunnel bonded remote fat pipe server appear ip address traffic ip address split link vice versa vpn tunneled server originating ip inside network route enables route internet ease 4 5 2.3 vpn tunnel setup bonding 2.3. networking linux bonding driver linux bonding driver method aggregating multiple network single logical bonded behavior bonded depends mode generally speaking mode provide hot standby load balancing service additionally link integrity performed 8 isp bandwidth aggregation optimization 7 2 single switch configuration best method maximize throughput depends network environment load balancing mode strength weakness environment gateway configuration traffic bonded device mac level peer network gateway i.e router final destination local configuration traffic directly final destination destination host addressed directly individual mac address distinction gateway local network configuration load balancing mode mac address local network source destination load balancing decision mode permit single tcp/ip connection stripe traffic multiple `` balance-rr `` mode rr signifies round-robin scheduling mode allow single tcp/ip stream utilize 's worth throughput striping generally peer receiving packet order causing tcp/ip 's congestion control kick retransmitting segment balance-rr mode setup 8 fraction packet delivered order variable level reordering depends variety factor including networking switch topology configuration speaking general term higher speed network card produce reordering factor packet coalescing 8 2.4. network linux linux protocol stack based tcp/ip considered 4-layer linux packet represented common called socket buffer protocol layer parameter payload packet copied protocol layer abstraction traffic path linux packet transport layer tcp udp layer socket sends packet handled transport layer network layer ip layer route packet determined isp bandwidth aggregation optimization 8 2 network layer destination packet network layer sends link layer link layer sends packet output device network adapter packet arrived input check packet example network adapter check destination mac address field receiving packet network driver sends packet network layer network layer check destination packet packet network layer sends transport layer finally packet output device 6 2.4 linux network protocol stack isp bandwidth aggregation optimization 9 proposed 3 3 proposed isp bandwidth aggregation optimization 10 3 3.1 proposed intended device provide bandwidth aggregation fail service input dsl fail bandwidth input isp aggregated attain approximate addition bandwidth failure dsl device enable network stay uninterrupted shift traffic working 3.2 detects network connection term network ip detected network connection web chose multiple network connection bond aggregated bandwidth chosen multiple connection provided failover service automatic load shifting working 3.3 aim develop bandwidth aggregation fault tolerance linux platform concept vpn tunneling conjunction packet scheduling achieve bandwidth aggregation utilizing universal tun/tap driver creating maintaining virtual network accounting failure detection server platform independent serve operating focus currently linux web developed html/css php isp bandwidth aggregation optimization 11 3 3.4 proposed accurately efficiently detect plugged dsl improvement existing aggregation bandwidth focus completion time isp bandwidth aggregation optimization 12 4 4 isp bandwidth aggregation optimization 13 4 band aggregator simple aggregate bandwidth multiple network connection detects number active network client 's machine check internet bandwidth aggregator choice connection select connection bond aggregated bandwidth achieved bandwidth aggregator fail service separate isp connection purpose example company isp fail traffic shifted working bandwidth aggregator automatic fail service reduce hassle manually shifting network traffic isp connection 4.1 step acquire process interpret input linux 32/64 bit client server center install lamp stack develop implement c++ code integrate front 4.2 approach increasing demand higher bandwidth providing cost solution meet demand imperative today internet digital subscriber dsl wifi mobile internet medium connect internet utilizing medium feasible solution increasing demand higher bandwidth multiple connection connected client machine connection consist ethernet wifi connection connection detected cpp code running daemon background detection code written check detect internet connection active network provided medium checklist isp bandwidth aggregation optimization 14 4 check chooses network connection he/she bond click bond button redirected speed bonded connection 4.3 1- detection connection client detected connection tested internet working function choose bonding 2- connection establishment speed working connection 1 tested actual throughput bandwidth connection server negotiation parameter 2-virtual network device bonding help tunnel code written create tunnel code daemon background keep running continuously creation configuration operation i/o operation implemented 3- web web developed server-side scripting language php html cs front ui connection passed displayed client select connection he/she bond 4- qos single high-throughput configure support qos configuration linux qos setting apply virtual network device 'tc utility iproute2 package qos configuration isp bandwidth aggregation optimization 15 5 5 isp bandwidth aggregation optimization 16 5 5.1 specification server side 1. linux kernel 2.4.x higher build tun/tap driver capability functionality 2. lightweight web server 3. sqlite3 4. php client side 1. linux kernel 2.4.x higher build tun/tap driver capability functionality 2. lightweight web server 3. php 5.2 specification client side internet connection server side internet connection isp bandwidth aggregation optimization 17 5 5.3 client-server paradigm client customer aggregate internet connection server server help client achieving aggregated bandwidth interact configure best controlled configured 5.3.1 5.1 isp bandwidth aggregation optimization 18 5 5.4 fig 5.2 class isp bandwidth aggregation optimization 19 5 5.3 user/administrator client server isp bandwidth aggregation optimization 20 5 5.4 client server isp bandwidth aggregation optimization 21 5 5.5 isp bandwidth aggregation optimization 22 5 5.6 main isp bandwidth aggregation optimization 23 5 5.7 server isp bandwidth aggregation optimization 24 5 5.8 deployment isp bandwidth aggregation optimization 25 6 6 isp bandwidth aggregation optimization 26 6 6.1 bandwidth aggregator typically scenario isp connection scenario generally rely internet service provider connection making isp internet connection increase throughput higher aggregated bandwidth internet isp time help bandwidth aggregator multiple time client plug number connection tunnel created connection tunnel bonded connected center traffic routed internet client choose connection bond rest bandwidth aggregator 6.1.1 code snippet detects number active display add tap device check virtual discard active 6.1 isp bandwidth aggregation optimization 27 6 virtual network device class creates virtual network device tun tap depending deal input/output operation device configuring setting ip netmask responsibility class 6.2 virtual network device isp bandwidth aggregation optimization 28 6 customer class creates individual connection specific remote server manages includes packet scheduling logic sending packet server keep statistic connection accounting usage client achieved 6.3 customer isp bandwidth aggregation optimization 29 6 speed class deal checking network throughput connection depending object class server client process speed help optimizing scheduling time time 6.4 speed isp bandwidth aggregation optimization 30 6 6.2 screenshots appears front client aim 6.5 isp bandwidth aggregation optimization 31 6 bonding display connection ip client select multiple connection help check clicking bond button connection aggregated 6.6 bonding isp bandwidth aggregation optimization 32 6 status bonding redirected status display connection provision speed ookla api 6.7 status 6.3 process executing program intent finding bug product tested thoroughly delivered customer document general strategy adopted product 6.3.1 unit unit development process smallest testable called unit individually independently scrutinized proper operation unit entire function procedure tested isp bandwidth aggregation optimization 33 6 1- aim detect network connected internet connected internet expected valid network actual expected 2- aim establish connection client server random message expected message transmitted received side actual expected 3- aim check tunnel working ping message expected receive ping reply actual expected 4- aim selection web ui network expected choose bond actual expected 6.3.2 integration integration integration component interaction operating file major carrying integration called bottom-up method top-down method bottom isp bandwidth aggregation optimization 34 6 procedure expected actual pass/fail tunneling achieve virtual networking packet scheduling packet distributed speed connection speed 1 1 1 start server-side program start client-side program ping start server-side program start client-side program send message client server server log launch speed server launch speed client expected expected pas pas ping request answered ping reply message received multiple ip address server start client connects time interval 5 speed displayed expected pas 6.1 isp bandwidth aggregation optimization 35 7 7 isp bandwidth aggregation optimization 36 7 isp bandwidth aggregation optimization 37 8 8 isp bandwidth aggregation optimization 38 8 8.1 bandwidth aggregator basic solution optimizing bandwidth enhanced improving service measure increase efficiency optimize bandwidth aggregator bandwidth aggregator enhanced adding qos traffic shaping handled client authorization choose traffic direct connection traffic monitored throughput analyzed perform automatic traffic shaping detect fault connection failed isp bandwidth aggregation optimization 39 8 8.2 bandwidth aggregator overcomes viable solution increasing bandwidth cheap affordable based solution abstracted sense appear connection worry managing manually configuring automatic configuration fail service easy efficient isp bandwidth aggregation optimization 40 1 http //en.wikipedia.org/wiki/shannon e2 80 93hartley_theorem hartley.27s_law 2 http //www.vicomsoft.com/learning-center/bandwidth-aggregation-bonding-and-teaming/ 3 pyung-soo kim joo young yoon hanlim kim `` packet partition scheduling mechanism bandwidth aggregation multiple path '' journal convergence volume 3 number 4 2008 4 http //www.mushroomnetworks.com/blog/2013/09/14/vpn-bonding-key-branch-office- connectivity/ 5 http //simonmott.co.uk/vpn-bonding 6 chih-wen hsueh hsin-hung lin guo-chiuan huang `` channel bonding linux ethernet environment regular switching hub '' systemics cybernetics informatics 2 issue 3 7 e. elahi n. hassan s. asghar a. qayyum a. raq performance modeling bandwidth aggregation tcp connection 2010 12th international conference performance computing 8 http //www.kernel.org/doc/documentation/networking/bonding.txt isp bandwidth aggregation optimization 41", "keywords": ["aggregation optimization", "baheti shahbaz", "bandwidth aggregation", "bandwidth aggregation optimization", "bandwidth aggregator", "bandwidth internet", "bandwidth multiple", "bonding driver", "client server", "cost solution", "fail service", "harsh baheti", "harsh baheti shahbaz", "higher bandwidth", "intended device", "internet connection", "isp bandwidth", "isp bandwidth aggregation", "isp connection", "mac address", "multiple network", "network connection", "network device", "network layer", "nic bonding", "packet network", "packet scheduling", "private network", "public network", "shahbaz khan", "transport layer", "virtual network", "virtual network device", "vpn connectivity"], "libraries": [], "languages": ["php", "cs", "c++", "basic", "html"], "frameworks": [], "dbs": []}, "./reports/FinalReport_grpid_33.pdf": {"title": "analysis and mapping of traffic spots on  analysis and mapping of traffic spots on  analysis and mapping of traffic spots on   android system android system", "filename": "./reports/FinalReport_grpid_33.pdf", "data": "mapping traffic spot android mapping traffic spot android mapping traffic spot mapping traffic spot mapping traffic spot android android b-80058542 prapti durge prapti durge b-80058555 kalyani gosavi kalyani gosavi pratibha jarhad b-80058564 pratibha jarhad guidance prof. m. r. khodaskar fulfilment b. e. b. e. 2015 411043 affiliated 2014 2015 1 mapping traffic spot android mapping traffic spot android 411043 dissertation dissertation mapping traffic spot android mapping traffic spot android mapping traffic spot android b-80058542 prapti durge prapti durge kalyani gosavi b-80058555 kalyani gosavi pratibha jarhad b-80058564 pratibha jarhad record bonafide him/her record bonafide him/her record bonafide him/her chnology chnology year 201 year 2014-2015 guidance guidance prof. m. r. khodaskar prof. m. r. khodaskar hod dr. emmanuel m. dr. p. t. examiner _______________________ _______________________ 2 mapping traffic spot android acknowledgement profoundly grateful prof. m. r. khodaskar expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing express sincere heartfelt gratitude staff member helped directly indirectly course prapti durge kalyani gosavi pratibha jarhad 3 mapping traffic spot android continuously increasing number vehicle city abnormal traffic event occurring road easily road congestion people great hurry urgency efficiency reach destination proposed traffic spot input google apis android mapping processed web service outcome android basically android track traffic le path reach destination path location time traffic color combination help reduce driving time urgency individual city keywords google api web service traffic android 4 topic mapping traffic spot android i. ... ... ... ... ... .. iii ii ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .iv iii abbreviation ... ... ... ... ... ... ..v 1 1.1 ... ... .1 1.2 basic concept 1.2.1 google programming interface..1 1.2.2 google map ... .2 1.2.3 android development ... ... 2 1.2.4 android sdk ... ... ... .2 1.2.5 web service ... .3 2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 4 3 concept specification 3.1 ... .. ... .6 3.2 objective6 3.3 ... 6 3.4 ... ... 7 3.4 requirement7 4 specification 4.1 ... .8 4.1.1 google api ... ... 8 4.1.2 stored database ... .8 4.1.3 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 8 4.1.4 mapping ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .9 4.1.5 android ... ... ... ..9 4.2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..9 5 4.3 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 11 mapping traffic spot android 5.1 code snippet 5.1.1 registartion ... ... .15 5.1.2 search ... ..15 5.1.3 direction ... ... ... ... ... ... ..16 5.1.4 analyzing route ... ... ... .17 5.1.5 plotting path ... ... ... ... .17 5.1.6 location ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..18 5.2 graphical ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..19 5.3 5.3.1 unit ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..21 5.3.2 integration ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .23 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .24 schedulingmapping traffic spot android 4.1 4.2.1 4.2.2 4.2.3 4.3.1 4.3.2 4.3.3 4.3.4 4.3.5 5.1.1 5.1.2 5.1.3 5.1.4 5.1.5 5.1.6 5.2.1 5.2.2 5.2.3 5.2.4 5.2.5 dfd level 0 dfd level 1 dfd level 2 class state deployment registration search direction analyzing route plotting location registration enter source destination locate map share route 9 11 12 3 13 14 15 16 16 17 17 18 28 19 20 20 20 21 21 21 7 mapping traffic spot android 5.3.2 7 integration scheduling 24 26 8 mapping traffic spot android abbreviation abbreviation illustration gps gprs api sdk adt ide apk xml soap wsdl uddi gui vsns sm gsm json dfd global positioning general packet radio service programming operating development kit android development integrated development environment android package extensible markup language simple object access protocol web service description language universal description discovery integration graphical vehicular sensor network short message service global mobile java script object notation 9 mapping traffic spot android chapter-1 rapid development microelectronics amount gradually emerged emerging integrated body multiple complex instance support microcomputer embedded operating function smart onboard device richer continuously improve travel driving efficiency aspect number vehicle equipped smart onboard device increase greatly reason transport vehicle play role 1.1.need continuously increasing number vehicle city abnormal traffic event occurring road easily road congestion traffic spot potential site interest higher likelihood event opportunity i.e traffic jam exhibition commercial promotion people hurry urgently reach destination proposed aware traffic situation proposed analyze represent google map implemented android reduction driving time ultimate well navigate efficient le traffic path internet well non-internet 1.2. basic concept 1.2.1. google programming google apis google ajax apis javascript apis developed google allows interaction google service integration rich multimedia search feed-based internet web extensively ajax scripting easily loaded google loader google loader google ajax apis loader java script api allows web developer easily load javascript apis provided google developer popular library 10 mapping traffic spot android google loader javascript method loading specific api called additional setting api version language location selected package load callback parameter specific api dynamic loading auto-loading supported enhance performance loaded apis 1.2.2. google map google map desktop mobile web mapping service provided google offering satellite imagery street map street view perspective well function route planner travelling foot car bicycle beta public transportation supported map embedded third party website google map api locator urban business numerous country google map satellite image updated real time google add primary database regular basis image 3 year google map mobile popular app smartphone 54 global smartphone owner month 2013 1.2.3. android development android mobile operating based linux kernel currently developed google based direct manipulation android designed touch screen mobile device smart phone tablet specialized television android tv car android auto wrist watch android wear touch input loosely correspond real-world action swiping tapping pinching reverse pinching manipulate on-screen object virtual keyboard despite designed touch screen input game console digital camera electronics 1.2.4. android sdk android development kit sdk includes comprehensive development include debugger library handset emulator based qemu documentation sample code tutorial currently supported development platform include running linux modern desktop linux distribution mac 10.5.8 window xp 11 mapping traffic spot android moment develop android android aide android ide java c++ app java editor app officially supported integrated development environment ide eclipse android development adt plugin intellij ide edition fully support android development box net bean ide support android development plugin additionally developer text editor edit java xml file command java development kit apache ant create build debug android well control attached android device e.g triggering reboot installing package remotely enhancement android 's sdk hand hand android platform development sdk support older version android platform developer target older device development downloadable component downloaded latest version platform older platform downloaded compatibility android packaged .apk format stored /data/app folder android folder accessible root security reason apk package dex file compiled byte code file called dalvik executables file 1.2.5 web service web service describes standardized integrating web-based xml soap wsdl uddi standard internet protocol backbone.xml tag soap transfer wsdl describing service uddi listing service business communicate client web service allow communicate intimate knowledge firewall traditional client/server web server/web web service provide gui web service share business logic process programmatic network developer add web service gui web executable program offer specific functionality 12 mapping traffic spot android chapter-2 vehicular sensor network vsns inter vehicle cooperative vehicle node detect abnormal traffic event disseminate interesting vehicle person crowdedness spot crowded area abnormal number object detecting crowdedness spot moving vehicle urban area essential intuitive method cluster object area density capturing vehicle mobility posse highly mobile environment supremely limited size sample object uniform biased sample raised challenge traditional density-based clustering fail retrieve real clustering property object making le meaningful paper propose novel density based approach called mobility-based clustering key sample object employed sensor perceive vehicle crowdedness nearby area instant mobility object representative mobility sample naturally incorporated key factor vehicle crowdedness identified technique compensate proposed detected crowdedness spot label taxi identify taxi crowdedness taxi cross number crowdedness spot evaluate performance method baseline approach based real traffic situation retrieve real traffic crowdedness real-life finally interesting finding provided discussion 1 intelligent transportation increasingly public transportation shanghai response shanghai grid sg aim provide abundant intelligent transportation service improve traffic condition challenging service sg real-time traffic condition surface street paper innovative approach seer tackle seer deploy cost-effective taxi traffic sensor taxi sensory noisy lossy time space intensively mining spatio-temporal correlation evolution traffic condition seer wealthy knowledge setup statistical inferring traffic condition directly calculated 2 13 mapping traffic spot android yoon al detect traffic condition surface street location trace collected on- road vehicle gps location infrequent low-bandwidth cellular update 4 android traffic police developed exact traffic viewed smart phone analysed maintained traffic police proposed extend providing traffic route based time usage comparative le 14 mapping traffic spot android -3 concept specification 3.1 mapping traffic spot city transportation android order analyze efficient le traffic route respect time distance factor 3.2 main develop based real traffic dataset suggesting route based traffic scale efficient le traffic path route destination respect time distance factor share location path map whatsapp email bluetooth secured graphical authentication 3.3 main point considered cid 1 android based real time traffic situation real help map exact traffic google map cid 1 reduces driving time shortest path cid 1 route shortest efficient path based traffic scale respect time distance factor cid 1 offline mode dataset stored inorder map path internet connection cid 1 share path whatsaap hike bluetooth email 15 3.4 mapping traffic spot android cid 1 operating cid 1 coding language cid 1 toolkit cid 1 ide window 7 java 1.6 android 4.2 eclipse juno 3.5 cid 1 cid 1 hard disk cid 1 monitor pentium iv 2.4 ghz 40 gb 19 vga color 16 mapping traffic spot android -4 specification 4.1 4.1 4.1.1 google api input dataset consisting parameter traffic path coordinate latitude longitude time distance provided online mode google apis 4.1.2 stored database input dataset parameter month day downloaded stored offline mode 4.1.3 web service input dataset analyze traffic le path 17 mapping traffic spot android route respect time distance 4.1.4 mapping analyzed mapped google map efficient route green color route red color 4.1.5 android google map loaded android output sharing location social medium whatsapp email text message 4.2 dfd dfd two-dimensional explains processed transferred graphical depiction identifies source interacts source reach common output individual seeking draft 1. identify input output 2. determine input output relate 3. explain graphic connection relate help business development visualize processed identify improve aspect 4.2.1 dfd level 0 18 mapping traffic spot android 4.2.2 dfd level 1 4.2.3 dfd level 2 19 mapping traffic spot android 4.3 4.3.1 4.3.1 20 4.3.2 class mapping traffic spot android 4.3.2. class 21 4.3.3 state mapping traffic spot android 4.3.2. state 22 mapping traffic spot android 4.3.4 4.3.5 deployment 4.3.4 4.3.5 deployment 23 mapping traffic spot android chapter-5 5.1 code snippet 5.1.1 registration initial registration mobile number registered email password 5.1.1 registration 5.1.2 search source destination input redirected google map searching path 24 mapping traffic spot android 5.1.2 search route 5.1.3 direction direction source destination route 5.1.3 direction 25 mapping traffic spot android 5.1.4 analyzing route analyzing traffic deciding path 5.1.4 analyze route 5.1.5 plotting path plotting searched downloaded google map color scheme green color le traffic path red color route respect time distance factor 26 mapping traffic spot android 5.1.6 location locating current location 5.1.5 plot route map 5.1.6 location 27 mapping traffic spot android 5.2 graphical 5.2.1registration 5.2.2 5.2.3 enter source destination 5.2.4 locate map 28 mapping traffic spot android 5.2.5 share route 29 5.3 mapping traffic spot android phase form development life cycle product tested thoroughly delivered customer document general strategy adopted product 5.3.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine unit entire function procedure tested 1.authentication aim check doe incorrect credential incorrect email syntax incorrect password expected error message actual expected 2.search destination aim check accepts incorrect source and/or destination incorrect source and/or destination expected dropdown window pop correct actual expected 3.locate route map aim check correctly plot source destination route input parameter json query expected route le traffic green color route red color actual expected 30 4.share route mapping traffic spot android aim check link route forwarded location map shared current plotted route map expected link option best route green colored route route red colored route actual expected 31 5.3.2 integration mapping traffic spot android procedure expected actual registration 1 enter valid error message pas search searching destination username redirecting expected password email 2 enter valid dropdown pas source pop expected destination correct map loading 1 search select correct mapping pas mapped route analyzed route expected time exact time pas distance distance expected apis sharing 1 social send link pas location location shared medium expected priority wise route best route green colored option route 32 mapping traffic spot android chapter-6 1. bigger analyse traffic finding traffic le efficient path 2. proposed emergency vehicle ambulance fire brigade reaching destination 3. internet connection suggested path exact detection real time dataset based previous 33 mapping traffic spot android chapter-7 scheduling 21/7 10/8 16/ 8 20/8 28/8 6/9 15/ 9 28/1 25/ 2 15/ 3 search sponsorship 21/ 6 decide topic deciding 1st review gathering implementing android app 2nd review 3rd review server side predicate final 7. scheduling 1/4 10/5 34 mapping traffic spot android chapter-8 8.1 offline service feasible extended provide accurate path delay ease developed kind extended sensor based provide exact count vehicle signal city clustering moment delay avoided feasible solution concluded input provided form text message radio station traffic recorded traffic police 35 8.2 mapping traffic spot android development android find le traffic path analyzing real time dataset mapping google map respect time distance usage google apis google map web service enhanced learn web sharing share route help social medium email bluetooth applicable ambulance fire brigade police van kind emergency vehicle reach destination 36 mapping traffic spot android 1 s. liu y. liu m. li l. ni j. fan m. liu detecting crowdedness spot city transportation 2013 2 h. zhu y. zhu m. li l. ni seer metropolitian-scale traffic perception based lossy sensory proc infocom 2009 3 smart city group online http //www.cse.ust.hk/ scrg 4 j. yoon b. noble m. liu surface street traffic estimation proc.acm mobisys 2007 220232 37", "keywords": ["android android", "android chapter", "android development", "android development android", "android google", "android sdk", "color route", "crowdedness spot", "development android", "development kit", "dfd level", "distance factor", "durge kalyani", "google api", "google apis", "google map", "green color", "le traffic", "le traffic path", "mapping traffic", "mapping traffic spot", "respect time", "respect time distance", "route respect", "route respect time", "share route", "spot android", "surface street", "time distance", "time distance factor", "traffic condition", "traffic path", "traffic situation", "traffic spot", "traffic spot android", "web service", "wsdl uddi"], "libraries": [], "languages": ["xml", "c++", "beta", "javascript", "basic", "java"], "frameworks": [], "dbs": []}, "./reports/Final_BE_PROJECT_REPORT17.pdf": {"title": "grocery shopping android application with smart   recommendation system", "filename": "./reports/Final_BE_PROJECT_REPORT17.pdf", "data": "grocery shopping android smart recommendation rahul lad jayti lal minal laad karan thanvi b120058617 b120058582 b120058588 b120058652 guidance prof. s. c. dharmadhikari 2015-2016 entitiled grocery shopping smart recommendation rahul lad jayti lal minal laad karan thanvi b120058617 b120058582 b120058588 b120058652 bonafide prof. s. c. dharmadhikari fulfilment earlier diploma prof. s. c. dharmadhikari dr.emmanuel m. examine dr. p. t. acknowledgement great pleasure satisfaction presenting shopzoo grocery shopping mobile smart recommendation single web daily product local vendor lot local vendor business going privilege duty acknowledge kind help guidance received people preparation prepare form valuable help cooperation guidance prof. s. s. pande special prof. s. c. dharmadhikari mr. s.shevtekar prof. s. deshmukh valuable support directly indirectly helped completion submission mr. rahul lad ms. jayti lal ms. minal laad mr. karan thanvi ii -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- acknowledgement -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- ii -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- iii -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- iv abbreviation -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 1 1.1 1.2 1.3 title 1 3 4 4 2 3 1.4 1.5 2.1 2.2 2.3 2.4 2.5 3.1 3.2 definition definition area specification purpose 3.2.1 selecting category subcategories product 3.2.2 comparing product 3.2.3 shop selection recommended shop-list 3.2.4 order placement 3.2.5 check notification order 3.2.6 provide order status 3.2.7 update shop database 3.3 product position 3.3.1 existing 3.3.2 proposed 4 5 7 7 8 8 8 9 9 9 9 10 10 10 10 11 11 11 12 4 5 6 7 3.4 4.1 4.2 5.1 5.2 5.3 5.4 5.5 5.6 constraint execution cpm/pert class use-case state daigram shopkeeper state customer 12 13 15 17 19 21 22 23 24 5.7 extended waterfall 25 code 5.8 snippet evaluation 7.1 7.2 26 32 39 7.2.1 website portal shopkeeper 40 7.2.2 involvement gamification 7.2.3 website customer 40 40 41 cpm/pert class state shopkeeper state customer waterfall 4.1 5.1 5.2 5.3 5.4 5.5 5.6 5.7 15 18 20 21 22 23 24 25 iii illustration review cpm/pert stage use-case modelling 1.1 4.1 5.1 5-6 15 19 iv abbreviation simple storage service elastic beanstalk cloud compute amazon web service hyper text mark-up language asynchronous javascript xml cascade style sheet java script object notation hypertext transfer protocol integrated development environment development toolkit web platform java enterprise edition document object s3 ec2 aws html ajax cs json http ide sdk wtp javaee dom grocery shopping android smart recommendation shopzoo customer enables purchase grocery stationery electronic item online local vendor constitutes shopkeeper shopkeeper control inventory website handle offline sale well admin add shop product universal database delivery operator provide customer real-time tracking order 's location help delivery boy manage current previous delivery customer select variety product based statistical product nutritive shop displayed distance nearest customer current location recommendation based product availability shop selected order shopkeeper shopkeeper receives order request shopkeeper app/ website help customer reducing waiting time customer recommending healthy option product trust buying nearby shop shopkeeper local vendor increase sale help manage expand business online keywords mobile web recommendation cloud database 2015-16 1 grocery shopping android smart recommendation 1 online shopping form electronic commerce consumer directly buy good service seller internet intermediary service online shopping process consumer directly buy good service seller real-time intermediary service internet existing online shopping website focus product vendor consumer variety product existing online shopping website mobile payment cash delivery online payment credit debit card main advantage service customer choose his/her best choice variety product customer product deliver reduction effort customer despite advantage online store unable provide local product needed customer day-to-day life service provider involvement vendor difficult local vendor increase business level approach existing online shopping better efficient order help local vendor extend business higher level local vendor extend business customer daily product help cash delivery method approach reduce customer waiting time local shop prefer pick-up delivery option product customer shopkeeper approach dealing local vendor focusing mobile reliable day multimedia phone local vendor customer well order easier shopkeeper keep track billing website portal well shopkeeper 2015-16 2 grocery shopping android smart recommendation daily customer consists variety product varying category difficult online shopping inconvenient customer order category product website mobile shopping customer select category subcategories product falling category weight company status 1.1 shopzoo customer enables purchase grocery stationery electronic item online local vendor constitutes shopkeeper shopkeeper control inventory website handle offline sale well admin add shop product universal database delivery operator provide customer real-time tracking order 's location help delivery boy manage current previous delivery customer select variety product based statistical product nutritive shop displayed distance nearest customer current location smart recommendation based product availability shop selected order shopkeeper shopkeeper receives order request shopkeeper app/ website accepted order status updated shopkeeper customer track order status help customer reducing waiting time customer recommending healthy option product trust buying nearby shop shopkeeper local vendor increase sale help manage expand business online 2015-16 3 grocery shopping android smart recommendation 1.2 consists cross platform mobile shopkeeper customer delivery operator focus local vendor business online help increase sale consists web portal shopkeeper manage sale offline generate bill browser help shopkeeper control product inventory 1.3 developing reduce customer waiting time local shop letting customer buy grocery stationery electronics item online customer nearest shop provide multiple category product cover wide range market help local shopkeeper business online increase sale main aim develop refined recommendation help customer better decision develop web portal shopkeeper manage invnetory 1.4 existing mobile grocery shopping local vendor compete online retailer giant reach customer mobile platform small vendor increase sale business online database web portal vendor managing offline sale customer buy local daily in-need product n't choice going local shop increase crowd shop increased customer waiting time existing provide statistical nutritive packed food product help customer informed choice health condition 2015-16 4 grocery shopping android smart recommendation 1.5 studied grocery shopping understand ultimately help build detailed study existing grocery 1.1 review local banya mumbai premier online convenience store product ranging everyday essential salt rice flour sugar specialty product local banya organic mango paper spray baby care international brand provide free delivery easy payment option cash delivery credit debit card net banking grofers product grocery fresh fruit vegetable cosmetic mobile accessory electronics bakery item grofers-local shopping select store neighbourhood choose product mobile search locality delivery option scheduled delivery multiple payment option customer feedback inbuilt messaging limited grocery focus major shop basket delivery service promotion category 2015-16 5 grocery shopping android smart recommendation focus food restaurant restaurant provide product delivery tinyowl foodpanda focus major food chain poor 1.1 review 2015-16 6 grocery shopping android smart recommendation 2 definition 2.1 definition develop mobile 1.for customer support product browsing delivering providing efficient product recommendation order enhance customer decision making well improving customer interaction vendor 2.for shopkeeper manage customer request product delivery maintaining shop database web portal vendor manage database generate bill 3. delivery boy manage delivery order enable live tracking order 2.2 involves three mobile shopkeeper delivery boy customer customer 's allow customer order varying category daily product customer select shop shop recommended provided based factor shop status number product match distance shop customer 's current location delivery operator provide customer real-time tracking order 's location help delivery boy manage current previous delivery shopkeeper notification product delivery requested customer product requested customer shopkeeper customer 's current location his/her profile 2015-16 7 grocery shopping android smart recommendation 2.3 android/apple smart phone laptop desktop active internet connection 2.4 dream factory backend service baa phonegap/ionic framework android studio microsoft azure cloud computing platform text editor notepad++ gedit browser chrome mozilla firefox node.js angular.js html5 cs 2.5 area category mobile web-based 2015-16 8 grocery shopping android smart recommendation 3 specification 3.1 purpose develop mobile help local vendor well customer shopkeeper local vendor business online order increase sale customer help customer reduce effort buying local daily needed product availing product delivery service cash delivery reduce customer 's waiting time local shop customer shopkeeper better experience 3.2 3.2.1 selecting category subcategories product customer allows customer select specific category he/she choose category provided tab-view format better visualization category grocery book electronics food vegetable selecting main category customer choose subcategory finally select product 3.2.2 comparing product customer allows customer select compare product statistical nutritive packed food depicts percentage fat cholesterol vitamin basis customer finalize product 2015-16 9 grocery shopping android smart recommendation 3.2.3 shop selection recommended shop-list deciding final product customer move forward order find relevant shop shop provided customer based recommendation recommendation recommend shop based distance shop customer 's current location number product match based availability respective shop 3.2.4 order placement selecting desired shop customer provided selected product quantity product respective amount i.e total bill point customer order shopkeeper 3.2.5 check notification order customer order notification popped shopkeeper 's notification provide customer product ordered customer shopkeeper customer profile delivery requested current location customer 3.2.6 provide order status checking customer request received shopkeeper he/she accept reject request respective decision shopkeeper accepting rejecting order notified customer popping notification customer 's 2015-16 10 grocery shopping android smart recommendation 3.2.7 update shop database shopkeeper provide shopkeeper facility adding number product existing quantity database shopkeeper request add subcategory product add-on shopkeeper toggle shop status vice-versa 3.3 product position focus increasing local vendor 's shopping sale customer internet intended local vendor customer face waiting time shop relates customer-shopkeeper shopkeeper directly deal customer provided relation built based online transaction 3.3.1 existing online shopping website mobile focusing vendor selling product retail customer grocery mobile food-chain mobile focusing specific product covering variety product existing provide comparative food product live tracking order provided 2015-16 11 grocery shopping android smart recommendation 3.3.2 proposed approach includes incorporating small local vendor selling product meet daily customer main advantage reducing customer 's effort waiting time local shop expanding local vendor 's business bigger level making online well 3.4 constraint major constraint customer well shopkeeper smart phone 2015-16 12 grocery shopping android smart recommendation 4 4.1 execution a. identification searching identifying finalizing b. conceptualization concept building studied level designing stage preliminary presentation clarification c. detailed stage low-level designing designed better visualization d. coding actual start stage coding coding 10 12weeks e. unit initially tested number gui scenario involving tested separately f. integration integrated integrated component performed includes evaluation g. product wa tested context entire window platform performance monitored h. documentation detailed document prepared stage 2015-16 13 grocery shopping android smart recommendation gathering initial wa a. understanding definition b. understanding current scenario enterprise c. gathering d. gathering e. preparing preliminary workflow f. deciding execution g. execution actual 2015-16 14 grocery shopping android smart recommendation 4.2 cpm/pert 1 2 3 4 5 6 7 8 16 15 14 13 fig 4.1 cpm/pert 9 11 12 sr title start finish 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16. study angularjs node.js creation dummy fetching location signup update display shopkeeper push notification search shop optimized shop search recommendation engine layout code combining patch 7/15/2015 8/16/2015 9/11/2015 9/11/2015 10/2/2015 10/8/2015 10/8/2015 8/15/2015 9/10/2015 10/1/2015 10/1/2015 10/7/2015 10/27/2015 10/27/2015 10/8/2015 10/27/2015 10/28/2015 11/5/2015 11/28/2015 11/28/2015 12/6/2015 12/11/2015 2/11/2015 3/6/2016 11/4/2015 11/13/2015 12/5/2015 12/5/2015 12/10/2015 2/10/2016 3/4/2016 3/24/2016 4.1 cpm/pert stage 2015-16 15 10 day 31 25 20 20 6 19 19 19 8 10 11 11 5 60 24 20 grocery shopping android smart recommendation cpm critical path method /pert program evaluation review technique represents estimated time complete functionality pert organize coordinate cpm/pert started 15/07/2015 prototype deployment product 25/03/2016 aspect product development collection code construction deadline 2015-16 16 grocery shopping android smart recommendation 5 5.1 class class fig.5.1 representation class involved involved respective functionality diagrammatic representation rule unified modelling language version 2.0. class row block written bold letter bellow class involved 1. customer 2. shopkeeper 3. product_available 4. product 5. shop status 6. cart/order 7. order_details 8. address 9. address_type 10. order_status 11. 12. pin class listed specific class written association joining class object example shopkeeper accepts reject order cart request acceptance rejection class shopkeeper cart/order number connecting association represent n-ary multiplicity n-ary multiplicity one-to-one one-to-many many- to-one many-to-many zero-to-many asterisk mark represents side n-ary multiplicity 2015-16 17 grocery shopping android smart recommendation associated class represented diamond association hollow diamond represents aggregation relation filled diamond represents composition relation fig.5.1 class 2015-16 18 grocery shopping android smart recommendation 5.2 use-case fig.5.2 drawn 2.0 notation actor explained table5.1given grocery shopping participating actor customer shopkeeper server event 1.customers 1.a select category subcategory 1.b select product 1.c fetch select associated shop 1.d order 2.shopkeepers 2.a check requested product fetched order 2.b check customer location fetched 2.c push order status accept reject 3. bill generation delivery process placing fetching order product providing order status accepted/rejected delivery confirmation entry condition exit condition 5.1use-case modeling note final product selection shop-list displayed based smart recommendation server considers factor shop status on/off distance shop customer current location number product match 2015-16 19 grocery shopping android smart recommendation fig 5.2 2015-16 20 grocery shopping android smart recommendation 5.3 represents major functionality performed client server fig.5.3 fig 5.3 2015-16 21 grocery shopping android smart recommendation 5.4 represents major functionality performed fig 5.4. fig 5.4 1. customer log customer customer send customer authentication request server 2015-16 22 grocery shopping android smart recommendation 2. server authenticate customer fetch customer current location display nearest shop 3. customer select product add order cart 5.5 state shopkeepr state shopkeeper state order processing shopkeeper order arrives shopkeeper accept order reject order accepting order customer informed shopkeeper update state order ready order delivered state shopkeeper fig 5.5. fig 5.5 shopkeeper state 2015-16 23 grocery shopping android smart recommendation 5.6 state customer state customer state placing order fig 5.6 customer state 2015-16 24 grocery shopping android smart recommendation 5.7 extended waterfall basic product development based waterfall development fig 5.7 waterfall block represent step product development proceeds step product prototype delivered prototype deployment stage 2015-16 25 grocery shopping android smart recommendation 5.8 code snippet code snippet functionality attached customer.create /*****************register custmer*********************/ customer.name customerid customer.customerid email customer.email password customer.password mobile customer.mobile createdon date.now modifiedon date.now lastlogin date.now savedaddresses array currentorders array previousorders array favproducts array function err cust err res.send `` duplicateentry '' //console.log err res.send cust order.create /*****************place order*****************/ orderid .orderid customeremail .customeremail shopkeeperemail .shopkeeperemail typeofdelivery .typeofdelivery deliveryaddress .deliveryaddress orderedproducts .orderedproducts orderstatus `` '' deliverytype .deliverytype expecteddelivery null deliveryslot .deliveryslot 2015-16 26 grocery shopping android smart recommendation totalamount .totalamount createdon date.now expressdelivery .expressdelivery function err dota err res.send err // console.log dota var obj req.body /********************search shop distance*******************/ var lat obj.latitude var lon obj.longitude var r=4 var dellat =2/111.1 var kminlondist =111.320 math.cos lat/180*math.pi var dellon 2/kminlondist var minlat lat dellat var maxlat lat dellat var minlon lon dellon var maxlon lon dellon shopkeeper.find 'address.latitude gte minlat lte maxlat 'address.longitude gte minlon lte maxlon function ree doc //console.log doc doc res.send doc res.send `` notavailable '' order.findoneandupdate orderid obj.orderid orderstatus /******************update status shop********************/ obj.status function err docs1 //console.log docs1 2015-16 27 grocery shopping android smart recommendation err res.send err obj.status== '' accepted '' shopkeeper.findone email docs1.shopkeeperemail function err docs2 //console.log err //console.log docs2 docs2 var nworder docs2.neworders var nworder nworder .orderid==docs1.orderid nworder.splice 1 nworder==null nworder array break var currorder docs2.currentorders var p=0 currorder p=0 currorder.length p++ currorder .orderid==obj.orderid break currorder array p==currorder.length currorder currorder.length `` orderid '' obj.orderid docs2.currentorders currorder docs2.neworders nworder docs2.productsavailable updatestock docs1.orderedproducts docs2.productsavailable docs2.save res.send docs2 obj.status== '' cancelled '' || obj.status== '' delivered '' 2015-16 28 grocery shopping android smart recommendation shopkeeper.findone email docs1.shopkeeperemail function err docs5 //console.log err //console.log docs5 docs5 obj.prevstatus '' '' //remove orderid currentorders current order status `` '' var cworder docs5.currentorders var cworder cworder .orderid==docs1.orderid cworder.splice 1 cworder==null cworder array docs5.currentorders cworder console.log cworder var nworder docs5.neworders var nworder nworder .orderid==docs1.orderid nworder.splice 1 nworder==null nworder array docs5.neworders nworder //add orderid previousorders shopkeeper var prevorder docs5.previousorders console.log prevorder var p=0 prevorder p=0 prevorder.length p++ prevorder .orderid==obj.orderid break prevorder array p=0 2015-16 29 grocery shopping android smart recommendation //console.log prevorder.length p==prevorder.length prevorder prevorder.length `` orderid '' obj.orderid docs5.previousorders prevorder docs5.productsavailable restorestock docs1.orderedproducts docs5.productsavailable shopman docs5 console.log docs5 docs5.save //move orderid current previous order array customer.findone email docs1.customeremail function err docs8 //console.log err //console.log docs8 docs8 var cworder docs8.currentorders var cworder cworder .orderid==obj.orderid cworder.splice 1 cworder==null cworder array docs8.currentorders cworder var prevorder docs8.previousorders var p=0 p=0 prevorder.length p++ prevorder .orderid==obj.orderid break //console.log //console.log prevorder.length p==prevorder.length prevorder prevorder.length `` orderid '' obj.orderid docs8.previousorders prevorder docs8.save 2015-16 30 grocery shopping android smart recommendation res.send shopman docs1.typeofdelivery== '' cod '' operator.findone operatorid docs1.expressdelivery.operatorid function err doc doc var currdelv docs.currentorderdelv var i=0 i=0 docs.currentorderdelv.length i++ docs.currentorderdelv .orderid==docs1.orderid break currdelv.splice 1 var prevdelv docs.previousorderdelv prevdelv prevdelv.length `` orderid '' docs1.orderid docs.currentorderdelv currdelv docs.previousorderdelv prevdelv docs.save err res.send err obj.status== '' ready '' res.send `` status updated '' res.send `` status updated '' 2015-16 31 grocery shopping android smart recommendation 6 evaluation three resultant working detailed screenshots customer customer customer current location product category sub-categories recommended product based smart recommendation 2015-16 32 grocery shopping android smart recommendation product sub-categories displayed screenshots complete product product image quantity price customer select product mark favorite comparison product refer screenshot comparison 2015-16 33 grocery shopping android smart recommendation comparison kind packed grocery product based nutritive form pie bar graph 2015-16 34 grocery shopping android smart recommendation complete order placement process demonstrated screenshots 2015-16 35 grocery shopping android smart recommendation menu operation customer order status screenshot attached customer track order status order status form state accepted ready shipped delivered customer view shop his/her area shop status closed shop customer provide rating review selecting shop selecting shop product specific shop product tab screenshots shop displayed customer sorted distance shop customer location average shop rating 2015-16 36 grocery shopping android smart recommendation shopkeeper shopkeeper web portal designed order provide shopkeeper facility managing his/her offline sale viewed mobile phone screenshot shopkeeper menu provided shopkeeper manage his/her shop web portal screenshot attached 2015-16 37 grocery shopping android smart recommendation shopkeeper web portal 2015-16 38 grocery shopping android smart recommendation 7 7.1 mobile developed help local vendor well customer better selling shopping experience local vendor increase business boundary greater extent eventually profit local shopkeeper advertise shop order reach customer vendor providing product delivery better fetch location facility time shopkeeper 's benefit customer 's effort order buy daily product reduced customer wait shop buy daily product delivery facility cod help customer desired daily product customer search buying category product varying category included customer side 2015-16 39 grocery shopping android smart recommendation 7.2 7.2.1 website portal shopkeeper website portal provided shopkeeper order better generation facility better experience web-portal exact detailed notification panel shopkeeper handle customer request 7.2.2 involvement gamification order attract client customer well shopkeeper 'gamification strategy gamification strategy special discount selected product better offer selected day 7.3.3 website customer e-commerce alike website customer order product 2015-16 40 grocery shopping android smart recommendation 1 felix von reischach dominique guinard florian michahelles elgar fleisch mobile product recommendation interacting tagged product international conference dt 9-13th 2009 1-6 2 localbanya.com website online .available http //www.localbanya.com/ 3 grofers website online .available http //www.grofers.com/ 4 bigbasket.com website online .available http //bigbasket.com/ 5 tinyowl website online .available http //www.tinyowl.com/ 6 foodpanda website online .available http //www.foodpanda.in 2015-16 41", "keywords": ["android smart", "android smart recommendation", "business online", "cash delivery", "category product", "category subcategories", "current location", "current previous", "customer current", "customer current location", "customer customer", "customer order", "customer product", "customer select", "customer shopkeeper", "cworder cworder", "daily product", "delivery operator", "distance shop", "distance shop customer", "existing online", "existing online shopping", "function err", "grocery shopping", "grocery shopping android", "increase sale", "jayti lal", "karan thanvi", "local shop", "local vendor", "local vendor business", "local vendor increase", "minal laad", "number product", "offline sale", "online shopping", "online shopping website", "order placement", "order status", "product customer", "product delivery", "sale customer", "shop customer", "shop customer current", "shop status", "shopkeeper customer", "shopkeeper state", "shopping android", "shopping android smart", "shopping website", "smart recommendation", "state customer", "state shopkeeper", "var cworder", "var cworder cworder", "var prevorder", "variety product", "varying category", "vendor business", "vendor increase", "waiting time", "web portal"], "libraries": [], "languages": ["html5", "cs", "xml", "small", "sr", "javascript", "basic", "html", "java"], "frameworks": ["angularjs"], "dbs": []}, "./reports/final_report_print.pdf": {"title": "mobile based online collaboration", "filename": "./reports/final_report_print.pdf", "data": "mobile based online collaboration anuja koshti b-80058583 bhushan solanke b-80058646 mansi mathur b-80058595 pranita chaudhri b-80058527 guidance prof. s.r warhade fulfilment b. e. 411043 affiliated 2014 2015 411043 dissertation mobile based online collaboration anuja koshti b-80058583 bhushan solanke b-80058646 mansi mathur b-80058595 pranita chaudhri b-80058527 record bonafide him/her year 2014-2015 guidance prof. s.r.warhade dr. emmanuel m. hod dr. p. t. examiner _______________________ acknowledgement profoundly grateful prof. s.r warhade expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing grateful mr. niket puranik allows company express sincere heartfelt gratitude staff member helped directly indirectly course mansi mathur pranita chaudhari anuja koshti bhushan solanke human mind doe thinking time mind flood lot fact typical brainstorming session corporate multidisciplinary ability generate order lot company culture fostering people mind empathetically listen today internet offer designed help learner communicate collaborate provide innovation platform help build better provide platform brainstorming making vacation manage to-do keeping track product inventory online collaboration group people real-time sharing thought reach common online collaboration communicated group real-time keywords android online collaboration brainstorming 1. 1 1.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 1 1.2 basic concept ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 2 1.3 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 3 2. 4 2.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..5 2.2 existing ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..6 3. proposed 8 3.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .9 3.2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..9 3.3 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 9 3.4 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 10 4. 11 4.1 step acquire process ... ... ... ... ... ... ... ... ... ... ... ... ... ... .12 4.2 approach ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 12 4.3 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..13 4.3.1 1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..13 4.3.2 2 admin ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .13 4.3.3 3 organisation admin ... ... ... ... ... ... ... ... ... ... ... .13 5. 14 5.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..15 5.2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .15 5.3 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 16 5.4 e-r ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..17 5.4 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .18 5.5.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..18 5.5.2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .19 5.5.3 ... .20 5.5.4 deployment ... ..21 5.2 database ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 22 6. 26 6.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 27 6.2 code snippet ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..27 6.3 screenshots ... ... ... ... ... ... ... ... ... ... ... ... ... ..30 6.4 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..33 i. unit ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..33 ii integration ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .34 7. scheduling 35 8. 37 i. ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .38 ii ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .39 9. 40 5.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..14 5.2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .15 5.3 e-rdatabase ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .19 5.8 product ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..23 6.0 screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 25 6.1 menu screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 25 6.2 note screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .26 6.3 note screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .26 6.4 edit note screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..27 6.5 updated note screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .27 6.6 canvas screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 28 6.7 code screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 29 6.8 canvazify code screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .29 6.9 array code screenshot ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .30 6.10 code screenshots ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .30 6.11 database code sceenshots ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 31 5.7.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 19 5.7.2 note ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 19 5.7.3 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..19 5.7.4 defined ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 20 5.7.5 defined form ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 20 5.7.6 filled form ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .21 5.7.7 comment ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .21 5.7.8 rating ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 21 5.7.9 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..22 5.7.10 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..22 5.7.11 subscription ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .23 1 1 mobile based online collaboration 1 1 1.1 collaboration enables individual achieve defined common business purpose collaboration enables individual achieve defined common business purpose definition collaboration `` jointly online collaboration platform allow people thing online include online conversation forum email co-creation document sharing document rating file document file sharing storing aim develop android app help capture happen working online collaboration group people real-time internet sharing thought reach common organize discussion collect thought comment manage to-do real time communicate clearly effectively encourage teamwork 1.2 basic concept online collaboration web conferencing web conference enables people meet online real-time presentation note web conference face-to-face meeting discussion working document presented example online collaboration hand involves working time document mobile based online collaboration 2 1 1.3 enables share achieve shared share perspective allows leverage advantage skill unique individual context learning group update virtual group people located distributed centralized online space share canvas track discus interact mobile based online collaboration 3 2 2 literatutre mobile based online collaboration 4 2 2.1 collaboration `` jointly `` collaborative workspace shared workspace inter-connected environment participant dispersed location access interact inside single environment supported electronic groupware enable participant overcome space time differential '' online collaboration group people real-time internet sharing thought reach common online collaboration communicated group real time help understanding people group point time shared purpose includes sharing 6 1 online collaboration instructional internet offer help communicate collaborate advantage online collaboration making document sharing document 2 2 online collaboration created designer serve concept crafting whiteboard simple annotation web apps include element collaboration concept drafting brainstorming working mock- live collaboration easier feedback artwork professional manner sort form free android apps chrome extension mobile based online collaboration 5 2 2.2 existing variety mediated online collaboration discussion skype elluminate live carrick exchange access grid teacher collaborative filtering collaborative writing included email phone teleconferencing collect collate qualitative quantitative elluminate live include integrated voice ip teleconferencing public private chat quizzing polling emoticon webcam includes visual including whiteboard sharing file transfer web tour includes record allows moderator record class watch well graphing breakout room group timer whiteboard support uploading presentation viewing whiteboard class meeting elluminate java web start java se sun microsystems elluminate live designed providing java installed skype skype telecommunication product specializes providing video chat voice call tablet mobile device internet device smartphones send instant message exchange file image send video message create conference call skype download running microsoft window mac linux well android blackberry io window phone smartphones tablet mobile based online collaboration 6 2 service free require skype credit subscription call landline mobile number 8 carrick exchange carrick exchange online service provide collaboration service learning teaching australian international higher education sector carrick exchange sponsored carrick learning teaching higher education teach manage lead learning teaching australian higher education carrick exchange aim provide access learning material teaching practice learning opportunity academic support staff network comment exchange academic participate discussion debate dialogue teaching mobile based online collaboration 7 3 proposed 3 proposed mobile based online collaboration 8 3 3.1 build online real time collaboration based mobile help ideating brainstorming 3.2 human mind doe thinking time mind flood lot infact typical brainstorming session corporate multidisciplinary ability generate order lot company culture fostering people mind empathetically listen wall filled key question choose good best crowd solution collaboration 3.3 help collaborate easily time strike time help add thought basic access cipboard add quick note clipboard delete note sync quick note server create canvas real time update access clipboard mobile based online collaboration 9 3 3.4 main develop extended android based mobile canvazify canvazify web built help capture happen working collaborative innovation platform template starting point making productive discussion well organizing thought tracking decision mobile based online collaboration 10 4 4 mobile based online collaboration 11 4 collaboration enables individual achieve defined common business purpose collaboration enables individual achieve defined common business purpose 3 definition collaboration `` jointly online collaboration platform allow people thing online enables share achieve shared share perspective allows leverage advantage skill unique individual context learning group update virtual group people located distributed centralized online space share canvas track discus interact 4.1 step acquire process 64 bit ubuntu linux server designing database installing android studio eclipse adding library implementing intuitive input 4.2 approach human mind doe thinking time mind flood lot fact typical brainstorming session corporate multidisciplinary ability generate order lot company culture fostering people mind empathetically listen today internet offer designed help learner communicate collaborate provide innovation platform help build better provide platform mobile based online collaboration 12 4 brainstorming making vacation manage to-do keeping track product inventory 1 4.3 4.3.1 1 sign existing help email password access clipboard existing canvas displayed update canvas adding note deleting note editing note create canvas defined template share canvas 4.3.2 2 admin admin authority access update admin create add template admin add thought event sending notification admin responsible adding subscription 4.3.3 3 admin specific admin assigned role admin add remove admn assign canvas mobile based online collaboration 13 5 5 mobile based online collaboration 14 5 5.1 server side quad core processor 80 gb hdd 2 gb ram client side quad core processor 4 gb ram 500 gb hdd 5.2 server side 64 bit ubuntu linux server mongodb 3.0 rail 4.0 ruby 2.0 socket io 1.0 node 0.10 enginex 1.4 redis server client side eclipse 7 android studio 4.4 sqlite mobile based online collaboration 15 5 5.3 basically collaboration 3 -user -admin -organization admin interat collaborative manner 5.3.1 5.1 mobile based online collaboration 16 5 5.4 e-r 5.2 e-r mobile based online collaboration 17 5 5.5 5.5.1 5.3 mobile based online collaboration 18 5 5.5.2 5.4 mobile based online collaboration 19 5 5.5.3 5.5 mobile based online collaboration 20 5 5.5.4 deployment 5.6 deployment mobile based online collaboration 21 5 5.6 database field email encrypted password industry_segment username authentication_token field width height top left note_order background_color border avg_rating comments_count users_count is_deleted parent_id due_date field help_text width height top left width_per height_per top_per left_per section_order layout is_deleted datatype string string string string string 5.6.1. datatype string integer integer integer integer integer string float integer integer boolaen string datetime 5.6.2 note datatype string string integer integer integer integer float float float float integer string boolean 5.6.3. mobile based online collaboration 22 5 field width height top left width_per height_per top_per left_per layout full_width_note help_text field title canvas_type width height width_per height_per accessibility uid is_dynamic canvas_help_text footer sample_filled_form_id meta_description meta_keywords page_title field title canvas_type canvas_help_text footer width height width_per height_per view accessibility description datatype string integer integer integer integer float float float float string boolean string 5.6.4. defined datatype string string integer integer float float string string boolean string string string string string string 5.6.5. defined form datatype string string string string integer integer float float integer string string mobile based online collaboration 23 5 read_only is_shared is_deleted is_dynamic ordered_section_ids uid notes_count view moment_id meta_description meta_keywords guest_token boolean boolean boolean boolean array string integer string string string string string 5.6.6 filled form field body user_id commentable_id commentable_type field rating user_id note_id field visibility description current_plan_id users_count user_id datatype string boolean string string string 5.6.7 comment datatype integer string string 5.6.8 rating datatype string string string string integer string 5.6.9 mobile based online collaboration 24 5 field description price validity_in_months is_active no_of_private_collaborative_canvases enable_replay enable_export_as_pdf enable_share_project enable_create_project no_of_canvases no_of_organisations no_of_organisational_people no_of_collaborators datatype string string float integer boolean integer boolean boolean boolean boolean integer integer integer integer field plan_id payment_id created_by_user_id valid_from valid_to price no_of_organisational_people is_active plan_abilities 5.6.10 datatype string string string float integer boolean hash 5.6.11 subscription mobile based online collaboration 25 6 6 mobile based online collaboration 26 6 6.1 mobile based online collaboration account private clipboard associated clipboard white board people add stickies version mobile canvazify clipboard add quick note stickies clipboard version create canvas add note delete note edit note comment rating note collaborative platform share canvas add his/her note comment rating note 6.1.1 code snippet development developed android studio eclipse screen size developed android version 4.2 view graphical layout developed 6.1 development mobile based online collaboration 27 6 client client developed eclipse 7. database sqlite library file jar graphical 24 hour client access opted functionality front 6.2 client 6.3 canvas mobile based online collaboration 28 6 remote object base class access api 6.4 remote object mobile based online collaboration 29 6 6.2 screen shot 6.2.1 6.2.2 canvas mobile based online collaboration 30 6 6.2.3 adding note 6.2.4 note mobile based online collaboration 31 6 6.2.5 updating note 6.2.6 updated note mobile based online collaboration 32 6 6.3 phase form development life cycle product tested thoroughly delivered customer document general strategy adopted product 6.3.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine unit entire function procedure 1 aim select password cued click point selection image hard disk expected pixel entered database actual expected 2 aim password process terminated selection wrong click point wrong click point expected prompt select correct point process terminated 3 aim administrator current grant request administrator expected administrator wa grant request granted client actual expected 4 aim dynamically generated duration duration expected generation actual expected mobile based online collaboration 33 6 6.3.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision major carrying integration called bottom-up method top-down method bottom mobile based online collaboration 34 7 scheduling 7 scheduling mobile based online collaboration 35 7 scheduling oct nov dec jan 7.1 feb mar apr sep aug mobile based online collaboration 36 8 8 mobile based online collaboration 37 8 8.1 mobile based online collaboration android collaborative platform mention increasing pleasantness automation showing real time exporting note trailo exporting note canvas changing style note triangle circle setting color note absolute positioning note layout canvas mobile based online collaboration 38 8 8.2 mobile based online collaboration android overcomes existing collaborative platform provide platform help access clipboard add quick note clipboard delete note real time update access clipboard sync quick note server create canvas add comment rating note auto save ensures loss share canvas online collaboration group people real-time internet sharing thought reach common mobile based online collaboration 39 9 9 refrences mobile based online collaboration 40 9 book 1 professional android 4 development wrox paperback 8 jun 2012 reto meier author 2 android programming pushing limit paperback 24 mar 2014 erik hellman author 1 `` online collaboration principle '' garrison journal asynchronous learning network 2006 citeseer 2 james a. west sharon a. sample margaret l. west online collaboration instructional journal march-april 2010 3 `` online collaboration blog wikis '' mjw lee training development australia 2005 csusap.csu.edu.au 4 gramlich nicolas `` android development community android tutorial '' online http //anddev.org 5 '' android development '' rick rogers john lombardo zigurd mednieks blake meike 6 learing community collaboration online rena m. palloff ph.d. keith pratt ph.d. crossroad consulting group 7 http //developer.android.com/ 8 http //www.creativebloq.com/design/online-collaboration-tools-912855 mobile based online collaboration 41 9 mobile based online collaboration 42", "keywords": ["access clipboard", "anuja koshti", "business purpose", "canvas mobile", "carrick exchange", "collaboration group", "common business", "common business purpose", "datatype string", "datatype string string", "defined common", "defined common business", "float integer", "gb ram", "higher education", "integer float", "integer integer", "integer integer float", "integer integer integer", "mansi mathur", "mathur pranita", "note screenshot", "online collaboration", "online collaboration group", "quick note", "share canvas", "string integer", "string string", "string string integer", "string string string", "width height"], "libraries": [], "languages": ["basic", "io", "ruby", "java"], "frameworks": [], "dbs": ["sqlite", "redis", "mongodb"]}, "./reports/FULL REPORT30.pdf": {"title": "augmented reality app for home decor", "filename": "./reports/FULL REPORT30.pdf", "data": "augmented reality decor augmented reality app decor shubham malu sumit verma ajinkya binwade shalvi rani b120058586 b120058643 b120058506 b120058631 guidance prof. n. v. buradkar 2015-2016 2015-16 1 augmented reality decor augmented reality decor shubham malu sumit verma ajinkya binwade shalvi rani b120058586 b120058643 b120058506 b120058631 bonafide prof. n. v. buradkar earlier diploma prof. n. v. buradkar dr. emmanuel dr. p. t. examiner 2015-16 2 augmented reality decor acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting express sincere gratitude dr. emmanuel m. invaluable support received zestful guidance prof. n. v. buradkar provided honour consistent input guidance extensively served completion express sincere gratitude coordinator prof. s. s. pande acknowledge valuable criticism well timely appreciation humbling experience express sincere gratitude reviewer prof. s. b. deshmukh prof. s. d. shelke invaluable support guidance purpose gathering making hope amply justified faith reposed sincerely making enriching experience shubham malu sumit verma ajinkya binwade shalvi rani 2015-16 3 augmented reality decor fig 5.1 5.2 5.3 5.4 5.5 netwotk ... .. ... ... ... ... state ... 15 16 17 18 19 2015-16 4 augmented reality decor abbreviation abbreviation ar loc pc tv illustration augmented reality code telivision 2015-16 5 augmented reality decor acknowledgement nomenclature title ii iii iv 1 1 2-3 2 3 1.1 .. .. 1.2 project.. 3 3 background review.. 4-5 2.1 2.2 ... ... ... ... ... ... ... ... .. background 4 4 6-7 3.1 definition .. 3.2 ... ... 3.3 3.4 3.5 required.. required.. area project.. 6 6 6 6 7 4 8-10 4.1 4.2 purpose scope.. 4.2.1 selecting object website 4.2.2 print marker 4.2.3 start webcam 8 8 8 8 8 2015-16 6 augmented reality decor title 4.2.4 select object augment 4.2.5 start augmenting 4.2.6 click photo share 4.3 description .. 4.4 4.5 4.6 4.3.1 4.3.2 product position 4.3.3 existing system.. 4.3.4 proposed constraint ... ... ... ... ... ... ... ... ... .. 8 8 9 9 9 9 9 9 10 10 10 5 11-19 5.1 execution 5.2 ... ... 5.3 5.4 5.2.1 three point based estimation 5.2.2 based estimation 5.2.3 process based estimation.. 5.2.4 schedule.. 5.4.1 decomposition.. 5.5 specifications.. 5.5.1 5.5.2 5.5.3 5.5.4 state 11 12 12 12 13 13 14 14 14 15 15 17 18 19 2015-16 7 augmented reality decor title 6 evaluation 20-23 7 6.1 6.2 6.3 item plan.. 6.3.1 unit testing.. 6.3.2 integration 6.3.3 order 6.3.4 item oass/fail criterion 6.3.5 suspension criteria.. 6.4 procedure 6.4.1 unit 6.4.2 integration 20 20 20 20 20 20 21 21 21 21 22 24-25 26 2015-16 8 augmented reality decor existing online furniture website allow view static image furniture furniture house dimension size color number comprehensible approach augmented reality improve online furniture shopping experience decor website virtually furniture real view augmented 3d artifact develop allows augment view 3-d object buy online 3-d panned zoomed rotated him/her real time experience inspecting object allows share augmented friend colleague web video conferencing social website twitter facebook keywords augmented reality 3d real-time experience rendering 2015-16 9 augmented reality decor 1 existing online shopping allow view static image item furniture piece furniture house dimension size color number comprehensible 16 visitor online retailer purchase reviewed marketlive question arises enhance online furniture shopping experience increase online market sale answer question propose approach augmented reality improve online shopping experience virtually furniture surroundings view augmented 3d artifact scaled actual size item 3d 95 matching real life counterpart 3d scaled panned zoomed transformed 3d space real-time allows inspect element dimension examine real life augmented reality live direct indirect view physical real-world environment element augmented supplemented computer-generated sensory input sound video graphic gps general concept called mediated reality view reality modified diminished augmented function enhancing current perception reality contrast virtual reality replaces real simulated augmentation conventionally real-time semantic context environmental element sport score tv match help advanced ar adding vision object recognition surrounding real interactive digitally manipulable artificial environment object overlaid real ivan sutherland invented ar head-mounted display harvard steven feiner professor columbia leading pioneer augmented reality author paper ar prototype karma knowledge-based augmented reality maintenance assistant blair macintyre doree seligmann steve mann formulated earlier concept mediated reality 1970s 1980s camera processor display modify visual reality help people better dynamic range building computerized welding helmet well `` augmediated reality '' vision everyday life louis rosenberg developed ar called virtual fixture working u.s. air force armstrong lab 1991 published 2015-16 10 augmented reality decor study ar enhance human performance rosenberg 's subsequent stanford early 90 's wa proof virtual overlay registered presented 's direct view real physical enhance human performance 1.1 aim build interactive online furniture shopping life- experience upcoming augmented reality implementing keyboard mouse free easy interaction online shopping 1.2 existing online cumbersome accompanied static 2d image photo item consumer trust condition actual product vary illustrated eventually hesitate buy online visit store physically check item buy remove hesitation customer mind enable buy online visit store propose augmented reality based webcam shopper allows customer sit augment 3d item purchase online inspect real-time angle corner 2015-16 11 augmented reality decor 2 background review 2.1 augmented reality wa developed forty year ago field review ten-year development presented ismar conference predecessor focus tracking interaction display roadmap augmented reality great young field helping researcher decide topic explored study area visual marker existing augmented reality ar performance ar depends highly tracking visual marker detection tracking pose estimation currently marker based tracking/calibration desirable marker tracking perform best specific ar purpose compare marker planar square coded visual marker evaluation qualitatively quantitatively usability efficiency accuracy reliability ar marker detection tracking purpose rank existing marker analyze strength weakness aspect marker tracking provide ar developer 2.2 background augmented reality gather wide variety experience distinguish 3 main category augmented reality augmented reality 3d viewer augment allow life-size 3d environment tracker augmented reality browser enrich camera feed contextual example point smartphone building display history estimated augmented reality game create immersive gaming experience shooting game zombie walking bedroom video game entertaining 30 year pong wa introduced arcade early 1970s graphic sophisticated game graphic pushing barrier photorealism researcher engineer pulling graphic television screen display integrating real-world environment called augmented reality blur 's real 's computer-generated 2015-16 12 augmented reality decor enhancing hear feel smell spectrum virtual reality creates immersive computer-generated environment real augmented reality closer real augmented reality add graphic sound haptic feedback smell natural exists video game cell phone driving development augmented reality tourist soldier closest subway benefit ability computer- generated graphic field vision augmented reality changing view -- picture walking driving street augmented-reality display eventually normal pair glass informative graphic appear field view audio coincide enhancement refreshed continually reflect movement device exist smartphones iphone augmented reality screen connected device smartphones tablet augmented reality feel magic window augmented reality apps iphone ipad android pc connected tv augmented reality webcam cumbersome manipulate tracker front screen connected glass lens augmented reality feel robocop 2015-16 13 augmented reality decor 3 3.1 definition create augmented reality decor purpose marker based technique template furniture rendered real time 3.2 website allows select furniture range category color size select click button check youve web camera installed prompt connect web camera selected object furniture downloaded server client machine temporary drive fed input launched object fed listed panel hand-side window hold marker front webcam input object selected start webcam frame captured webcam input scanned pattern i.e marker pattern replaced object selected furniture 3d object maker move marker object move panned zoomed rotated 3.3 dual core processor average web-camera internet connection 3.4 dot net framework 2.0 higher window operating web browser native web-camera driver 2015-16 14 augmented reality decor 3.5 area category intelligent sub-category web based online 2015-16 15 augmented reality decor 4 4.1 purpose develop allows augment view 3-d object buy online 3-d panned zoomed rotated him/her real time experience inspecting object allows share augmented friend colleague web video conferencing social website twitter facebook 4.2 4.2.1 selecting object furniture website website allows select furniture range category color size stack trial 4.2.2 print marker marker supposed printed allows printed saved 4.2.3 start webcam click button check youve web camera installed prompt connect web camera selected object furniture downloaded server client machine temporary drive fed input launched 4.2.4 select object augment object fed listed panel hand-side window select object start augmenting 4.2.5 start augmenting hold marker front webcam input object selected start webcam frame captured webcam input scanned pattern i.e marker pattern replaced object selected chair 3d object maker move marker object move panned zoomed shrinked 2015-16 16 augmented reality decor 4.2.6 click photo share allows snapshot augmented frame share online friend facebook twitter allows video conferencing share view product room 4.3 description focus increasing web shopping sale making secure enjoyable experience 4.3.1 create augmented reality decor purpose marker based technique template furniture rendered real time 4.3.2 product position intended online retailer online customer physical replication product customer buy relates customer feel buy augmented reality based webcam shopper graphical product integrates web running customer side augment product relation size dimension shape color 4.3.3 existing existing online furniture mobile phone allow view static image item download install proper wifi connection piece furniture room dimension size color number comprehensible addition suffer bandwidth customer satisfaction friendly customer adjust frame augment image 4.3.4 proposed approach augmented reality improve online shopping experience virtually wear apparel accessory view augmented 3d artifact scaled actual size item rich web based friendly 2015-16 17 augmented reality decor avoids bandwidth usage satisfaction increasing sale 4.4 constraint major constraint printed marker pattern matching 3d developed item seller sell website 4.5 dual core processor average web-camera internet connection 4.6 dot net framework 2.0 higher window operating web browser native web-camera driver 2015-16 18 augmented reality decor 5 basic provide friendly keyboard mouse free augmented reality based source ar library called nyartoolkit developed japanese college library basic functionality pattern matching marker camera image capturing support library developed recognize pattern augment 3d directx format camera image provide real-time 3d transformation respect transformation marker scanned camera transformation 3d transformation matrix provide function scaling translation rotation 3d space 5.1 execution a. identification searching identifying finalizing b. conceptualization concept building studied level designing stage preliminary presentation clarification c. detailed stage low-level designing designed better visualization d. coding actual start stage coding coding 10 12 week e. unit initially tested number gui scenario involving tested separately f. integration integrated integrated component performed includes evaluation g. product wa tested context entire window os platform performance monitored h. documentation detailed document prepared stage 2015-16 19 augmented reality decor gathering initial wa a. understanding definition b. understanding current scenario enterprise c. gathering d. gathering e. preparing preliminary workflow f. deciding execution g. execution actual 5.2 estimation technique three point based estimation based estimation process based estimation applied 5.2.1 three point based estimation estimation technique size element considered estimation planner bounded attempt decompose function estimated individually loc estimated function baseline productivity metric applied appropriate estimation variable cost effort function derived function combined order calculate estimated allocated domain appropriate domain average productivity generating three point based estimation decomposition wa performed major function identified function 1. handling input coming webcam 2. identifying presence marker apply transformation 3. fetching 3d web server website 4. maintaining history session 5.2.2. based estimation provide insight estimation level structural hierarchy established average length 2015-16 20 augmented reality decor determined defined rough considered characteristic established empirical establish loc historical compute effort based estimation decomposition wa performed major identified 1. evaluating 2. camera capturing 3. pattern matching 4 3d augmentation transformation total loc 10 000 5.2.3. process based estimation common technique estimating base process process decomposed small effort accomplish estimated problem-based technique process based estimation delineation function series framework performed function function process melded planner effort e.g person-months accomplish process function constitute central matrix process estimation average labor rate applied effort estimated process labor rate vary cost effort function computed step process based estimation decomposition wa performed major function identified function 1. handling input coming webcam 2. identifying presence marker apply transformation 3. fetching 3d web server website 4. maintaining history session 5.2.4. final time reconciliation 3.5 month 2015-16 21 augmented reality decor 5.3 possibility loss injury definition environment exposure harm loss includes possibility well technique alleviate harm loss .all avoided performing attempt ensure time essential progress failure key learning involves identification prioritization 5.4 5.4.1 decomposition critical determined 6 leading development breakdown major t1 image capturing camera a. studying understanding ar library b. understanding captured image parameter c. studying coordinate based image capturing t2 pattern matching a. studying image matrix b. studying raw image characteristic c. studying mapping captured image raw image t3 development 3d a. learning 3d development 3d studio max b. understanding physic 3d object c. designing complex 3d kind furniture t4 translating 3d a. studying directx 3d format b. translating 3d max directx t5 integrating 3d a. studying 3d rendering directx 3d environment b. rendering 3d transforming 3d space real time 2015-16 22 augmented reality decor t6 developing website a. studying existing online furniture website b. coding website html cs javascript php t7 integrating website a. understanding linking website b. studying technique linking website c. linking website suitable technique t8 a. image capturing b. rendering 3d c. website link connectivity d. integration fig 5.1 network 5.5 specification 5.5.1 expected behavior functioning respect actor focus description 5.2 interaction website 2015-16 23 augmented reality decor fig 5.2 2015-16 24 augmented reality decor 5.5.2 represents business step-by-step workflow component control 5.3. fig 5.3 2015-16 25 augmented reality decor 5.5.3 parallel vertical process object live simultaneously horizontal arrow message exchanged order occur allows specification simple runtime scenario graphical manner 5.4. fig 5.4 2015-16 26 augmented reality decor 5.5.4 state state state depicts change state event output 5.5 state fig 5.5 state 2015-16 27 augmented reality decor 6 evaluation 6.1 aim provide hassle-free online shopping enable view item 3d space real-time 3d transformation website selects item view start request web-camera start web-camera search pattern matched marker draw 3d object marker plane transforms 3d respect marker transformation coordinate real-time 6.2. item applies well integration input output tested validity tested final tested 6.3. unit boundary function executed integration 6.3.1 unit unit focus verification effort smallest unit component occur running selected unit ensure detailed unit correctly implemented 6.3.2 integration integration systematic technique constructing time conducting uncover error associated combine major main tested involves basic procedure invocation execution 6.3.3 order performance performance performed determine fast aspect performs workload phase included entire 2015-16 28 augmented reality decor order ensure function coherent unit error breakup point 6.3.4 item pas /fail criterion unit level unit level satisfies condition completed function return expected output input boundary pass boundary condition input function tested validity integration level unit level completed including boundary condition gesture implemented valid performance display acceptable limit performance level valid operation performance entire acceptable limit 6.3.5 suspension criterion failure occur outlier normal runtime condition halted development occur 6.4 procedure apart function major tested described unit applied integrated 6.4.1 unit 1 aim image capturing camera capture expected capturing image natural ambient light resolution frame actual expected 2015-16 29 augmented reality decor 2 aim image matching based transformation matrix image transformation coordinate 3d space expected exact coordinate matched pattern actual expected 3 aim rendering 3d 3d directx format texture material expected 3d rendered correct dimension correct texture lightning material 4 aim runtime switching multiple expected efficient quick switching 3d 5 aim website link connectivity hyperlink linked file document expected working link connectivity 6.4.2 integration 1 aim integrate camera capturing pattern matching camera captured raw pattern expected correctly capturing image identifying actual expected 2 aim integrate image matching rendering raw image 3d expected 3d rendering exact coordinate matched pattern actual expected 2015-16 30 augmented reality decor 3 aim 3d rendering transformation 3d space transformation matrix 3d expected transforming 3d space pattern plane 4 aim integration website release version website expected passing correctly website 2015-16 31 augmented reality decor 7 integrating enhancing capability essential hope introduce augmented reality based shopping growing market augmented reality library major advantage source lot freedom developer augmented reality ample extension customizability door entire web market prove valuable dealer well customer advent augmented reality implemented development progress domain augmented reality library embedded sdks contribute ongoing development process nutshell attempt establish novel efficient hassle-free help bring development totally provide life-like experience great ease wayne dyer change thing thing change augmented reality graphic normal display brought real illusion existence environment augmented reality ar dont sound exciting ar add graphic sound haptic feedback sense smell virtual reality today augmented reality spread wing gaming day day life retail business health sector augmented reality capability showcased retail sector change shopping experience definitely bridge gap online physical store health sector fascinating understanding human body matter physical body 3d aspect 2d image graphic augmented reality influenced mobile industry today tom dick harry james bond augmented reality featured wearable device gps enabled smartphones definitely enjoy special advance hand imagine wearing cool glare absolutely normal wearing glare correct eye vision store plenty hd movie favorite book song enjoy day long noticed isnt cool google glass surely making impression upcoming news geeky glass going shrink contact lens ar fitted 2015-16 32 augmented reality decor biggest advantage augmented reality bridge gapped digital real promotion marketing product interactive game 3d experience offered level exceptional option mobile augmented reality rapidly growing popularity easy downloadable dynamic smart phone solution include gps geolocation blending contextual situation combination separate enable augmented reality mainstream bring variety immersive experience educational emphasized augmented reality re-create historical event activate regular book 3d image galaxy superimposed real-time augmented reality extremely educator classroom setting presentation allows gain deeper understanding topic hand merging medium reading experience enhanced reader fully engaged text image usual augmented reality allows dynamic 3d graphic `` hovering '' 2015-16 33 augmented reality decor 1 mark billinghurst andreas dunser augmented reality classroom 2012 2 fabrizio lamberti federico manuri andrea sanna gianluca paravati pietro pezzolla paolo montuschi challenge opportunity trend emerging technique augmented reality- based maintenance 2015 3 visual realism search mixed reality simulation transaction visualization graphic 19 4 2013 internet 1 www.code.tutsplus.com 2 www.unity3d.com/services 2015-16 34", "keywords": ["augmented reality", "augmented reality decor", "based estimation", "based estimation decomposition", "color number", "decor acknowledgement", "decor title", "dimension size", "dimension size color", "directx format", "estimation decomposition", "existing online", "existing online furniture", "furniture website", "human performance", "image capturing", "keyboard mouse", "link connectivity", "online furniture", "point based", "point based estimation", "process based", "process based estimation", "real time", "reality based", "reality decor", "shopping experience", "shubham malu", "size color", "size color number", "static image", "transformation matrix", "view static", "view static image", "visual marker", "webcam input"], "libraries": [], "languages": ["php", "cs", "html", "javascript", "basic", "small"], "frameworks": [], "dbs": []}, "./reports/Group 11.pdf": {"title": "word problem solver", "filename": "./reports/Group 11.pdf", "data": "word solver b120058560 nikita mandhani b120058543 mrunal khinvasara b120058585 yatish patil b120058574 piyush nalawade guidance mrs. r.v.kulkarni sr 27 pune-satara road bharti vidyapeeth college college dhankwadi maharashtra 411043 2017-2018 b120058560 nikita mandhani b120058543 mrunal khinvasara b120058585 yatish patil b120058574 piyush nalawade bonafide mrs.r.v.kulkarni fulfilment earlier diploma mrs. r.v.kulkarni examiner dr. b.a sonkamble dr. p. t. 14-10-2017 word solver 411043 subject sponsorship l3 cube respected sir inform college undertaken word solver l3cube mrunal khinvasara yatish patil nikita mandhani piyush nalawade thanking sincerely gaurav suryagandh founder l3cube 2017-18 ii word solver acknowledgement opportunity express heart-felt gratitude dr. p.t.kulkarni providing infrastructure complete express deepest gratitude dr. b.a.sonkamble express deep sincere gratitude mrs. r.v.kulkarni unflagging support continuous encouragement guidance persistent help directly indirectly helped completion seminar ms. nikita mandhani ms. mrunal khinvasara mr. yatish patil mr. piyush nalawade 2017-18 iii word solver class use-case dataflow gantt word solver correct question correct answer incorrect question correctly detected answer 1 story question correctly detected answer 2 fig 4.1 4.2 4.3 4.4 5.1 7.1 7.2 7.3 7.4 7.5 7.6 7.7 iv 2017-18 word solver 2.1 review 2017-18 word solver title review proposed specification definition concept dataflow splitup 2.0 evaluation snapshot expiremental 1 3 3 3 5 6 7 8 8 9 9 10 11 12 13 15 16 17 17 18 20 21 21 32 33 37 37 38 39 39 40 1 2 3 4 5 6 7 8 1.1 1.2 2.1 3.1 3.2 3.3 3.4 3.5 4.1 4.2 4.3 4.4 5.1 5.2 6.1 6.2 7.1 7.2 7.3 8.1 8.2 2017-18 vi word solver review sheet ii iii iv 50 2017-18 vii word solver approach automatically learning solve word propose sentence boundary construct solve linear equation profit/loss simultaneously recovering alignment variable number equation text learning varied including full equation final answer space equation defined equation template induced training example template slot number slot filled number text unknown slot aligned noun keywords slot filling probabilistic parser 2017-18 1 word solver 1 2017-18 2 word solver 1. 1.1 understanding profit/loss word matter correctly mapping element parsing constituent sentence equation template 1 teach perform mapping produce equation template propose machine learning 2 equation produced propose solve 1.2 program complete efficiently effectively human calculating product number empowering ability natural language understanding solve word helpful e-learning remote teaching technique facility lagging help child face difficulty word 2017-18 3 word solver 2 2017-18 4 word solver 2. review paper publication author year advantage/limitation adv/lim automatically number word semantic parsing reasoning 3 microsoft 2015 mit 2014 learning automatically solve algebra word 2 learning synchronous grammar semantic parsing lambda calculus 5 science texas austin 2017 semantic parsing science freebase question answer pair 4 adv unknown lim handle word shuming shi yuehui wang chin-yew lin xiaojiang liu yong rui nate kushmany yoav artziz luke zettlemoyerz regina barzilay yuk wah wong lim synchronous raymond j. mooney processed single sentence isolation multiple sentence simultaneously analyzed generate global semantic representation grammar semantic parsing limited simple meaning representation language free logical variable jonathan berant andrew lim semantic parser stanford chou roy annotated logical 2013 frostig percy liang form 2.1. review 2017-18 5 word solver 2.1 proposed propose approach automatically learning solve word semantic interpretation map natural language formal representation semantic parser parsed sentence extracted template alignment slot template text modelled latent variable learning stanford parser neural network choosing template 2017-18 6 word solver 3 2017-18 7 word solver 3. specification 3.1 definition automatically solve word common introductory class written natural language serve educational solution book 3.2 concept process processing question expressed natural language 1 processing question knowledge representation extracted domain knowledge provided underlying representation help clear ambiguity faced natural language processor 3 mapped equation equation solved 6 example article purchased rs.450 sold rs.500 find gain percent template selected gain s.p c.p *100 c.p 2017-18 8 word solver slot template selected s.p c.p purchased 450 c.p sold 500 s.p equation gain= s.p c.p 500 450 solution gain 50/450 100 100/9 3.3 restrict processed profit/loss introductory class currency word range 105. supervised learning developed 3.4 aim solve profit/loss word generation dataset word generation dataset template 2017-18 9 word solver usage semantic parser proposing word matching template parsed rule based solve word perform k-fold cross validation empirical 3.5 propose self-generated profit/loss 3.5.1 stanford nlp parser natural language toolkit python source 3.5.2 compatible source 2017-18 10 word solver 4 2017-18 11 word solver 4. 4.1.architecture fig 4.1. word solver word procedure semantic parsing extraction template matching template instantiation estimation 2017-18 12 word solver 4.2.uml 4.2.1. class fig 4.2 class depicts class included 2017-18 13 word solver 4.2.2. use-case fig 4.3. depicts actor 2017-18 14 word solver 4.3. dataflow fig 4.4. level-2 fully emphasized 2017-18 15 word solver 4.4. input word profit/loss output numerical answer word t1 t2 tn template 1. input word profit/loss 2. parse token 3. mapping variable equation selecting template define equation ii instantiate template number noun 4. space equation defined equation template induce training template slot 6 5. number slot filled number unknown slot aligned noun slot variable 6. solve equation calculate answer tokenize keywords parsing help stanford parser going feed word translation algebraic equation training purpose algebraic equation solved help rule-based finally output slot calculated equation example slot c.p s.p 2017-18 16 word solver article purchasd rs.450 sold rs.500 find gain percent sold 500 s.p sold 500 gain gain/c.p 100 gain 50/450* 100 100/9 semantic parsing purchased 450 template c.p purchased 450 alignment template gain s.p c.p instantiation 500 450 answer gain rs.50 2017-18 17 word solver 5 2017-18 18 word solver 5. 5.3. split-up 1. generate dataset semantic parsing identify template dataset template instantiation probabilistic estimation correct derivation 2 3 4 5 5.4. 2.0 fig 5.1 gantt 2017-18 19 word solver 6 2017-18 20 word solver 6. 6.1.overview python natural language toolkit library parse input develop parse tree template generated match input tag unknown template matched appropriate function called calculate unknown display answer explanation 6.2.implementation code ans= ans.append `` cost price '' +str cp ans.append `` selling price '' +str sp ans.append `` formula calculate gain '' `` selling price cost price `` ans.append `` gain `` str ab sp-cp return ab sp-cp ans= ans.append `` cost price '' +str cp ans.append `` selling price '' +str sp ans.append `` formula calculate loss '' `` cost price selling price `` ans.append `` loss `` str ab cp-sp return ab cp-sp formula.py def find_gain cp sp def find_loss cp sp def find_sp cp sr ans= sr== '' gain '' sp=cp+x ans.append `` cost price '' +str cp ans.append `` `` +str sr '' '' str ans.append `` selling price '' +str cp+x 2017-18 21 word solver return ans= sr== '' loss '' ans.append `` selling price '' +str cp ans.append `` `` +str sr '' '' str ans.append `` cost price '' +str ab cp-x return ans.append `` selling price '' +str cp ans.append `` `` +str sr '' `` '' '' str ans.append `` cost price '' +str ab cp+x return sp=abs cp-x ans.append `` cost price '' +str cp ans.append `` `` +str sr '' `` '' '' str ans.append `` selling price '' +str ab cp-x return def find_cp cp sr def find_loss_percent loss cp cost price *100 `` def find_gain_percent gain cp cost price *100 `` urls.py '' '' '' wps url configuration urlpatterns route url view http //docs.djangoproject.com/en/2.0/topics/http/urls/ example function view 1. add import my_app import view 2. add url urlpatterns path `` views.home name='home class-based view 1. add import other_app.views import v= gain/cp *100 ans.append `` gain percent `` +str return v= loss/cp *100 ans.append `` loss percent `` +str return ans= ans.append `` cost price '' +str cp ans.append `` loss '' str loss ans.append `` formula calculate loss percent `` `` cost price selling price ans= ans.append `` cost price '' +str cp ans.append `` gain '' str gain ans.append `` formula calculate gain percent `` `` selling price cost price 2017-18 22 word solver 2. add url urlpatterns path `` home.as_view name='home including urlconf 1. import include function django.urls import include path 2. add url urlpatterns path 'blog/ include 'blog.urls '' '' '' django.contrib import admin django.urls import path django.conf.urls import url include import view urlpatterns path 'admin/ admin.site.urls url `` views.portal views.py django.shortcuts import render django.http import http404 django.shortcuts import render get_object_or_404 django.http import httpresponse httpresponseredirect .forms import submit def portal request request.method == 'post question=request.post.get `` question '' answer=submit question print answer return render request 'answer.html `` error '' answer pas return render request 'fillform.html forms.py ans= def moremoney dep doc pattern unknown import os.getcwd import numpy np import panda pd import spacy import formula nlp spacy.load 'en_core_web_sm 2017-18 23 word solver jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-postagger-3.8.0.jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/models/english-left3words- difflib import sequencematcher import path_to_jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-parser-3.8.0.jar path_to_models_jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-parser- import nltk import pprint pprint.prettyprinter indent=4 nltk import word_tokenize nltk.corpus import stopwords nltk.parse.corenlp import corenlpparser nltk.tag import stanfordnertagger nltk.parse.stanford import stanfordparser nltk.parse.stanford import stanforddependencyparser nltk.stem import porterstemmer nltk.tokenize import sent_tokenize nltk.tag import stanfordpostagger dependency_parser stanforddependencyparser path_to_jar=path_to_jar 3.8.0-models.jar distsim.tagger path_to_models_jar=path_to_models_jar print `` moremoney '' q_dep= pos_tagger stanfordpostagger jar encoding='utf8 ratios= answer= '' '' ent doc.ents q_dep= triple dep.triples q_dep str q_dep print `` '' print q_dep range len pattern mx=max ratio print len ratio ino=ratios.index mx print ino pq=clean ent.text com=clean triple 0 0 com1=clean triple 2 0 com==pq com1==pq ratios= ent.label_== '' money '' ent.label_== '' cardinal '' money=pq q_dep.append triple m=sequencematcher pattern `` pattern '' q_dep q=m.ratio ratios.append 2017-18 24 word solver answer=pattern `` tag '' ino import formula nlp spacy.load 'en_core_web_sm difflib import sequencematcher import path_to_jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-parser- path_to_models_jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford- jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-postagger- '/usr/local/lib/python2.7/dist-packages/nltk/tag/models/english- import nltk import pprint pprint.prettyprinter indent=4 nltk import word_tokenize nltk.corpus import stopwords nltk.parse.corenlp import corenlpparser nltk.tag import stanfordnertagger nltk.parse.stanford import stanfordparser nltk.parse.stanford import stanforddependencyparser nltk.stem import porterstemmer nltk.tokenize import sent_tokenize nltk.tag import stanfordpostagger sen_list=sent_tokenize pos_tagger stanfordpostagger jar encoding='utf8 no_sen=nltk.freqdist sent_tokenize .n dependency_parser stanforddependencyparser path_to_jar=path_to_jar print answer unknown import numpy np import panda pd import spacy def find question doc inq 3.8.0.jar parser-3.8.0-models.jar 3.8.0.jar left3words-distsim.tagger path_to_models_jar=path_to_models_jar k=str mmmo 0 u=str mmmo 1 final= j=0 print `` infind `` print `` 1 '' mmmo= ent doc.ents print ent print ent.label_ ent.text ent.label_ ==u'money mmmo.append ent.text 2017-18 25 word solver u=u.lstrip k=float u=float print print `` 1 '' k=k.lstrip j=j+1 1 == '' wdt '' 1 == '' wrb '' 0 == '' find '' j=0 fin=0 print `` 1 '' print question question print fin==0 1 == '' wp '' 0 == '' find '' 0 == '' find '' 0 == '' calculate '' 0 == '' calculate '' fin=1 print 1 '' md '' 0 == '' '' 0 == '' '' i== '' sp '' i== '' selling '' i== '' cp '' i== '' cost '' i== '' gain '' i== '' profit '' p=0 print final sp=0 cp=0 gain=0 gpercent=0 lpercent=0 loss=0 unk=0 final 0 == '' '' 0 == '' '' print 0 final.append 0 print `` 1 '' i=question sprint `` 1 '' j=j+1 gain=1 unk+=1 cp=1 unk+=1 sp=1 unk+=1 break 2017-18 26 word solver gpercent=1 final.count `` gain '' 1 final.count `` profit '' 1 unk+=1 unk+=1 `` percent '' final `` '' final `` percentage '' i== '' loss '' lpercent=1 final.count `` loss '' 1 loss=1 unk+=1 `` percent '' final `` '' final `` percentage '' print `` unknown `` +str unk print gpercent lpercent '' top tk top.configure background= '' eeeeee '' top.title `` word solver '' l1 label top final final.count `` gain '' ==1 final.count `` profit '' ==1 final text= '' answer '' bg= '' eeeeee '' fg= '' 2cc866 '' font= `` helvetica '' 16 l1.pack side top pady=30 top.minsize width=750 height=290 l1 label top fg= '' black '' font= `` helvetica '' 16 l1.pack side top padx=20 pady=30 e1 entry top bd =5 bg= '' grey '' font= `` helvetica '' 14 width=100 e1.pack ipady=50 '' print `` 5 '' unk == 1 sp==1 inq.count `` gain '' ==1 inq.count `` profit '' ==1 elif cp==1 inq.count `` gain '' ==1 inq.count `` profit '' ==1 elif sp==1 inq.count `` loss '' ==1 elif cp==1 inq.count `` loss '' ==1 answer=formula.find_cp `` gain '' ans.append answer ans `` '' answer anss+=i anss+= '' \\n '' answer=formula.find_sp `` gain '' ans.append answer ans `` '' answer anss+=i anss+= '' \\n '' answer=formula.find_sp `` loss '' ans.append answer ans `` '' answer anss+=i anss+= '' \\n '' 2017-18 27 word solver answer ur=formula.find_loss ans.append answer ans `` '' answer anss+=i anss+= '' \\n '' answer ur=formula.find_gain ans.append answer ans `` '' answer anss+=i anss+= '' \\n '' answer=formula.find_cp `` loss '' ans.append answer ans `` '' answer anss+=i anss+= '' \\n '' elif gain==1 gpercent==0 lpercent==0 elif loss==1 gpercent==0 lpercent==0 elif gpercent==1 elif lpercent==1 kr u=formula.find_loss answer=formula.find_loss_percent min max ans.append answer ans `` '' kr answer anss+=i anss+= '' \\n '' anss+=str l1.configure text= '' '' ans top.mainloop elif unk==2 return ans kr u=formula.find_gain answer=formula.find_gain_percent min max ans.append answer ans `` '' kr answer anss+=i anss+= '' \\n '' anss+=i anss+= '' \\n '' anss+=i anss+= '' \\n '' print `` hello '' return 0 2017-18 28 word solver import numpy np import panda pd import print red pd.read_csv '/home/piut/django-apps/wps/wps/patterns.csv header=0 print return red import numpy np import panda pd import spacy import formula nlp spacy.load 'en_core_web_sm difflib import sequencematcher import path_to_jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-parser-3.8.0.jar path_to_models_jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-parser- jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-postagger-3.8.0.jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/models/english-left3words- def read def clean text 3.8.0-models.jar distsim.tagger path_to_models_jar=path_to_models_jar import nltk import os.getcwd import pprint pprint.prettyprinter indent=4 nltk import word_tokenize nltk.corpus import stopwords nltk.parse.corenlp import corenlpparser nltk.tag import stanfordnertagger nltk.parse.stanford import stanfordparser nltk.parse.stanford import stanforddependencyparser nltk.stem import porterstemmer nltk.tokenize import sent_tokenize nltk.tag import stanfordpostagger pos_tagger stanfordpostagger jar encoding='utf8 dependency_parser stanforddependencyparser path_to_jar=path_to_jar ps=porterstemmer cleaned_text text.replace `` cleaned_text=re.sub \\.\\s `` `` cleaned_text cleaned_text=re.sub a-za-z `` `` cleaned_text words=word_tokenize cleaned_text return cleaned_text 2017-18 29 word solver path_to_models_jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford- '/usr/local/lib/python2.7/dist-packages/nltk/tag/models/english- jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-postagger- import numpy np import os.getcwd import panda pd import spacy import formula nlp spacy.load 'en_core_web_sm difflib import sequencematcher import import nltk import pprint pprint.prettyprinter indent=4 nltk import word_tokenize nltk.corpus import stopwords path_to_jar '/usr/local/lib/python2.7/dist-packages/nltk/tag/stanford-parser- def impp input_question 3.8.0.jar parser-3.8.0-models.jar 3.8.0.jar left3words-distsim.tagger path_to_models_jar=path_to_models_jar '' '' print `` 1 '' print os.path.exists '/home/piut/django-apps/wps/wps/patterns.csv print `` 2 '' pattern=read 'patterns.csv print `` 1 '' print pattern question=input_question tagged_question=pos_tagger.tag nltk.word_tokenize question doc nlp question print nltk.parse.corenlp import corenlpparser nltk.tag import stanfordnertagger nltk.parse.stanford import stanfordparser nltk.parse.stanford import stanforddependencyparser nltk.stem import porterstemmer nltk.tokenize import sent_tokenize nltk.tag import stanfordpostagger pos_tagger stanfordpostagger jar encoding='utf8 print doc print `` 2 '' dependency_parser.raw_parse question pp.pprint tagged_question dependency_parser stanforddependencyparser path_to_jar=path_to_jar 2017-18 30 word solver return 0 print `` 3 '' unknown=find tagged_question question doc input_question unknown==0 return 0 return unknown return str moremoney doc pattern unknown problem_statement=question problem_statement=problem_statement.lower print `` lower zhala '' problem_statement=clean problem_statement print problem_statement print `` clean zhala '' final_ans=impp problem_statement return final_ans def submit question patterns.csv pattern 'costs 'nns 'nmod `` 'cd `` 'cd 'case 'for 'in `` 'cd 'dep `` 'cd 'nmod 'sold 'vbz `` 'cd 'case 'for 'in `` 'cd 'dep 'article 'nn 'nmod `` 'cd `` 'cd 'case 'for 'in `` 'cd 'dep 'sells 'vbz 'nmod `` 'cd 'choclates 'nns 'nummod `` 'cd `` 'cd 'case 'of 'in 'price 'nn 'nmod `` 'cd 'find 'vb 'nsubj 'choclates 'nns 'percent 'nn 'det 'the 'dt 'percent 'nn 'det loss 'nn 'find 'vb 'dobj 'percent 'nn 'articles 'nns 'nummod `` 'cd 'sp 'nn 'case 'to 'to 'sp 'nn 'det 'the 'dt 'equal 'jj 'nmod 'sp 'nn 'articles 'nns 'nummod `` 'cd 'find 'vbp 'advmod 'then 'rb 'percent 'nn 'det 'the 'dt 'percent 'nn 'compou 'gain 'nn 'find 'vbp 'dobj 'percent 'nn 'sold 'vbz 'nmod `` cd `` 'cd 'dep 'costs 'nns 'case 'if 'in 'find 'vbp' 'dobj 'profit 'nn `` 'cd 'case 'for 'in `` 'cd 'mark 'if 'in `` 'cd 'nsubj 'cp 'nn `` 'cd 'cop 'is 'vbz `` 'cd 'dep 'calculate 'vb 'advcl `` 'cd `` 'cd 'cc 'and 'cc `` 'cd 'conj 'loss 'nn `` 'cop 'is 'vbz `` 'cd 'dep 'incurred 'vbn 'ccomp 'find 'vb 'cp 'nn 'det 'the 'dt 'find 'vb 'dobj 'cp nn `` 'cd 'case 'for 'in `` 'cd 'dep 'chocolates 'nns 'nmod `` 'cd `` 'cd ase 'of 'in `` 'cd 'dep 'loss 'nn 'nmod `` 'cd 2017-18 31 word solver 7 2017-18 32 word solver 7. evaluation 7.1. snapshot fig 7.1 word solver depicts 2017-18 33 word solver depicts correct input fig 7.2 correct question depicts correct output fig 7.3 correct output 2017-18 34 word solver fig 7.4 incorrect depicts incorrect fig 7.5 correctly detected answer 1 depicts correctly detected output 2017-18 35 word solver fig 7.6 story question depicts question fig 7.7 correctly detected answer 2 depicts correctly detected output 2017-18 36 word solver 7.2.experimental experimentation easy story total number easy 100. total number correct 95. accuracy 95 total number story 10. total number correct 6. accuracy 60 7.3.testing strategy unit strategy unit process development small individually tested unit individually tested integrating help unit amount error removed good built designed tested individually checked bug multiple shouldnt tested simultaneously 2017-18 37 word solver 8 2017-18 38 word solver 8. 8.3. discussed developed word solver profit/loss major wa develop self-learning child learning school educational platform byjus khan academy word solver 8.4. easily improved adding multiple pattern domain development handling maximum number domain calculate answer mixed word isnt efficient doesnt correct output easily improved adding pattern 2017-18 39 word solver 2017-18 40 word solver 1 sowmya sundaram deepak khemani natural language processing simple word iitm 2016 2 nate kushmany yoav artziz luke zettlemoyerz regina barzilay learning automatically solve algebra word mit 2014 3 shuming shi yuehui wang chin-yew lin xiaojiang liu yong rui automatically number word semantic parsing reasoning microsoft 2015 4 jonathan berant andrew chou roy frostig percy liang semantic parsing freebase question-answer pair stanford 2013 5 http //nlp.stanford.edu 8080/parser/ stanford parser natural processing language 6 http //nlp.stanford.edu/pubs/ stanford supervised slot filling technique 2017-18 41 word solver 2017-18 42", "keywords": ["ab cpx", "ab cpx return", "ansappend answer", "ansappend answer ans", "anssi anss", "answer ans", "answer anssi", "answer anssi anss", "berant andrew", "cd case", "cd cd", "cd cd case", "cd dep", "chou roy", "cost price", "cp nn", "cpx return", "dependencyparser stanforddependencyparser", "equation template", "gain percent", "import nltk", "import nltk import", "import numpy", "import osgetcwd", "import osgetcwd import", "import panda", "import panda pd", "import pprint", "jonathan berant", "jonathan berant andrew", "liu yong", "mandhani mrunal", "mrunal khinvasara", "natural language", "nikita mandhani", "nltk import", "nmod cd", "nn det", "nn nmod", "nns nummod", "nns nummod cd", "np import", "np import panda", "nummod cd", "osgetcwd import", "panda pd", "panda pd import", "pd import", "percent final", "postagger stanfordpostagger", "postagger stanfordpostagger jar", "question print", "semantic parser", "semantic parsing", "shi yuehui", "shuming shi", "shuming shi yuehui", "sp cp", "sp nn", "stanford parser", "stanfordpostagger jar", "str ab", "str ab cpx", "wang chinyew", "word solver", "xiaojiang liu", "xiaojiang liu yong", "yatish patil"], "libraries": ["numpy", "panda", "spacy", "nltk"], "languages": ["python", "small", "clean", "sr"], "frameworks": [], "dbs": []}, "./reports/Group 28 Report.pdf": {"title": "predictive modelling and failure analysis of hard disk", "filename": "./reports/Group 28 Report.pdf", "data": "predictive modelling failure hard disk dhairyasheel bhalerao b-80058515 manik agarwal b-80058594 sunny virwani b-80058651 guidance dr. emmanuel m. fulfilment b.e 2015 411043 affiliated 2014-2015 411043 dissertation predictive modelling failure hard disk dhairyasheel bhalerao b-80058515 manik agarwal b-80058594 sunny virwani b-80058651 record bona fide fulfilment year 2014-2015 guidance dr. emmanuel m. hod dr. emmanuel m. dr. p. t. examination examiner _______________ acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting profoundly grateful dr. emmanuel expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. boradkar coordinator invaluable guidance supported completing grateful mr. ravindra deshpande allied digital pvt ltd. allowed company express sincere heartfelt gratitude staff member helped directly indirectly course dhairyasheel bhalerao manik agarwal sunny virwani ii predictive analytics practice extracting existing order determine pattern predict outcome trend predictive analytics doe happen forecast happen acceptable level reliability includes what-if scenario assessment predictive modelling process created chosen best predict outcome predictive modelling number technique including mining statistical modelling machine learning help analyst business forecast collection technique common finding target response dependent variable predictor independent variable mind measuring predictor inserting predict target variable consider event recorded live disk construct decision support analyze current historical identify potential hard disk failure desired prediction accuracy ease interpretability keywords predictive modelling mining statistical modelling disk failure iii 1 1.1 1 2 1.2 functioning 2 1.3 3 1.4 3 1.4.1 uplift modelling 1.4.2 archaeology 1.4.3 customer 1.4.4 healthcare 2 3 3 4 4 5 2.1 predictive 6 2.2 s.m.a.r.t 6 2.3 predictive modelling 8 3 proposed 10 3.1 11 3.2 11 3.3 11 3.4 11 4 13 4.1 step acquire process 14 4.2 approach 14 4.3 15 4.3.1 1 extracting 15 4.3.2 2 connectivity insertion database 15 4.3.3 3 running 15 4.3.4 4 generate 15 5 16 5.1 17 iv 5.2 17 5.3 17 5.3.1 18 5.4 19 5.5 25 5.5.1 dfd level 0 25 5.5.2 dfd level 1 25 5.6 database 26 6 27 6.1 28 6.1.1 front snippet 28 6.1.2 snippet 30 6.2 33 6.2.1 unit 33 6.2.2 integration 34 7 planning scheduling 35 7.1 planning 36 7.1.1 36 7.1.2 definition 36 7.1.3 milestone 36 7.2 scheduling 36 7.3 approach 38 7.3.1 role responsibility 38 8 39 8.1 40 8.2 40 41 2.1 snapshot smart 8 5.1 18 5.2 19 5.3 20 5.4 21 5.5 state 22 5.6 interaction 23 5.7 24 5.8 dfd level 0 25 5.9 dfd level 1 25 6.1 graph variation 28 6.2 device info window 28 6.3 screen 29 6.5 database 6.4 basic utility command 6.6 connectivity snippet 6.7 insertion snippet 30 31 31 32 vi 5.1 storage schema 26 6.1 integration 34 7.1 gantt 37 7.2 role responsibility 38 vii 1 1 1.1 predictive modelling process created chosen best predict outcome collection technique common finding target response dependent variable predictor independent variable mind measuring predictor inserting predict target variable predictive modelling defined inference identify meaningful better predict event perfect practice desirable measure uncertainty prediction typically prediction interval assigned level confidence 95 failure refers mechanism analyse trend corrected error predict failure component proactively enabling mechanism avoid failure process collecting analysing determine failure discipline branch manufacturing industry electronics industry vital development product improvement existing product failure process relies collecting failed component subsequent examination failure wide array method 1.2 functioning process building typically potential predictor variable three group affect response affect response destined inclusion predicting equation middle response failure rate calculated summing failure rate component category applies failure component assumed lead failure detecting impending failure hard disk prediction help prevent loss performance degradation consider event recorded live disk construct decision support detect failure desired prediction accuracy ease interpretability explore rule based classifier predicting hard disk failure disk event learn easy understand rule disk event extremely alarm rate real 2 1.3 cio linkedin marketpulse 42 cio current practice out-dated feeling unwarranted doubling year colossal 1.8 zettabyte created replicated 2011. today valuable asset business field storage prevention loss priority utmost care loss affect entire business suffer heavy loss term money well reputation consider example e-commerce browsing site server crash site day incur heavy loss term money well loss customer reputation build detect failure inform main build best predict possibility failure hard disk time backup 1.4 1.4.1 uplift modelling uplift modelling technique modelling change caused action typically marketing action offer buy product product re-sign contract example retention campaign predict change customer remain customer contacted change allows retention campaign targeted customer change beneficial allows retention programme avoid triggering unnecessary churn customer attrition wasting money contacting people 1.4.2 archaeology generally predictive modelling archaeology establishing statistically valid causal coverable natural proxy soil elevation slope vegetation proximity water geology geomorphology presence archaeological quantifiable land undergone archaeological archaeological sensitivity unsurveyed area anticipated based natural proxy area land 3 manager united state bureau land blm defence dod numerous highway park agency employed strategy predictive modelling cultural capable making informed decision planning potential require ground disturbance subsequently affect archaeological site 1.4.3 customer predictive modelling extensively analytical customer mining produce customer-level describe likelihood customer action action sale marketing customer retention example consumer organisation mobile telecommunication operator predictive product cross-sell product deep-sell churn common organisation solvability uplift predicts likelihood customer saved contract period change churn opposed standard churn prediction 1.4.4 health care 2009 parkland health hospital began analysing electronic medical record order predictive modelling help identify patient readmission initially hospital focused patient congestive heart failure program expanded include patient diabetes acute myocardial infarction pneumonia 4 2 5 2.1 predictive predicting impending failure hard disk accurately help storage centre administrator corrective action failure avoid loss performance degradation predicting failure hard disk factor consideration studying disk failure second proprietary difficult acquire 2.2 s.m.a.r.t self-monitoring reporting hard drive vendor support s.m.a.r.t measure drive characteristic temperature spin-up time error rate s.m.a.r.t parameter reliably predict individual drive failure s.m.a.r.t implemented differently drive manufacturer industry standard major hard drive manufacturer manufacturer-specific proprietary held individual manufacturer specific approach s.m.a.r.t correctly implemented lack standard handling s.m.a.r.t incorporated disk event error generated layer storage le stack referred disk event rest paper include read write error checksum error raid-level error account disk manufacturer disk size variation occurrence disk event manufacturer manufacturer presently hard drive naive threshold trigger smart ag exceeds predefined threshold avoid alarm expense predictive accuracy based prior observation statistical basis drive manufacturer defines s.m.a.r.t selects threshold normal operation range 1 253 1 representing worst 253 representing best depending manufacturer 100 200 chosen `` normal '' note mapped range 1 253 higher better s.m.a.r.t command window ensure drive support smart smartctl -i /dev/sda /dev/sda hard drive enable smart drive 6 smartctl -s /dev/sda find time smartctl -c /dev/sda display detailed smart sata drive smartctl -a -d ata /dev/sda linux install smartmontools package sudo apt-get install smartmontools ensure drive support smart sudo smartctl -i /dev/sda /dev/sda hard drive enable smart drive sudo smartctl -s /dev/sda find time sudo smartctl -c /dev/sda display detailed smart sata drive sudo smartctl -a -d ata /dev/sda example smart critical reallocated sector count spin retry count command timeout soft read error rate reallocation event count example smart non-critical read error rate throughput performance spin time start/stop count seek error rate 7 snapshot smart 2.1 snapshot smart 8 2.3 predictive modelling addition predicting failure hard drive keep alarm rate minimum create unnecessary panic owner well escalating support warranty cost incurred storage array hard drive vendor trained recognize characteristic class good disk failing disk suitable predictive modelling k-nearest neighbor random forest chosen base suitable modification generated efficiently predict failure accepted hard disk manufacturer vendor property easily implementable trustworthy rule learning viable option rule learnt calculated memory computational develop efficient stand-alone predicting hard disk failure good accuracy alarm rate machine learning technique rule-based technique intuitively comprehensible special significance hard disk failure interpretation help pruning insignificant rule classification second rule provide insight disk event helpful predicting failure help real failure hard disk develop efficient stand-alone predicting hard disk failure accuracy alarm rate rule-based technique special significance hard disk failure prediction highly interpretable i.e intuitively comprehensible easy understand interpretation technique 9 3 proposed 10 3.1 primary aim build suitable platform help predictive carry failure secondary storage device hdd performance efficiency storage device s.m.a.r.t predictive chosen sample modification consideration critical threshold predict imminent failure threat secondary storage device final construct platform predict accuracy impending failure device warn administrator 3.2 extracting analysing writing code suitable language portability issue wide array database selection accurate efficient predictive demonstrate functionality provision record store database 3.3 main develop smart predictive modelling predict failure hard disk based principle decision support ds developed s.m.a.r.t predicts storage device fail enabling well time avoid loss compare threshold stored database based predicts failure.the today 3.4 accurately efficiently predict failure improvement existing careful threshold comparison relative threshold 11 based outcome comparison predict efficiency failure hard disk completion time 12 4 13 predictive modelling failure company organisation hard disk fail anytime delay series compared threshold worst health status temperature rotational latency his/her hard disk hard disk manufacturer market unique hard disk handle hard disk 4.1 step acquire process window platform version xp/7/8 designing database installing dot net collecting sample reading hard disk implementing 4.2 approach basic smart smart status '' threshold exceeded '' `` threshold exceeded '' represented `` drive '' `` drive fail '' `` threshold exceeded '' intended indicate drive honor specification drive `` fail '' predicted failure catastrophic subtle inability write sector slower performance manufacturer 's declared minimum smart status doe indicate drive 's reliability drive failed catastrophically smart status inaccessible alternatively drive experienced sensor longer detect smart status depending manufacturer 's programming drive sound health drive examining smart smart included draft ata standard removed standard final meaning interpretation varies manufacturer considered trade secret manufacturer discussed drive smart optionally maintain number 'logs error log record error drive reported host examining log help determine disk-related caused 14 4.3 4.3.1 1 extracting extract hard disk host pc hard disk extracting extraction hard disk isnt factor 4.3.2 2 connectivity database insertion insert relevant mongodb database bson document database 4.3.3 3 running stored database compute normalised analysed compared freshly extracted output format 4.3.4 4 generate presented predicts failure his/her hard disk 15 5 16 5.1 mongodb 2.6 standard edition visual studio 2010 microsoft dot net framework smartmontools mongo sharp driver 1.10.0 window server 2012 window 8 nuget package installer 5.2 processor iv processor higher storage device hard drive smart enabled 5.3 basically collaboration 4 1. extracting 2. importing mongodb 3. 4. generation interact collaborative manner 17 5.3.1 5.1 18 5.4 5.2 19 5.3 20 5.4 21 5.5 state 22 5.6 interaction 23 5.7 24 5.5 5.5.1 dfd level 0 5.8 dfd level 0 context level 5.5.2 dfd level 1 5.9 dfd level 1 25 5.6 database field _id a_id a_value a_worst a_thresh hd_man stamp description unique identifier identifier current worst threshold hard disk manufacturer time 5.1 storage schema int int int int int string 26 6 27 6.1 6.1.1 front snippet 6.1 graph variation 6.2 device info window 28 6.3 simple screen 29 6.1.2 snippet 6.4 database 30 6.5 basic utility command 6.6 connectivity snippet 31 6.7 insertion snippet 32 6.2 phase form development life cycle product tested thoroughly delivered customer document general strategy adopted product 6.2.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine unit entire function procedure tested 1 extraction aim check extraction listed orderly manner hard disk s.m.a.r.t expected correct actual expected 2 connectivity insertion database aim check front-end properly connected mongodb back-end inserted stored database vb function connectivity extracted file expected connection establishment actual expected 3 running aim predict status working hard disk drive normalized processing expected processing correctly predicts state hard disk actual expected 4 generation aim check expected printed friendly manner 3 33 expected accurate output displayed actual expected 6.2.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision major carrying integration called bottom- method top-down method bottom procedure expected actual pas fail predict 1 click status pas state command hard disk expected hard disk button displayed provided developer device check 1 click basic pas fetch device expected hard disk command manufacturer button timestamp displayed statistical view 1 select graph pas desired displaying expected variation drop 6.1 integration 34 7 planning scheduling 35 7.1 planning provide definition including 's prove agreement concerned stakeholder planned comprise phase phase phase 1 fetch analyze phase 2 store phase 3 compare threshold phase 4 predict efficiency 7.1.1 1. accurately efficiently predict failure 2. improvement existing 3. careful threshold 4. completion time 7.1.2 definition 1. extracting analyzing 2. writing code suitable language portability issue 3. wide array database 4. selection accurate efficient predictive 5. demonstrate functionality 6. provision record store database 7.1.3 milestone 1. selection best suited predictive modelling 2. completion 3. integration 7.2 scheduling 36 july14 aug14 oct14 nov14 jan15 feb15 mar15 april15 sponsorship finalizing topic 1st review gathering designing latex 2nd review 3rd review final review final 7.1 gantt 37 7.3 approach 7.3.1 role responsibility role responsibility participant 1. approval emmanuel m. coordinator 1. coordinating n. v. buradkar 2. providing facility group 2. managing 1. provide oversight emmanuel m. guidance ravindra deshpande 2. review/approve element developer 1. realizing dhairyasheel bhalerao manik agarwal 2. implementing code sunny virwani 3. enhancing functionality 7.2 role responsibility 38 8 39 8.1 smart complete hard disk hard disk prepared considering level performance drive smart optionally maintain number 'logs error log record error drive reported host examining log help determine disk-related caused main purpose improve performance standard hard disk running complete periodic check hard disk factor hard disk improve performance standard hard disk chance loss hard disk failure reduce margin 8.2 predictive modelling fall domain mining mention increase automation applied volatile memory pen drive flash drive applied network card nic applied hard disk process bit lengthy 40 1 discovering rule disk event predicting hard drive failure agarwal bhattacharya susarla niranjan international conference machine learning icmla 2009 2 prediction hard drive failure rule discovery auto support ml- lab.csa.iisc.ernet.in 3 proactive drive failure prediction scale storage xiaoguang liu sheng lin gang wang journal 2012 4 msdn microsoft developer network 5 msdn www.microsoft.com 6 www.mongodb.org 41", "keywords": ["alarm rate", "decision support", "disk event", "disk failure", "disk manufacturer", "drive failure", "emmanuel hod", "error rate", "failure hard", "failure hard disk", "hard disk", "hard disk failure", "hard disk manufacturer", "hard drive", "impending failure", "predictive modelling", "ravindra deshpande", "role responsibility", "smart status", "storage device", "sudo smartctl", "wide array"], "libraries": [], "languages": ["basic", "spin"], "frameworks": [], "dbs": ["mongodb"]}, "./reports/GroupId-10-Report .pdf": {"title": "avoiding slow running nodes in distributed   systems", "filename": "./reports/GroupId-10-Report .pdf", "data": "avoiding slow running node distributed b120058516 b120058536 b120058549 ankitkumar gurnani b120058551 kalpesh bucha aditi ghamandi pooja gupta guidance prof. s. b. deshmukh 2015-16 avoiding slow running node distributed b120058516 b120058536 b120058549 ankitkumar gurnani b120058551 kalpesh bucha aditi ghamandi pooja gupta bonafide prof. s. b. deshmukh earlier diploma prof. s. b. deshmukh examiner dr. p. t. dr. emmanuel m. acknowledgement great pleasure satisfaction presenting avoiding slow running node distributed express deep sense gratitude s. b. deshmukh guiding process directed path helped refer valid document provided appropriate facility solved faced prof. a. m. bagade prof. s. pande inspiring special hod dr. emmanuel valuable support directly indirectly helped completion group id-10 kalpesh bucha aditi ghamandi pooja gupta ankitkumar gurnani aknowledgement ii iii tables.. iv nomenclature ... .. title 1 introduction.. 10-16 2 1.1 distributed frameworks.. 10 1.2 ... 12 1.3 hadoop .. 13 17-22 2.1 straggler node ... 17 2.2 current solution ... 18 3 specification 23-26 3.1 definition.. 23 3.1 ... ... ... ... 24 3.2 25 4 .. 27-32 4.1 class 27 4.2 ... ... ... .. 28 4.3 diagram.. 30 4.4 31 5 implementation.. 33-43 5.1 cluster setup ... 33 5.2 workload ... 34 5.3 dataset ... .. 34 5.4 ganglion ... .. 34 5.5 combining ganglion hadoop ... .. 36 5.6 labeling ... ... 37 5.7 normalizing 37 5.8 converting libsvm format 38 5.9 mpiliblinear 38 5.10 scheduling hadoop yarn ... 39 6 ... .. 44 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 45 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 45 ... ... 47 fig 1.1 distributed system.. 10 1.2 1.3 2.1 2.2 data.. 12 hadoop ... ... ... ... ... ... .. 15 blacklisting ... ... 19 blacklisting ... 19 2.3 speculative execution 20 4.1 4.2 4.3 class 27 28 30 4.4.1 31 4.4.2 ii.. 32 5.4.1 ganglion 35 5.4.2 ganglia.. 36 5.9.1 node logic 39 5.9.2 yarn label based scheduling.. 40 6.1 improved job completion time ... .. 45 illustration 3.1 3.2 4.1 4.2 ... ... 25 26 description 31 description ii ... 32 5.1 setup.. 33 abbreviation abbreviation illustration late largest approximate time svm support vector machine mtl multi learning hdfs hadoop distributed file social medium development bioinformatics government healthcare science biggest concern properly analyzed processed machine processing power execution time utilization major concern fast execution time optimal utilization top priority storage vendor straggler continue major hurdle achieving faster completion job running distributed existing technique blacklisting speculative execution inefficient lead extended job completion time wastage avoids slow running node optimizes utilization turn reducing job completion time suggested propose prognostic proactively avoids straggler machine learning approach build predictive predicts node turn straggler prediction prepare priority node faster node front slower rear priority scheduler efficiently assign avoids minimizes number straggler keywords distributed straggler hadoop scheduling machine learning avoiding slow running node distributed 1 1.1 distributed framework distributed framework changing perception handling unstructured famous apache hadoop library enables surplus streamlined distributed processing cluster simple programming scale single server number machine offering local computation storage space depending provide high- availability library built detect handle breakdown layer providing extremely service cluster version vulnerable failure 1.1 distributed pict-information technology-2015-16 11 avoiding slow running node distributed distributed characteristic 1 reliable distributed characteristic fault-tolerant recover component failure performing incorrect action highly restore operation permitting resume providing service component failed recoverable failed component restart re-join failure repaired consistent coordinate action multiple component presence concurrency failure underlies ability distributed non-distributed scalable operate correctly aspect scaled larger size example increase size network running increase frequency network outage degrade `` non-scalable '' increase number server load scalable predictable performance ability provide desired responsiveness timely manner secure authenticates access service aim aim reduce response time distributed 1 identifying slow node 2 avoiding slower node 3 reducing job completion time 4 making proper pict-information technology-2015-16 12 avoiding slow running node distributed distributed numerous advantage job finished earlier compared individual processing great boon job completion time reduced compared existing solution interesting area 1.2 broad term refer collection size complexity ability typical database process analyze example include high-volume sensor social networking web site facebook twitter no.1.2 pict-information technology-2015-16 13 avoiding slow running node distributed volume volume refers vast amount generated second email twitter message photo video clip sensor produce share second velocity velocity refers speed generated speed move variety variety refers focused structured neatly fit relational database financial veracity veracity refers messiness trustworthiness form accuracy le controllable example twitter post hash tag abbreviation typo colloquial speech 1.3 hadoop hadoop open-source framework allows store process distributed environment cluster simple programming designed scale single server machine offering local computation storage hadoop yarn framework job scheduling cluster map reduce 17 19 pict-information technology-2015-16 14 avoiding slow running node distributed hadoop map reduce framework easily writing process amount in-parallel cluster node commodity reliable fault-tolerant manner 18 term map reduce refers hadoop program perform map input convert individual element broken tuples key/value pair reduce output map input combine tuples smaller tuples reduce performed map typically input output stored file-system framework care scheduling re-executes failed map reduce framework consists single master jobtracker slave tasktracker cluster-node master responsible tracking consumption/availability scheduling job component slave re-executing failed slave tasktracker execute directed master provide task-status master periodically hdfs master/slave master consists single namenode manages file metadata slave datanodes store actual 18 pict-information technology-2015-16 15 avoiding slow running node distributed no.1.3 hadoop 18 pict-information technology-2015-16 16 avoiding slow running node distributed hadoop distributed file 19 hdfs java-based file scalable reliable storage wa designed span cluster commodity server hdfs demonstrated production scalability 200 pb storage single cluster 4500 server supporting billion file block quantity enterprise hdfs yarn enables multiple access process hadoop confidently answer question eluded previous platform hdfs scalable fault-tolerant distributed storage closely wide variety concurrent access coordinated yarn hdfs variety physical systemic circumstance distributing storage computation server combined storage grow linearly demand remaining economical amount storage pict-information technology-2015-16 17 avoiding slow running node distributed -2 background 2.1 slower node straggler 11 node unusually long time finish termed straggler node straggler node delay execution time degrade cluster throughput straggler node degrade cluster throughput straggler continue major hurdle achieving faster completion intensive running modern data-processing framework straggler 6 factor heterogeneous capacity worker node competition map reduce running worker node factor competition co-hosted input skew remote input output source slow faulty note reason solved reason 2.2 current solution handle straggler blacklisting speculative execution learning based pict-information technology-2015-16 18 avoiding slow running node distributed blacklisting 7 jobtracker submits job tasktracker node failed time jobtracker blacklist tasktracker tasktracker blacklisting 1 per-job blacklisting prevents scheduling job 2 cluster-wide blacklisting prevents scheduling job per-job blacklisting number failure specific job tasktracker blacklisted job tasktracker accept job long blacklisted cluster-wide.a job blacklist 25 tasktrackers cluster cluster-wide blacklisting tasktracker blacklisted currently running allowed finish scheduled tasktracker blacklisted un-blacklisting requires tasktracker restart 50 tasktrackers cluster blacklisted time.after 24 hour tasktracker automatically removed blacklist accept job pict-information technology-2015-16 19 avoiding slow running node distributed no.2.1 blacklisting no.2.2 blacklisting speculative execution 6 hadoop dividing node slow node rate-limit rest program forcing isolation individual input trust hadoop platform deliver appropriate input input processed multiple time parallel exploit difference machine capability job coming hadoop platform redundant copy remaining node perform process speculative execution complete fact jobtracker whichever copy finish definitive copy copy executing speculatively hadoop tasktrackers abandon discard output pict-information technology-2015-16 20 avoiding slow running node distributed speculative execution reducing job execution time cluster efficiency duplicate no.2.3 speculative execution redundant copy slow output whichever finished fast speculative strategy 1 google dryad 4 replicating node question considered remaining slow process ii worker node chosen backup fast iii backup complete original 2 hadoop original simply identies straggler progress fall average progress xed gap misleading heterogeneous environment pict-information technology-2015-16 21 avoiding slow running node distributed 3 late keep progress rate progress time remaining time progress left progress rate job map reduce left computation select slow longest remaining time backup average process speed progress rate process bandwidth remaining time assumes progress stable rate break practice 4 mantri speculative execution strategy mantri focus saving cluster computing i.e slot start outlier e.g abnormal running slowly backup complete earlier mantri kill original cluster busy called kill-restart scheme hand simply duplicate original cluster idle kill-restart scheme radical guaranteed complete earlier original average process bandwidth misleading progress stable rate pict-information technology-2015-16 22 avoiding slow running node distributed chapter-3 specification 3.1 distributed processing node aspect job execution prediction avoiding slow running hadoop framework slow running i.e straggler increase job execution time straggler increase job execution 50 approx prediction good node running prediction node straggler existing reactive kind i.e making node replicate straggle includes wastage proactive better approach study proactive predicting node straggler study machine learning field distributed job execution faster study job distributed faster usual processing improve accuracy predicting straggler consideration aspect improved job execution time straggler avoidance improved usage improved accuracy achieved aspect improved good scale great distributed 3.2 requiremnts identifying slower node input usage counter node input prediction pict-information technology-2015-16 23 avoiding slow running node distributed output based prediction predict node straggler avoiding slower node input node input scheduler scheduler node output assignment scheduler straggler node avoided operating ubuntu 14 64 bit source operating great compatibility source distributed great machine learning linux platform programming language java 1.7 hadoop source distributed written java platform java xml extensible markup language basic thing needed making configuration file hadoop hdfs hadoop yarn scheduling stored json format property description python 2.4 python handling collected python library manipulation machine learning pict-information technology-2015-16 24 avoiding slow running node distributed framework hadoop 2. x. hadoop source framework distributed processing hadoop 2.0 includes yarn scheduling key yarn support pluggable scheduler i.e change scheduler technique policy responsible scheduling node vmware 10 number machine virtualized operating larger number node vmware variety reduces complexity ganglion collection node parameter ganglion 15 interval wa great help preparation building library mpiliblinear svm distributed svm classification node training time wa reduced no.3.1 machine memory slave node 2 gb proper working hadoop machine minimal 2 gb master node 4gb node predictive working pict-information technology-2015-16 25 avoiding slow running node distributed hard drive 10 gb machine memory 4gb machine good storage drive better storage storing history node performance well master 01 slave sufficient 04-05 number node needed monitor store usage purpose no.3.2 number node pict-information technology-2015-16 26 avoiding slow running node distributed chapter-4 4.1 class 4.1 class pict-information technology-2015-16 27 avoiding slow running node distributed 4.3 no.4.3 pict-information technology-2015-16 28 avoiding slow running node distributed 1 job passed jobtracker 2 jobtracker tasktracker smaller perform 3 tasktracker heartbeat jobtracker real time update execution 4 execution tasktracker pass prediction 5 labeling node straggler 6 priority node prepared 7 node passed scheduler allocation job 8 allocate prioritized free node job default scheduler pict-information technology-2015-16 29 avoiding slow running node distributed 4.4 4.4 depicted 1 starting acquisition job tasktracker assigned smaller execute 2 collection node parameter prediction 3 main job start prediction machine classifying node 4 priority node scheduler process pict-information technology-2015-16 30 avoiding slow running node distributed 5 scheduler request free node tasktrackers alloacation 6 free node prioritized basic priority 7 finally jobtracker allocates node provided scheduler priority 4.5 no.4.5.1 prediction node predictive tracker 2.analyse history 2.a request tasktracker history 2.b.collect history 3.calculate weight calculation create group predictive completion calculation weight participating actor event entry condition exit condition pict-information technology-2015-16 31 avoiding slow running node distributed no.4.5.3 ii participating actor event entry condition exit condition allocation fast node scheduler jobtracker tasktracker 1.take job 2. split job smaller 2.a allocation job tasktracker 3. collect free node 4.make prioritized free node allocation receiving job proper allocation node pict-information technology-2015-16 32 avoiding slow running node distributed chapter-5 5.1 cluster setup considered heterogeneous node hadoop cluster 1. hadoop cluster heterogeneous node evaluate proposed method finding straggler node node wa chosen master node hadoop distributed file namenode mapreduce runtime jobtracker remaining three node slave node datanodes tasktrackers node interconnected wireless networking multi-node setup ubuntu 14.04 operating jdk version 8 hadoop 2.7.1 version performance node configuration master node intel core tm i5-3210m cpu 2.50ghz 4 gb ram 500 gb disk space slave node 1 intel core tm i3-3110m cpu 2.40ghz 4 gb ram 500 gb disk space slave node 2 intel core tm i5-3230m cpu 2.60ghz 4 gb ram 500 gb disk space slave node 3 intel core tm i5-4200u cpu 1.60ghz 8 gb ram 1 tb disk space no.5.1 setup pict-information technology-2015-16 33 avoiding slow running node distributed 5.2 workload executed job hadoop wordcount sort wordcount workload count frequency word textual cpu bound sort workload i/o bound depending hadoop framework sort final 5.3 dataset building prediction labeled dataset consisting label pair ganglia-based node-monitor capture usage counter node job hadoop collected single file unit metric complex .so convenience convert normalized form ranging 0 1 5.4 ganglion ganglion scalable distributed high-performance computing cluster grid based hierarchical targeted federation cluster leverage xml representation xdr compact portable transport rrdtool storage visualization carefully engineered achieve per-node overhead concurrency component ganglion ganglion component pict-information technology-2015-16 34 avoiding slow running node distributed no.5.4.1 ganglion gmond ganglion daemon small service collect node installed server monitored gmond multi-threaded daemon cluster node monitor gmond main responsibility monitor change host state multicast relevant change listen state ganglion node multicast channel answer request xml description cluster state gmetad ganglion meta daemon daemon master node collect gmond daemon gmetad daemon applicable rrd round robin database master node store visualization ganglion time series php web front-end pict-information technology-2015-16 35 avoiding slow running node distributed web master node display graph metric rrd ganglion web frontend view gathered real- time dynamic web display ganglion meaningful administrator ganglion store round robin database real time efficient storing retrieved processing fetched xml format rrd rrd rrd source industry standard performance logging graphing time series rrd command purpose rrdtool dump rrdtool fetch rrdtool xport no.5.4.2 ganglion 5.5 combining ganglion hadoop well-known source ganglion collected xml format python script written parse xml valuable pict-information technology-2015-16 36 avoiding slow running node distributed finally .csv file generated specific timestamp interval 15 5.6 labeling labeled supervised learning implemented labeled straggler definition straggler defined job threshold coefficient formula boolean 0 1 0 non-stragglers 1 straggler ready normal supervised learning customized 5.7 normalizing normalized svm engine variable variance small weight load variance example change variable cm dominating principle component weight independent rescaling standardizing variable hand specific scale variable matter n't standardize scale matter lot normalizing wa better accurate training normalization range 0-1. logic normalization pict-information technology-2015-16 37 avoiding slow running node distributed zi normalized calculated 5.8 converting libsvm format normalized customized stage libsvm format libsvm format needed svm generation python script converting normalized svm engine wanted format libsvm starting label column column original file size efficient null removed svm engine needed 5.9 mpiliblinear classification machine straggler non-straggler support vector machine classification libsvm train svm generate prediction libsvm single machine training time libsvm master node training 5-10 min train volume training wa exceeding capacity master machine training time wa motivated training distributed fashion adopted distributed training method train implemented mpi liblinear mpi liblinear library distributedly train support vector machine amount order implement library mpi source message passing developed maintained consortium academic industry partner pict-information technology-2015-16 38 avoiding slow running node distributed installed mpi master slave liblinear 1.96 installed pc order implement distributed training master machine fie keep track slave node mater distributes slave machine evenly training slave machine generated master machine distributed setting machine fraction training cost synchronization consider cost dual solver svm suitable dimensional lower cost achieved dimensionality volume handled training time reduced 4 min achieved accuracy 85 5.10 scheduling hadoop yarn label-based scheduling handle job placement control multi-tenant hadoop cluster admin node file node file queue label job label -node basis per-job basis no.5.9.1 node logic pict-information technology-2015-16 39 avoiding slow running node distributed queue label specifies node node job queue job queue node job label specifies node node job policy scheduling prefer_queue label queue prefer_job label job default job label queue label job label queue label pict-information technology-2015-16 40 avoiding slow running node distributed no.5.9.2 yarn label based scheduling capacity scheduler pluggable scheduler hadoop allows multiple-tenants securely share cluster allocated timely manner constraint allocated capacity capacity scheduler designed hadoop shared multi-tenant cluster operator-friendly manner maximizing throughput utilization cluster capacity scheduler designed allow sharing cluster capacity guarantee central hadoop cluster shared multiple collectively fund cluster based computing benefit access excess capacity elasticity cost-effective manner primary abstraction provided capacity scheduler concept queue queue typically setup administrator reflect economics shared cluster capacity scheduler support hierarchical queue hierarchy queue supported ensure shared sub-queues queue allowed free there-by providing control predictability capacity guarantee queue allocated fraction capacity grid sense capacity disposal queue access capacity allocated queue adminstrators configure soft limit optional hard limit capacity allocated queue pict-information technology-2015-16 41 avoiding slow running node distributed security queue strict acls access control control submit individual queue safe-guards ensure view and/or modify per-queue administrator role supported elasticity free allocated queue capacity demand queue running capacity point time scheduled complete assigned queue running capacity ensures predictable elastic manner queue preventing artificial silo cluster help utilization multi-tenancy comprehensive limit provided prevent single queue monopolizing queue cluster ensure cluster isnt overwhelmed operability runtime configuration queue definition property capacity acls changed runtime administrator secure manner minimize disruption console provided administrator view current allocation queue administrator add additional queue runtime queue deleted runtime drain administrator queue runtime ensure existing completion queue stopped state child queue existing continue completion queue drained gracefully administrator start stopped queue resource-based scheduling support resource-intensive where-in optionally higher resource-requirements default there-by accommodating differing currently memory supported pict-information technology-2015-16 42 avoiding slow running node distributed queue mapping based group allows map job specific queue based group pict-information technology-2015-16 43 avoiding slow running node distributed 6 mentioned earlier processing asset today improve lesser time processing good efficiency desirable avoid slow running distributed designing tackle extent outcome achieving avoids execution slow node achieve faster job completion machine learning prediction slow node priority node lead reliable scheduling pict-information technology-2015-16 44 avoiding slow running node distributed no.6.1 improved job completion time graph execution time word count job cluster size hdfs compare execution time default capacity scheduler hadoop observe job completion time reduced scheduler reduction job completion time le input size small rise significance increase size manual tested automated step step execution wa step executed bug unit pict-information technology-2015-16 45 avoiding slow running node distributed three main 1. collection parameter refinement 2. mining machine learning 3. labeling node wa tested checked identify misbehavior bug proved worked well individually integration integration three wa master node execution wa check integration real time wa performed automation handle real time load node accuracy prediction increased time executed considering scenario 1. variation load node 2. slave node straggler purpose fine threshold 3. wa built pict-information technology-2015-16 46 avoiding slow running node distributed 1 birman kenneth reliable distributed web service york springer-verlag 2005 2 yanpei chen sara alspaugh randy katz interactive analytical processing cross industry study mapreduce workload california 3 jeffrey dean sanjay ghemawat mapreduce simplied processing cluster osdi 4 michael isard mihai budiu yuan yu andrew birrell dennis fetterly dryad distributed data-parallel program sequential building block microsoft silicon valley 5 theodoros evgeniou massimiliano pontil regularized multitask learning kdd 2004 6 qi chen cheng liu zhen xiao improving mapreduce performance smart speculative execution strategy transaction 8 neeraja j. yadwadkar ganesh ananthanarayanan randy katz wrangler predictable faster job fewer re4sources symposium cloud computing 2014 9 neeraja j. yadwadkar bharath hariharan joseph gonzalez randy katz faster job distributed processing multi-task learning california berkeley 10 ofer dekel philip m. long yoram singer online multitask learning hebrew 11 ganesh ananthanarayanan ali ghodsi scott shenker ion stoica effective straggler attack clone california berkeley 12 sheldon m. ross edition academic press 8 edition 2003. pict-information technology-2015-16 47 avoiding slow running node distributed 13 john c. platt fast training support vector machine sequential minimal optimization bernhard scholkopf christopher j. c. burges alexander j. smola editor advance kernel method 185208. mit press cambridge usa 1999 14 rie kubota ando tong zhang framework learning predictive multiple unlabeled jmlr 6 2005 15 andreas argyriou theodoros evgeniou massim-iliano pontil convex multi-task learning ma-chine learning 73 3 2008 16 shibin parameswaran kilian q. weinberger margin multi-task metric learning nip 2010 17 website http //hadoop.apache.org/ 18 website http //www.ibm.com/ 19 website http //hortonworks.com/hadoop/hdfs/ 20 website http //issues.apache.org 21 book hadoop definitive 2nd edition pict-information technology-2015-16 48", "keywords": ["capacity scheduler", "cluster capacity", "completion time", "core tm", "evgeniou massimiliano", "execution time", "free node", "hadoop cluster", "hadoop yarn", "hdfs hadoop", "intel core", "intel core tm", "job completion", "job completion time", "job execution", "job label", "job tasktracker", "machine learning", "master machine", "master node", "neeraja yadwadkar", "node distributed", "node job", "node straggler", "randy katz", "real time", "running node", "running node distributed", "slow running", "slow running node", "speculative execution", "straggler node", "support vector", "support vector machine", "theodoros evgeniou", "theodoros evgeniou massimiliano", "training time", "vector machine"], "libraries": [], "languages": ["php", "python", "xml", "basic", "small", "java"], "frameworks": [], "dbs": []}, "./reports/GROUPID32_REPORT.pdf": {"title": "development of a secure file sharing and storage application   for police department on a private cloud (secureshare)", "filename": "./reports/GROUPID32_REPORT.pdf", "data": "development secure file sharing storage police private cloud secureshare anagha gawande b-80058547 anuja pathak b-80058615 guidance prof. n.v.buradkar fulfilment b. e. 411043 affiliated 2014 -2015 411043 dissertation development secure file sharing storage police private cloud secureshare anagha gawande b-80058547 anuja pathak b-80058615 record bonafide him/her year 2014-2015 guidance prof. n.v. buradkar dr. emmanuel m. dr.p.t.kulkarni hod i.t examiner ______________________ acknowledgement profoundly grateful prof.n.v.buradkar expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing express sincere heartfelt gratitude staff member helped directly indirectly course anagha gawande anuja pathak growth smart phone upload photo directly phone photo captured exploited share store evidence police order speed evidence collecting process well avoid leaking lose confidential file accidental mishap cloud computing ubiquitous access minimal incremental cost greater efficiency better utilization .the proposed store share evidence file android device well desktop web customized cloud authenticated username password well unique device-id avoid unauthorized access unrecognized accessed registered member credential provide access police rank highly confidential file higher rank officer file shared police keywords cloud android file sharing file storage police rank 1 1 1.1introduction ... ... 2 1.2 ... .2 1.3 ... ... ... 3 2 4 2.1 ... ..5 2.1.1dropbox ... ... ... ..5 2.1.2 google drive ... ... ... 5 2.1.3 egnyte ... ... .7 2.1.4 evernote ... ... ..7 2.2 papers..9 2.2.1research development android ... ... .9 2.2.2 cloud computing learning ... ... 9 3 proposed 10 3.1 definition ... .11 3.2 ... ... ... 11 3.3 ... ... ... 11 3.4 ... ..13 3.5 constraint ... ..13 4 14 4.1 step acquire process ... ... ... ... 15 4.2 approach ... ... ... ... ... ... ... ... ... .15 4.3 interpret input ... ... .16 4.4 step carry ... ... 16 18 5 5.1 specification ... ..19 5.1.1purpose document ... ... ..19 5.1.2 responsibility developer ... ..19 5.1.3 product ... ... ... ..19 5.2 usage scenario ... .20 5.2.1 profile ... ..20 5.2.2 use-cases ... ... 21 5.3 description.22 5.3.1 description ... ... 22 5.4 ... ... 22 5.4.1 performance ... ... .22 5.4.2 ... ... 23 5.4.3 security ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 23 5.5 constraint ... ... .23 5.6 restriction constraint ... ... .23 5.7 ... ... ..24 5.7.1 ... ... 24 5.7.2 ... ... ... ... 24 5.8 ... ... .25 5.9 ... ... ... .25 5.10 database ... ... ... ..31 6 32 6.1 ... ... ..33 6.2 experimental setup ... ..33 6.3 code snippet ... .34 6.4 screen shot ... ... .37 6.5 ... .42 6.5.1 tested ... ... ... .42 6.5.2 strategy ... ... ... ... ... 42 6.5.2.1 unit ... ..42 6.5.2.2 integration ... ... ... ... ... .42 6.5.2.3 validation ... ... ... ... ... ..43 6.5.2.4 gui ... ... ... 43 6.5.2.5 high-order ... ... ..43 6.5.3testing staffing ... ... ... ... ... ..43 6.5.4test product ... ... ... 43 6.5.5test record keeping ... ... ... ... .43 6.5.6testing environment ... ... ..44 6.6test procedure ... ... ... ... 44 6.6.1software tested ... ... 44 6.6.2 procedure ... ... ... ... 45 6.6.2.1 unit ... ... ... ..45 6.6.2.2 integration ... ... ... .47 6.6.2.2.1 procedure integration ... ... .47 6.6.2.2.2 purpose ... ... ... ..47 6.6.2.2.3 expected ... ... ... .47 6.6.2.3 gui ... ..47 7 scheduling 49 7.1 ... ..50 8 51 8.1 ... 52 8.2 ... ... .53 54 5.1 31 5.1 comment ... 31 5.1 role ... ... ... ... ... ... ... ... ... 31 6.1 record keeping44 6.3 unit ... ..46 6.4 gui ... 48 6.1 ... 50 5.1 ... 25 5.2 diagram0 ... ... 25 5.3 diagram1 ... ... 26 5.4 ... ..27 5.5 class ... 28 5.6 diagram.29 5.7 deployment ... ... ... ... ... ... ... ... 29 figure5.8activitydiagram ... ..30 secureshare secureshare 1 1 secureshare 1.1 police agency spent century building bunker store protect evidence adopted strict control centered physical possession evidence status quo fundamentally changed proliferation connected mobile device including smart phone manner digital file stored growth smart phone capture upload image directly phone image captured exploited share store image evidence police order speed evidence collecting process well avoid leaking losing confidential file accidental mishap latest trend shifting cloud computing usage civil purpose increasing day day cloud computing allows access internet worrying actual maintenance public cloud proven insecure multiple instance including hack hollywood celebrity image apple icloud server point private cloud rescue storing private cloud access restricted member keep secure time syncing device handy multiple device 1.2 traditionally image criminal investigation police investigation generally printed office investigation advent smart phone officer capture image phone transfer email messenger service private government file land public cloud storage server opening security loophole capable managing digital evidence police purpose allow government agency police share store evidence police order speed evidence collecting process well avoid leaking losing confidential file accidental mishap 2 secureshare 1.3 proposed secure file sharing android administrator controlled website allow authorized upload store digital evidence cloud server .this ensure shared tampered transfer internet control access level view high-level agency administrator program access authorization delete evidence resolution proposed storage sharing customized private cloud ensuring security speed evidence collecting process well avoid leaking losing confidential file accidental mishap longer shared usb disc email doesnt guarantee security integrity sharing police share police securely accessed stored private cloud shared device authorized personnel 3 secureshare 2 4 secureshare 2.1 number file sharing storage android exist android market provide security basic current storage sharing file prove insecure proposed solely targeted police officer order process evidence collection storage secure well availability access ubiquitous studied understand process storage file cloud synchronization 2.1.1 dropbox dropbox file hosting service allows create special folder dropbox synchronizes appears folder view accessible website mobile devised number mashups expand dropbox 's functionality include sending file dropbox gmail dropbox sync chat log bittorrent password remote launching free web hosting service 2.1.2 google drive google drive file storage synchronization service provided google enables cloud storage file sharing collaborated editing google drive encompasses google doc sheet slide office suite permit collaborative editing document spreadsheet presentation drawing form google drive wa launched 24 2012 240 monthly active 2014. google drive synchronize file 's google drive storage google drive 'client running 's client communicates google drive update side propagated 5 secureshare cloud environment security issue national interest online document storage processing unsuitable government commercial sensitive confidential stored edited shared infrastructure outsourced e.g senior government official google shared individual e.g internet mid-2011 attack jinan china city military command center password stolen gmail account senior government official phishing attack gmail address password attacker ability access stored google account apps doc etc. username password pair wa accessed password recovery accessed password forgotten registered email address 10 2009 google reported bug google doc allowed unintended access private document google believed 0.05 document stored service bug issue fixed time announcement google intelligence agency intelligence agency request established protocol e.g ripa uk google company protect perceived national interest non-us citizen privacy compromised google drive google service issue considered google drive `` enterprise-ready '' include encryption transit storage service level agreement electronic discovery incident audit trail administrator segregation isolation 6 secureshare google account signing google drive optional free two-factor authentication greater account security enabled log provide short random code phone sm generated google authenticator app android io google switched secure socket layer http default preventing common man-in-the-middle attacks.in addition third party google drive plug-in exist enable rest encryption stored drive adding layer security 2.1.3 egnyte egnyte enterprise file service business cloud-only storage provider support storage mix local private public cloud egnyte chosen middle ground company combination solution vendor glue offering best file administrator full view file move storage location mobile device administrator follow trail 2015 company unveiled egnyte google apps solution allows customer move file google drive on-premises infrastructure google apps administrator integration manage permission google admin control egnyte flexibly assign permission group storage collaboration folder control paradigm dont wrangle multiple experience 2.1.4 evernote evernote suite service designed note archiving offer online synchronization backup service well keyboard entry typed note evernote support image capture camera supported device recording voice note situation text appears captured image recognized ocr 7 secureshare annotated evernote support touch tablet screen handwriting recognition evernote web-clipping plug-in popular internet browser allow marked webpage captured clipped evernote webpage highlighted evernote clip full evernote support ability e-mail note service allowing automated note entry e-mail rule filter suitable evernote automatically add geolocation tag note online service allows selected file shared viewing editing allows integration twitter storing forwarding `` tweet '' twitter add note evernote remotely sending tweet twitter-capable device supported operating evernote store edits 's note local machine internet access evernote account note automatically synchronized master copy held evernote 's server approach access edits multiple machine operating platform view input edit internet connection note stored evernote server encrypted evernote client online account-holders access note archive web medium device evernote downloaded `` stand-alone '' online portion evernote account online registration initial setup upload file evernote server server synchronize share file evernote installation image image-pdf premium recognition indexing entirely offline 8 secureshare 2.2 paper 2.2.1 development android published fourth international conference intelligent network intelligent conference 2011 introduced android platform android detailed description android framework prospective developer simple music player provided instance illustrate basic working process android component paper provide guidance understanding operation mechanism android developing android platform 2.2.2 cloud computing learning aict 2011 5th international conference conference 12-14 oct. 2011 cloud computing evolving key sharing grid computing distributed computing parallel computing virtualization define shape era traditional distance learning lack reusability portability interoperability paper cloud computing ecosystem opportunity designing cloud computing educational platform learning actor reuse learning handled cloud educational operating enhance learning object portability interoperability cloud computing api standard advocated key cloud provider learning standard defined cloud computing education federation proposed paper 9 secureshare 3 proposed 10 secureshare 3.1 definition develop android web state police securely store share images/files private cloud managed administrator authenticating authorized 3.2 assigned username password cloud administrator authenticated log website android app authentication officer choose file uploaded post comment website uploaded file visible authenticated android well web app site visited officer registered service 3.3 developed police officer order provide secure sharing evidence provide credential allowed create account share sync allow credential provided officer administrator ensure credential safe accessed registered police officer access digital evidence controlled account created specific charge handling storing accessing digital evidence 11 secureshare extended create group level security needed comprises profile 1. share image android platform well website upload file server authorized personnel download uploading informed message confirmation 2. administrator accessible police officer administrator manage website .the administrator assign username password authorized officer app opened username password assigned measure order meet government specialized security access highly sensitive legal document well consistent control tracking authorized access file 3. password security sends request image upload cloud server receiving authentication message administrator image uploaded status updated message check status camera queue internet upload image condition store android database forward server database extraction imei number mobile 3.4 main create state police securely share store digital evidence currently police doe centralized 12 secureshare accessed officer store share evidence prove installed smart phone access cloud time sharing process faster help speeding process evidence gathering help collecting storing hard copy evidence manually help preventing physical evidence lost mishap tampered transit file uploaded server stored securely 3.5 constraint proposed constraint complexity web api desirable multiple request handled efficient server database time uploading image le effective utilization better 3g speed internet 13 4 secureshare 14 secureshare secureshare android securely share image offer platform store image simultaneously share well image shared provided caption registered administrator handle registered account shared image stored cloud server maintaining security shared 4.1 step acquire process designing designing database installation implementing intuitive ui input 4.2 approach traditionally image criminal investigation police investigation generally printed officer investigation advent smart phone officer capture image phone transfer email messenger service image land public cloud storage server security loophole image meant treated evidence criminal police rely public cloud sharing evidence image proposed android providing sharing storing image private cloud server approach start registering provide mobile number password registered access administrator sends 15 secureshare notification registered start select image add caption share uploading server shared image image image shared tab screen received image received tab 4.3 interpret input input interpreted credential password phone number stored database phone number send gcm notification device image shared image uploaded blob binary object upload evidence image gallery device android app directly web caption image uploaded caption comment image understand image 4.4 step carry study cloud computing cloud infrastructure implemented provide secure platform police officer share image file securely shared highly confidential critical mandatory remain private outsourcing critical government public cloud manager better solution private cloud 16 secureshare private cloud managed government officer tightly secured controlled server company access main advantage private cloud infrastructure secure alternative server sit network boundary server managed maintained staff located centre cloud service provider accessing stored server private secure network link database database designed keeping mind authentication storage require 1. 2. image 3. comment 4. role ui development renting cloud server creating database learn google cloud messaging service gcm android service allows send server android- powered device receive message device connection gcm service handle aspect queuing message delivery target android running target device 17 secureshare 5 18 secureshare 5.1 specification 5.1.1 purpose document document seek provide specification secureshare developed final year purpose obtaining science document faculty document detailed description context usage scenario description object description performance issue constraint interfacing description validation criterion 5.1.2 responsibility developer primary responsibility developer develop website cloud storing responsibility listed carefully understand generate accurately complete scale time 5.1.3 product secureshare android securely share image offer platform store image simultaneously share well image shared provided caption registered administrator handle registered account shared image stored cloud server maintaining security shared 19 secureshare consists upload comment send receive 5.2 usage scenario 5.2.1 profile comprises profile 1. share image android platform well website upload file server authorized personnel download uploading informed message confirmation 2. administrator accessible police officer administrator manage website .the administrator assign username password authorized officer app opened username password assigned measure order meet government specialized security access highly sensitive legal document well consistent control tracking authorized access file 3. password security sends request image upload cloud server receiving authentication message administrator image 20 secureshare uploaded status updated message check status camera queue internet upload image condition store android database forward server database extraction imei number mobile 5.2.2 use-cases 1. confirmation maintain queue connection web server upload image 2. registration logout upload image 3. cloud server send response store image 5.3 description 5.3.1 description android database consists entered site image uploaded password entered 21 secureshare status status image upload web server database consists authentication message returned site administrator image uploaded size size image 5.4 5.4.1 performance requires performance 1. modularity self-contained unit easy maintain debug modularity code easy understand manage 2. re-usability emphasis code re-usability lot code built library code ensure enhancement easily 3. reliability efficient input responsive input 4. response time ensure minimum response time 22 secureshare 5.4.2 entered security image uploaded saved time server time expires deleted database 5.4.3 security password secure reliable modifiable turn adaptable 5.5 constraint time image uploading le complexity web api desirable multiple request handled efficient database 5.6 restriction constraint time image uploading le multiple request handled efficient database knowledge share image android mobile expected cloud administrator account benefit image share purpose security 5.7 23 secureshare 5.7.1 operating window xp /windows vista/windows 7 platform java 1.6 higher ide eclipse juno netbeans 7.3 server apache tomcat database mysql 5.7.2 laptop android device/emulator cloud server 24 secureshare 5.8 5.1 5.9 5.2 diagram0 25 secureshare 5.3 diagram1 26 5.4 secureshare 27 5.5 class secureshare 28 secureshare 5.6 5.7 deployment 29 5.8 secureshare 30 secureshare 5.10 database field user_id role_id first_name last_name username password mobileno image description foreign key role username password datatype int 10 int 10 varchar 100 varchar 100 varchar 60 varchar 30 mobile number varchar 15 image uploaded mediumblob status status tinyint 5.1 field comments_id user_id wall-comments image_path comments_date comments_time description comment comment wall image path comment time comment 5.1 comment datatype int 11 int 11 varchar 500 longblob varchar 30 timestamp field role_id role_name description role role 5.1 role datatype int 10 varchar 60 31 secureshare 6 32 secureshare 6.1 proposed secure file sharing android administrator controlled website allow authorized upload store digital evidence cloud server .controls access level view high-level agency administrator program access authorization delete evidence resolution offer platform store image simultaneously share well image shared provided caption registered administrator handle registered account shared image stored cloud server maintaining security shared 6.2 experimental setup developed android web android eclipse juno target android sdk version 21. adt bundle version 23.0.4.1468518 create web netbeans 7.3 web html cs javascript jquery mysql backend apache tomcat server server rented store database image sharing real time 33 secureshare 6.3 code snippet development developed eclipse juno android hybrid app meaning combination native android code web technologies- html cs javascript hybrid app hosted inside native utilizes android web view 6.1 code 34 secureshare code snippet opening camera clicking image android android camera api capture image 6.2 camera 35 6.3 camera continued secureshare 36 secureshare 6.4 screen shot window visible opened registered administrator app 6.4 screen 37 secureshare screenshot entering 6.5 38 secureshare screenshot registration screen click button.the device gcm server send notification device image uploaded received 6.6 registration screen 39 secureshare screenshot choose image screen choose image uploaded upload server 6.7 choose file screen 40 secureshare screenshot comment screen comment file well person uploaded 6.8 comment screen 41 6.5 6.5.1 tested secureshare tested titled development file sharing android web police private cloud aim share image file private cloud post comment image uploaded performing component authentication image upload posting comment 6.5.2testing strategy 6.5.2.1unit unit source code level language-specific programming error logic error function code authentication connecting web server sharing image posting comment unit designed validity program correctness 6.5.2.2 integration individual unit tested properly functioning form program program tested general error including compiler runtime error input error efficiency error corrected stage program inefficient computation inefficiency isolated fixed unit level integration level integration client side intermediate server form sharing image image upload integrated resultant code thoroughly tested integration 42 secureshare 6.5.2.3 validation validation applied input 6.5.2.4 gui gui applied graphical view order platform 6.5.2.5 high-order includes sample input checked expected output 6.5.3testing staffing developer prototype constructed 6.5.4 product product includes stage proposal agenda making finding probable solution decide best solution product developed 1. redirecting request mobile device web server 2. uploading image web server device 3. including http protocol library forwarding 6.5.5 record keeping wa running screenshots wa periodically store relevant wa document 43 secureshare sr. executed status 1 2 3 4 5. create account device success authentication upload image cloud server comment image deploy android device website 6.1 record keeping success success success success 6.5.6 environment manual development environment suitable environment carry 6.6 procedure 6.6.1software tested tested titled development file sharing android web police private cloud aim share image file private cloud post comment image uploaded performing component authentication image upload posting comment 44 secureshare 6.6.2 procedure 6.6.2.1 unit purpose input expected status success/ fail 1 authenticate check ui username 1. enters correct success password username password appropriate ui subsequent based success/failu success message subsequent window function applicable 2. username and/or password wrong allow access function prompt re-enter username password 2 registration order 1. enters correct success device receive username password gcm notification gcm server server registration uploaded image file device sending google notification 2. username and/or password wrong 45 secureshare allow access function prompt re-enter username password 3 upload check 1. internet connection success image image image selected uploaded uploaded image uploaded cloud server 2. internet connection image maintained queue client side database 4 post post comment request success comment comment image uploaded uploading uploaded image comment image describe query image comment stored cloud server database 6.3 unit 6.6.2.2integration 6.6.2.2.1 procedure integration check image uploaded integration client side android server database 46 secureshare 6.6.2.2.2 purpose integration android web server database image selected share web comment image performed order ensure upload image performs correctly 6.6.2.2.3 expected image uploaded web android server 6.6.2.3gui purpose step expected status 1 check check position font color appear success button text field proper position dialog proper check functionality click event proper success button action check password field success displayed form 2 check check font color appear success menu field proper manner 3 check check button clicking choose file button success select file clickable choose window file file button explorer 47 secureshare 4 check click text field text field success post editable fit editable hold comment text written increasing text text field 5 check check comment button button success clicking check clickable comment submit comment submit comment button typed clicking 6.4 gui 48 secureshare 7 49 secureshare 7.1 date/month topic discussion topic finalization 22nd 2014 review 1 1st week 3rd week deciding 1st 2014 review 2 2nd week gathering 4th week identification 1st week designing 17/11/2014 preliminary submission 2/2/2015 review 3 1st week submission 6.1 50 secureshare 8 51 secureshare 8.1 conceptual design-based understanding conclude approach suggested provide efficient confidential sharing police evidence image share photo ease cost incurred time delay marginal compared security increased updated version change image stored private cloud administrated government officer threat loss leakage 52 secureshare 8.2 extended upload file video cloud server extended mobile platform io window 8 extended provide facility image editing brightness crop color change location photo uploaded tracked gps service 53 secureshare 1 development android published 2011 fourth international conference intelligent network intelligent 2 cloud computing learning aict 2011 5th international conference 3 reto meier professional android 4 development `` paperback published 2012 4 zigurd mednieks `` programming android published 2010 5 wei-meng lee android 4 development published 2012 6 http //www.policechiefmagazine.org/magazine/index.cfm fuseaction=display_arch article_i d=3319 issue_id=42014 7 http //www.google.in/drive/ 8 http //blog.evernote.com/tech/2014/01/28/synchronization-speedupification/ 9 http //www.egnyte.com 10 http //www.dropbox.com 54", "keywords": ["accidental mishap", "administrator image", "android platform", "android web", "authentication message", "check check", "choose file", "cloud computing", "cloud computing learning", "cloud server", "code snippet", "comment image", "computing learning", "conference intelligent", "conference intelligent network", "confidential file", "confidential file accidental", "cs javascript", "development android", "digital evidence", "drive google", "eclipse juno", "evernote support", "evidence police", "evidence police order", "file accidental", "file accidental mishap", "file sharing", "file sharing storage", "file storage", "fourth international", "fourth international conference", "google doc", "google drive", "google drive google", "hybrid app", "image image", "image upload", "image uploaded", "intelligent network", "international conference", "international conference intelligent", "internet connection", "mobile device", "multiple request", "police officer", "police order", "police private", "police private cloud", "post comment", "private cloud", "public cloud", "secure file", "secure file sharing", "secureshare screenshot", "secureshare secureshare", "server database", "server server", "share image", "share store", "sharing storage", "smart phone", "speed evidence", "st week", "storage police", "store image", "upload file", "upload image", "username password", "web android", "web server"], "libraries": [], "languages": ["cs", "io", "javascript", "basic", "html", "java"], "frameworks": [], "dbs": ["mysql"]}, "./reports/Project Report (16).pdf": {"title": "car driver detection and accident prevention system", "filename": "./reports/Project Report (16).pdf", "data": "preliminary car driver detection accident prevention punje mr. pote chetan vitthal mr. bhargude deepak mohan mr. bandiwar ashish ramesh mr. yelai ajinkya deepak guidance dr. a. m. bagade 2015-2016 car driver detection accident prevention title acknowledge abbreviation ii iii iv vi 1 basic concept existing driver distraction 1.1 1.2 2.1 2.2 2.3 driver detection 2.4 challenge 3.1 3.2 3.2.1 5.2.1 5.2.2 5.2.3 5.2.4 5.2.5 4.1 4.2 5.1 5.2 developed android requirments class state planning 2 3 4 5 6 2015-16 car driver detection accident prevention car driver detection accident prevention mr. pote chetan vitthal mr. bhargude deepak mohan mr. bandiwar ashish ramesh mr. yelai ajinkya deepak bonafide prof. dr. a. m. bagade earlier diploma dr. a. m. bagade dr. p. t. dr. emmanuel m. 2015-16 car driver detection accident prevention acknowledgement opportunity dr. a. m. bagade dr. emmanuel m. valuable guidance providing facility indispensable completion thankful staff member valuable time support comment suggestion persuasion providing facility internet access book pote chetan vitthal bhargude deepak mohan bandiwar ashish ramesh yelai ajinkya deepak 2015-16 ii car driver detection accident prevention fig 3.1 decision ... ... 09 4.2 5.1 5.2 5.3 5.4 5.5 5.6 block process implementing svm ... 19 .. 21 22 class 23 24 25 state 26 2015-16 iii car driver detection accident prevention illustration 3.1 3.2 sensor supported android platform 14 sensor availability platform 17 2015-16 iv car driver detection accident prevention abbreviation abbreviation illustration wsn rrin iot casa evfab ssoa star eendmrp rcon qos rsa aomdv aodv rreq rrep rerr scmrp nbr det wireless sensor network randomly selected intermediate node internet thing coverage-aware sensor automation enhanced virtual force boundary force sensor self-organizing sink toroidal region energy efficient node disjoint multipath routing protocol remote console service ron shamir adleman hoc on-demand ad distance vector ad hoc on-demand distance vector multipath route request route reply route error secure cluster based routing protocol neighbor detection multipath 2015-16 car driver detection accident prevention 147 000 people killed year road accident india number people killed war reason driver distraction contributes 25 road accident nowadays smartphone main driver distraction prevent distraction occur driver driving tracking driving behavior help raise driver awareness driving habit associated helping reduce careless driving enforce safe driving practice propose detect driver car block smartphone notification prevent distraction ultimately prevent accident basically android installed smartphone assures 90 driver detection accuracy drive car prevent accident occur driver distraction save life 2015-16 vi car driver detection accident prevention 1 day mobile phone play role human life time mobile phone driving main reason road accident automobile mobile phone driving driver missed exit failed observe traffic signal forgot adjust speed limit 1 47 000 people killed road accident 2013 india number people killed war shocking hear 16 child die indian road daily people india specially driver reluctant follow traffic rule traffic rule ensure road people inside vehicle prevent accident making driver conscious driving restricting blocking thing distracts driver driving intend develop smartphone distinguish passenger driver automobile ensure driver distracted driving propose smartphone basically detect driver automobile automatically block incoming call message notification ensure driver distracted driving advantage sensing computing modern smartphones perform recognition ranging simple walking running complex laughing social gathering riding car bus train assume driver passenger perform identical micro-activities captured discriminated multi-modal sensing driver detection enables 2015-16 1 car driver detection accident prevention control notification based attention in-vehicle delivery highly sensitive state human recognition har technique discriminating driver passenger human recognition approach including service running background mobile phone camera environment rfid reader people built sensor smartphone accelerometer gyroscope detect discriminate passenger driver detecting driver automobile smartphone distract driver finish driving car driver detection accident prevention small sensor mounted worn special manner noisy environment improve state detection driver experimental evaluation real paper dd achieves practically accuracy 85 majority phone carrying position requiring individual training trigger reduce energy overhead illustrating principle sensing operate continuously 2015-16 2 car driver detection accident prevention 2 day mobile phone play role human life time mobile phone driving main reason road accident automobile mobile phone driving driver missed exit failed observe traffic signal forgot adjust speed limit 1 47 000 people killed road accident 2013 india number people killed war shocking hear 16 child die indian road daily people india specially driver reluctant follow traffic rule traffic rule ensure road people inside vehicle prevent accident making driver conscious driving restricting blocking thing distracts driver driving intend develop smartphone distinguish passenger driver automobile ensure driver distracted driving propose smartphone basically detect driver automobile automatically block incoming call message notification ensure driver distracted driving 2.1 existing solved special installation high-end vehicle example field nfc compatible vehicle people afford vehicle driver detection dd relies entirely smartphone sensor compatible automobile afford smartphone 2015-16 3 car driver detection accident prevention pressure sensor car seat measure weight person driver seat knowing weight people drive car facilitate driver detection car audio speaker detect driver programming approach identify driver require modification car inner working approach compatible car commercial product disabling phone car distinguish driver passenger proposes detection driver passenger automobile disables distraction driver smartphone apps provide drivemode restricts texting driving apps doe prevent distraction occur main accident apps launch manually start driving chance people forget launch app communicating bluetooth device preferred cell phone device bluetooth device entirely safe long term exposure microwave signal bluetooth device health hazard ear pain hearing loss brain cancer headache bluetooth radiation affect individual differently basically microwave radiation interrupt cell functioning natural transmission energy 2.2 driver distraction driver distraction defined directing attention driving object event vehicle environment distraction in-vehicle unrelated driving e.g tuning radio answering phone call negative driving reduced longitudinal lateral vehicle control reduced critical event detection driver distraction in- 2015-16 4 car driver detection accident prevention vehicle negative driving performance crash driver distraction estimated play contributory role 25 vehicle crash 2.3 driver detection dd advantage sensing computing modern smartphones perform recognition ranging simple walking running complex laughing social gathering riding car bus train assume driver passenger perform identical micro-activities captured discriminated multi-modal sensing driver detection enables control notification based attention in-vehicle delivery highly sensitive state human recognition har technique discriminating driver passenger human recognition approach including service running background mobile phone camera environment rfid reader people built sensor smartphone accelerometer gyroscope detect discriminate passenger driver detecting driver automobile smartphone distract driver finish driving 2.4 challenge multiple movement collected sensor noise motion vehicle accelerometer gyroscope output change continuously coarse granularity signal driver passenger pedal movement simple sensor specific pattern varies pedal press occurs interspersed pattern phone position orientation driver leg movement captured correctly phone correct pocket leg phone doe 2015-16 5 car driver detection accident prevention capture movement left leg pocket left foot typically pedal pocket movement pattern vary depending phone oriented pocket solution flexible term phone position orientation clearly multiple distinguishing signal employed 2015-16 6 car driver detection accident prevention 3 3.1. developed main aim accident prevention save life road accident provide mechanism driver hour 40 people age 25 die road accident accident occur driver carelessness effective prevention mechanism provide awareness mechanism driver major vehicular accident driver distraction paper introduces method detection driver identification discus implemented avoid accident key simple hypothesize driver passenger perform non-identical micro-activities captured discriminated multi-modal sensing instance driver insert left foot inside car passenger doe opposite inserting foot motion signature phone accelerometer observing signature reveals phone pant pocket driver left pant pocket passenger driver pressing gas pedal break foot motion signature easily detectible signature absent conclude owner phone passenger course complicated carry phone shirt pocket purse phone shirt pocket observe driver turn left pull seat belt 2015-16 7 car driver detection accident prevention passenger perform opposite gyroscope modern smartphones capable measuring rotational vertical axis called yaw observing direction yaw perform driver-passenger classification course woman purse harder detect find throw purse reasonable motion direction motion left left classification finally car passenger rear seat discriminate driver person sitting driver motion signature well identical utilize audio sound level car stereo discriminate implemented aggregate range signature combine achieve consistent classification course identifying signature micro-activities non-trivial discriminating pattern lay hidden raw sensor signal needed extracted precision developed energy constraint mind finally recognize confidence classification offer failure notification law-enforcement scenario learn confidence classification 3.2 detection multiple relevant micro-movements phone position orientation lead multiple dd address fortunately simplification commonality exist firstly overcome variable phone orientation map signal orientation phone compass accelerometer combined earth gravity vector magnetic field suffice generate mapping android io provide apis support calculation secondly movement constraint help prune search space movement signature example driver enters car leg front passenger enters left leg pedal press 2015-16 8 car driver detection accident prevention searched phone leg pocket enters 3.1 systematic combination multiple sensor signal signature phone position lower body pocket upper body pocket handbag determine passenger driver 3.1 decision passenger driver denote output entry swing block determines left side vehicle cabin phone lower body pocket swing lower body reveals direction entry left vs. movement separated determine signature occurred leg closest phone revealing phone pocket innermost leg entered vehicle accelerometer compass gyroscope seat-belt block detects vs. left side phone upper body pocket left wear seat belt turning left turning pull seat belt fastener motion reversed side accelerometer compass gyroscope pedal press block determines leg pressing brake gas pedal sensor matched pedal press pattern clustering block block output 2015-16 9 car driver detection accident prevention left side cabin phone inner leg pocket accelerometer compass gyroscope handbag l/r block detects left vs. phone handbag side detection block fail detection based nearness driver location front vs. rear detection described 3.2.1. android android mobile operating currently developed google based linux kernel designed touchscreen mobile device smartphones tablet android based direct manipulation touch gesture loosely correspond real-world action swiping tapping pinching manipulate on-screen object virtual keyboard text input addition touchscreen device google developed android tv television android auto car android wear wrist watch specialized variant android notebook game console digital camera electronics 2015 android largest installed base operating android growing selection third-party acquired downloading installing apk android package file downloading store program allows install update remove device google play store primary store installed android device comply google compatibility license google mobile service google play store allows browse download update published google third-party developer 2013 android play store 2013 48 billion installed google play store 2013 50 billion installed 2015-16 10 car driver detection accident prevention carrier offer direct carrier billing google play purchase cost monthly bill nature android number third-party marketplace exist android provide substitute device allowed ship google play store provide offered google play store policy violation reason 2015-16 11 car driver detection accident prevention 4 4.1 4.1.1 android sdk 4.1.2 adt plugin 4.1.3 android sdk package 4.1.4 android sensor android-powered device built-in sensor measure motion orientation environmental condition sensor capable providing raw precision accuracy monitor three- dimensional device movement positioning monitor change ambient environment device example game track reading device 's gravity sensor infer complex gesture motion tilt shake rotation swing likewise weather device 's temperature sensor humidity sensor calculate dew-point travel geomagnetic field sensor accelerometer compass bearing android platform support three broad category sensor motion sensor sensor measure acceleration force rotational force three ax category includes accelerometer gravity sensor gyroscope rotational vector sensor environmental sensor sensor measure environmental parameter ambient air temperature pressure illumination humidity category includes barometer photometer thermometer 2015-16 12 car driver detection accident prevention position sensor sensor measure physical position device category includes orientation sensor magnetometer access sensor device acquire raw sensor android sensor framework sensor framework class help perform wide variety sensor-related example sensor framework determine sensor device determine individual sensor 's capability maximum range manufacturer power resolution acquire raw sensor define minimum rate acquire sensor unregister sensor event listener monitor sensor change sensor android sensor framework access sensor sensor hardware-based software-based hardware-based sensor physical component built handset tablet device derive directly measuring specific environmental property acceleration geomagnetic field strength angular change software-based sensor physical device mimic hardware-based sensor software-based sensor derive hardware-based sensor called virtual sensor synthetic sensor linear acceleration sensor gravity sensor example software-based sensor 3.1 summarizes sensor supported android platform android-powered device sensor example handset device tablet accelerometer magnetometer fewer device barometer thermometer device sensor 2015-16 13 car driver detection accident prevention example device gravity sensor range 3.1 sensor supported android platform sensor description common type_accelerometer measure acceleration motion detection force m/s2that applied shake tilt etc. device three physical ax including force gravity type_ambient_temper measure ambient air ature room temperature temperature celsius note type_gravity measure force motion detection gravity m/s2 shake tilt etc. applied device three physical ax type_gyroscope measure device 's rate rotation detection rotation rad/s spin turn etc. three physical ax type_light measure ambient controlling screen light level illumination brightness lx type_linear_acceler measure acceleration 2015-16 14 ation car driver detection accident prevention force m/s2that applied acceleration device three single axis physical ax excluding force gravity type_magnetic_field measure ambient creating geomagnetic field compass three physical ax t. type_orientation measure determining rotation device device position three physical ax api level 3 inclination matrix rotation matrix device gravity sensor geomagnetic field sensor conjunction getrotationmatrix method type_pressure measure ambient air air pressure hpa mbar pressure change type_proximity measure proximity phone position object cm relative call view screen device sensor typically determine handset held person 's ear 2015-16 15 car driver detection accident prevention type_relative_humidi measure relative ty ambient humidity dewpoint percent absolute relative humidity type_rotation_vecto measure orientation motion detection device providing rotation three element detection device 's rotation vector type_temperature measure temperature device temperature celsius sensor varies device sensor wa replaced thetype_ambient_temp erature sensor api level 14 sensor availability sensor availability varies device device vary android version android sensor introduced course platform release example sensor introduced android 1.5 api level 3 implemented android 2.3 api level 9 likewise sensor introduced android 2.3 api level 9 android 4.0 api level 14 sensor deprecated replaced newer better sensor 3.2 summarizes availability sensor platform-by-platform basis platform listed platform involved sensor change sensor listed deprecated subsequent platform 2015-16 16 car driver detection accident prevention provided sensor device android 's forward compatibility policy 3.2 sensor availability platform sensor android 4.0 android 2.3 android 2.2 android 1.5 api level 14 api level 9 api level 8 api level 3 type_acceleromet er type_ambient_temp n/a n/a n/a erature type_gravity type_gyroscope type_light type_linear_accel eration n/a n/a1 n/a n/a n/a1 n/a type_magnetic_fiel type_orientation yes2 yes2 yes2 type_pressure type_proximity type_relative_humi dity n/a n/a1 n/a n/a1 n/a type_rotation_vec n/a n/a tor 2015-16 17 car driver detection accident prevention type_temperature yes2 4.1.5 support vector machine machine learning support vector machine svms supervised learning associated learning analyze recognize pattern classification regression training example marked belonging category svm training build assigns example category making non-probabilistic binary linear classifier svm representation example point space mapped example separate category divided clear gap wide example mapped space predicted belong category based side gap fall addition performing linear classification svms efficiently perform non- linear classification called kernel trick implicitly mapping input high-dimensional space svms belong family generalized linear classifier interpreted extension perceptron considered special tikhonov regularization special property simultaneously minimize empirical classification error maximize geometric margin maximum margin classifier formally support vector machine construct hyper plane hyper plane high- infinite dimensional space classification regression intuitively good separation achieved hyper plane largest distance nearest training-data point class so-called margin general larger margin lower generalization error classifier 2015-16 18 car driver detection accident prevention 4.2 block showing process implementing svm 4.2 hardware/system 4.2.1 window microsoft window 8/7/vista 32 64-bit 2 gb ram minimum 4 gb ram recommended 400 mb hard disk space 1 gb android sdk emulator image cache 1280 800 minimum screen resolution java development kit jdk 7 2015-16 19 car driver detection accident prevention 4.2.2 mac mac 10.8.5 higher 10.9 maverick 2 gb ram minimum 4 gb ram recommended 400 mb hard disk space 1 gb android sdk emulator image cache 1280 800 minimum screen resolution java runtime environment jre 6 java development kit jdk 7 4.2.3 linux gnome kde desktop gnu library glibc 2.15 2 gb ram minimum 4 gb ram recommended 400 mb hard disk space 1 gb android sdk emulator image cache 1280 800 minimum screen resolution oracle java development kit jdk 7 2015-16 20 car driver detection accident prevention 5 5.1 archetecture basically android working android includes handling real time sensor generate amount handled support vector machine svm machine learning includes movement detection car driver detection block distracting notification autoreply alert sensor detect moveme nt processing svm car driver detection block notification autoreply 5.1 2015-16 21 car driver detection accident prevention 5.2 5.2 simplest representation interaction involved actor second car driver passenger entry car 2015-16 22 car driver detection accident prevention 5.3 class 5.3 class class static represents static view class visualizing describing documenting aspect constructing executable code class describes operation class constraint imposed class modelling object oriented mapped directly object oriented language class collection class association collaboration constraint structural purpose class static view 9 class service class class 2015-16 23 car driver detection accident prevention 5.4 5.4 interaction process operate order object sensor block 2015-16 24 car driver detection accident prevention 5.5 5.5 graphical representation workflow stepwise action support choice iteration concurrency performs 2015-16 25 car driver detection accident prevention 5.6 state 5.6 state state called state machine statechart illustration state object attain well transition state unified modeling language context state defines stage evolution behavior object specific program unit code representing state idle movement sensing state processing state block notification state 2015-16 26 car driver detection accident prevention 6 planning scheduling 1 duration start phase 15 day 1 aug 2015 15 aug 2015 1.1 1.2 1.3 deciding existing discussing solution 3 day 1 aug 2015 3 aug 2015 2 day 4 aug 2015 5 aug 2015 4 day 6 aug 2015 9 aug 2015 1.4 study basic concept 6 day 10 aug 2015 15 aug 2015 2 description phase 15 day 16 aug 2015 30 aug 2015 2.1 2.2 deciding definition deciding platform language identifying term 2.3 4 day 16 aug 2015 19 aug 2015 4 day 20 aug 2015 23 aug 2015 5 day 24 aug 2015 28 aug 2015 2.4 preparing synopsis 2 day 29 aug 2015 30 aug 2015 3 phase 14 day 3.1 identifying 4 day 31 aug 31 aug 4 5 3.2 designing 10 day 4 sep drawing coding phase 5.1 identifying preparing 6.1 2015-16 27 13 sep 3 sep 13 sep car driver detection accident prevention 7 driver detection accident prevention small sensor mounted worn special manner noisy environment improve state detection driver experimental evaluation real paper dd achieves practically accuracy 85 majority phone carrying position requiring individual training trigger reduce energy overhead illustrating principle sensing operate continuously 2015-16 28 car driver detection accident prevention 1 t. choudhury s. consolvo b. harrison j. hightower a. lamarca l. legrand a. rahimi a. rea g. borriello b. hemingway p. klasnja k. koscher j. a. landay j. lester d. wyatt d. haehnel mobile sensing platform embedded capturing recognizing human pervasive computing magazine 2008 2 m. ermes j. prkka j. mantyjarvi i. korhonen detection daily sport wearable sensor controlled uncontrolled condition transaction biomedicine publication medicine biology society 12 1 2026 2008 3 safe driving 5080tgg http //www.skymall.com 4 a. thiagarajan j. biagioni t. gerlich j. eriksson cooperative transit tracking smart-phones acm sensys 2010 5 a. thiagarajan l. ravindranath k. lacurts s. madden h. balakrishnan s. toledo j. eriksson vtrack accurate energy-aware road traffic delay estimation mobile phone proceeding 7th acm conference embedded networked sensor sensys 09 8598 york ny usa 2009. acm 2015-16 29", "keywords": ["accident prevention", "ambient air", "android api", "android api level", "android platform", "android sdk", "android sensor", "androidpowered device", "api level", "bhargude deepak", "bluetooth device", "body pocket", "car driver", "car driver detection", "detection accident", "detection accident prevention", "detection driver", "development kit", "development kit jdk", "device gravity", "device gravity sensor", "device sensor", "driver automobile", "driver detection", "driver detection accident", "driver distraction", "driver passenger", "gb ram", "gb ram minimum", "geomagnetic field", "google play", "google play store", "gravity sensor", "hardwarebased sensor", "java development", "java development kit", "kit jdk", "leg pocket", "measure acceleration", "minimum gb", "minimum gb ram", "minimum screen", "minimum screen resolution", "mobile phone", "motion signature", "passenger driver", "pedal press", "phone position", "phone position orientation", "physical ax", "platform sensor", "play store", "position orientation", "ram minimum", "ram minimum gb", "raw sensor", "road accident", "screen resolution", "sensor availability", "sensor device", "sensor framework", "sensor measure", "sensor sensor", "vector machine", "yelai ajinkya"], "libraries": [], "languages": ["io", "spin", "basic", "small", "java"], "frameworks": ["angular"], "dbs": []}, "./reports/Project Report Group 9.pdf": {"title": "authentication security enhancement for   lio target", "filename": "./reports/Project Report Group 9.pdf", "data": "authentication security enhancement lio target khandelwal arpit narendra 80058578 padia sarvesh lalit 80058609 panchariya aniket sanjay patil indrajeet anil 80058611 80058617 guidance prof. s. b. deshmukh b.e 2015 411043 affiliated 2014-2015 411043 dissertation authentication security enhancement lio target khandelwal arpit narendra 80058578 padia sarvesh lalit 80058609 panchariya aniket sanjay 80058611 patil indrajeet anil 80058617 record bona-fide year 2014-2015 guidance __________________ _________________ _________________ prof. s. b. deshmukh dr. emmanuel m. dr. p. t. hod examination examiner _________________ acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting profoundly grateful prof. s. b. deshmukh expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing grateful mr. tejas vaykole calsoft pvt ltd. entire express sincere heartfelt gratitude staff member helped directly indirectly course khandelwal arpit narendra padia sarvesh lalit panchariya aniket sanjay patil indrajeet anil internet small iscsi internet protocol ip -based storage networking standard linking storage facility facilitate transfer intranet manage storage long distance iscsi allows client initiator send scsi command scsi storage device lio target remote server currently lio target iscsi target implement chap authentication three-way handshake verify identity host chap lio target hash function message digest md5 md5 cryptographic hash function producing 128 bit hash 2004 wa md5 collision resistant serious flaw discovered making security purpose questionable collision attack exists find collision md5 second 2.6 ghz pentium 4 processor complexity 224.1 1 sha-1 robust md5 includes round derivation 80 message word sha-1 mixing md5 possibility collision attack 269 7 higher md5 sha secure md5 making favorable authentication keywords iscsi chap hash function md5 sha1 lio target initiator 1. introduction.. 1.1 1.2 basic concept 1.3 2. 2.1 work.. 2.2 current 3. proposed 3.1 statement.. 3.2 scope.. 3.3 ... ... .. 3.4 1 2 2 3 4 5 7 8 9 9 9 9 3.5 used.. 10 4. specifications.. 11 4.1 12 4.2 12 5. ... 13 5.1 14 5.1.1 dfd level 0 14 5.1.2 dfd level 1 14 5.2 15 5.2.1 diagram.. 15 5.2.2 class 16 5.2.3 diagram.. 17 5.2.4 18 5.2.5 19 6. 20 6.1 21 6.1.1 kernel 21 6.1.2 initiator 21 6.2 code snippets.. 22 6.3 screenshots 30 6.4 33 6.4.1 unit 33 6.4.2 integration 34 7. planning scheduling.. 35 7.1 planning 36 7.2 scheduling 37 8. 38 8.1 39 8.2 40 9. references.. 41 2.1 working chap authentication iscsi 5.1 dfd level 0 .. 5.2 dfd level 1 .. 5.3 5.4 class ... 5.5 5.6 .. 5.7 diagram.. 6.3.1 targetcli utility wa configure target .. 6.3.2 input screen client .. 6.3.3 output screen client .. 6.3.4 wireshark output 6.3.5 defining chap_a=6 sha1 .. 7.1 gantt 8.2.1 time graph ... 7 14 14 15 16 17 18 19 30 30 31 31 32 37 40 abbreviation chap challenge handshake authentication protocol scsi small iscsi internet small lio lun san md5 linux iscsi logical unit number storage area network message digest 5 sha1 secure hash 1 1 1 authentication security enhancement lio target 1 1 1.1 iscsi internet small standard network storage protocol iscsi protocol specifies access scsi storage device tcp network small scsi standard physically connecting transferring peripheral device iscsi allows client initiator send scsi command scsi storage device target remote server iscsi target iscsi enterprise target openfiler lio target lio maintained datera inc. lio scsi target engine wa merged linux kernel version 2.6.38 mainstream target worldwide currently lio target implement chap challenge handshake authentication protocol authentication three-way handshake verify identity host chap lio target hash function message digest md5 md5 cryptographic hash function producing 128 bit hash collision attack exists find collision second 2.6ghz pentium 4 processor complexity 224.1 1 secure hash function chap lio target compromise single iscsi device equates compromise 10 100 operating making entire store vulnerable 1.2 basic concept iscsi iscsi stand internet small transport layer protocol describes scsi packet transported tcp/ip network lan wan internet traditional fibre channel require special purpose cabling iscsi long distance existing network infrastructure chap chap authentication scheme pointtopoint protocol ppp server validate identity remote client authenticates network host authenticating example internet service provider periodically verify identity peer three handshake md5 md5 message-digest cryptographic hash function producing 128-bit 16-byte hash input message arbitrary length produce output 128-bit finger print message digest input authentication security enhancement lio target 2 1 sha1 sha-1 cryptographic hash function designed united state national security agency u.s. federal processing standard published united state nist produce 160-bit 20-byte hash sha1 computing condensed representation message file sha-1 called secure computationally infeasible find message corresponds message digest find message produce message digest change message transit message digest signature fail verify initiator initiator function iscsi client iscsi initiator sends scsi command ip network initiator fall broad 1 initiator dedicated typically combination firmware running implement iscsi 2 initiator initiator code implement iscsi lio target iscsi specification refers storage located iscsi server generally instance iscsi storage node running server target computing linux-io lio target open-source scsi target standard included linux kernel lio target doe initiate session logical unit number luns wait scsi command scsi initiator performs input/output transfer lio maintained datera inc. silicon valley vendor storage lio achieve record-breaking storage performance 15 2011 linus torvalds merged lio scsi target engine linux kernel version 2.6.38 wa released 14 2011 1.3 enhance authentication security lio target providing efficient secure hashing help reduce vulnerability store provide increased security valuable amount storage area network capability choosing hashing function target providing backward compatibility authentication security enhancement lio target 3 2 2 authentication security enhancement lio target 4 2 2.1 md5 message-digest cryptographic hash function producing 128-bit 16-byte hash typically expressed text format 32 digit hexadecimal number md5 utilized wide variety cryptographic commonly verify integrity md5 wa designed ronald rivest 1991 replace earlier hash function md4 source code rfc 1321. security md5 hash function severely compromised collision attack exists find collision second 2.6 ghz pentium 4 processor complexity 224.1 7 xiaoyun wang hongbo yu paper powerful attack md5 allows finding collision efficiently attack find collision md5 15 minute hour computation time attack differential attack differential attack doe exclusive-or measure difference modular integer subtraction measure 1 marc stevens paper answer challenge single block collision md5 consisting 64-byte message md5 hash presenting single-block collision attack based message difference example colliding message pair attack based collision finding exploit number bit-conditions round choose message block satisfy bit-conditions step 22 additionally three tunnel correct bit- condition step 25. attack average runtime complexity equivalent 249.8 call md5 's compression function 2 tao xie fanbao liu dengguo feng proposed method choose optimal input difference generating md5 collision pair divide sufficient condition class strong condition weak condition difficulty condition satisfaction wa proved exist strong condition 24 step half round specific condition utilizing weakness compression function authentication security enhancement lio target 5 2 md5 difference inheriting message expanding finally chose input difference number strong condition number free message word efficient 2-block md5 collision attack wa implemented 218 md5 compression find collision pair single-block collision attack complexity 241 collision md5 3 ilya mironov paper surveyed theory cryptographic hash function md5 sha1 resistance collision-finding attack reviewed definition principle trace genealogy standard hash function discus generic attack attack iterative hash function attack specific function 5 xiaoyun wang yiqun lisa yin hongbo yu collision search attack hash function sha1 collision sha-1 complexity le 269 hash operation attack full 80-step sha-1 complexity le 280 theoretical bound 6 authentication security enhancement lio target 6 2 2.2 current fig 2.1 working chap authentication iscsi scsi initiator scsi device start i/o process scsi target scsi device respond request perform i/o process step authentication client 1 iscsi client sends authentication request message target authentication method chap 2 target reply confirmation authentication method chap 3 client sends message chap chap_a target 4 reply target sends challenge message chap_c identifier chap_i chap chap_a 5 client message sends chap chap_n chap response chap_r 6 finally target sends message telling status authentication iscsi authentication process target client negotiate parameter authentication security enhancement lio target 7 3 proposed 3 proposed authentication security enhancement lio target 8 3 proposed 3.1 improve authentication security lio target adding support secure hash function 3.2 support sha1 hashing authentication current md5 3.3 increased efficiency secure hash function easy fast transfer file network 3.4 primary study authentication mechanism lio target enhance authentication mechanism secure authentication scheme validate modified mechanism existing iscsi chap authentication restrict access volume chap authentication challenge response mechanism authentication chap message digest md5 hashing function develop chap iscsi sha-1 hashing function sha-1 replace md5 hashing function chap chap_a parameter decide hashing function sha-1 bit hash provide secure authentication md5 security authentication security enhancement lio target 9 3 proposed 3.5 enhance security current 1 san storage 2 lio target 3 git authentication security enhancement lio target 10 4 specification 4 specification authentication security enhancement lio target 11 4 specification 4.1 4.2 operating linux kernel version 3.18-rc4 complier target cli authentication security enhancement lio target 12 5 5 authentication security enhancement lio target 13 5 5.1 5.1.1 dfd level 0 fig 5.1 level 0 5.1.2 dfd level 1 fig 5.2 level 1 authentication security enhancement lio target 14 5 5.2 5.2.1 fig 5.3 chap authentication iscsi actor interact system-initiator target initiator request access database target target authenticates granting access authentication security enhancement lio target 15 5 5.2.2 class fig 5.4 class chap authentication iscsi authentication security enhancement lio target 16 5 5.2.3 fig 5.5 chap authentication iscsi firstly initiator informs target authentication method chap target confirms request informs target target sends challenge initiator identifier responds chap response message finally target sends status message initiator authentication security enhancement lio target 17 5 5.2.4 fig 5.6 chap authentication iscsi initially initiator informs target authentication method chap target confirms request informs target target sends challenge initiator identifier responds chap response message finally target sends status message initiator authentication security enhancement lio target 18 5 5.2.5 fig 5.7 chap authentication iscsi authentication security enhancement lio target 19 6 6 authentication security enhancement lio target 20 6 6.1 6.1.1 kernel firstly kernel wa implemented computation sha1 hash chap_a initiator wa kernel send identifier challenge message receiving authentication request initiator client sends hash calculated help challenge identifier password kernel hash calculated kernel compared hash initiator hash match 6.1.2 initiator development kernel initiator implemented send request lio target computation sha1 hash md5 hash initiator initiator accepts chap_a option authentication request send kernel initiator kernel send identifier challenge message receiving authentication request initiator initiator calculates hash help challenge identifier password sends kernel chap_r kernel sends status success failed based comparison hash authentication security enhancement lio target 21 6 6.2 code snippet /** helper.c calculate digest passwd param passwd password read its.conf param chap_c chap_c returned target phase2 param chap_i chap_i returned target phase2 param param_ptr calculated digest return 0 */ int iscsi_login_add_chap_response_sha1 const char *passwd const char *chap_c int chap_i char *param_ptr int ret=cni_success const char *strp unsigned char sha1context ctx char *buf char *s char *chap_i_buffer unsigned char hash 20 0 // 20 sha1 block size int char malloc 41 // 40 byte 1 byte \\0 chap_i_buffer char malloc 10 sha1reset ctx sha1input ctx unsigned char const chap_i 1 sha1input ctx unsigned char const passwd strlen passwd strp const char chap_c *strp 0 h2i strp 0 4 h2i strp 1 strp += 2 sha1input ctx 1 authentication security enhancement lio target 22 6 sha1result ctx buf char malloc 41 // 40 byte 1 byte \\0 0 5 i++ sprintf buf 8 `` .8x '' ctx.message_digest buf strncat char param_ptr buf 41 return ret /** client.c main function client */ int main int argc char *argv int sockfd 0 int ret cni_failure unsigned int cmdsn 0 unsigned int statsn 0 fill_login_details ex_send set_immediatedata ex_send set_initialr2t ex_send set_mrdsl ex_send mrdsl set_mbl ex_send mbl set_datasequenceinorder ex_send iscsi_chap_login_param sockfd cmdsn statsn ex_send ex_recv cni_success logger iscsi_info `` failed\\n '' goto authentication security enhancement lio target 23 6 logger iscsi_info `` success\\n '' return ret /** iscsi_target_auth.c chap_server_compute_sha1 function target calculate chap_r target compare hash client hash */ /* extract chap_r */ extract_param nr_in_ptr `` chap_r '' max_response_length chap_r 0 pr_err `` max find chap_r.\\n '' goto hex pr_err `` hex find chap_r.\\n '' goto pr_debug `` server chap_r= s\\n '' chap_r chap_string_to_hex client_digest chap_r strlen chap_r tfm crypto_alloc_hash `` sha1 '' 0 crypto_alg_async is_err tfm pr_err `` unable allocate struct crypto_hash\\n '' goto desc.tfm tfm desc.flags 0 // initialize context sha1 hash ret crypto_hash_init desc authentication security enhancement lio target 24 6 ret 0 pr_err `` crypto_hash_init failed\\n '' crypto_free_hash tfm goto //input identifier calculating hash sg_init_one sg chap- 1 ret crypto_hash_update desc sg 1 ret 0 pr_err `` crypto_hash_update failed id\\n '' crypto_free_hash tfm goto //input password calculating hash sg_init_one sg auth- password strlen auth- password ret crypto_hash_update desc sg strlen auth- password ret 0 pr_err `` crypto_hash_update failed password\\n '' crypto_free_hash tfm goto //input challenge calculating hash sg_init_one sg chap- challenge chap_challenge_length ret crypto_hash_update desc sg chap_challenge_length ret 0 pr_err `` crypto_hash_update failed challenge\\n '' crypto_free_hash tfm goto //take final hashvalue server_digest ret crypto_hash_final desc server_digest ret 0 authentication security enhancement lio target 25 6 pr_err `` crypto_hash_final failed server digest\\n '' crypto_free_hash tfm goto crypto_free_hash tfm chap_binaryhex_to_asciihex response server_digest sha1_signature_size pr_debug `` server sha1 server digest s\\n '' response // check client server digest match memcmp server_digest client_digest sha1_signature_size 0 pr_debug `` server sha1 digest match \\n\\n '' goto pr_debug `` server sha1 digest match chap connetication '' '' successful.\\n\\n '' /* authentication succeeded return mutual authentication enabled */ /** iscsi_target_auth.c iscsi_chap function target select choice md5 sha1 */ static struct iscsi_chap *chap_server_open struct iscsi_conn *conn struct iscsi_node_auth *auth const char *a_str char *aic_str unsigned int *aic_len int ret struct iscsi_chap *chap auth- naf_flags naf_userid_set || authentication security enhancement lio target 26 6 auth- naf_flags naf_password_set pr_err `` chap password '' '' initiator acl\\n '' return null conn- auth_protocol kzalloc sizeof struct iscsi_chap gfp_kernel conn- auth_protocol return null chap conn- auth_protocol ret chap_check_algorithm a_str switch ret chap_digest_md5 pr_debug `` server chap_a=5\\n '' /* send chap_a md5 */ *aic_len sprintf aic_str `` chap_a=5 '' *aic_len += 1 chap- digest_type chap_digest_md5 pr_debug `` server sending chap_a= d\\n '' chap- digest_type break //code inserted send chap_a=6 client chap_digest_sha pr_debug `` server chap_a=6\\n '' /* send chap_a sha */ *aic_len sprintf aic_str `` chap_a=6 '' // creating out_text *aic_len += 1 // including null character chap- digest_type chap_digest_sha authentication security enhancement lio target 27 6 pr_debug `` server sending chap_a= d\\n '' chap- digest_type break chap_digest_unknown default pr_err `` unsupported chap_a d\\n '' chap- digest_type return null /* identifier */ chap- conn- tpg- tpg_chap_id++ *aic_len += sprintf aic_str *aic_len `` chap_i= '' chap- *aic_len += 1 pr_debug `` server sending chap_i= d\\n '' chap- /* generate challenge */ chap_gen_challenge conn 1 aic_str aic_len return chap /** iscsi_target_auth.c chap_got_response function target choice */ static int chap_got_response struct iscsi_conn *conn struct iscsi_node_auth *auth char *nr_in_ptr char *nr_out_ptr unsigned int *nr_out_len struct iscsi_chap *chap conn- auth_protocol authentication security enhancement lio target 28 6 switch chap- digest_type chap_digest_md5 chap_server_compute_md5 conn nr_in_ptr nr_out_ptr nr_out_len 0 return -1 return 0 // code inserted compute sha1 digest compare // client digest chap_digest_sha chap_server_compute_sha1 conn nr_in_ptr nr_out_ptr nr_out_len 0 return -1 return 0 default pr_err `` unknown chap digest \\n '' chap- digest_type return -1 authentication security enhancement lio target 29 6 6.3 screenshots fig 6.3.1 targetcli utility wa configure target fig 6.3.2 input screen client authentication security enhancement lio target 30 6 fig 6.3.3 output client screen fig 6.3.4 wireshark output authentication security enhancement lio target 31 6 fig 6.3.5 defining chap_a=6 authentication security enhancement lio target 32 7 planning scheduling 6.4 phase form development life cycle product tested thoroughly delivered customer document general strategy adopted product 6.4.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine unit entire function procedure tested 1 kernel aim generate compare hash accept hash compute hash chap_r hash client expected hash success actual expected 2 client aim accept hash compute chap_r select hash expected hashed chap_r actual expected authentication security enhancement lio target 33 7 planning scheduling 6.4.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision major carrying integration called bottom-up method top-down method bottom procedure expected actual pass/fail 1 2 success select md5 hash message expected prompted success select sha1 hash message expected pas pas 3 enter input md5 sha1 prompted invalid chap_a message prompted expected pas client client authentication security enhancement lio target 34 7 planning scheduling 7 planning scheduling authentication security enhancement lio target 35 7 planning scheduling 7.1 planning month 1 2 study understand concept lio target iscsi protocol authentication mechanism chap month 3 understanding chap iscsi protocol linux kernel month 4 hashing support chap month 5 proposed linux kernel month 6 validating modified authentication mechanism implemented linux kernel month 7 documenting making final presentation authentication security enhancement lio target 36 7 planning scheduling 7.2 scheduling search sponsorship decide topic study aspect 1st review understanding chap iscsi linux kernel hashing proposed kernel 2nd review validating modified authentication mechanism documenting 3rd review final review final jul aug sept oct nov dec jan feb mar apr 2014 2014 2014 2014 2014 2014 2015 2015 2015 2015 fig 7.1 gantt authentication security enhancement lio target 37 8 8 authentication security enhancement lio target 38 8 8.1 current support sha1 hashing exiting md5 hashing authentication support secure hashing sha2 sha3 adding tested performance degrades threshold usage factor considered appropriate hashing adding sha1 support source client authentication security enhancement lio target 39 8 8.2 support hashing sha1 previous md5 hashing sha1 secure sha1 160 bit function 15 10 5 0 md5 sha1 10 20 30 40 50 60 70 80 90 100 110 120 128 password character fig 8.2.1 time graph adding sha1 performance respect time hasnt changed lot wa md5 authentication security enhancement lio target 40 1 xiaoyun wang hongbo yu break md5 hash function international association cryptologic 2005 2 mark stevens single block collision attack md5 cryptology group cwi 2012 3 tao xie fanbao liu dengguo feng fast collision attack md5 4 rfc 3720 internet small iscsi http //www.ietf.org/rfc/rfc3720.txt 5 ilya mironov hash function theory attack 6 xiaoyun wang yiqun lisa yin hongbo yu finding collision full sha- 1 7 md5 http //en.wikipedia.org/wiki/md5 authentication security enhancement lio target 41", "keywords": ["aniket sanjay", "aniket sanjay patil", "authentication iscsi", "authentication iscsi authentication", "authentication mechanism", "authentication method", "authentication method chap", "authentication request", "authentication security", "authentication security enhancement", "chap authentication", "chap authentication iscsi", "chap challenge", "chap digesttype", "chap iscsi", "chapa dn", "client authentication", "client authentication security", "collision attack", "collision md", "command scsi", "const char", "cryptographic hash", "cryptographic hash function", "function target", "hash function", "hashing function", "hongbo yu", "initiator initiator", "internet small", "iscsi authentication", "iscsi protocol", "kernel version", "khandelwal arpit", "linux kernel", "linux kernel version", "lio target", "lisa yin", "lisa yin hongbo", "long distance", "md hash", "md hash function", "md hashing", "md sha", "message digest", "method chap", "patil indrajeet", "planning scheduling", "sanjay patil", "sanjay patil indrajeet", "screen client", "scsi command", "scsi command scsi", "scsi initiator", "scsi storage", "scsi storage device", "scsi target", "security enhancement", "sha digest", "sha hash", "storage device", "strong condition", "united state", "unsigned char", "unsigned int", "xiaoyun wang", "yin hongbo", "yin hongbo yu"], "libraries": [], "languages": ["basic", "small"], "frameworks": [], "dbs": []}, "./reports/Project Report Group ID 24.pdf": {"title": "uconnect: an intelligent system with   similarity based approach towards creating a   patient network", "filename": "./reports/Project Report Group ID 24.pdf", "data": "uconnect intelligent similarity based approach creating patient network sonal joshi seat b120058562 sayali magar seat b120058585 aishwarya pradhan seat b120058613 guidance prof. s. a. jakhete 2015-2016 uconnect intelligent similarity based approach creating patient network sonal joshi sayali magar aishwarya pradhan seat b120058562 seat b120058585 seat b120058613 bonafide prof. s. a. jakhete fulfilment earlier dr. emmanuel m. diploma prof. s. a. jakhete examiner acknowledgement great pleasure satisfaction presenting uconnect intelligent similarity based approach creating patient network web single screen happening lot people completely unaware critical news going privilege duty acknowledge kind help guidance received people preparation prepare form valuable help cooperation guidance prof. s. a. jakhete help guidance needed course till grateful kind support insight helpful special dr. emmanuel m. prof. n. v. buradkar indispensable support suggestion mr. varun wadhwa ms. madhuri mane praxify solution pvt ltd. valuable support directly indirectly helped completion submission sonal joshi sayali magar aishwarya pradhan ii title pageno ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..i certificatefromindustry ... ... ... ... ... ... ... ... .ii acknowledgement ... ... ... ... ... ... ... ... ... iii listoffigures ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... vii listoftables ... ... ... ... ... ... ... ... ... ... ... ... ... ..viii background relevance projectundertaken organisationofprojectreport literaturesurvey fedelucionarducci cataldomusto 1 1 3 4 5 7 marcopolignano marcodegemmis pasquale lops giovannisemeraro arecommendersystem forconnectingpatientstotherightdoctorsinthe healthnetsocialnetwork 7 7 chaitanyakaul ashminkaul sauravverma 1 1.1 1.2 1.3 1.4 2 2.1 2.1.1 2.1.2 2.2 comparativestudyonhealthcarepredictionsystems usingbigdata ieeesponsored2ndinternational conferenceoninnovationsininformationembedded andcommunicationsystemsiciiecs15 8 8 amirahmad lipikadey akmeanclustering algorithmformixednumericandcategoricaldata knowledgeengineering63 2007 503527 9 9 requirementspecificationandanalysis10 purposeofdocument 10 problemdefinition 10 usecasescenario usecasediagram usecases 11 11 12 softwareandhardwarerequirements13 projectdesign systemarchitecture 15 15 2.2.1 2.2.2 2.3 2.3.1 2.3.2 3 3.1 3.2 3.3 3.3.1 3.3.2 3.4 4 4.1 4.2classdiagram 16 4.3sequencediagram connectmoduleflow descriptionofmodules blog connect share reminder connect resultsandevaluation unittesting whiteboxtesting sortfunctiontesting matchfunctiontesting scorecalculationtesting 4.4 5 5.1 5.1.1 5.1.2 5.1.3 5.1.4 5.1.5 5.2 6 6.1 6.2 6.3 6.4 6.5 7 17 18 19 19 19 19 20 20 20 21 24 24 25 25 26 27 28 30 listoffigures 3.1usecasediagram ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 11 4.1systemarchitecture ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 15 4.2classdiagram ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 16 4.3sequencediagramforconnect ... ... ..17 4.4flowdiagramforconnect ... 18 6.1sortingfunctiontiming ... 26 6.2matchfunctiontiming ... ..26 6.3scorecalculationtiming..27 listoftables 3.1usecase1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 12 3.2usecase2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 12 3.3usecase3 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..12 3.4usecase4 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 12 3.5usecase5 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 13 3.6usecase6 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..13 health-care stakeholder opinion people dealing chronic illness better network support patient active social medium find health support discussion groups/forums chronicle illness journey intend connect people health issue illness assist choosing better care enable patient second opinion diagnosis concerned doctor perspective diagnosis doctor condition globe maintains medical profile check patient provide better recommendation potential connection similarity measure disease symptom age gender determine resemblance patient score generated considering stated factor associating rank matched patient comprises dedicated platform sharing discussing health fact query community method implement proposed involve unsupervised learning process dynamically depending initiative enable people understand diagnosis treatment health find appropriate solution experience knowledge patient keywords health-care support connect similarity score uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network chapter1 1.1background healthcare booming socially sensitive sector today's time basic framework defining sector united nation international standard industrial classification categorizes health care generally consisting hospital medical dental practice `` human health '' total industry size expected touch usd160 billion 2017 usd280billionby2020 reason growth constantly evolution industry adapt advance led therapy diagnostic communicating apart hospital commercial aspect healthcare well patient social viewed worked healthcare help web native android io patient educated his/her condition provided platform second opinion sharing communicating fellow patient patient active social medium find health find support discussion group forum chronicle illness journey 41 people social medium affect choice specific doctor hospital medical facility 12 interested social medium facilitate peoplegoingthroughsimilarmedicalconditionsacrosstheglobe aspect patient care provider care taker doctor hospital 30 adult share health puneinstituteofcomputertechnologyinformationtechnology20152016 1 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network social medium site patient 47 doctor 43 hospital 38 health insurance company 32 drug company 13 patient family practice clinic 56 wanted provider social medium appointment setting reminder diagnostic reporting health sharing prescriptionnotifications andansweringgeneralquestions patient social medium start knew connect provider instance highquality medical care limited completely unavailable rural area internet greater reach considered aware alternative option patienteducation puneinstituteofcomputertechnologyinformationtechnology20152016 2 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 1.2relevance medical diagnosis considered art standardization effort greatly fact medical diagnosis necessitates expertise coping withuncertaintywhichisnotfoundintoday'scomputingmachinery healthcare professional major factor aiding people's health people dealing chronic illness better network support .sometimes patient learn friend family limit endupgivingadvicewhichisnotrelevant intend build connection people dealing kind illness learn treatment diagnosis enable patient express condition person situation illness connecting patient concerned knowledge diagnosis doctor condition globe major whichtechnologycouldbetransformingthefutureofhealthcare 01 substantial social platform dedicated completely healthcare intend provide facility share view interest experienced situation concerning health aspect .thus initiativetoglobalizethehealthcommunity 07 social medium platform view post concerned le interest propose categorize interest enhance suggestion based medical inclination well medical profile intend puneinstituteofcomputertechnologyinformationtechnology20152016 3 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network provide functionality viewing relevant post article well enhanceuserexperience 1.3projectundertaken platform patient seek help patient experience medical condition log create patient profile relation medical condition patient process determines patient depending factor number symptom disease age gender blood group patient gender absolute relevancy score matched analyze decide patient connect connected patient chat hangout facility patient patient post patient share view topic functionality whereausercansetmedicalremindersforhim 1.3.1aims deployment healthcare help bridge gap patient designingasystemwithhighrelevancyandreliabilityfactor 1.3.2goals determining similarity parameter processingpatientsdata medical considered establishingarelevancyhierarchybasedontheprocessingperformed puneinstituteofcomputertechnologyinformationtechnology20152016 4 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network providingcommonplatformforhealthrelatedinteraction 1.4.organizationofprojectreport provision platform health help understand providing platform helpingpeoplegetassistancefortheirhealthissues proposed aim background domain discussed thebackgroundhelpsyourealizetheneedfortheproject help understand framework method implemented function direction approach functionality specification help activitiesintheproject.thehardwareandsoftwarerequirementsarealsodiscussed include class database actor discussed depicts datafromthedatabase puneinstituteofcomputertechnologyinformationtechnology20152016 5 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network realization concept developed earlier described functionality pseudo code description modulesoftheprojectandtheirusabilityisalsodiscussed evaluation handle exception coverage disease symptom checked.theaccuracyofthesystemisalsochecked objectivesthatthesystemsatisfiedandalsothefuturescopeoftheproject puneinstituteofcomputertechnologyinformationtechnology20152016 6 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network chapter2 literaturesurvey 2.1fedelucionarducci cataldomusto marcopolignano marcodegemmis pasqualelops giovannisemeraro arecommendersystemforconnecting patientstotherightdoctorsinthehealthnetsocialnetwork 2.1.1.introductiontotherecommendersystemandneedforasocialnetworkfor healthrelatedissues easiest health discus people facing paper recommender help connect people field medicine current health issue recommendation computes similarity patient generates ranked doctor hospital suitable patient profile exploiting health shared community find patient cured disease receive suggestion recommender suggesting doctor hospital patient based semantic similarity computed byexploitingadiseasehierarchy 09 2.1.2.analysis paper helped realize providing social platform health issue discussed kind help provided patient whichhelpsustotakeappropriatemeasuresonourproblems puneinstituteofcomputertechnologyinformationtechnology20152016 7 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 2.2.chaitanyakaul ashminkaul sauravverma comparitivestudyon healthcarepredictionsystemsusingbigdata ieeesponsored2ndinternational conferenceoninnovationsininformationembeddedandcommunicationsystems iciiecs15 2.2.1.introductiontothepredictionsystemsandneedforbigdata today machine medicine increased drastically institution today medical domain resorted virtual machine realizing medical generated continuous basis recommendation deliver personalized individual health profile colossal amount accumulated continuously dumped medical trend led emergence analytics adopted recommendation order enhance predictive foreseeing upside potential healthcare sector paper discus transition observed healthcare domain require prediction based analysing variety datasets comparing detailed comparison existing prediction based andtheirkeyfeaturesarehighlighted 01 2.2.2.analysis paper help compare find appropriate framework proposed care suit best predict disease helppatientsconnecttotheappropriatepeople care currently requires dataset comprising relevant people belonging ethnic group prediction create ethnic group similarity puneinstituteofcomputertechnologyinformationtechnology20152016 8 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network lead predicting kind disease generation inherit based observing transformation pattern observed significantlyreducethehospitalreadmissionratesandalsoincreasehumanmortality 2.3.amirahmad lipikadey akmeanclusteringalgorithmformixednumeric andcategoricaldata knowledgeengineering63 2007 503527 2.3.1.introductiontokmeansclusteringalgorithmformixednumericand categoricaldata paper clustering based kmean paradigm well mixed numeric categorical propose cost function distance measure based cooccurrence measure account significance clustering process modified description cluster center overcome numeric kmean algorithmandprovideabettercharacterizationofclusters 11 2.3.2.analysis paper help understand vary kind cluster patient symptom help connectthemorfindthesimilarpatients puneinstituteofcomputertechnologyinformationtechnology20152016 9 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network chapter3 requirementspecificationandanalysis 3.1purposeofdocument purpose document detailed description connects patient suffering condition connect globe gain insightsanddiagnosisapartfromtheonesgivenbytheirconsultingdoctors document aim explaining aspect respect inputoutput userinterface database backend formula working develop 3.2.problemdefinition build intelligent managing creating patient network provide assistance medical maintains medical profile check patient provide better term providing suggestion connection absolute score patient matching logged patient enable connect social platform dedicated health providing better opportunity sharetheirmedicalrelatedinformation puneinstituteofcomputertechnologyinformationtechnology20152016 10 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 3.3usecasescenario 3.3.1usecasediagram figure3.1 usecasediagram puneinstituteofcomputertechnologyinformationtechnology20152016 11 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 3.3.2usecases usecase1 description enablestheusertocreateanaccountwiththesystem actorsinvolved table3.1 usecase1 usecase2 description actorsinvolved usecase3 description actorsinvolved usecase4 description posting enablesapatienttosharemedicalinformationwith hisconnectedpatientstohelpthemrecover patient table3.2 usecase2 connectsimilarpatients 1.referdiseasesymptommappingfromthedatabase 2.findpatientswithasimilarityranking 3.enableconnectionamongthem sharing patient table3.3 usecase3 reminder inputtheremindersfortheuser 1 2. systemwillshowitonyourhomepage actorsinvolved table3.4 usecase4 puneinstituteofcomputertechnologyinformationtechnology20152016 12 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient usecase5 description network sendrequests 1. theuserselectsapatienttoconnectwithfromthe listheobtainsfromthesystem 2. usersendsarequesttohim actorsinvolved table3.5 usecase5 usecase6 description acceptrequests 1. theuserreceivesarequestfromapatient 2. hechecksthedetailsofthepatients 3. useracceptsarequesttohim actorsinvolved table3.6 usecase6 3.4softwareandhardwarerequirements javascript softwarerequirements cs html angularjs webbrowser googlechrome opera bootstrap java databaselanguage mysql operatingsystem window hardwarerequirements puneinstituteofcomputertechnologyinformationtechnology20152016 13 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 4gbram cpuspeed2ghz server jbossapplicationserver7.1.3 puneinstituteofcomputertechnologyinformationtechnology20152016 14 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network chapter4 projectdesign 4.1systemarchitecture proposed depicted three simultaneous fashion share functionality well processing server side involves level programming language prominent include similarity based clustering naturallanguageprocessing rankingalgorithmsetc 02 component include ui responsible interaction server responsible dynamic processing clustering ranking analyzing thedatabases internetandfinallytheuserhimself fig4.1systemarchitecture puneinstituteofcomputertechnologyinformationtechnology20152016 15 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 4.2classdiagram fig4.2classdiagram puneinstituteofcomputertechnologyinformationtechnology20152016 16 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 4.3sequencediagramforconnect input symptomprofile disease+symptoms/onlysymptoms output matchedlistofpatients fig4.3sequencediagramforconnect puneinstituteofcomputertechnologyinformationtechnology20152016 17 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 4.4connectmoduleflow 02 fig4.4flowdiagramforconnect puneinstituteofcomputertechnologyinformationtechnology20152016 18 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network chapter5 document specifies detailed description approach undertaken theimplementationofeachmodule 5.1descriptionofmodules 5.1.1register patient ensures authenticated registered interact avail thefeaturesofthesystem 5.1.2connect aim enhance connectivity enable suffering medical condition medical inclination connect similarity relevancy decided basis similarity approach fundamental applying clustering registered patient'sdataconsideringvariousmedicalfactors age gender 10 5.1.4sharinginformation patient approve connection chat hangout providing email address share post post patient patient patient post intended sure passed patient puneinstituteofcomputertechnologyinformationtechnology20152016 19 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network patient create eventually help patient build networkwithotherpatientshavingthesamemedicalinclinations 5.1.5reminders reminder medical event appointment workshop priority reminder moderately display reminder homepagewithdifferentcoloursfordifferentpriorityofthereminders 5.2algorithmforconnectmodule input patientssymptomprofile disease+symptoms/onlysymptoms filterpatientprofilesonthebasisofsimilardiseases 04 05 14 filter patient profile basis matched symptom disease setpriorities sort patient profile highest number matched match symptom 10 patient patientlist received number matched symptom final score number matched symptoms/total number symptom entered expects sorted basis number symptom andage final score considering cross effectonagebynumberofsymptomsmatched puneinstituteofcomputertechnologyinformationtechnology20152016 20 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network compute closeness age factor considered patient profile withtheprofilesfromthepatientlist closenessfactor=1abs age1age2 /max age1 age2 15 factor_age=closenessfactor factor_noofsymptoms number matched symptoms/total number symptomsentered crossovereffect 16 score_age_crossovered_by_noofsymptoms= score_age_normalized 1croosover_factor score_noofsymptoms_normalised*crossover_factor*score_age_normalise final impact_noofsymptoms score_age_crossovered_by_noofsymptoms impact_age score_noofsymptoms_normalised score score=score*100 sortingonthebasisofscore //essentialforswappingwithinthecategory cur_priority==compared_priority cur_num==compared_num cur_score compared_score //swap puneinstituteofcomputertechnologyinformationtechnology20152016 21 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network output sorted patient matched number symptom andage expects sorted basis number symptom andgender sum==sum_next match1_gender.equals currentuser_gender match2_gender.equals currentuser_gender //swap output sorted patient matched number symptom andgender expects sorted basis number symptoms+age+gender sorted patient profile based number symptom age sorting basis gender implemented partially sorted numberofsymptoms+age puneinstituteofcomputertechnologyinformationtechnology20152016 22 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network cur_priority==compared_priority cur_num==compared_num //swap floatdiff= float math.abs cur_scorecompared_score diff 5.0 match1_gender.equals currentuser_gender match2_gender.equals currentuser_gender output sorted patient matched number symptom ageandgender puneinstituteofcomputertechnologyinformationtechnology20152016 23 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network chapter6 resultsandevaluation achieve maximum desired checked number help maximum accurate satisfy thebest.theteststrategiesusedforthetestingoftheprojectare 6.1unittesting share connection tested input sure error individual integrated.thetestswillconsistofdifferentkindsofusersandtheiractivities 6.2whiteboxtesting white box method working opposed functionality i.e.blackbox .in whitebox perspective well programming skill tester chooses input exercise path code determine appropriate output help check source appropriate correcting mistake help white boxtestingiseasier thespecifictestcasestobeusedwillbe authentication authentication password username loggingin complete check enters systemfortheprocessing puneinstituteofcomputertechnologyinformationtechnology20152016 24 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network check relevancy score check score generated correctdependingonallthepatientsdata time complete process finding patient score generation updationofreminders todeletethereminderafter10daysofitbeingposted location check check location map matching enteredbytheuser puneinstituteofcomputertechnologyinformationtechnology20152016 25 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 6.3sortfunctiontesting sorting patient score age gender performance ofsortingalgorithms figure6.1 sortingfunctiontime 6.4matchfunctiontesting figure6.2 matchfunctiontime puneinstituteofcomputertechnologyinformationtechnology20152016 26 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 6.5testingforscorecalculation figure6.3 scoretimevalues puneinstituteofcomputertechnologyinformationtechnology20152016 27 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network chapter7 proposed solves health patient providing platform gain health discussing discussion health lead better understanding person connected facing faced condition he/she physical well psychological manner overpowered interactive approach solution people genuine feedback his/her framework flexible change sure easilyintegratedintheexistingone puneinstituteofcomputertechnologyinformationtechnology20152016 28 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 01 chaitanya kaul ashmin kaul saurav verma comparative study healthcare prediction sponsored 2nd international conference innovationsininformationembeddedandcommunicationsystemsiciiecs15 02 michaelholmes1 jeraldliu huanyinggu andpaologasti `` privacy preservingsymptomstodiseasemappingonsmartphones '' computingsciences universityofscranton departmentofcomputerscience john hopkinsuniversity 03 halukdemirkan `` asmarthealthcaresystemsframework '' universityof washington tacoma 04 www.patientslikeme.com 05 www.symptoms101.com 06 www.ebusinessgems.com/blog/socioeconomicdatabase/database diseasesdisordersillnesses 07 www.rockhealth.com 08 www.webmd.com puneinstituteofcomputertechnologyinformationtechnology20152016 29 uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network 09 fedelucio narducci cataldo musto marco polignano marco de gemmis pasquale lops giovanni semeraro recommender connecting patient doctorsinthehealthnetsocialnetwork 10 yelenayesha vandanap.janeja naphtalirishe yaacovyesha `` personalized decisionsupportsystemtoenhanceevidencebasedmedicinethroughbigdata analytics '' 2014ieeeinternationalconferenceonhealthcareinformatics 11 amir ahmad lipika dey kmean clustering mixed numeric categoricaldata knowledgeengineering63 2007 503527 12 demi cooperadvertisinganddcinteractivegroup http //thesparkreport.com/branding/infographicsocialmobilehealthcare 13 fluencymedia http //blog.fluencymedia.com/wpcontent/uploads/healthcareinfographicweb1 14 people.dbmi.columbia.edu/~friedma/projects/diseasesymptomkb/index.html 15 http //stats.stackexchange.com/questions/70801/howtonormalizedatato01range 16 http //stackoverflow.com/questions/24118968/formulaforrankingbasedontwo factor puneinstituteofcomputertechnologyinformationtechnology20152016 30", "keywords": ["age gender", "doctor hospital", "intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network", "intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network chapter", "matched number", "matched number symptom", "medical condition", "medical profile", "network chapter", "number symptom", "patient matched", "patient matched number", "patient network", "patient profile", "patient score", "puneinstituteofcomputertechnologyinformationtechnology uconnect", "puneinstituteofcomputertechnologyinformationtechnology uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient", "social medium", "social platform", "sonal joshi", "uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient", "uconnect intelligentsystemwithsimilaritybasedapproachtowardscreatingapatient network", "usecase description"], "libraries": [], "languages": ["cs", "io", "javascript", "basic", "html", "java"], "frameworks": ["angularjs"], "dbs": ["mysql"]}, "./reports/project report(37).pdf": {"title": "user adaptive system", "filename": "./reports/project report(37).pdf", "data": "adaptive shubham bohra manish shukla b-80058642 b-80058643 guidance prof. vishal r. jaiswal fulfilment b. e. 411043 affiliated 2014 2015 411043 dissertation adaptive manish shukla shubham bohra b-80058642 b-80058643 record bonafide him/her year 2014-2015 guidance prof. vishal r. jaiswal dr. emmanuel m. hod dr. p. t. examiner _______________________ acknowledgement profoundly grateful prof. vishal r. jaiswal expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing express sincere heartfelt gratitude staff member helped directly indirectly course shubham bohra manish shukla worker fed repetitive nature bit pattern aim automating repetitive analyzing usage pattern lot shoulder involves building logger inbuilt continuously monitor continuously examine analyze recognize pattern automatically depending recognized routine apart scheduling improve experience tweaking kernel setting keywords intelligent logger pattern tweaking cache kernel linux 1 1 1.1 .1 1.2 basic concept ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..2 1.3 ... 2 1.4 application..3 2 4 2.1 ... .. 5 2.1.1 journal paper ... ... .. 5 2.2 existing ... ... ... ... ... ... ... ... 5 2.2.1 preload 6 3 proposed 7 4 3.1 developed ... .. 8 3.2 ... ... ... 8 3.3 aim objectives.. 8 10 4.1 step acquire ... 11 4.2 approach ... 11 5 12 5.1 requirements13 5.2 ... 13 5.3 ... 13 5.4 14 5.5 diagrams15 5.5.1 diagram15 5.5.2 class ... ... ... ... ... ... ... ... ... ... ... ... .16 5.5.3 diagram..17 5.5.4 package diagram18 5.5.5 component ... 19 6 20 6.1 ... ... .21 7 8 6.2 execution23 6.3 testing.26 27 30 8.1 scope.31 8.2 conclusion32 33 5.1 architecture14 5.2 diagram15 5.3 class diagram.16 5.4 diagram..17 5.5 package diagram18 5.6 component diagram..19 6.1 code snippet logger analyzer.21 6.2 code snippet automation 22 6.3 code snippet analyzer logger automation execution.22 6.4 logger execution ... 23 6.5 1 .23 6.6 2 ... 24 6.7 multiple applications.24 6.8 log file created logging.25 6.9 execution analyzer 25 1 1 __________________________________________________________________________ adaptive 1 1 user-adaptive interactive spontaneously adapt individual example interest habit characterize consider broader category smart adaptive computational technique realize user-adaptation ranging data-based machine learning technique theory-based decision theoretic special attention question synergy method developed user-adaptive profitably transferred smart adaptive technique field deserve increased attention connection user-adaptively aim making interaction easier tracking logging his/her attempting react previous history working time reboots named adaptive designed modularly 3 basic component logger log analyzer analyze generate routine implementer generate action based routine associated facilitate working 1.1 brainless fetch execute repeat basic functionality vital functionality provide decide fetched fetched fetching describes ux experience fed fetching repetitive easily working pattern automate increase experience 1.2 basic concept generally doe track event decision based track anticipate going based record 1.3 fast moving save time time energy best previous process scheduling __________________________________________________________________________ adaptive 2 1 context switching motivated achievable extent 1.4 enhance experience lag free experience prioritize process he/she execute startup changing process priority help save lot vital time making correct decision __________________________________________________________________________ adaptive 3 2 2 __________________________________________________________________________ adaptive 4 2 2.1 2.1.1 journal paper discus paper concern topic behavior tuning monitor behavior capture analyze routine interacting process responsive collection tuning 1 /procfilesystems working machine linux /proc analyze tune kernel parameter fly original documentation linux 2. paper increasing efficiency real time linux paper helped parameter tunable parameter 3. paper behavior article provided insight analyze behavior context 4. paper logging mechanism linux unix logger log article consisted pro con existing logging mechanism kernel provided applied logging kernel space 5. source code tutorial built wa avoid re-inventing wheel tune extract tuning purpose save time writing modified rebuilt source __________________________________________________________________________ adaptive 5 2 2.2 existing 2.2.1 preload source program capable caching library frequently __________________________________________________________________________ adaptive 6 3 proposed 3 proposed __________________________________________________________________________ adaptive 7 3 proposed 3.1 developed creating layer track recognizes behavior automate tune enhance experience 3.2 1. linux 2. language 3. bash scripting 4. inbuilt third party creating layer recognize behavior find matching pattern automate tune increase productivity enhancing experience layer comprises built logger analyzer monitor analyze action adaptive responsive better experience process dealt smoothly load proposed designed preference active window process apart priority provided kernel 3.3 aim proposed gui prompt text box current status analysed behaviour action main deal 1. making interactive lag free intervention kernel 2. loading probable ram boot time ranking decided analyser i.e tweak music player volume le night time. 3. loading file ram file intensive job 4. tweaking setting intelligently __________________________________________________________________________ adaptive 8 3 proposed 5. tweaking kernel setting automatically based kernel hard-coded __________________________________________________________________________ adaptive 9 4 4 __________________________________________________________________________ adaptive 10 4 data-based method main source usage acquired interaction current e.g screen visited machine learning technique learn learning technique employed include decision tree probabilistic classifier neural network case-based reasoning specialized text-classification method le frequently larger number employed learned intended applicable general entire group .a popular method collaborative filtering current prediction current 4.1 step acquire linux installation 64 bit kernel min 3.2.69. gain knowledge linux command understanding function execute shell command c. 1 1 finally running 4.2 approach gaining knowledge /proc file process implement logger logger language function implementing shell command logger check log correctly analyzer implemented written shell script direct interaction kernel analyzer create executable file executable file finally execute restarts automation file shut automation file allow profile execute execute file restarted __________________________________________________________________________ adaptive 11 5 5 __________________________________________________________________________ adaptive 12 5 5.1 flavor linux supporting bash shell scripting linux xubuntu kernel 3.2.69 gcc compiler c. linux box linux flavor xdotools zenity installed inbuilt 5.2 minimum p4 processor 512 mb ram 5.3 capable performing independently depending input major include logger logging log current state machine 2 second state includes 1. program 2. process 3. cpu memory utilization process 4. swapiness 5. top 5 process state 6. time day analyzer analyzing analyzes log created logger pattern usage basic criterion depends frequency process time program __________________________________________________________________________ adaptive 13 5 apart criterion context i.e program running record program memory consuming swappiness reduced allow memory le swapping implementer compare default benchmark current status e.g max memory criterion app 15 app memory consuming apps based comparison generates action performed caching file caching actual action 5.4 5.1- __________________________________________________________________________ adaptive 14 5 logged setting changed logger creates log file input analyzer analyzer analyzes tune 5.5 5.5.1 5.2 __________________________________________________________________________ adaptive 15 5 5.5.2 class 5.3 class __________________________________________________________________________ adaptive 16 5 5.5.3 figure5.4 __________________________________________________________________________ adaptive 17 5 5.5.4 package 5.5 package __________________________________________________________________________ adaptive 18 5 5.5.5 component 5.6 component __________________________________________________________________________ adaptive 19 6 6 __________________________________________________________________________ adaptive 20 6 6.1 started writing program logger log log file frequency function execute linux command implementing logger wrote shell script analyzer read logger recognize frequency greater 1. 6.1-code snippet logger analyzer analyzer create shell script named execution executed restarts automation.sh script automatic execution analyzer.sh startup __________________________________________________________________________ adaptive 21 6 6.2-code snippet automation 6.3-code snippet analyzer logger automation execution __________________________________________________________________________ adaptive 22 6 6.2 execution snap 6.4-logger execution 6.5-open 1 __________________________________________________________________________ adaptive 23 6 6.6-open 2 6.7-open multiple __________________________________________________________________________ adaptive 24 6 6.8-log file created logging 6.9-applications execution analyzer __________________________________________________________________________ adaptive 25 6 6.3 unit individually independent higher ultimately lower logger opened keeping frequency count checking frequency log file frequency count analyzer checked correct opened startup automation execution executed analyzer startup coz finally observe frequency higher frequency logged opened startup __________________________________________________________________________ adaptive 26 7 7 __________________________________________________________________________ adaptive 27 7 started working topic wa aim logger month rest laid aug sept dec jan feb 3rd 4th 1st 2nd 3rd 4th 1st 2nd 3rd 4th 1st 2nd 3rd 4th 1st 2nd 3rd 4th 1st 2nd 3rd 4th 1st 2nd topic decided ... ... checked ... prepared review review worked logger started logger ahead resuming 1 logger logger 2 log analyzer 3 log analyzer log analyzer improvement logger improvement analyzer __________________________________________________________________________ adaptive 28 7 mar 1st 3rd 4th 2nd 3rd 4th ... .. 1st half ... ... integrate final product aug sep 2nd half dec jan feb mar 1.topic decided 2.literature 3.review preparation 4.approved review 5.logger 6.module 1 7.module 2 analyzer 8.module 3 analyzer cntd 9.testing 10.integration finish __________________________________________________________________________ adaptive 29 8 8 __________________________________________________________________________ adaptive 30 8 8.1 computational technique computational technique neural network genetic fuzzy logic frequently smart adaptive user-adaptive issue discussion good reason difference potential advantage formalism overlooked designer user-adaptive adaptation general initial approach employed smart adaptive build default initial sort provide adapt course approach le frequently user- adaptive expected worthwhile examine approach applied smart adaptive adapted user-adaptive __________________________________________________________________________ adaptive 31 8 8.2 concluded adaptive experience enhanced spontaneous adaptation feel control approach proposed allowing control general aspect specific aspect behaviour utilization ram optimal __________________________________________________________________________ adaptive 32 1 jaein jeong performance logging embedded uni gnu/linux applicationsieee 2012 2 hong xu rong tang study improvement real time linux kernel 2010 3 www.tlpd.com 4 verbert k. ochoa x. wolpers m. context-aware recommender learning 2012 5 www.kernel.org 6 source code 7 linux man __________________________________________________________________________ adaptive 33", "keywords": ["analyzer analyzer", "analyzer logger", "code snippet", "log analyzer", "log file", "logger log", "prof vishal", "prof vishal jaiswal", "rd th", "shell script", "shubham bohra", "smart adaptive", "vishal jaiswal"], "libraries": [], "languages": ["basic"], "frameworks": ["react"], "dbs": []}, "./reports/Project Report.pdf": {"title": "an intelligent network agent for   securing virtual networks", "filename": "./reports/Project Report.pdf", "data": "intelligent network agent securing virtual network b-80058561 priyanka iyer b-80058568 yashaswini kadam ishita mogra b-80058597 parinita matharu b-80058613 guidance prof. tushar a. rane fulfilment b. e. 411043 affiliated 2014 2015 411043 dissertation intelligent network agent securing virtual network priyanka iyer b-80058561 yashaswini kadam b-80058568 ishita mogra b-80058597 parinita matharu b-80058613 record bonafide him/her year 2014-2015 guidance prof. tushar a. rane dr. emmanuel m. hod dr. p. t. examiner _______________________ 2 acknowledgement profoundly grateful prof. tushar a. rane expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing grateful mr. sandesh sawant vmware allowed geep geek finally express sincere heartfelt gratitude staff member helped directly indirectly course priyanka iyer yashaswini kadam ishita mogra parinita matharu 3 4 advent defined networking sdn method configuring managing enterprise network evolving dramatically networking industry undergoing transition fueled network virtualization paradigm network administrator unprecedented ease control center network infrastructure environment challenge administrator network security perspective propose bridge gap providing intelligent framework built top virtual switch virtual network service eliminate security threat virtual center environment includes exposing traffic entering virtual center network security service firewall intrusion detection prevention crux framework intelligent traffic agent running virtual switch doe operation redirect network passing hypervisor network stack network security reply action based feedback agent designed light- weight linux kernel implement openflow protocol based communicate virtual instance network security order promote vendor-agnostic 5 1. 1.1 1.2 2. 2.1 sdn 2.2 hypervisor 2.3 openflow 2.4 vswitch 2.5 ov controller 3. proposed 3.1 3.2 3.3 3.4 4. 4.1 planning 4.2 role responsibility 4.3 1 2 2 4 5 6 9 10 11 12 13 13 13 14 15 16 16 17 6 5. 5.1 5.2 5.3 5.4 dfd level 6. 6.1 6.2 code snippet 6.2.1 security 6.2.2 sample policy 6.2.3 sample generated log 7. scheduling 7.1 gantt 8. 8.1 8.2 18 19 19 20 25 27 28 28 28 32 32 33 34 35 36 37 38 7 6 8 8 11 16 17 20 21 22 23 24 25 26 34 sdn 1 hypervisor 2 hypervisor understanding vswitch role responsibility 2.1 2.2 2.3 2.4 4.1 4.2 5.1 5.2 5.3 5.4 5.5 5.6 5.7 6.1 gantt state machine dfd level 0 dfd level 1 8 1 1 1.1 defined networking sdn refactors network device control network switch enable flexible predictable network control easier extend network function year router vendor introduced development kit programming network device commercial switch support emerging openflow standard researcher proposed top defined network including dynamic access control server load balancing energy-efficient networking seamless client mobility virtual-machine migration industry group worldwide pursuing aspect defined networking experimental production deployment exist challenge remain switch apis offer greater flexibility compromising performance platform control defined network capitalize programmability network lower barrier creating evaluating transition existing network sdn defined network interoperate existing protocol device 1.2 rapid growth virtual center moving server virtualized cloud-based environment concept saas service iaa infrastructure service popular day day advent defined networking sdn method configuring managing enterprise network evolving dramatically 2 networking industry undergoing transition fuelled network virtualization paradigm network administrator unprecedented ease control center network infrastructure environment challenge administrator network security perspective 3 2 4 2.1 sdn networking foundation onf defined networking sdn network decouples control plane moving control plane network intelligence policy making called controller sdn requires method control plane communicate plane mechanism openflow misunderstood equivalent sdn mechanism fit concept software-defined networking sdn umbrella term encompassing kind network aimed making network flexible virtualized server storage infrastructure modern center sdn allow network engineer administrator respond changing business software- defined network network administrator shape traffic centralized control console touch individual switch deliver service needed network regard specific device server device connected key separation network virtualization automation programmability originally sdn focused solely separation control plane network decision packet network plane network move packet packet arrives switch network rule built switch 's proprietary firmware switch forward packet switch sends packet going destination path -- treat packet exact classic sdn deployment rule packet handling switch controller running server switch aka plane device query controller guidance needed provide traffic handling controller switch communicate controller 's `` south-bound '' protocol called openflow protocol exist 5 2.1 sdn conventional network specialized appliance firewall load balancer software-defined network deploys controller manage plane behavior talk controller `` northbound '' 2014 wa formal standard controller match openflow general southbound 2.2 hypervisors hypervisor virtual machine monitor vmm piece firmware creates virtual machine hypervisor running virtual machine defined host machine virtual machine called guest machine hypervisor guest operating virtual operating platform manages execution guest operating hypervisor controlling host processor allocating needed operating turn making sure guest operating called virtual machine disrupt multiple instance variety operating share virtualized 6 virtualization hypervisor comparison start understand hypervisors market 1 considered bare-metal hypervisor directly top 1 hypervisor referred virtualization engine 2 operates top existing operating 1 hypervisor better performance greater flexibility operates thin layer designed expose virtual machine vms reducing overhead hypervisor 1 hypervisor directly function server 1 hypervisors single-purpose server offer function pool designed support operation multiple vms typically 1 hypervisor efficient 2 hypervisor provide functionality kind vms fact move vm host server running 1 hypervisor running 2 hypervisor vice versa conversion process directly 1 hypervisors support virtualization top operating 2 hypervisors perform virtualization 7 2.2 1 hypervisor 2.3 2 hypervisor 8 2.3 openflow openflow standard enables researcher experimental protocol campus network day openflow commercial ethernet switch router wireless access point standardized hook allow researcher experiment requiring vendor expose working network device openflow currently implemented major vendor openflow-enabled switch commercially classical router switch fast packet forwarding path level routing decision control path occur device openflow switch separate function path portion resides switch high-level routing decision moved separate controller typically standard server openflow switch controller communicate openflow protocol defines message packet-received send-packet-out modify- forwarding-table get-stats path openflow switch clean abstraction entry packet field match action send-out-port modify-field drop openflow switch receives packet matching entry sends packet controller controller decision handle packet drop packet add entry directing switch forward packet openflow allows easily deploy innovative routing switching protocol network virtual machine mobility high-security network generation ip based mobile network openflow environment device communicate sdn/openflow controller support standard openflow protocol sdn controller push change switch/router flow-table allowing network administrator partition 9 traffic control optimal performance start configuration 2.4 vswitch vswitch production multilayer virtual switch licensed source apache 2.0 license designed enable massive network automation programmatic extension supporting standard protocol vswitch multiple product production environment stable release regression suite system-level unit vswitch operate soft switch running hypervisor control stack switching silicon ported multiple virtualization platform switching chipsets bulk code written platform-independent easily ported environment vswitch designed compatible modern switching chipsets ported existing high-fan-out switch allowing flexible control physical infrastructure virtual infrastructure vswitch advantage on-nic switching chipsets functionality matures vswitch source code built linux build experiment vswitch linux machine package linux distribution platform including debian ubuntu fedora download virtualization platform vswitch integrated example download iso xenserver xen cloud platform aware version integrated platform vswitch release 10 2.4 understanding vswitch 2.5 ov controller ovs-controller manages number remote switch openflow protocol causing function l2 mac-learning switch hub control openflow switch openflow connection method pssl port ip ptcp port ip punix file tcp ip port 11 3 proposed 12 3.1 sdn nfv created revival network security solution context virtual center propose solve providing intelligent framework built inside hypervisor kernel secure virtual network existing virtual machine running top solution involves exposing traffic passing hypervisor network security service firewall intrusion prevention crux framework intelligent traffic agent doe operation redirect network passing hypervisor network stack network security reply action based feedback 3.2 vision ensure foolproof security virtual machine spawned single multiple hypervisors assuming marketing prove much- needed vms hypervisors 3.3 focus provide security needed ever-changing domain networking latest advancement virtual networking respect sdn nfs gaping hole security action packet returned word format security written easy understand/modify 13 vms spawned virtual machine manager vmware supported number client vms spawned 3.4 propose solve created sdn providing intelligent framework built inside hypervisor kernel secure virtual network existing virtual machine running top main aim sure light-weight 14 4 15 4.1 planning wa planned comprise 4 phase phase phase 1 studying prerequisite phase 2 installing framework phase 3 coding phase 4 increasing 4.2 role responsibility 4.1 role responsibility 16 4.3 alternative traditional reason opportunity ass direction development lifecycle achieved regular cadence sprint iteration shippable product increment scrum popular introducing agility simplicity flexibility scrum 4.2 emphasizes empirical feedback self-management striving build properly tested product increment short iteration scrum three role product owner scrum master product owner 17 5 18 5.1 virtual machine manager vi editor kernel 3.16 ovs-controller ubuntu 14.04 iso 5.2 32/64 bit linux supporting 8 gb ram 19 5.3 5.1 20 5.2 21 5.3 22 5.4 state machine 23 5.5 24 5.4 dfd level 5.6 dfd level 0 25 5.7 dfd level 1 26 6 27 6.1 start creation bridge port host functioning ovs-controller spawn couple virtual machine virtual machine manager guest ubuntu 14.04 flavor linux step enable internet connectivity virtual machine accomplished ensure inter- connectivity vms append security test-controller server vm step performed packet client vm server vm captured detailed 5-tuple log generated log forwarded security responds action depending policy earlier brings proposed functionality 6.2 code snippet 6.2.1 security include stdio.h include string.h include file.h int check_match char strr 15 char strl 15 int response=1 strcmp strr `` '' ==0 response=1 //directly check entry dst_ip source strcmp strr strl ==0 printf `` \\n '' strr 28 response=1 printf `` \\n '' strr printf `` \\n '' strl response=2 /*rule valid increment rule pointer keep log pointer source ip check log packet row rule*/ return response int main printf `` error '' char temp 30 int response=1 flag=0 long po pos2 file *fpr *fpl /*fpr-for rules.txt fpl-for log.txt*/ char s_ipr 15 s_ipl 15 s_portr 15 s_portl 15 d_ipr 15 d_ipl 15 d_portr 15 d_portl 15 char action 5 pror 15 prol 15 fpr=fopen `` rules.txt '' `` '' fpr==null fpl=fopen `` log.txt '' `` '' fpl==null feof fpl flag=0 pos=ftell fpl fscanf fpr `` '' s_ipr fscanf fpl `` '' s_ipl //source ip-rules file //source ip log printf `` error '' response=check_match s_ipr s_ipl flag==0 response==1 //go dest_ip check fscanf fpr `` '' d_ipr //dest ip-rules file 29 fscanf fpl `` '' d_ipl response=check_match d_ipr d_ipl //dest ip log move rule move log file*/ /* fseek fpl po seek_set fgets temp 60 fpr pos2=ftell fpr fseek fpr pos2 seek_set flag=1 //go check protocol fscanf fpr `` '' pror fscanf fpl `` '' prol response=check_match pror prol flag==0 response==1 fseek fpl po seek_set fgets temp 60 fpr pos2=ftell fpr fseek fpr pos2 seek_set flag=1 flag==0 fscanf fpr `` '' s_portr fscanf fpl `` '' s_portl printf `` s_portr s\\n '' s_portr printf `` s_portl s\\n '' s_portl response=check_match s_portr s_portl response==1 //source port check 30 fseek fpl po seek_set fgets temp 60 fpr pos2=ftell fpr fseek fpr pos2 seek_set flag=1 flag==0 response==1 //destination port check fscanf fpr `` '' d_portr fscanf fpl `` '' d_portl response=check_match d_portr d_portl printf `` pointer ld \\n '' po fseek fpl po seek_set fgets temp 60 fpr printf `` temp '' temp pos2=ftell fpr printf `` position 2 ld\\n '' pos2 fseek fpr pos2 seek_set flag=1 flag==0 response==1 //all coulmns match fscanf fpr `` '' action printf `` packet \\n '' action file-either allow deny*/ pos=ftell fpl printf `` pointer ld \\n '' po pos2=ftell fpr printf `` pointer ld \\n\\n '' pos2 rewind fpr /*whatever 31 pos++ fseek fpl po seek_set fgets temp 60 fpr pos2=ftell fpr pos2++ fseek fpr pos2 seek_set flag=1 //end loop return 0 6.2.2 sample policy 192.168.1.101 74.125.68.95 tcp 53778 443 allow tcp 80 allow 192.168.1.101 54.241.149.121 tcp 45528 443 deny 127.0.0.1 127.10.1.1 udp 3207 53 deny 127.0.0.1 127.0.1.1 tcp 32078 53 allow allow 6.2.3 sample generated log 192.168.1.101 74.125.68.95 tcp 53778 443 192.168.1.101 54.241.149.121 tcp 45528 443 127.0.0.1 127.0.1.1 tcp 32078 53 127.0.0.1 127.10.1.1 udp 3207 53 74.125.236.130 192.168.1.101 tcp 80 37785 32 7 scheduling 33 6.1 gantt representing 34 8 35 8.1 sdn brought plethora advantage surprise brought share security issue intelligent framework designed intend removing security concern sdn existing development efficient sufficient aim enhancing sdn controller hypervisor addition add framework inspect network passing switch employing bro-ids deep packet inspection match configured policy administrator dynamically instant action packet follow entire packet-flow 36 8.2 developing intelligent code security virtual network expect lot concern vanish inspired example client permitted access server blocking server policy lookup network blocking hear factor sdn controller packet dropped forwarded sdn framework depending pre-defined policy 37 1 software-defined networking norm network white paper networking foundation 2 software-defined networking building white paper cisco 3 deep packet inspection net neutrality white paper ipoque 4 ben pfaff keith amadon justin pettit martin casado teemu koponen scott shenker martin casado extending network virtualization layer 5 justin pettit simon crosby ben pfaff jesse gross martin casado virtual switching era advanced edge 38", "keywords": ["center network", "control plane", "defined network", "flag response", "fpl po", "fpl po seekset", "fpr pos", "fscanf fpl", "fseek fpl", "fseek fpl po", "fseek fpr", "fseek fpr pos", "machine manager", "network administrator", "network device", "network security", "network virtualization", "networking sdn", "openflow protocol", "po seekset", "pointer ld", "priyanka iyer", "role responsibility", "sdn controller", "temp fpr", "tushar rane", "virtual center", "virtual machine", "virtual machine manager", "virtual network", "virtual switch", "virtualization platform", "white paper"], "libraries": [], "languages": ["clean"], "frameworks": [], "dbs": []}, "./reports/Projectreport_grpid_39.pdf": {"title": "rdo orchestration using redhat heat", "filename": "./reports/Projectreport_grpid_39.pdf", "data": "rdo orchestration redhat heat chinmay talekar examination seat b120058646 suyeb ansari examination seat b120058507 komal muthal examination seat b120058594 snehal sawale examination seat b120058626 guidance dr. a. m. bagade 2015-2016 rdo orchestration redhat heat mr. suyeb ansari ms. komal muthal ms. snehal sawale examination seat b120058507 examination seat b120058594 examination seat b120058626 mr. chinmay talekar examination seat b120058646 bonafide dr.a m. bagade complete earlier diploma dr. a. m.bagade examiner dr. emmanuel m. rdo orchestration redhat heat wa implemented talekar chinmay vijay ansari suyeb abdulmalik snehal sawale gopal muthal komal trimbakrao ms. pallavi shinde mr. kunal kalas mr. abhishek kumar calsoft internship period month 2015 2016. ms. pallavi shinde calsoft bavdhan ii acknowledgement great pleasure satisfaction presenting rdo orchestration redhat heat express deep sense gratitude parent grandparent teacher friend well-wisher sincere co- operation group mate valuable support imbibed spirit teamwork worked diligently co-ordinated completion difficult special dr. a. m. bagade prof. s. d. pande valuable support calsoft ms. pallavi shinde mr. kunal kalas mr. abhishek kumar valuable support guidance calsoft played crucial role success internship program coming year lastly directly indirectly helped completion seminar suyeb ansari komal muthal snehal sawale chinmay talekar 13 14 15 16 17 18 19 29 33 fig 4.1 4.2 4.3 4.4 4.5 4.6 4.7 5.1 5.2 block heat basic workflow class pert heat orchestration template strategy 2.1 3.1 3.2 6.3.1 6.3.2 6.3.3 market scenario creating heat template ckss dashboard scenario template configuring image flavour rate function point fp scale fp measurement parameter 6 11 12 43 43 43 abbrevations hot api iaa rhel paas saas heat orchestration template program infrastructure service redhat enterprise linux platform service service company acknowledgement abbrevations ii iii iv vi 1 1.1 1.2 1.3 1.4 2 2.1 2.1.1 2.1.2 2.2 2.2.1 3 3.1 3.2 3.3 3.3.1 3.3.2 3.4 4 4.1 4.2 4.3 4.4 title background relevance undertaken background review background cloud computing infrastructure service provider specification definition specification description creating heat temlate ckss dashboard configuring image flavor rate class 1 2 2 2 3 3 4 4 4 5 6 7 9 9 9 10 10 11 12 13 13 14 15 16 4.5 4.6 4.7 5 5.1 5.1.1 5.1.2 5.2 5.3 5.4 5.5 5.6 6 6.1 6.1.1 6.2 6.3 7 7.1 7.2 8 8.1 pert openstack configuration installation openstack installation heat configuration building dashboard horizon setting development environment heat orchestration template step involved creating stack heat template generation billing evaluation output screenshot evaluation function point analisys bibliography 17 18 19 20 20 20 20 21 26 28 30 33 35 35 35 39 40 44 44 44 45 45 rdo orchestration redhat heat openstack source cloud computing platform public private cloud component nova heat keystone horizon neutron provide infrastructure service iaa heat orchestration component openstack provide cloud tenant functionality create cloud infrastructure template format functionality friendly requires tenant write template tedious cloud infrastructure integration dashboard horizon graphical gui designing heat template provision bill generation template written manually purpose provide solution current openstack heat template generation billing friendly graphical heat template automatically generated billing rating pricing generates bill direct payment bill keywords iaa openstack orchestration heat techonology 2015-16 1 rdo orchestration redhat heat 1. 1.1 background cloud computing emerging field today relocate virtualized service internet lower cost cloud employ service paas saas iaa employing cloud based solution challenge faced challenge providing infrastructure service iaa managing co-coordinating complex service arduous complex cloud environment involves interconnecting process running heterogeneous location cloud orchestration proposed solution involves process automate configuration co-ordination interaction prominent vendor cloud orchestration component eucalyptus flexiant ibm microsoft vmware 2 1.2 relevance existing solution orchestration developed company puppet lab incorporated acquisition mcollective message bus approach solution issue openstack developing diverse community developer partner traditional/open source company 1 eucalyptus closely aligning amazon cloud working canonical bring eucalyptus mass benefit orchestration heat developed open-source modify addition existing free license cost cloud reduces drastically techonology 2015-16 2 rdo orchestration redhat heat 1.3 undertaken heat template describes infrastructure cloud text file readable writable human checked version control infrastructure described include server floating ip volume security group heat auto scaling service integrates ceilometer include scaling group template ceilometers main reliably collect measurement utilization physical virtual comprising deployed cloud heat comprises python heat-api heat-api-cfn heat-engine 5 perform orchestration heat main openstack orchestration program implement orchestration engine launch multiple composite cloud based template form text file treated code heat solve orchestration apart heat rdo easy install deploy up-to-date openstack component industry 's trusted linux platform red hat enterprise linux 3 rhel derivative fedora centos fill gap orchestration solution company vmware openstack ibm nimbula puppet lab gale offered source well commercial product solution target approach vision example cloud.com building openstack add unique capability opscode started popular chef source integration framework powerful solution designed small well 1.4 organized 2 background 3 4 state function point techonology 2015-16 3 rdo orchestration redhat heat 2. background review 2.1 background based paper paper understand ultimately help build product 2.1.1 cloud computing cloud computing boom field development modification modern previous age development create local server keep local server local server local crash entire crashed automatically wa overcome concept cloud computing wa brought action brand company google microsoft facebook started cloud day bulk term cloud computing partly cloud image represent internet networked environment dont care cloud depend reliably sending receiving cloud computing associated higher level abstraction cloud pipe router server service underlying networking course higher level service capability build service compute service doesnt care implemented managed access level reliability techonology 2015-16 4 rdo orchestration redhat heat meet cloud computing accessing service needed perform function dynamically changing service developer request access cloud specific endpoint named cloud manages multiple infrastructure multiple consists framework overlaid top infrastructure tying 2 2.1.2 infrastructure service infrastructure service iaa three fundamental service cloud computing alongside platform service paas service saas cloud computing service access computing virtualized environment cloud public connection internet iaa computing provided virtualized word computing infrastructure definition includes offering virtual server space network connection bandwidth ip address load balancer physically pool pulled multitude server network distributed numerous center cloud provider responsible maintaining client hand access virtualized component order build platform 2 salient example iaa utilized enterprise 1. enterprise infrastructure business network private cloud virtual local area network utilize pooled server networking business store operate day-to-day expanding business scale infrastructure growth whilst private cloud accessible business protect storage transfer sensitive business handle 2. cloud hosting hosting website virtual server founded pooled underlying physical server website hosted cloud example benefit redundancy provided vast network techonology 2015-16 5 rdo orchestration redhat heat physical server demand scalability deal unexpected demand website 3. virtual center vdc virtualized network interconnected virtual server offer enhanced cloud hosting capability enterprise infrastructure integrate operation private public cloud 2.2 company reporte technolog advance network average usage managemen service time year amazon 54 proprietary good 5+ web service microsoft 6 proprietary good 4 azure unavailable linux rackspac 12 openstack adequate hp ibm google 4 4 4 openstack good openstack good proprietary adequate 2.1 market 5+ 2 5+ 2 techonology 2015-16 6 rdo orchestration redhat heat 2.2.1 provider current public cloud provider amazon- aws continues dominant player cloud computing amazon company offer cloud service 2006. aws cost effective pay-as-you- scale cloud capacity paying price offer additional iaa service integrated valuable startup requiring quick cheap processing storage aws general provider operate independently convenient normal operation risky occur extensive support premium awss competitor offer standard microsoft azure- azure entered cloud iaa market 2010. market share good candidate market position area offer compute storage service iaa provider allows full control virtual machine additionally azure ui easy window administrator azure offering newer amazon rackspaces preview mode networking security gap rackspace- rackspace founder openstack describe major player source cloud iaa host half fortune 500 company datacenters focusing smes small-to-medium enterprise rackspace inexpensive intuitive cloud optional managed service easy-to-use control panel suit smes guarantee extensive support limited pricing option providing month-to-month subscription doesnt offer specialized service techonology 2015-16 7 rdo orchestration redhat heat google- google appengine wa pioneer cloud computing paas google compute engine iaa market google number physical server global infrastructure good candidate google compute engine well integrated google service google cloud sql google cloud storage group deal secugoogle compute engine well suited warehousing high- performance computing analytics-focused main doesnt integrate administrative download extra package 2 hp- hp iaa game launched service 2012. public cloud hp cloud compute built openstack offer range cloud- product service good candidate positioning server market iaa offering server market iaa offering clouds.hp cloud compute good solution integrating existing infrastructure public-cloud service invest hybrid cloud ibm- ibms size knowledge datacenters an-other player consider ibm cloud offer core computing storage service iaa best enterprise heavy data-processing security concern processing security combination security administrator focus limited medium-to-large enterprisesand enterprise main provider ibm techonology 2015-16 8 rdo orchestration redhat heat 3. specification 3.1 definition heat orchestration component openstack provide cloud tenant functionality create cloud infrastructure template format functionality friendly requires tenant write template tedious cloud infrastructure integration dashboard horizon graphical gui designing heat template provision bill generation purpose provide solution current openstack heat template generation billing 3.2 specification heat main openstack orchestration program implement orchestration engine launch multiple composite cloud based template form text file treated code heat template describes infrastructure cloud text file readable writable human checked version control infrastructure described include server floating ip volume security group .heat auto scaling service integrates ceilometer include scaling group template .templates e.g volume connected server enables heat call openstack apis create entire infrastructure correct order techonology 2015-16 9 rdo orchestration redhat heat completely launch heat manages lifecycle change infrastructure simply modify template update existing stack heat change delete finished heat manages infrastructure template integrate well configuration puppet chef 3.3 description 3.3.1 creating heat template ckss dashboard 01 generating heat template description openstack installation actor pre-conditions admin provided dashboard ip address help admin dashboard creating heat template configuring rate admin tenant admin install openstack admin keypair main description click create stack button ckss dashboard form generating template fill click submit button create template automatically alternative description text editor techonology 2015-16 10 rdo orchestration redhat heat ip address provided admin opening dashboard help dashboard admin add image openstack post-conditions template generated automatically saved server local folder well input heat engine frequency time launching stack ckss dashboard 3.1 scenario creating heat template ckss dashboard 3.3.2 configuring image flavor rate 02 configuring rate description openstack installation actor pre-conditions admin access configure rate panel panel visible tenant help configure rate tab admin rate image well flavor rate updated database admin admin install openstack admin main description click configure rate panel admin tab rate image rate flavor button clicking button respective image flavor select techonology 2015-16 11 rdo orchestration redhat heat image flavor rate price box click submit button alternative description cloud kitty ip address provided admin opening dashboard help dashboard admin rate post-conditions rate image flavor frequency time setting rate 3.2 scenario template configuring image flavor rate 3.4 openstack stable kilo virtual box 5.0.0.1 ubuntu 14.04. devstack rabbit mq server 8gb ram 40gb hard-disk programming language python django mysql techonology 2015-16 12 rdo orchestration redhat heat 4. 4.1 dashboard ckss dashboard openstack horizon dashboard visible admin well tenant help ckss dashboard provide input template generator generating template template image flavor network keypair mobile number email address help template generator template generated stored local folder server well template input heat engine help heat cli 4.2 explanation launch stack working heat engine heat engine launch stack output virtual bill fig 4.1 block techonology 2015-16 13 rdo orchestration redhat heat 4.2 heat openstack incubated orchestration openstack allows describing cloud infrastructure composed called stack text file called template heat expose api client send template heat engine parse communicate openstack service deploy create stack heat auto scaling availability stack automatically add destroy virtual machine workload restart service working correctly fig 4.2 heat basic workflow component 1. stack 2. template 3. heat-api 4. cloudwatch api 5. heat-cli 6. heat engine techonology 2015-16 14 rdo orchestration redhat heat 4.3 class class play role clear openstack component function exhibit clear function create instance component openstack class serf provide nave working fig 4.3 class techonology 2015-16 15 rdo orchestration redhat heat 4.4 identify factor influencing interacting actor higher functionality adding tenant creating template launch stack openstack openstack installation admin provided dashboard ip address help admin dashboard add tenant assign well role newly created tenant help create template functionality tenant well admin create template stack launched bill tenant mail-id fig 4.4 techonology 2015-16 16 rdo orchestration redhat heat 4.5 graphical representation workflow stepwise action support choice iteration concurrency workflow basically provided automatic template generator billing service tenant openstack dashboard help provided password access ckss dashboard ckss dashboard form generating template entered template generator template generator generate template save server local folder well input heat engine heat cli launching stack heat engine accept parse communicate openstack component launching stack stack launch well file path local folder path stored database reusability purpose bill generated help pyfpdf api mail-id smtplib python library fig 4.5 techonology 2015-16 17 rdo orchestration redhat heat 4.6 capture time message object collaboration describes object message object tenant horizon ckss dashboard template generator heat mysqldb pyfpdf smtplib message template creation bill provision fig 4.6 techonology 2015-16 18 rdo orchestration redhat heat 4.7 pert pert describes planning scheduling day fig 4.7 pert techonology 2015-16 19 rdo orchestration redhat heat 5. 5.1 openstack configuration installation openstack installation ubuntu 14.04 lts installation openstack component installed default configured separately step installation configuration respective topic 5.1.1 openstack installation step openstack installation i. ii install vbox window load ubuntu 14.04 lts iso image iii update command sudo apt-get update iv install git fire command sudo apt-get install git v. clone openstack devstack command git clone http //git.openstack.org/openstack-dev/devstack vi change directory devstack stack.sh cd devstack ./stack.sh 5.1.2 heat configuration openstack installation configure component openstack installed default step configuring orchestration i.e heat component openstack i. heat configuration add local.conf file cut file devstack directory techonology 2015-16 20 rdo orchestration redhat heat enabled_services+= heat h-api h-api-cfn h-api-cw h-eng ii adding stack.sh cd devstack ./stack.sh 5.2 building dashboard horizon horizon custom command create typical base dashboard command location run_tests.sh file resides generates boilerplate code mkdir openstack_dashboard/dashboards/mydashboard ./run_tests.sh -m startdash mydashboard -- target openstack_dashboard/dashboards/mydashboard mkdir openstack_dashboard/dashboards/mydashboard/mypanel ./run_tests.sh -m startpanel mypanel -- dashboard=openstack_dashboard.dashboards.mydashboard -- target=openstack_dashboard/dashboards/mydashboard/mypanel notice directory mydashboard automatically populated file dashboard mypanel directory automatically populated file panel step 1 defining dashboard techonology 2015-16 21 rdo orchestration redhat heat dashboard.py file notice code automatically generated django.utils.translation import ugettext_lazy import horizon class mydashboard horizon.dashboard `` mydashboard '' slug `` mydashboard '' panel add panel default_panel '' slug dashboard 's default panel.horizon.register mydashboard dashboard change thedashboard.py file example change dashboard `` dashboard '' dashboard class display dashboard slugattribute referenced component panel default panel cover add panel step 2 creating panel well create panel call panel described mypanel directory openstack_dashboard/dashboards/mydashboard mypanel __init__.py techonology 2015-16 22 rdo orchestration redhat heat models.py panel.py template mypanel index.html tests.py urls.py views.py step 3 defining panel panel.py file referenced special meaning dashboard listed panel dashboard class auto-discovered thepanel.py file directory bit magical thoroughly vetted djangos admin codebase panel.py file auto-generated code django.utils.translation import ugettext_lazy import horizon openstack_dashboard.dashboards.mydashboard import dashboard class mypanel horizon.panel `` mypanel '' slug `` mypanel '' dashboard.mydashboard.register mypanel techonology 2015-16 23 rdo orchestration redhat heat panel change panel.py file example change panel `` panel '' dashboard.py file insert code mydashboard class code defines mygroup class add panel called mypanel class mygroup horizon.panelgroup slug `` mygroup '' `` group '' panel 'mypanel modify mydashboard class include mygroup add mypanel default panel class mydashboard horizon.dashboard `` dashboard '' slug `` mydashboard '' panel mygroup add panel default_panel 'mypanel slug default panel completed dashboard.py file django.utils.translation import ugettext_lazy import horizon class mygroup horizon.panelgroup techonology 2015-16 24 rdo orchestration redhat heat slug `` mygroup '' `` group '' panel 'mypanel class mydashboard horizon.dashboard `` dashboard '' slug `` mydashboard '' panel mygroup add panel default_panel 'mypanel slug default panel horizon.register mydashboard step 4 enable dashboard order dashboard existing dashboard admin horizon create file called _50_mydashboard.py openstack_dashboard/enabledand add dashboard horizon 'dashboards dashboard 'mydashboard dashboard setting disabled installed_apps add_installed_apps 'openstack_dashboard.dashboards.mydashboard step 5 check dashboard horizon port techonology 2015-16 25 rdo orchestration redhat heat ./run_tests.sh -- runserver 0.0.0.0 8877 http // server 8877 browser admin dashboard left side horizon click group expand panel click panel side panel display instance tab instance dont instance havent created instance dashboard image select small image example cirros-0.3.1-x86_64- uec click launch enter instance click button launch create instance openstack devstack correctly creation instance dashboard check 5.3 setting development environment step 1 virtual environment install prerequisite package ubuntu tested 12.04-64 14.04-64 sudo apt-get install python-dev libssl-dev python-pip git-core libmysqlclient-dev libpq- dev libffi-dev libxslt-dev step 2 running unit unit default inside virtualenv .venv directory unit ./run_tests.sh techonology 2015-16 26 rdo orchestration redhat heat time asked create virtual environment hit virtual environment ... create y/n step 3 manually installing virtual environment manually install virtual environment run_tests.sh python tools/install_venv.py install python package listed requirements.txt file virtualenv additional package pip setuptools installed thetools/install_venv.py file virtualenv activate virtualenv extent current shell session source .venv/bin/activate step 4 installing package virtual environment 1. mysqldb activating virtual environment install package sudo apt-get install python2.7-mysqldb local/lib/python2.7/site-packages 2. pypdf activating virtual environment install package inside virtual environment site-packages git clone www.github.com/reingart/pyfpdf.git cd pyfpdf python setup.py install techonology 2015-16 27 rdo orchestration redhat heat 5.4 heat orchestration template hot template format meant replace heat cloud formation- compatible format cfn native format supported heat time specification explains element hot template format example driven writing hot template heat orchestration template hot hot considered reliable supported standardized icehouse 2014 release heat core improvement standard backward compatible template format versioned juno release heat support multiple version hot specification 6 hot template defined yaml follow outlined heat_template_version 2015-04-30 description description template parameter_groups declaration input parameter group order parameter declaration input parameter declaration template techonology 2015-16 28 rdo orchestration redhat heat output declaration output parameter 1. heat_template_version fig 5.1 heat orchestration template key 2013-05-23 indicates yaml document hot template version 2. description optional key allows description template workload deployed template 3. parameter_groups allows input parameter grouped order provide parameter optional 4. parameter allows input parameter provided instantiating template optional input 5. declaration single template defined hot template template instantiated 6. output allows output parameter template instantiated optional output techonology 2015-16 29 rdo orchestration redhat heat 5.5 step involved creating stack step 1 confirming access heat endpoint heat command cloud credential sourced sourceopenrc confirm heat command heat stack-list return empty step 2 preparing create stack cloud flavor image launching instance discover running openstack flavor openstack image step 3 generate keypairs allow ssh instance launched heat keypair generated openstack keypair create heat_key heat_key.priv chmod 600 heat_key.priv techonology 2015-16 30 rdo orchestration redhat heat step 4 launching stack launch stack example template heat-templates repository load template demonstration example template heat stack-create -u http //git.openstack.org/cgit/openstack/heat- templates/plain/hot/f20/wordpress_native.yaml -p key_name=heat_key -p image_id=my-fedora-image -p instance_type=m1.small teststack respond -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- status created -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- uuid teststack create_in_progress timestamp -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- step 5 stack stack tenant heat stack-list step 6 stack event event stack techonology 2015-16 31 rdo orchestration redhat heat heat event-list teststack step 7 describe wordpress stack detailed state stack heat stack-show teststack note second stack_status change in_progress create_complete step 8 verify instance time install repository minute wordpress instance running state point web browser location websiteurl output heat output-show websiteurl= heat output-show -- format raw teststackwebsiteurl curl websiteurl step 9 delete instance note operation running stack heat stack-delete teststack heat stack-list techonology 2015-16 32 rdo orchestration redhat heat 5.6 heat template generation billing additional dashboard existing openstack environment named i. ckss dashboard ii pricing panel admin dashboard complete stepwise workflow fig 5.2 strategy strategy explained 1. template generator ckss dashboard includes panel named template generator panel button named create stack provided clicking button form popped-up includes basic launch stack image flavor key network accepted clicking submit button file generated file generated heat orchestration template launch stack template stack launched automatically generating template file file handling file generated proper standard techonology 2015-16 33 rdo orchestration redhat heat format stack created template file named stack- random number generating time stack launched 2. pricing likewise template generator panel panel named pricing inside admin dashboard panel button provided rate image flavor stored backend i.e database setting rate image flavor admin tenant admin privilege access panel stack created instance launched rate respective image flavor fetched database rate number instance launched bill generated pdf format generation bill invoice pyfpdf api generate pdf file format generated invoice attachment email registered email-id purpose smtplib api adding dashboard panel existing environment openstack setup virtual environment setting environment dashboard panel apis installed inside virtual environment gui created django 1.7 bootstrap techonology 2015-16 34 rdo orchestration redhat heat 6. evaluation 6.1 current openstack provision automatic heat template generator well billing provided ckss dashboard help dashboard openstack automatically generate template billing provided based requested bill automatically generated mail-id billing purpose rate image flavor configure rate panel openstack admin tab help panel admin rate 6.1.1 output screenshot 1. configured openstack environment compile restart restart devstack directory rejoin script directory cd devstack ./rejoin.sh 2. navigate horizon directory start django server port number 8877 cd opt/stack/horizon ./run-tests.sh runserver 0.0.0.0 8877 3. server started web browser openstack address port number 10.0.2.15 8877 techonology 2015-16 35 rdo orchestration redhat heat 4. credential displayed 5. logging pricing tab inside admin tab ckss dashboard tab pricing tab displayed logged admin privilege techonology 2015-16 36 rdo orchestration redhat heat 6. configure rate image flavor inside admin tab click pricing rate flavor click rate flavor button enter click submit button operation performed rate image rate denotes price updated database 7. create stack click ckss dashboard tab select stack template generator click create stack button form enter field entered click submit button display message file created template file generated .yaml extension stored folder templatefiles directory techonology 2015-16 37 rdo orchestration redhat heat 8. hot heat orchestration template file generated operation launched heat component openstack view stack created template file inside orchestration tab tab techonology 2015-16 38 rdo orchestration redhat heat invoice requested email address mentioned form opened clicking create stack button invoice rate image flavor entered pricing tab copy invoice stored folder bill directory 6.2 evaluation performance tested deploying number instance openstack constraint demonstrated small scale instance deployed achieved deployment instance heat orchestration template primary instance generated checked assigned ip address instance instance adding image automate process openstack addition instance openstack appropriate security provision checked key pair generated communicating instance provide cloud orchestration techonology 2015-16 39 rdo orchestration redhat heat scale 100 cloud e.g vms .it perform simultaneous execution orchestration procedure safely access example simultaneous spawning vms compute server exceed physical memory limit server 6.3 function point 6.3.1 function point function point `` unit measurement '' express amount business functionality function pint compute size measurement fsm identified categorized output inquiry input file function identified categorized assessed complexity assigned number function point map end- business function entry input query inquiry distinction function measured function point map easily oriented hide function require implement 6.3.2 function point function point structured technique method break smaller components.so better understood analyzed function point unit measure function point divided class general characteristic function point iso recognized method measure size function size reflects amount functionality relevant recognized business independent techonology 2015-16 40 rdo orchestration redhat heat implement function point metric provide standardized method measuring function function point metric measure functionality point view basis request receives return three class component input output inquiry component transact file called transaction logical file file stored combined form logical general characteristic ass general functionality 6.3.3 function point function point provide mechanism track monitor creep function point count code compared function point count compared function point delivered grown creep amount growth indication well gathered communicated amount growth decline time natural improved measure functionality request receives measure development maintenance independently simple minimize overhead measurement process consistent measure 6.3.4 major component common interact boundary drawn measured prior classifying component techonology 2015-16 41 rdo orchestration redhat heat boundary drawn 's point view short boundary indicates border measured domain border established component classified ranked tallied 6.3.4.1 input ei elementary process cross boundary inside input screen maintain logical file control business control doe update logical file transactional function allows maintain logical file ilf 's ability add change delete 6.3.4.2 output eo elementary process derived pass boundary inside additionally eo update ilf creates output file created logical file file transactional function ability produce output 6.3.4.3 inquiry ei elementary process input output component retrieval logical file file input process doe update logical file output side doe derived 6.3.4.4 logical file ilf 's identifiable group logically resides entirely boundary maintained input function allows utilize responsible maintaining logical grouping maintained referred logical file ilf techonology 2015-16 42 rdo orchestration redhat heat measurement parameter count weighting factor total number input number output number inquiry number file number 6 4 5 5 2 count 4 average 7 complex 4 average 10 average 7 average 24 28 20 50 14 136 6.3.1 function point rating factor fi i=1 14 scale 0 5 0 1 2 3 4 5 influence incidental moderate average essential 6.3.2 fp scale f1 doe require reliable backup recovery f2 f3 distributed processing function f4 performance critical f5 existing heavily utilized environment f6 doe require on-line entry f7 doe on-line entry require input transaction built multiple screen operation f8 master file updated on-line f9 input output file inquiry complex f10 processing complex f11 code designed reusable f12 conversion installation included f13 designed multiple installation f14 designed facilitate change ease input 6.3.3 fp measurement parameter 2 4 0 4 4 1 1 0 5 4 4 3 0 4 137 fp techonology 2015-16 43 rdo orchestration redhat heat 7. 7.1 add extra current openstack dashboard openstack automatically generate template file writing template manually create stack panel configuring rate admin access panel invoice generated requested respective cost generated invoice respective requesting 7.2 component openstack heat template generator billing automatic hot template file generation automatic launching stack invoice generation enhancement 1. add additional parameter uptime stack billing purpose 2. provide automatic shutdown instance basis uptime requested techonology 2015-16 44 rdo orchestration redhat heat 8. 1 nicolas serrano gorka gallardo josune hernantes infrastructure service cloud published society 2 changbin liu dissertation science automated cloud orchestration 3 http //www.openstack.org/software/start 4 http //wiki.openstack.org/wiki/heat 5 http //www.rdoproject.org/ 6 http //heat-api.org/ 7 http //github.com/openstack/heat 8 http //docs.openstack.org/developer/heat/template_guide/hot_spec.html hot- spec 8.1 bibliography 1 tim mather subro kumarswamy shahed latif cloud security privacy orilly publication 2009 2 anthony t. velte toby j. velte robert elsenpeter cloud computing practical approch mc- graw-hill publication 2010 3 judith hurwitz robin bloor marcia kaufman fern halper cloud computing dummy wiley publishing inc. 2010 4 adnan ahmed siddiqui openstack orchestration packt publishing limited 2015 5 kevin jackson cody bunch egle sigler openstack cloud computing cookbook packt publishing limited 2015. techonology 2015-16 45", "keywords": ["abhishek kumar", "admin dashboard", "admin rate", "admin tab", "auto scaling", "cd devstack", "chinmay talekar", "ckss dashboard", "ckss dashboard tab", "class mydashboard", "click submit", "click submit button", "cloud based", "cloud computing", "cloud infrastructure", "cloud orchestration", "configure rate", "configure rate panel", "configuring image", "configuring image flavor", "configuring rate", "current openstack", "dashboard class", "dashboard help", "dashboard horizon", "dashboard panel", "dashboard tab", "dashboardpy file", "default panel", "djangoutilstranslation import", "djangoutilstranslation import ugettextlazy", "elementary process", "engine launch", "examination seat", "file ilf", "flavor rate", "function point", "generating template", "generator billing", "good candidate", "heat configuration", "heat engine", "heat orchestration", "heat orchestration template", "heat stacklist", "heat template", "heat template ckss", "heat template generation", "hot template", "image flavor", "image flavor rate", "import horizon", "import ugettextlazy", "import ugettextlazy import", "infrastructure service", "infrastructure service iaa", "input heat", "input heat engine", "ip address", "komal muthal", "local folder", "logical file", "logical file ilf", "mydashboard dashboard", "mydashboard panel", "mypanel slug", "openstack component", "orchestration component", "orchestration heat", "orchestration template", "panel defaultpanel", "panel panel", "panelpy file", "physical server", "rate image", "rate image flavor", "rate panel", "rdo orchestration", "redhat heat", "service iaa", "snehal sawale", "stack button", "stack heat", "submit button", "suyeb ansari", "template ckss", "template ckss dashboard", "template file", "template generation", "template generator", "template generator billing", "text file", "ugettextlazy import", "ugettextlazy import horizon", "valuable support", "virtual environment", "virtual server"], "libraries": [], "languages": ["basic", "small", "curl", "python"], "frameworks": ["django"], "dbs": ["mysql"]}, "./reports/Report GroupID-19.pdf": {"title": "statistical analysis of log   files in apache server", "filename": "./reports/Report GroupID-19.pdf", "data": "statistical log file apache server ajay bendhale kamlesh gandhi shivshankar mandge siddharth dalal b80058514 b80058545 b80058593 b80058644 guidance prof. s.s. pathak b.e 2015 411043 affiliated 2014- 2015 acknowledgement undertaking nal year mountainous requires assistance interesting motivating learning professional easy .in blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting profoundly grateful prof. s. s. pathak expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing grateful mr. kunal shah e-zest pvt.ltd allowed company express sincere heartfelt gratitude staff member helped directly indirectly course ajay bendhale kamlesh gandhi shivshankar mandge siddharth dalal paper describes implemented apache mahout categorize error log file coming apache log server requires manual training produce form category kind categorization help identify error issue performance issue issue visual representation issue form graph bar graph pie help determine major issue corrective measure corrective measure enhance performance server meeting client faster accurate keywords apache server apache mahout error log elastic search kibana ch 1 introduction1 1.1 2 1.2 basic concepts.2 1.2.1 machine learning ... 2 1.2.2 apache server ... .2 1.2.3 log files.3 1.2.4 apache mahout..4 1.2.5 elastic search ... ..4 1.2.6 json..4 1.2.7 kibana ... 5 1.3 ... 5 2 survey6 3 2.1 traditional syslog-ng classifier 7 2.2 web usage ... .8 2.3 warehouse.9 proposed work.10 3.1 ... ..11 3.2 scope..11 4 3.3 features..11 3.4 ... .12 methodology13 4.1 step acquire process..14 4.2 approach ... .14 4.3 modules..15 4.3.1 1 ... 15 4.3.2 2 ... 15 4.3.3 3 .15 5 design..17 5.1 tools18 5.2 ... 18 5.3 ... 18 5.3.1 ... 19 5.4 diagrams..20 5.5 database ... ..24 6 implementation25 6.1 step ... .26 6.1.1 installation ... 26 6.1.2 cleaning parsing..27 6.1.3 training ..27 6.1.4 conversion json ... 31 6.1.5 elasticsearch operations..32 6.1.6 kibana visualization ... 32 6.2 snapshot ... .33 6.3 ... .36 6.3.1 unit testing..36 6.3.2 integration ... 37 scheduling 38 40 8.1 ... .. 41 8.2 scope.. 41 references.42 7 8 9 5.1 19 5.2 level 0 20 5.3 level 1 20 5.4 21 5.5 timing 22 5.6 23 5.7 deployment 24 6.1 count issue occurring month 33 6.2 severity distribution .. 34 6.3 distribution client ip address generating error log 35 5.1 error log 24 7.1 scheduling 39 1 1 statistical log file apache server 10 1 1.1 kind log error log access log developed apache server worked log semi structured uncategorized reading understanding difficult categorization log arises simpler server administrator identify achieved machine learning machine learning evolved year learning sort observation better wa experienced machine learning concept applied implemented apache mahout categorize error log file coming apache log server kind categorization help identify error visual representation issue help determine major issue corrective measure help enhancing performance server meeting client better 1.2 basic concept mentioned apache server includes log file apache access log error log error log file main concern error log file semi- structured format file directly applied apache mahout restructured tab separated file format 4 categorize file three major issue based training generated stored elastic search outcome converted json format elastic search serf kind nosql database indexing operation file improve query processing categorization error log file visually help graph kibana help analyze corrective measure statistical log file apache server 11 1 1.2.1 machine learning machine learning defined field study ability learn explicitly programmed word allows handle situation training observation experience automatic speech face recognition natural language processing email spam detection medical diagnostics 2 1.2.2 apache server server apache server 6 server accepts request client responds failed fulfill client request responds error message distinct popular source i.e source code visible individual adjust optimize code error security hole people add write apache small website website serving regular visitor serve static dynamic 1.2.3 log file log file 3 file keep record event happening operating runs.apache server log directory includes access log file error log file access log file keep track event server processing request client error log file keep record error occurring server issue performance issue 1 statistical log file apache server 12 1 1.2.4 apache mahout library free scalable machine learning area collaborative filtering clustering classification implemented hadoop platform 2 collaborative filtering behavior read recommendation clustering text document group group topically document classification classify document existing categorized document 1.2.5 elastic search elastic search search server search kind document scalable real time search support multitenancy elasticsearch flexible powerful source distributed real-time search analytics engine architected ground distributed environment reliability scalability elasticsearch ability move easily simple full-text search robust apis query dsl client popular programming language elasticsearch delivers limitless promise search 1.2.6 json json javascript object notation standard format human- readable text transmit object consisting attributevalue pair transmit server web alternative xml originally derived javascript scripting language json language-independent format code parsing generating json programming language json standard language-independent array object universally recognized supported modern programming language familiar programmer ideal format interchange web statistical log file apache server 13 1 1.2.7 kibana kibana gui searching log stored elasticsearch db.kibana lightweight written ruby accessible http searching reporting functionality benefit shape better understand volume easily create bar scatter plot histogram pie map sophisticated analytics leverage power elasticsearch analytics capability analyze intelligently perform transformation slice dice fit flexible easy share easily create save share embed visualized quick smart 1.3 kind graphical visualization server administrator analyze performance server detect security incident examine detect policy violation auditing forensic situation statistical log file apache server 14 2 2 statistical log file apache server 15 2 2.1 traditional sys-logng classifer traditionally classifying log message syslog log file utility syslog-ng seek processing syslog daemon simpler syntax describing log message fast mechanism recognizing message classification syslog-ng decrease log file post-analysis help ease burden administrator main central syslog-ng log server collect message client route message appropriate destination depending received header syslog message log message filter build complex tree-like log route 4 syslog-ng compare received log message predefined message pattern syslog-ng identify exact log message assign class message describes event triggered log message traditional approach identify log message regular expression syslog-ng pattern database radix tree advantage classifying message fast faster method based regular expression speed processing message practically independent total number pattern matter length message number '' '' message affect number junction radix tree regular-expression based method increasingly slower number pattern increase radix tree scale well small number simple comparison performed parse message syslog-ng message pattern easy write understand maintain statistical log file apache server 16 2 2.2 web usage web growing dominant platform retrieving discovering knowledge web web stored web server log file web usage web usage mining web log mining click stream process extracting knowledge web server log database log query client side cooky profile order analyze web behavior web usage requires abstraction pattern discovery abstraction achieved preprocessing paper format web server log file web server log preprocesses web usage 1 paper explains preprocessing web log web usage step processing systematic includes preprocessing pattern discovery pattern preprocessing include cleaning identification session identification path completion transaction step step help moving direction 1 web advertisement international area foundation institution suitability w3c standard 5 web administrator web designer paper provided preprocessing step essential performing web usage critical carry business commerce web highly essential administrator web site creator characteristic enormous number access web analyzer examine server log file identifying navigation pattern number method proposed researcher web usage mining paper presented format web server log file process web usage statistical log file apache server 17 2 2.3 warehouse analyzing web log usage access trend provide web site developer administrator help creating adaptive web site existing generate xed web log typically allow ad-hoc query discover hidden pattern access embedded access log describe relational olap rolap approach creating web-log warehouse populated web log well mining web log discus criterion inuenced choice dimension fact granularity web based ad-hoc analytic query warehouse wa developed performance specic experiment performed warehouse paper warehouse web log prior sit creates combined warehouse raw access log well mined cluster representing access pattern allows analytic query access log mined access pattern built top cot relation database oracle doe require specialized multidimensional dbms web based front allows preformatted query well possibility ad-hoc querying warehoused tradeoff involved experimental study experimental statistical log file apache server 18 3 proposed 3 proposed statistical log file apache server 19 3 proposed 3.1 categorization log file coming apache http server mahout based category issue performance issue issue 3.2 vision ensure server administrator detailed picture performance apache server issue performance health server corrective measure collect error log file generated apache server analyze block level classify visualized 2d change file format applicable file 3.3 focus apache server administrator created named apache log file emphasize basic server administrator classification efficiently cleaning memory utilized efficiently elastic search easy storage variable sized query processing faster visualized pie bar graph graph generated timely basis eg- hourly daily weekly monthly yearly statistical log file apache server 20 3 proposed 3.4 main develop log solution help server administrator determine server categorizes error log coming apache server visualizes kibana graph generated help administrator determine performance server interval time statistical log file apache server 21 4 4 statistical log file apache server 22 4 error log file complete understanding issue performance server major issue encountered issue issue performance issue visual representation analyzed help server administrator examine fault server step correct 4.1 step acquire process linux operating designing database installing apache mahout apache tomcat server installing elastic search kibana visualization implementing input 4.2 approach machine learning technique market clustering classification recommendation classification technique suited category issue server performance pre-decided classification technique include nave bayes ssv logistic regression depending nave bayes input main highly scalable naive bayes simple technique constructing classifier assign class label instance represented vector class label drawn finite single training classifier family based common principle naive bayes statistical log file apache server 23 4 classifier assume independent class variable naive bayes classifier considers contribute independently naive bayes classifier trained efficiently supervised learning setting practical parameter estimation naive bayes method maximum likelihood word naive bayes accepting bayesian bayesian method advantage naive bayes requires small amount training parameter classification 4.3 1 creating apache mahout compatible apache server semi-structured format format compatible apache mahout cleaning parsing operation convert file file format compatible apache mahout applied produce 2 integration apache mahout elasticsearch integration apache mahout elasticsearch enables store log file generated apache sever elasticsearch time time store elasticsearch json format json java script object notation standard format store elasticsearch 3 visualization visualization involves representing easy understand manner kibana visualization purpose bar graph pie represent distribution major issue health server server administrator statistical log file apache server 24 4 major representing client ip address error log generated pie generated day week month year statistical log file apache server 25 5 5 statistical log file apache server 26 5 5.1 linux apache mahout apache tomcat elastic search kibana 5.2 processor iv processor higher 2 gb ram higher 250 gb hdd higher 5.3 basically collaboration 3 creating apache mahout compaitable integration apache mahout elasic search visualization interact collaborative manner statistical log file apache server 27 5 5.3.1 error_log kibana visualization 5.1 mentioned apache server includes log file apache access log error log error log file main concern error log file semi- structured format file directly applied apache mahout restructured tab separated file format 4 categorize file three major issue based training generated stored elastic search outcome converted json format categorization error log file visually help graph kibana help analyze corrective measure statistical log file apache server 28 5 5.4 5.4.1 5.4.1.1 level 0 5.2 level 0 three essential perspective structured method sponsor briefed consulted stage evolution play role 5.4.1.2 level 1 5.3 level 1 graphical representation modeling process aspect preliminary step create elaborated dfds visualization processing statistical log file apache server 29 5 5.4.2 5.4 simplest representation interaction depicting simplification portray interact typically conjunction textual accompanied well statistical log file apache server 30 5 5.4.3 timing 5.5 timing timing unified modeling language 2.0 specific interaction focus timing constraint timing explore behavior object period time timing special form difference timing ax reversed time increased left lifeline separate compartment arranged vertically statistical log file apache server 31 5 5.4.4 5.6 graphical representation workflow stepwise action support choice iteration concurrency unified modeling language describe business step-by-step workflow component statistical log file apache server 32 5 5.4.5 deployment 5.7 deployment deployment physical deployment artifact node describe web site example deployment component exist component node piece connected 5.5 database field description datatype time stamp time error log int generation severity severity level error log string ip client ip address string message actual error message string category category error message string statistical log file apache server 33 5 5.1 error log statistical log file apache server 34 6 6 statistical log file apache server 35 6 6.1 step apache server includes log file apache access log error log error log file main concern error log file semi-structured format file directly applied apache mahout restructured tab separated file format categorize file three major issue based training generated stored elastic search outcome converted json format elastic search serf kind nosql database indexing operation file improve query processing categorization error log file visually help graph kibana help analyze corrective measure accordingly.apache mahout wide range classification clustering recommendation freely source log file generated apache server directly classified apache mahout nave bayes require apache mahout 6.1.1 installation step installation apache mahout 0.7 java jdk 1.6 maven 3 elasticsearch kibana 4 6.1.2 cleaning parsing error log generated apache server semi-structured format format easily readable understandable conversion structured format statistical log file apache server 36 6 sample error log entry 11 17 35 45 2011 error client 132.1.0.1 client denied server conversion tsv format may11 17 35 45 2011 error client 132.1.0.1 client denied server tsv conversion error log sufficient classification generate requires input file format tsv file converted file format command command java -cp target/logs-project.jar logstsvtoseq data/logs-train.tsv logs-seq conversion tsv seq format binary format command ./mahout seqdumper -i input key may11 17 35 45 2011 client denied server 6.1.3 training classification automatically classify document image implement spam filter domain going mahout classify error log naive bayes classifier training document associated category classifier determines word document belong considered category compute document belongs category multiplies individual word category category highest document belong statistical log file apache server 37 6 preparing training initially training file error log tab separated format column log time stamp column log error message tue mar 08 10 34 22 2014 temporarily unavailable fork unable fork process fri dec 16 01 46 24 2014 directory forbidden rule /home/test/ oct 11 14 32 58 2014 read request timed manually training file transforms file categorizes individual error log three major issue discussed adding third column called category label tue mar 08 10 34 22 2014 temporarily unavailable fork unable fork process fri dec 16 01 46 24 2014 directory forbidden rule /home/test/ performance oct 11 14 32 58 2014 read request timed training mahout nave bayes classifier trained 30 error log file remaining 70 tested produce command 1. train naive bayes classifier ./mahout trainnb -i train-vectors -el -o -li labelindex -ow -c statistical log file apache server 38 6 2. accuracy training ./mahout testnb -i test-vectors -m -l labelindex -ow -o logs-testing -c statistical log file apache server 39 6 3. classifier correct category distribution java -cp target/logs-naive-project.jar classifier labelindex logs- vectors/dictionary.file-0 logs-vectors/df-count/part-r-00000 data/logs-to-classify.tsv classifier code // create vector wordid weight tfidf vector vector randomaccesssparsevector 10000 tfidf tfidf tfidf multiset.entry string entry words.entryset string word entry.getelement int count entry.getcount integer wordid dictionary.get word long freq documentfrequency.get wordid double tfidfvalue tfidf.calculate count freq.intvalue wordcount documentcount vector.setquick wordid tfidfvalue // classifier score label // label highest score log // associated vector resultvector classifier.classifyfull vector double bestscore -double.max_value int bestcategoryid -1 statistical log file apache server 40 6 element element resultvector.all int categoryid element.index double score element.get score bestscore bestscore score bestcategoryid categoryid system.out.print `` `` labels.get categoryid `` `` score system.out.println `` `` labels.get bestcategoryid fw.write labels.get bestcategoryid '' \\n '' 6.1.4 conversion json output produced classifier needed stored elasticsearch format output generated compatible elasticsearch elasticsearch requires input file json format.hence json conversion classifier output performed ruby script script export fields=timestamp severity ip message category cat input.tsv| ruby -rjson -ne 'puts env `` field '' .split `` `` .zip _.strip.split `` \\t '' .inject |h x| 0 =x 1 .to_json statistical log file apache server 41 6 conversion tsv json `` timestamp '' `` thu sep 27 12 08 18 2012 '' '' severity '' `` error '' '' ip '' `` 151.10.158.10 '' '' message '' `` file doe exist /srv/www/htdocs/pad/favicon.ico '' '' category '' `` '' 6.1.5 elasticsearch operation stored elasticsearch database operation search insert retrieve performed command command curl -xget `` http //localhost 9200/movies/movie/1 '' -d '' curl -s -xpost 'http //localhost/index1/_bulk input.json curl -xdelete `` http //localhost 9200/movies/movie/1 '' -d '' 6.1.6 kibana visualisation architected elasticsearch kibana shape kind structured unstructured indexed elasticsearch benefit elasticsearch 's powerful search analytics capability statistical log file apache server 42 6 6.2 snapshot graph generated analyzing server performance week 6.1 count issue occurring month tabular representation graph category performance count document 149 25 15 statistical log file apache server 43 6 bar graph count individual issue performance responsible decline server generation error log monthly basis generated daily weekly yearly basis pie depicts percentage severity error log notice message record highest percentage 6.2 severity distribution tabular representation severity count document notice error warn 114 62 14 statistical log file apache server 44 6 pie represents error generated client ip crossing threshold 20 committing error security purpose identifying client deliberately affect server performance 6.3 distribution client ip address generating error log tabular representation client ip address count document 127.0.0.1 176.2.254.85 86.34.197.207 110 53 27 statistical log file apache server 45 6 6.3 phase form development life cycle product tested thoroughly delivered customer document general strategy adopted product 6.3.1 unit unit smallest testable method individual unit source code program associated control usage procedure operating procedure tested determine unit entire function procedure tested 1 creating apache mahout compatible aim create suited apache mahout error log file apache server expected file format apache mahout actual expected 2 integration apache mahout elasticsearch aim integrate apache mahout elasticsearch coming nave bayes classifier expected stored correctly json format elasticsearch actual expected 3 visualization aim generate visual representation categorization retrieved elastic search expected correct representation categorization form graph statistical log file apache server 46 6 actual expected 6.3.2 integration integration corresponds phase individual unit tested combined tested group occurs unit validation integration expose program component trouble occurs real-world program execution integration component extreme programming xp pragmatic method development meticulous approach building product continual revision major carrying integration called bottom-up method top-down method bottom statistical log file apache server 47 6 statistical log file apache server 48 7 scheduling 7 scheduling statistical log file apache server 49 7 scheduling duration status study 1st 30st 2014 gathering 1st 23th environment setup 2014 1 creating apache 20th 25st mahout compatible 2014 working integration 26nd 2014 2nd 2015 2 apache mahout 3rd 2015 2015 10th elasticsearch integration 2015 validation 11th 2015 21th parsing code 2015 3 visualization 22st 15th 2015 integration 16th 31st 7.1 scheduling statistical log file apache server 50 9 8 statistical log file apache server 51 9 8.1 field machine learning mining technique method entire completion process technique comprises clustering classification recommendation technique respective field apache mahout library providing free machine learning demand classification technique deal analyzed classified pre-decided category performance issue classification technique includes nave bayes logistic regression random forest naive bayes suited highly scalable parallelizable highly analyzing file advantage naive bayes requires small amount training parameter classification elasticsearch efficient database storing output generated nave bayes classifier fastest search engine based text search visualizing form graph easy understanding kibana compatible elasticsearch generating generated analyzing categorizing error log file coming apache server help administrator examine major server help action improving performance server 8.2 proposed local host enhanced multiple machine hadoop generalized analyzing file statistical log file apache server 52 9 9 1 listing access log analyzer http //www.uu.se/software/analyzers/access-analyzers.html 2 mahout action 3 follow session based log analyzing http //www.pobox.com/mnot/follow/ 4 robert cooley bamshad mobasher jaideep srivastava grouping web transaction mining wide web browsing pattern 1997 5 liu h. keselj v. combined mining web server log web classifying navigation pattern predicting request knowledge 2007 61 issue 2 pp.304-330 6 navin kumar tyagi a. k. solanki manoj wadhwa server log web usage mining website improvement international journal science issue ijcsi jul2010 7 issue 4 p17 2010 statistical log file apache server 53", "keywords": ["apache mahout", "apache server", "bar graph", "bayes classifier", "classification technique", "cleaning parsing", "client ip", "client ip address", "corrective measure", "count document", "daily weekly", "elastic search", "elastic search kibana", "error log", "error log file", "error message", "file apache", "file apache server", "file format", "form graph", "integration apache", "integration apache mahout", "ip address", "issue performance", "issue performance issue", "kamlesh gandhi", "kibana visualization", "log error", "log file", "log file apache", "log message", "machine learning", "mahout compatible", "major issue", "naive bayes", "nave bayes", "performance issue", "performance server", "programming language", "scheduling statistical", "scheduling statistical log", "search kibana", "semistructured format", "server administrator", "st th", "statistical log", "statistical log file", "tabular representation", "visual representation", "web log", "web server", "web site", "web usage"], "libraries": [], "languages": ["ruby", "xml", "curl", "javascript", "basic", "small", "java"], "frameworks": [], "dbs": []}, "./reports/REPORT11.pdf": {"title": "analysis of user opinions    for private institutes", "filename": "./reports/REPORT11.pdf", "data": "opinion private abhinav bhutada siddharth kotkar dinesh patil b120058514 b120058578 b120058606 guidance prof. d.d londhe 2015-2016 entitiled opinion private abhinav bhutada siddharth kotkar dinesh patil b120058514 b120058578 b120058606 bonafide prof. d. d. londhe fulfilment earlier diploma prof. d. d. londhe dr. emmanuel m. examiner ii dr. p. t. acknowledgement undertaking final year mountainous requires assistance interesting motivating learning professional easy blessed people served light mentored realization utmost humility gratitude opportunity recognize invaluable input address express heartfelt greeting express sincere gratitude dr. emmanuel m. invaluable support received zestful guidance prof. d.d londhe provided honour consistent input guidance extensively served completion express sincere gratitude coordinator prof. s. d. pande acknowledge valuable criticism well timely appreciation humbling experience express sincere gratitude reviewer prof. s. b. deshmukh prof. s.a. jakhete invaluable support guidance purpose gathering making hope amply justified faith reposed sincerely making enriching experience abhinav bhutada siddharth kotkar dinesh patil iii 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 5.1 5.2 5.3 5.4 5.5 5.5 6.1 6.2 fig 15 proposed ... 16 class ... 17 state ... 19 ... ... ... 21 ... 22 pre-processor 23 24 block 25 simple working crawler ... 26 processing r.. 31 ui generation shiny ... 31 pos-tagging java.. 32 crawler java ... 32 ui wordcloud plotting ... 33 sentiment plot ... 34 iv 3.1 6.1 6.2 confusion matrix 13 34 35 abbreviation abbreviation illustration sa tf idf mi ig nb svm sentiment term frequency inverse document frequency mutual gain nave bayes support vector machine vi 1 2 3 1.1 1.2 1.3 1.4 2.1 2.2 3.1 3.2 3.3 3.4 3.5 title cover acknowledgement abbreviation sentiment ii iii iv vi vii 1-4 1 2 3 3 background 5-11 review review background 2.2.1 gnu 2.2.2 environment 5 9 9 10 12-14 identification specification 12 12 13 13 13 characteristic purpose proposed class state 4.7.1 complete scenario 4.7.2 preprocessor implementatin 14 15-24 15 15 16 17 19 21 22 22 23 24 25-32 25 30 evaluation 33-35 evaluation 33 34 36 37-38 3.6 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 5.1 5.2 6.1 6.2 4 5 6 7 1.1 opinion private 1. broad range area collected unprecedented scale decision based guesswork painstakingly constructed reality based drive aspect modern society including mobile service retail manufacturing financial service life science physical science potential revolutionize education imagine access database collect detailed measure 's academic performance effective approach education starting reading writing math advanced college- level course access powerful trend direction strong trend massive web deployment educational generate increasingly amount detailed performance real issue acquiring amount clearly era 's matter hopeful vision harness relevant best decision extraction resourceful knowledge called mining generally mining called knowledge discovery process analysing perspective summarizing increase revenue cut cost mining number analytical analysing allows analyse dimension angle categorize summarize identified technically mining process finding correlation pattern dozen field relational database mining term company powerful sift volume supermarket scanner analyse market year continuous innovation processing power disk storage statistical dramatically increasing accuracy driving 2015-16 1 opinion private cost today support collection storage amount provide ability understand advantage full help efficiently profitably trend analytics providing sentiment opinion 1.2 sentimental sentiment natural language processing extraction aim writer feeling expressed positive negative comment question request analysing number documents.it mining knowledge generated sentiment generally speaking sentiment aim determine attitude speaker writer respect topic tonality document year exponential increase internet usage exchange public opinion driving force sentiment today web repository structured unstructured extract latent public opinion sentiment challenging sentiment document based sentiment entire document summarized positive negative sentence based individual sentence bearing sentiment text classified sa phrase based phrase sentence classified polarity sentiment identifies phrase text bear sentiment reviewer speak fact subjective opinion distinguish sentiment find subject sentiment directed text find sentiment directed identifies polarity sentiment sentiment classified fact positive denotes state happiness bliss satisfaction writer negative denotes state sorrow dejection disappointment writer sentiment score based positivity negativity objectivity 2015-16 2 opinion private 1.3 focusing sentiment entertainment sector abundant extract opinion identify semantic orientation associate opinion approach performed well sector helping grow sentimental education sector initially query extract interested detect opinion semantic orientation accord opinion specific category integrated prominent performance review sentiment validates applicability proposed method aim build classify opinion positive negative respect query term hypothesis accuracy classifying sentiment review machine learning technique 1.4 education play vital role nation development process country education remains basis sustainable peaceful prosperous factor contribute education including actuality goal-based relevance learning- discipline-specific environment contextfor example delivery appropriate syllabus education success-oriented provide understanding industry acquiring factor effectively develop goal- oriented education difficult issue crucial higher education utilization requires gathering real-life channel facility store form identifying belong category maintaining relevant repository database challenging aspect second issue enrolment applicant option branch study course program 2015-16 3 opinion private enrol access option creates confusion third issue decision prediction decision based experience redirect focus help achieve better perfect prediction help society producing well-trained skilled professional better serve societal issue curriculum development company recruiter find difficult find equipped skill require higher education help planner curriculum focused demand workforce final issue adoption standard difficult best practice online course promote online education standardization unavoidable predictive effectively address issue analysing current historical fact prediction decision maker action decision today attain tomorrow current face reviewing lot review scattered social network search review social web reviewing specific review aspect overcome drawback propose detailed considering aspect comprehensive help reviewing 2015-16 4 opinion private 2. background review 2.1 presently amount online review blog forum social medium site reach visual capacity person urgent develop autonomous innovative technique automatically collect analyse attitude expressed review sophisticated sentiment classification technique automatically classify basis analysed blog review specific positive negative matter fact sentiment classification investigated wide range domain movie review product review travel review e-learning review educational review focused training machine learning 24 18 classify review previous approach opinion mining discussed opinion mining subtasks extraction sentiment extraction focus approach extracting element constitute opinion sentiment researcher classifying document sentiment orientation positive vs. negative previous state 2 efficient experiment sentiment nave bayes support vector machine pang 16 elaborated presented relevant based classic topic classification technique proposed approach aim selected group machine learning positively produce good sentiment perceived document topic bearing topic positive negative 16 experiment nave bayes maximum entropy 2015-16 5 opinion private support vector machine interestingly performed comparable solution ranging 71 85 depending method 3 applied classifier classify educational term feedback comment faculty performance direct document level sentiment svm 67.23 accuracy nb 65.10 accuracy aspect based document level sentiment svm 81 accuracy nb 72.80 accuracy kechaou 1 analysed compared single hybrid classifier hmm svm nb classifier level accuracy svm accurate nb considered faster reliable small dataset raut londhe 4 5 presented machine learning sentiwordnet based approach opinion mining opinion summarization paper method nb svm decision tree sentiwordnet 4 12 method accuracy nb classifier highest accuracy 88 decision tree method lowest accuracy 78 4 performed opinion mining opinion hotel review collected web paper state nb classifier highest accuracy 88 1 zied kechaou mohamed ben ammar adel alimi improving e-learning sentiment opinion 2011 global education conference educon prerequisite effective development e-learning knowledge opinion build evaluation opinion mining method applied paper sake helping developer improve promote relevant service paper three selection method mi mutual ig gain chi statistic chi investigated advanced proper hmm svm- based hybrid learning method fact experimental indicated opinion 2015-16 6 opinion private mining difficult challenging performed e-learning blog attempt demonstrate ig performs best potential sentimental term selection exhibit best performance sentiment classification 2 dan song hongfei lin zhihao yang opinion mining e-learning 2007 ifip international conference network parallel computing workshop paper education pattern e-learning popular developing e-learning opinion evaluation involved applying automatic text extract opinion adopting automatic sentiment identify sentiment opinion web discussing describing opinion evaluation service conditional random field identifying extracting opinion negative sentence adverb specially considered sentiment processing strength calculation opinion sentiment orientation experiment precision opinion extraction sentiment helpful e-learning 3 n. d. valkunde dr. m. s. patwardhan multi-aspect multi-class based document sentiment educational catering accreditation process 2013 international conference cloud ubiquitous computing emerging technologie paper sentiment determine attitude writer respect topic contextual polarity document current technique sentiment document sentence level compute document level sentiment score based underlying aspect based score evaluation topic discussed complete document approach document wa classified multiple class multiple aspect consideration approach allows automatically care current document level sentiment identification subjectivity detection negation 2015-16 7 opinion private technique applied educational mining faculty performance evaluated sentiment comment provided feedback document level faculty performance score computed distinct aspect based sentiment score knowledge presentation regularity faculty aspect computation document level score based weightages svm nave bayes technique sentimental strategy accurate document level sentiment score score computed directly document level analysing underlying aspect 4 imene guellil kamel boukhalfa social mining focused opinion mining sentiment 2013 international conference cloud ubiquitous computing emergence social medium amount generated lead researcher study possibility exploitation order identify hidden knowledge area attracting interest community opinion mining sentiment paper study 60 paper 60 published 2013 2015 treating social medium mining compare criterion finally summarizing studied richness social medium opinion emotion sentiment .we focus paper opinion mining sentiment position field social medium mining issue describe studying issue 5 hung-yu kao zi-yu lin categorized sentiment chinese review mining product opinion blog 2010 ieee/wic/acm international conference web intelligence intelligent agent document focusing english review sentiment abundant extract 2015-16 8 opinion private opinion identify semantic orientation associate opinion paper aim develop sentiment suitable chinese review extract interested detect opinion semantic orientation accord opinion specific category 6 ivan khozyainov evgeny pyshkin vitaly klyuev spelling opinion difficult sentiment 2013 year growing interest opinion mining numerous area social science paper investigate main opinion mining sentiment development paper review example difficulty process opinion extraction introduce essential multidimensionality opinion mining series experiment sentiment classified main reason incorrect sentiment recognition concluded gain ig method suitable extraction tfidf 2 numerical representation featured nave bayes classifier shoe accuracy sentiment 2.2 background analytics advanced analytic technique diverse include structured/unstructured streaming/batch size terabyte zettabyte analytics refers process collecting organizing analysing discover pattern analytics help understand contained help identify business business decision analyst basically knowledge analysing 2.2.1 gnu language environment statistical computing graphic gnu language environment wa developed bell 2015-16 9 opinion private laboratory lucent john chamber colleague considered s. difference code written unaltered r. wide variety statistical linear nonlinear modelling classical statistical time-series classification clustering graphical technique highly extensible language vehicle choice statistical source route participation strength ease well-designed publication-quality plot produced including symbol formula needed great care default minor choice graphic retains full control 2.2.2 environment integrated suite facility manipulation calculation graphical display includes effective handling storage facility suite operator calculation array matrix coherent integrated collection intermediate graphical facility display on-screen hardcopy well-developed simple effective programming language includes conditionals loop user-defined recursive function input output facility term environment intended characterize fully planned coherent incremental accretion specific inflexible frequently designed language allows add additional functionality defining function written dialect easy follow algorithmic choice 2015-16 10 opinion private computationally-intensive c++ fortran code linked called time advanced write code manipulate object directly statistic prefer environment statistical technique implemented extended easily package package supplied distribution cran family internet site covering wide range modern statistic 2015-16 11 opinion private 3. 3.1 definition analyse candidate opinion educational comparison well provide ranking sentiment review machine learning technique 3.2 social medium massive medium people post review day capturing review requires specialized capable handling stream creating classification stream requires well domain achieve good performance restricted english review english language language education sector 7 introducing language complex essential studied language english language considered domain restricted language choice remains broad english review general restricting domain specific lead better performance restricting specific help collect amount review lead better classification better major reason number india selecting surf social medium review well joined post review extent ang read review choice comparison multiple 2015-16 12 opinion private 3.3 intel core 2 duo higher linux operating 12.04 1.7 ghz processor higher higher 1 gb ram higher jdk 1.6 higher 3.1 3.4 identification 1. identifying staff member administrator detailed graphical representation access 3.5 specification 3.5.1 functionality review enters query institutes.after processing query applying classification provided provided 3 comparative study provided deciding factor amount weight factor contributed displayed form bar graph 3.5.2 non-functional lot collected stored csv file availability online crawling collect live update accessed 2015-16 13 opinion private processing speed internet connection connectivity hosting server reliability emulate imitate manner human automation meeting help performance elapsed time query entered provided minimum time provide indicate performance friendliness easily usable non- expert easy time learning small extensibility meeting scheduler ability handle explicit meeting meeting location manages participation delegation 3.6 characteristic expected candidate associated institution join he/she knowledge course he/she searching knowledge institution providing course 2015-16 14 4.1 purpose opinion private 4. develop grade performance institution basis candidate opinion review feedback sentiment positive negative neutral graphical grading selected review positive review performance better 4.2 proposed fig 4.1 proposed 1 2015-16 15 opinion private analyse review provide comparison recommends best initially user/candidate fire query performance private providing guidance competitive examination gate gre based query opinions/reviews collected online social site forum collected help web crawler offline collected form feedback positive well negative comments/opinions train classifier nave bayes classifier classification sentiment remaining accuracy classifier finally based number positive negative reviews/opinions displayed 4.3 fig 4.2 represents functionality main actor fire query handle query processor collection pre-processing extraction numerical 2015-16 16 opinion private representation classification main functionality displayed 4.4 class fig 4.3 class class involved 1. candidate class identification 2. dashboard class accepts query form pas query processor display menu ranking 2015-16 17 opinion private 3. query processor class accept query dashboard process collection class associated 4. collection class collect query crawler gather online offline gather feedback 5. pre-processor class process collected collection class word removal stemmer main functionality class represent textual numerical form processing 6. classification class classify comment review i.e positive negative neutral machine learning nave bayes classifier 7. evaluation class generated classification class evaluated correctness 2015-16 18 opinion private 4.5 state fig 4.4 state state state processing collecting pre- processing extracting representing classifying evaluating state 1. idle state state idle waiting query process query form idle state collecting state 2. collecting state state collect query consist 2015-16 19 opinion private opinions/reviews collect online forum social site help web crawler offline collected term feedback 3. pre-processing state state raw collected converted featured sentiment word removal stemmer converting word root form 4. extracting state state document extracted order perform machine learning sentiment bearing word frequently occur 5. representing state state extracted document precious state represented numerical form tf-idf 2 technique numerical pas classification state 6. classification state state collected classified i.e positive negative neutral nave bayes classification 2 3 technique pas evaluating state 7. evaluating state state evaluated correctness change classifier 2015-16 20 opinion private 4.6 fig 4.5 2015-16 21 opinion private 4.7 4.7.1 complete scenario fig 4.6 complete operation main object dashboard pre-processor classifier evaluator main object 2015-16 22 opinion private 4.7.2 pre_processor fig 4.7 pre-processor fig 4.7 pre-processing consists word stemmer extraction numerical representation object 2015-16 23 opinion private 4.8 transition phase processing raw collected converted featured pre- processing extraction classified converted classified stored fig 4.8 2015-16 24 opinion private 5. 5.1 fig 5.1 block 1. collection a. crawler basic formula internet crawler inventory seed url input repeatedly executes subsequent step address address verify science address host transfer document extract link contained 19 extracted link check 's associate absolute address add url transfer provided n't encountered general step 2015-16 25 opinion private input seed url i. ii create ontology tree find knowledge path iii downloads url associated input url iv extract link downloaded web insert url frontier extract review webpage downloaded help parser html tag v. vi repeat step relevant 5.2 simple working crawler b. twitter college twitter real time tweet easy twitter api 14 20 construct cooperated twitter api oauthfactory function twitter package 26 tweet filter stream function streamr package keyword tweet including keyword setting time long filterstream function tweet contribution time .moreover function output .csv file tweet directly r. 2015-16 26 opinion private c. facebook collected relevant form facebook 17 topic package called rfacebook 25 extract facebook command fb_page -getpage page= '' facebook '' token=fb_oauth getpost post token 100 comment n.likes n.comments post searchfacebook string= '' facebook '' token=fb_oauth n=100 2. pre-processing a. punctuation number removal punctuation number pre- processing reduce accuracy classifier step pre-processing collecting final unwanted punctuation number removed sentence package called tm 24 remove unwanted number punctuation form text command b. stemmer doc tm_map doc removepunctuation doc tm_map doc removenumbers 2015-16 27 opinion private stemming 1 3 term retrieval describe process reducing inflected derived word root form reason stem word beneficial role sentiment decrease sparseness fewer distinct stem compared distinct word second capture gather better semantic example word teaching understanding stemming converted teach understand stem root word comparison sentence word number positive/negative word easy doc tm_map doc stemdocument c. stopwords removal word 1 3 noise word common word context sentiment classification stopwords refer common word language single universal word natural language processing respect established word english pronoun particle special character number e.g preposition pronoun adverb example good positive opinion sentence performing stopwords removal good easy identify sentiment bearing word classifying document doc tm_map doc removewords stopwords english 3. numerical representation computation represent textual numerical format compute tf-idf 1 sentiment bearing word 2015-16 28 opinion private training document tf-idf representation tf-idf method consider term frequency document well relevance term entire collection document formula calculating tfidf written tf stand term frequency i.e number time term appears document tf=log +1 1 idf inversed document frequency equation idf=log n/n 2 total number training document number document term appears idf minimizing weight term discriminative 4. classification nave bayes nave bayes 4 5 9 17 20 21 23 probabilistic learning approach assumes term document occur independently 3 approach text classification assign document class dataset training instance x1 x2 xn class c1 c2 cn classifier predicts text belongs class higher condition equation 3 2015-16 29 opinion private 1 3 calculated bayes theorem 4 despite simplicity fact conditional independence clearly doe hold real-world situation naive bayes-based text categorization perform surprisingly well 5.2 pre-processing nave bayes stanford tagger po speech tagging crawler collection created java created shiny web fron web code snippet showing 2015-16 30 opinion private 5.3 processing 5.4 ui generation shiny 2015-16 31 opinion private 5.5 pos-tagging java 5.6 crawler java 2015-16 32 opinion private 6. evaluation 6.1 running nave bayes classifier training wordcloud generated frequency word review classified sentiment displayed plot 6.1 ui wordcloud plotting 2015-16 33 opinion private 6.2 sentiment plot 6.2 evaluation training nb 3 4 5 9 11 17 23 classifier randomly chose 500 review 250 positive 250 negative review remaining 500 comment tested machine learning classification nb opinion classification comments/reviews rstudio evaluated approach opinion classification based parameter precision recall fmeasure 2 10 1 illustrates confusion matrix validation stage 6.1 confusion matrix original class positive negative positive negative precision ratio correct output 2015-16 34 opinion private precision positive 5 precision negative 6 recall ratio correct assigned compared base human analyst manually associated text class recall positive 7 recall negative 8 combine measure single f-measure f-measure reflects relative recall versus precision f-measure positive 2. 9 f-measure negative 2. 10 classifier correctly classified accuracy precision recall f-measure nb 436 87.2 0.872 0.864 0.868 2015-16 35 opinion private 7. method opinion mining opinion college applied extract summarize opinion review determine review opinion positive negative opinion classification college review supervised machine learning naive bayes development experiment approach helpful provide accuracy rate integrating enhancing capability essential hope introduce sentimental based help formulate opinion college improving performance integrating major site precise experiment extended india 2015-16 36 opinion private 1 zied kechaou mohamed ben ammar adel alimi improving e-learning sentiment opinion 2011 global education conference educon 2 dan song hongfei lin zhihao yang opinion mining e- learning 2007 ifip international conference network parallel computing workshop 3 n. d. valakunde dr. m. s. patwardhan multi-aspect multi- class based document sentiment educational catering accreditation process 2013 international conference cloud ubiquitous computing emerging 4 vijay b. raut d.d londhe opinion mining summarization hotel review 2014 sixth international conference computational intelligence network 5 vijay b. raut d.d londhe opinion mining summarization 6 review web vijay b. raut al ijcsit international journal science 5 2 2014 1026-1030 imene guellil kamel boukhalfa social mining focused opinion mining sentiment 2013 international conference cloud ubiquitous computing 7 hung-yu kao zi-yu lin categorized sentiment chinese review mining product opinion blog 2010 ieee/wic/acm international conference web intelligence intelligent agent ivan khozyainov evgeny pyshkin vitaly klyuev spelling opinion difficult sentiment 2013 8 9 ranjeeta rana mrs. vaishali kolhe emotion twitter nave bayes non-linear support vector machine approach 2015 international journal innovation trend computing 10 chakrit pong-inwong wararat songpan rungworawut teachingsenti -lexicon automated sentiment polarity definition teaching evaluation 11 huosong xia min tao yi wang sentiment text classification customer review web based svm 2010 sixth international conference natural computation icnc 2010 stefano baccianella andrea esuli fabrizio sebastiani word net 12 2015-16 37 opinion private 13 3.0 enhanced lexical sentiment opinion mining 2008 jinan fiaidhi osama mohammed sabah mohammed simon fong tai hoon kim opinion mining twitterspace classifying tweet programmatically approach 2013 14 kushal dave steve lawrence david m. pennock mining peanut gallery opinion extraction semantic classification product review 2006 eljka pogaj blaenka kneevi e-learning opinion 2007 15 16 bo pang lillian lee shivakumar vaithyanathan thumb sentiment 17 classification machine learning technique 2005 shankar setty rajendra jadit sabya shaik chandan mattikalli vma mudenagudi classification facebook news feed sentiment 2014 international conference advance computing informatics icacci 18 rajdeep singh roshan bagla harkiran kaur text analytics web post comment sentiment 2015 19 gunjan h. agre nikita v.mahajan keyword focused web crawler 2015 sponsored 2nd international conference electronics 20 xin chen mihaela vorvoreanu krishna madhavan mining social medium understanding learning experience 2013 21 bingwei liu erik blasch yu chen dan shen genshe chen scalable sentiment classification bayes classifier 2013 intl conf 22 bogdan batrinca philip c. treleaven social medium analytics technique platform ai soc 2015 23 walaa medhat ahmed hassan hoda korashy sentiment sham journal 2014 5 10931113 package tm cran online http //cran.r- project.org/web/packages/tm/ package rfacebook cran online http //cran.r-project.org/web/ packages/rfacebook/ package twitter cran online http //cran.r-project.org/web/ packages/ twitter 24 25 26 2015-16 38", "keywords": ["adel alimi", "ammar adel", "ammar adel alimi", "based document", "bayes classifier", "bearing word", "ben ammar", "ben ammar adel", "classification technique", "collection class", "complete scenario", "conference cloud", "confusion matrix", "dan song", "dd londhe", "document level", "document level sentiment", "document sentiment", "hongfei lin", "hongfei lin zhihao", "international conference", "international conference cloud", "international journal", "ivan khozyainov", "kechaou mohamed", "kechaou mohamed ben", "learning technique", "level sentiment", "lin zhihao", "lin zhihao yang", "machine learning", "machine learning technique", "mining opinion", "mining sentiment", "mohamed ben", "mohamed ben ammar", "nave bayes", "nave bayes classifier", "negative neutral", "numerical representation", "opinion classification", "opinion extraction", "opinion mining", "opinion mining opinion", "opinion mining sentiment", "opinion private", "opinion sentiment", "positive negative", "positive negative neutral", "pyshkin vitaly", "query processor", "semantic orientation", "sentiment bearing", "sentiment bearing word", "sentiment classification", "sentiment opinion", "social medium", "state state", "vector machine", "vijay raut", "web crawler", "zhihao yang"], "libraries": [], "languages": ["html", "bliss", "fortran", "c++", "basic", "small", "java"], "frameworks": [], "dbs": []}, "./reports/Secure my way_Project_Report[14-15] -2-.pdf": {"title": "android application for   detecting and improving city   infrastructure", "filename": "./reports/Secure my way_Project_Report[14-15] -2-.pdf", "data": "android detecting improving city infrastructure akshata ahire kavita chavan gita disale ekta pilaji b80058503 b80058528 b80058540 b80058621 guidance prof. r. b. murumkar fulfilment b. e. 411043 affiliated 2014 2015 411043 dissertation clean city akshata ahire kavita chavan gita disale ekta pilaji b80058503 b80058528 b80058540 b80058621 record bonafide him/her year 2014-2015 guidance prof. r.b.murumkar dr. emmanuel m. hod dr. p. t. examiner _______________________ acknowledgement profoundly grateful prof. r. b. murumkar expert guidance continuous encouragement target commencement completion express deepest appreciation dr. p. t. dr. emmanuel m. hod prof. n. v. buradkar coordinator invaluable guidance supported completing express sincere heartfelt gratitude staff member helped directly indirectly course akshata ahire kavita chavan gita disale ekta pilaji website exist allows click photo pothole upload online community allows mobile number verification face book upload photo pothole drainage pipeline garbage android phone unregistered simply search uploaded people locality support developing android improve road infrastructure .to eye condition road aware people action improve road infrastructure share photo social medium site aware public road infrastructure providing maximum vote photo people support aim improvement road infrastructure face book security protocol rfc6750 oauth providing security keywords mobile number verification rfc6750 oauth pothole drainage pipeline garbage 1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 2 1.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 2 1.2 basic conceptexisting ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 5 3 proposedreaserach ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 9 4.1 step acquire process ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 9 4.2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 10 5 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 13 5.1 s/w h/w ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 13 5.2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 14 5.3 dfdcode snippetgraph ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 5.2.1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 5.2.2 database schema ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 5.3.1 dfd level 0 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 5.3.2 dfd level 1 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 5.3.3 dfd level 2 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 5.3.4 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 5.3.5 class ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 5.3.6 deployment ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 5.3.7 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 5.3.8 ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... .. 5.3.9 interaction ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 1 1.1 2 1 road infrastructure increasingly critical visible people uploading photo road pothole posting social medium site effort improve road infrastructure 1.2 basic concept develop android improve road infrastructure eye condition road aware people action improve road infrastructure share photo road pothole social medium site aware public road infrastructure providing maximum people support aim improvement road infrastructure deal downloading play store uploading photo sharing social medium site upload photo internet connection photo clicked device camera location automatically integrated gps photo phone gallery provide landmark photo clicked 1.3 purpose photo representing condition road garbage river pollution uploaded situation visible people force government action 3 2 5 2 2.1 study faced citizen pothole road garbage overflow pipeline leakage mobile number verification study rfc6750 oauth protocol gui ii iii iv 2.2 existing bangalore municipal corporation launched website named change city allows registered upload photo pothole citizen supposed palike website link email ichangemycity drawback long procedure order website handy app ii brihanmumbai municipal corporation launched android named pothole track citizen directly click photo pothole upload select photo gallery 3 proposed proposed 7 3 proposed 3.1 android clicking photo bad infrastructure city pothole road garbage overflow pipe leakage uploading selected photo shared online community 3.2 develop android click photo upload location photo wa clicked tracked uploaded photo selected shared online community authentication provided 3.3 install product his/her android phone asked permission his/her phone 's snapshot pothole road upload photo server photo uploaded reject request count number request deciding priority photo upload photo gallery landmark entered landmark trace/search location map disclaimer prevent uploading suspicious image saved server metadata uploaded image saved server metadata image checked uploading saved metadata image criterion rejecting image uploading metadata image match metadata saved image his/her uploaded image view area his/her dashboard 3.5 android developed eclipse ide location traced gps photo sharing selected ranking photo uploaded blog leading newspaper authentication provided oauth protocol 3.5 constraint clicking photo gps time uploading photo internet connection photo selected gallery landmark entered manually 4 10 4 4.1 step acquire process developed allows registered click photo pothole app upload server landmark pothole identification location exact latitudinal longitudinal location tracked gps photo uploaded selected photo shared online community provide 1 registration providing mobile number verification 2 registered facebook i.e providing facebook logging app 3 providing security rfc6750 oauth security protocol 4 warn uploading unwanted photo providing disclaimer 5 providing ui access device camera gps wi-fi contact email 6 store uploaded photo pothole database location 4.2 interpret input photo clicked camera photo gallery input 4.3 rfc 6750 oauth oauth standard authorization oauth client 'secure delegated access server behalf owner specifies 11 process owner authorize third-party access server sharing credential oauth commonly web surfer log third party web site google facebook twitter account worrying access credential compromised oauth allow face book secure uploading photo gps global positioning track location pothole photo clicked uploaded gps exact latitudinal longitudinal location ii eclipse adt bundle mysql database iii apache tomcat server 5 13 5 5.1 s/w h/w 5.1.1 s/w reqiurements operating android 4.4 gps 5.1.2 h/w memory 4mb camera 2mp wi-fi display 3 inch wvga resolution 5.2 5.3 database schema registration 14 5.4 level 0 level 1 15 level 2 16 5.5 17 class 18 19 component deployment 20 21 22 interaction 23 5.5 base 5.5.1 5.5.2 6 26 6.1 code snippet 6.1.1 6 27 6.1.2 28 6.1.3 splash 29 6.1.4 facebook 30 6.1.5 photo clicking 31 6.1.6 choose photo gallery 32 6.2 expected output actual output 1. registered expected username password entered 2. photo click camera location traced gps expected 3. internet photo store gallery expected connection photo clicking 4. photo chosen gallery option entering landmark manually expected 5. retrieval photo photo retrieved descending order support expected 7 34 7 7.1 8 36 8 8.1 bad infrastructure pothole road river pollution garbage overflow prevalent city opportunity bit improving his/her city 8.2 developed android click photo bad infrastructure didnt check pothole photo image processing identify photo pothole thing candidate election reveal improve city infrastructure 37 security oauth protocol feng yang science auckland auckland zealand manoharan.s published signal processing pacrim 2013 pacific rim conference formal verification oauth 2.0 alloy framework pai s. manipal manipal india sharma.y kumar pai .r.m published network tehnology csnt 2011 international conference gps location tracking ariffin a.a.b aziz n.h.a othman k.a", "keywords": ["ahire kavita", "ahire kavita chavan", "akshata ahire", "akshata ahire kavita", "chavan gita", "chavan gita disale", "click photo", "condition road", "connection photo", "gita disale", "gps photo", "kavita chavan", "kavita chavan gita", "medium site", "metadata image", "mobile number", "mobile number verification", "municipal corporation", "number verification", "online community", "photo gallery", "photo pothole", "pothole road", "road garbage", "road infrastructure", "social medium", "social medium site", "upload photo"], "libraries": [], "languages": ["basic", "clean"], "frameworks": [], "dbs": ["mysql"]}}